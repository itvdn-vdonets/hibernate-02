WARN  2022-09-06 22:46:03,449 [main][Main.java:16] : TEST
DEBUG 2022-09-06 22:46:03,514 [main][CoreLogging.java:28] : Logging Provider: org.jboss.logging.Log4jLoggerProvider
DEBUG 2022-09-06 22:46:03,523 [main][IntegratorServiceImpl.java:46] : Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
DEBUG 2022-09-06 22:46:03,526 [main][IntegratorServiceImpl.java:46] : Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
DEBUG 2022-09-06 22:46:03,531 [main][IntegratorServiceImpl.java:46] : Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
INFO  2022-09-06 22:46:03,626 [main][Version.java:45] : HHH000412: Hibernate Core {5.2.2.Final}
INFO  2022-09-06 22:46:03,629 [main][Environment.java:213] : HHH000206: hibernate.properties not found
INFO  2022-09-06 22:46:03,631 [main][Environment.java:318] : HHH000021: Bytecode provider name : javassist
DEBUG 2022-09-06 22:46:03,659 [main][LocalXmlResourceResolver.java:57] : Interpreting public/system identifier : [null] - [http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd]
DEBUG 2022-09-06 22:46:03,660 [main][LocalXmlResourceResolver.java:85] : Recognized hibernate-configuration identifier; attempting to resolve on classpath under org/hibernate/
DEBUG 2022-09-06 22:46:03,671 [main][JaxbCfgProcessor.java:116] : cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
DEBUG 2022-09-06 22:46:03,942 [main][Configuration.java:724] : Building session factory using internal StandardServiceRegistryBuilder
DEBUG 2022-09-06 22:46:03,947 [main][ServiceBinding.java:68] : Overriding existing service binding [org.hibernate.secure.spi.JaccService]
DEBUG 2022-09-06 22:46:03,947 [main][Configuration.java:652] : Building session factory using provided StandardServiceRegistry
DEBUG 2022-09-06 22:46:03,960 [main][RegionFactoryInitiator.java:75] : Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
INFO  2022-09-06 22:46:03,966 [main][JavaReflectionManager.java:66] : HCANN000001: Hibernate Commons Annotations {5.0.1.Final}
DEBUG 2022-09-06 22:46:03,983 [main][BasicTypeRegistry.java:145] : Adding type registration boolean -> org.hibernate.type.BooleanType@9bcd5c12
DEBUG 2022-09-06 22:46:03,984 [main][BasicTypeRegistry.java:145] : Adding type registration boolean -> org.hibernate.type.BooleanType@9bcd5c12
DEBUG 2022-09-06 22:46:03,985 [main][BasicTypeRegistry.java:145] : Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@9bcd5c12
DEBUG 2022-09-06 22:46:03,986 [main][BasicTypeRegistry.java:145] : Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@b9fe9d48
DEBUG 2022-09-06 22:46:03,988 [main][BasicTypeRegistry.java:145] : Adding type registration true_false -> org.hibernate.type.TrueFalseType@97a3e57c
DEBUG 2022-09-06 22:46:03,989 [main][BasicTypeRegistry.java:145] : Adding type registration yes_no -> org.hibernate.type.YesNoType@d2681757
DEBUG 2022-09-06 22:46:03,991 [main][BasicTypeRegistry.java:145] : Adding type registration byte -> org.hibernate.type.ByteType@aa84583d
DEBUG 2022-09-06 22:46:03,992 [main][BasicTypeRegistry.java:145] : Adding type registration byte -> org.hibernate.type.ByteType@aa84583d
DEBUG 2022-09-06 22:46:03,993 [main][BasicTypeRegistry.java:145] : Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@aa84583d
DEBUG 2022-09-06 22:46:03,995 [main][BasicTypeRegistry.java:145] : Adding type registration character -> org.hibernate.type.CharacterType@947395e4
DEBUG 2022-09-06 22:46:03,996 [main][BasicTypeRegistry.java:145] : Adding type registration char -> org.hibernate.type.CharacterType@947395e4
DEBUG 2022-09-06 22:46:03,997 [main][BasicTypeRegistry.java:145] : Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@947395e4
DEBUG 2022-09-06 22:46:03,999 [main][BasicTypeRegistry.java:145] : Adding type registration short -> org.hibernate.type.ShortType@f6b64ddd
DEBUG 2022-09-06 22:46:03,999 [main][BasicTypeRegistry.java:145] : Adding type registration short -> org.hibernate.type.ShortType@f6b64ddd
DEBUG 2022-09-06 22:46:04,000 [main][BasicTypeRegistry.java:145] : Adding type registration java.lang.Short -> org.hibernate.type.ShortType@f6b64ddd
DEBUG 2022-09-06 22:46:04,001 [main][BasicTypeRegistry.java:145] : Adding type registration integer -> org.hibernate.type.IntegerType@2494b617
DEBUG 2022-09-06 22:46:04,002 [main][BasicTypeRegistry.java:145] : Adding type registration int -> org.hibernate.type.IntegerType@2494b617
DEBUG 2022-09-06 22:46:04,003 [main][BasicTypeRegistry.java:145] : Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@2494b617
DEBUG 2022-09-06 22:46:04,004 [main][BasicTypeRegistry.java:145] : Adding type registration long -> org.hibernate.type.LongType@2a430e86
DEBUG 2022-09-06 22:46:04,005 [main][BasicTypeRegistry.java:145] : Adding type registration long -> org.hibernate.type.LongType@2a430e86
DEBUG 2022-09-06 22:46:04,005 [main][BasicTypeRegistry.java:145] : Adding type registration java.lang.Long -> org.hibernate.type.LongType@2a430e86
DEBUG 2022-09-06 22:46:04,007 [main][BasicTypeRegistry.java:145] : Adding type registration float -> org.hibernate.type.FloatType@8767c4a3
DEBUG 2022-09-06 22:46:04,008 [main][BasicTypeRegistry.java:145] : Adding type registration float -> org.hibernate.type.FloatType@8767c4a3
DEBUG 2022-09-06 22:46:04,008 [main][BasicTypeRegistry.java:145] : Adding type registration java.lang.Float -> org.hibernate.type.FloatType@8767c4a3
DEBUG 2022-09-06 22:46:04,010 [main][BasicTypeRegistry.java:145] : Adding type registration double -> org.hibernate.type.DoubleType@3f16fd40
DEBUG 2022-09-06 22:46:04,010 [main][BasicTypeRegistry.java:145] : Adding type registration double -> org.hibernate.type.DoubleType@3f16fd40
DEBUG 2022-09-06 22:46:04,011 [main][BasicTypeRegistry.java:145] : Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@3f16fd40
DEBUG 2022-09-06 22:46:04,013 [main][BasicTypeRegistry.java:145] : Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@11345fb5
DEBUG 2022-09-06 22:46:04,013 [main][BasicTypeRegistry.java:145] : Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@11345fb5
DEBUG 2022-09-06 22:46:04,014 [main][BasicTypeRegistry.java:145] : Adding type registration big_integer -> org.hibernate.type.BigIntegerType@66c822eb
DEBUG 2022-09-06 22:46:04,015 [main][BasicTypeRegistry.java:145] : Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@66c822eb
DEBUG 2022-09-06 22:46:04,016 [main][BasicTypeRegistry.java:145] : Adding type registration string -> org.hibernate.type.StringType@4dd05385
DEBUG 2022-09-06 22:46:04,017 [main][BasicTypeRegistry.java:145] : Adding type registration java.lang.String -> org.hibernate.type.StringType@4dd05385
DEBUG 2022-09-06 22:46:04,018 [main][BasicTypeRegistry.java:145] : Adding type registration nstring -> org.hibernate.type.StringNVarcharType@dc7acac4
DEBUG 2022-09-06 22:46:04,021 [main][BasicTypeRegistry.java:145] : Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@f55e1436
DEBUG 2022-09-06 22:46:04,022 [main][BasicTypeRegistry.java:145] : Adding type registration url -> org.hibernate.type.UrlType@1a5bbc17
DEBUG 2022-09-06 22:46:04,022 [main][BasicTypeRegistry.java:145] : Adding type registration java.net.URL -> org.hibernate.type.UrlType@1a5bbc17
DEBUG 2022-09-06 22:46:04,025 [main][BasicTypeRegistry.java:145] : Adding type registration Duration -> org.hibernate.type.DurationType@d6bf24e7
DEBUG 2022-09-06 22:46:04,026 [main][BasicTypeRegistry.java:145] : Adding type registration java.time.Duration -> org.hibernate.type.DurationType@d6bf24e7
DEBUG 2022-09-06 22:46:04,033 [main][BasicTypeRegistry.java:145] : Adding type registration Instant -> org.hibernate.type.InstantType@2edfcb49
DEBUG 2022-09-06 22:46:04,033 [main][BasicTypeRegistry.java:145] : Adding type registration java.time.Instant -> org.hibernate.type.InstantType@2edfcb49
DEBUG 2022-09-06 22:46:04,035 [main][BasicTypeRegistry.java:145] : Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@80b29ddf
DEBUG 2022-09-06 22:46:04,035 [main][BasicTypeRegistry.java:145] : Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@80b29ddf
DEBUG 2022-09-06 22:46:04,037 [main][BasicTypeRegistry.java:145] : Adding type registration LocalDate -> org.hibernate.type.LocalDateType@91dfe3d
DEBUG 2022-09-06 22:46:04,037 [main][BasicTypeRegistry.java:145] : Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@91dfe3d
DEBUG 2022-09-06 22:46:04,039 [main][BasicTypeRegistry.java:145] : Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@67e01b8b
DEBUG 2022-09-06 22:46:04,039 [main][BasicTypeRegistry.java:145] : Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@67e01b8b
DEBUG 2022-09-06 22:46:04,040 [main][BasicTypeRegistry.java:145] : Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@b7e77e14
DEBUG 2022-09-06 22:46:04,041 [main][BasicTypeRegistry.java:145] : Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@b7e77e14
DEBUG 2022-09-06 22:46:04,042 [main][BasicTypeRegistry.java:145] : Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@4999f1d4
DEBUG 2022-09-06 22:46:04,043 [main][BasicTypeRegistry.java:145] : Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@4999f1d4
DEBUG 2022-09-06 22:46:04,045 [main][BasicTypeRegistry.java:145] : Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@d810da41
DEBUG 2022-09-06 22:46:04,045 [main][BasicTypeRegistry.java:145] : Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@d810da41
DEBUG 2022-09-06 22:46:04,047 [main][BasicTypeRegistry.java:145] : Adding type registration date -> org.hibernate.type.DateType@e847c309
DEBUG 2022-09-06 22:46:04,047 [main][BasicTypeRegistry.java:145] : Adding type registration java.sql.Date -> org.hibernate.type.DateType@e847c309
DEBUG 2022-09-06 22:46:04,048 [main][BasicTypeRegistry.java:145] : Adding type registration time -> org.hibernate.type.TimeType@56fc6431
DEBUG 2022-09-06 22:46:04,049 [main][BasicTypeRegistry.java:145] : Adding type registration java.sql.Time -> org.hibernate.type.TimeType@56fc6431
DEBUG 2022-09-06 22:46:04,051 [main][BasicTypeRegistry.java:145] : Adding type registration timestamp -> org.hibernate.type.TimestampType@cb257b73
DEBUG 2022-09-06 22:46:04,051 [main][BasicTypeRegistry.java:145] : Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@cb257b73
DEBUG 2022-09-06 22:46:04,052 [main][BasicTypeRegistry.java:145] : Adding type registration java.util.Date -> org.hibernate.type.TimestampType@cb257b73
DEBUG 2022-09-06 22:46:04,053 [main][BasicTypeRegistry.java:145] : Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@2315c0ca
DEBUG 2022-09-06 22:46:04,054 [main][BasicTypeRegistry.java:145] : Adding type registration calendar -> org.hibernate.type.CalendarType@61a2af2d
DEBUG 2022-09-06 22:46:04,055 [main][BasicTypeRegistry.java:145] : Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@61a2af2d
DEBUG 2022-09-06 22:46:04,055 [main][BasicTypeRegistry.java:145] : Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@61a2af2d
DEBUG 2022-09-06 22:46:04,056 [main][BasicTypeRegistry.java:145] : Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@4923b64f
DEBUG 2022-09-06 22:46:04,057 [main][BasicTypeRegistry.java:145] : Adding type registration locale -> org.hibernate.type.LocaleType@e04b84a4
DEBUG 2022-09-06 22:46:04,058 [main][BasicTypeRegistry.java:145] : Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@e04b84a4
DEBUG 2022-09-06 22:46:04,059 [main][BasicTypeRegistry.java:145] : Adding type registration currency -> org.hibernate.type.CurrencyType@1bb562c4
DEBUG 2022-09-06 22:46:04,059 [main][BasicTypeRegistry.java:145] : Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@1bb562c4
DEBUG 2022-09-06 22:46:04,060 [main][BasicTypeRegistry.java:145] : Adding type registration timezone -> org.hibernate.type.TimeZoneType@9d88d668
DEBUG 2022-09-06 22:46:04,060 [main][BasicTypeRegistry.java:145] : Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@9d88d668
DEBUG 2022-09-06 22:46:04,061 [main][BasicTypeRegistry.java:145] : Adding type registration class -> org.hibernate.type.ClassType@2ebed66f
DEBUG 2022-09-06 22:46:04,062 [main][BasicTypeRegistry.java:145] : Adding type registration java.lang.Class -> org.hibernate.type.ClassType@2ebed66f
DEBUG 2022-09-06 22:46:04,063 [main][BasicTypeRegistry.java:145] : Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@c9cc8359
DEBUG 2022-09-06 22:46:04,063 [main][BasicTypeRegistry.java:145] : Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@c9cc8359
DEBUG 2022-09-06 22:46:04,064 [main][BasicTypeRegistry.java:145] : Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@bb62c62d
DEBUG 2022-09-06 22:46:04,064 [main][BasicTypeRegistry.java:145] : Adding type registration binary -> org.hibernate.type.BinaryType@88d74349
DEBUG 2022-09-06 22:46:04,065 [main][BasicTypeRegistry.java:145] : Adding type registration byte[] -> org.hibernate.type.BinaryType@88d74349
DEBUG 2022-09-06 22:46:04,065 [main][BasicTypeRegistry.java:145] : Adding type registration [B -> org.hibernate.type.BinaryType@88d74349
DEBUG 2022-09-06 22:46:04,066 [main][BasicTypeRegistry.java:145] : Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@67923002
DEBUG 2022-09-06 22:46:04,067 [main][BasicTypeRegistry.java:145] : Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@67923002
DEBUG 2022-09-06 22:46:04,067 [main][BasicTypeRegistry.java:145] : Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@67923002
DEBUG 2022-09-06 22:46:04,068 [main][BasicTypeRegistry.java:145] : Adding type registration row_version -> org.hibernate.type.RowVersionType@1016ab06
DEBUG 2022-09-06 22:46:04,069 [main][BasicTypeRegistry.java:145] : Adding type registration image -> org.hibernate.type.ImageType@856cebc5
DEBUG 2022-09-06 22:46:04,070 [main][BasicTypeRegistry.java:145] : Adding type registration characters -> org.hibernate.type.CharArrayType@7d3b56f1
DEBUG 2022-09-06 22:46:04,070 [main][BasicTypeRegistry.java:145] : Adding type registration char[] -> org.hibernate.type.CharArrayType@7d3b56f1
DEBUG 2022-09-06 22:46:04,071 [main][BasicTypeRegistry.java:145] : Adding type registration [C -> org.hibernate.type.CharArrayType@7d3b56f1
DEBUG 2022-09-06 22:46:04,072 [main][BasicTypeRegistry.java:145] : Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@6f6b1408
DEBUG 2022-09-06 22:46:04,073 [main][BasicTypeRegistry.java:145] : Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@6f6b1408
DEBUG 2022-09-06 22:46:04,073 [main][BasicTypeRegistry.java:145] : Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@6f6b1408
DEBUG 2022-09-06 22:46:04,074 [main][BasicTypeRegistry.java:145] : Adding type registration text -> org.hibernate.type.TextType@9be84844
DEBUG 2022-09-06 22:46:04,075 [main][BasicTypeRegistry.java:145] : Adding type registration ntext -> org.hibernate.type.NTextType@89c127e4
DEBUG 2022-09-06 22:46:04,078 [main][BasicTypeRegistry.java:145] : Adding type registration blob -> org.hibernate.type.BlobType@34895c6
DEBUG 2022-09-06 22:46:04,078 [main][BasicTypeRegistry.java:145] : Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@34895c6
DEBUG 2022-09-06 22:46:04,079 [main][BasicTypeRegistry.java:145] : Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@9cc7f815
DEBUG 2022-09-06 22:46:04,082 [main][BasicTypeRegistry.java:145] : Adding type registration clob -> org.hibernate.type.ClobType@bc97385
DEBUG 2022-09-06 22:46:04,082 [main][BasicTypeRegistry.java:145] : Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@bc97385
DEBUG 2022-09-06 22:46:04,084 [main][BasicTypeRegistry.java:145] : Adding type registration nclob -> org.hibernate.type.NClobType@d4568bb6
DEBUG 2022-09-06 22:46:04,085 [main][BasicTypeRegistry.java:145] : Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@d4568bb6
DEBUG 2022-09-06 22:46:04,085 [main][BasicTypeRegistry.java:145] : Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@75af90ce
DEBUG 2022-09-06 22:46:04,086 [main][BasicTypeRegistry.java:145] : Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@14657b5b
DEBUG 2022-09-06 22:46:04,087 [main][BasicTypeRegistry.java:145] : Adding type registration serializable -> org.hibernate.type.SerializableType@eb835ac1
DEBUG 2022-09-06 22:46:04,088 [main][BasicTypeRegistry.java:145] : Adding type registration object -> org.hibernate.type.ObjectType@5d7a81ce
DEBUG 2022-09-06 22:46:04,089 [main][BasicTypeRegistry.java:145] : Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@5d7a81ce
DEBUG 2022-09-06 22:46:04,089 [main][BasicTypeRegistry.java:145] : Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@6a2bfdfa
DEBUG 2022-09-06 22:46:04,090 [main][BasicTypeRegistry.java:145] : Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@6954a6cc
DEBUG 2022-09-06 22:46:04,090 [main][BasicTypeRegistry.java:145] : Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@786c645b
DEBUG 2022-09-06 22:46:04,091 [main][BasicTypeRegistry.java:145] : Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@34ee38c5
DEBUG 2022-09-06 22:46:04,091 [main][BasicTypeRegistry.java:145] : Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@26d75695
DEBUG 2022-09-06 22:46:04,091 [main][BasicTypeRegistry.java:145] : Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@5734c8ae
DEBUG 2022-09-06 22:46:04,092 [main][BasicTypeRegistry.java:145] : Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@dc6db6d5
DEBUG 2022-09-06 22:46:04,092 [main][BasicTypeRegistry.java:145] : Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@da9e22b9
WARN  2022-09-06 22:46:04,099 [main][DriverManagerConnectionProviderImpl.java:70] : HHH10001002: Using Hibernate built-in connection pool (not for production use!)
INFO  2022-09-06 22:46:04,106 [main][DriverManagerConnectionProviderImpl.java:126] : HHH10001005: using driver [com.mysql.cj.jdbc.Driver] at URL [jdbc:mysql://localhost:3306/classicmodels?serverTimezone=UTC]
INFO  2022-09-06 22:46:04,107 [main][DriverManagerConnectionProviderImpl.java:132] : HHH10001001: Connection properties: {password=rootroot, user=root}
INFO  2022-09-06 22:46:04,108 [main][DriverManagerConnectionProviderImpl.java:140] : HHH10001003: Autocommit mode: false
DEBUG 2022-09-06 22:46:04,111 [main][DelegatingBasicLogger.java:384] : Initializing Connection pool with 1 Connections
INFO  2022-09-06 22:46:04,112 [main][PooledConnections.java:41] : HHH000115: Hibernate connection pool size: 5 (min=1)
DEBUG 2022-09-06 22:46:04,602 [main][JdbcEnvironmentInitiator.java:72] : Database ->
       name : MySQL
    version : 8.0.29
      major : 8
      minor : 0
DEBUG 2022-09-06 22:46:04,602 [main][JdbcEnvironmentInitiator.java:83] : Driver ->
       name : MySQL Connector/J
    version : mysql-connector-java-8.0.29 (Revision: dd61577595edad45c398af508cf91ad26fc4144f)
      major : 8
      minor : 0
DEBUG 2022-09-06 22:46:04,603 [main][DelegatingBasicLogger.java:389] : JDBC version : 4.2
INFO  2022-09-06 22:46:04,609 [main][Dialect.java:153] : HHH000400: Using dialect: org.hibernate.dialect.MySQLDialect
DEBUG 2022-09-06 22:46:04,656 [main][IdentifierHelperBuilder.java:117] : JDBC driver metadata reported database stores quoted identifiers in more than one case
DEBUG 2022-09-06 22:46:04,657 [main][IdentifierHelperBuilder.java:191] : IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [MIXED]; that will likely lead to problems in schema update and validation if using quoted identifiers
DEBUG 2022-09-06 22:46:04,682 [main][DefaultIdentifierGeneratorFactory.java:81] : Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
DEBUG 2022-09-06 22:46:04,682 [main][DefaultIdentifierGeneratorFactory.java:81] : Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
DEBUG 2022-09-06 22:46:04,684 [main][DefaultIdentifierGeneratorFactory.java:81] : Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
DEBUG 2022-09-06 22:46:04,684 [main][DefaultIdentifierGeneratorFactory.java:81] : Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
DEBUG 2022-09-06 22:46:04,684 [main][DefaultIdentifierGeneratorFactory.java:81] : Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
DEBUG 2022-09-06 22:46:04,685 [main][DefaultIdentifierGeneratorFactory.java:81] : Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
DEBUG 2022-09-06 22:46:04,685 [main][DefaultIdentifierGeneratorFactory.java:81] : Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
DEBUG 2022-09-06 22:46:04,686 [main][DefaultIdentifierGeneratorFactory.java:81] : Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
DEBUG 2022-09-06 22:46:04,687 [main][DefaultIdentifierGeneratorFactory.java:81] : Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
DEBUG 2022-09-06 22:46:04,688 [main][DefaultIdentifierGeneratorFactory.java:81] : Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
DEBUG 2022-09-06 22:46:04,688 [main][DefaultIdentifierGeneratorFactory.java:81] : Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
DEBUG 2022-09-06 22:46:04,688 [main][DefaultIdentifierGeneratorFactory.java:81] : Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
DEBUG 2022-09-06 22:46:04,689 [main][DefaultIdentifierGeneratorFactory.java:81] : Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
DEBUG 2022-09-06 22:46:04,689 [main][DefaultIdentifierGeneratorFactory.java:81] : Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
DEBUG 2022-09-06 22:46:04,710 [main][Namespace.java:47] : Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
DEBUG 2022-09-06 22:46:04,732 [main][AnnotationBinder.java:511] : Binding entity from annotated class: org.example.models.Author
DEBUG 2022-09-06 22:46:04,743 [main][Ejb3Column.java:213] : Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
DEBUG 2022-09-06 22:46:04,747 [main][EntityBinder.java:416] : Import with entity name Author
DEBUG 2022-09-06 22:46:04,750 [main][EntityBinder.java:692] : Bind entity org.example.models.Author on table Author
DEBUG 2022-09-06 22:46:04,766 [main][Ejb3Column.java:213] : Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Author), mappingColumn=id, insertable=true, updatable=true, unique=false}
DEBUG 2022-09-06 22:46:04,768 [main][PropertyBinder.java:174] : MetadataSourceProcessor property id with lazy=false
DEBUG 2022-09-06 22:46:04,769 [main][AbstractPropertyHolder.java:89] : Attempting to locate auto-apply AttributeConverter for property [org.example.models.Author:id]
DEBUG 2022-09-06 22:46:04,770 [main][SimpleValueBinder.java:398] : building SimpleValue for id
DEBUG 2022-09-06 22:46:04,771 [main][PropertyBinder.java:265] : Building property id
DEBUG 2022-09-06 22:46:04,775 [main][Ejb3Column.java:213] : Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Author), mappingColumn=name, insertable=true, updatable=true, unique=false}
DEBUG 2022-09-06 22:46:04,775 [main][PropertyBinder.java:174] : MetadataSourceProcessor property name with lazy=false
DEBUG 2022-09-06 22:46:04,775 [main][AbstractPropertyHolder.java:89] : Attempting to locate auto-apply AttributeConverter for property [org.example.models.Author:name]
DEBUG 2022-09-06 22:46:04,775 [main][SimpleValueBinder.java:398] : building SimpleValue for name
DEBUG 2022-09-06 22:46:04,776 [main][PropertyBinder.java:265] : Building property name
DEBUG 2022-09-06 22:46:04,776 [main][Ejb3Column.java:213] : Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Author), mappingColumn=salary, insertable=true, updatable=true, unique=false}
DEBUG 2022-09-06 22:46:04,776 [main][PropertyBinder.java:174] : MetadataSourceProcessor property salary with lazy=false
DEBUG 2022-09-06 22:46:04,777 [main][AbstractPropertyHolder.java:89] : Attempting to locate auto-apply AttributeConverter for property [org.example.models.Author:salary]
DEBUG 2022-09-06 22:46:04,777 [main][SimpleValueBinder.java:398] : building SimpleValue for salary
DEBUG 2022-09-06 22:46:04,777 [main][PropertyBinder.java:265] : Building property salary
DEBUG 2022-09-06 22:46:04,778 [main][AnnotationBinder.java:511] : Binding entity from annotated class: org.example.models.Book
DEBUG 2022-09-06 22:46:04,778 [main][Ejb3Column.java:213] : Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
DEBUG 2022-09-06 22:46:04,778 [main][EntityBinder.java:416] : Import with entity name Book
DEBUG 2022-09-06 22:46:04,778 [main][EntityBinder.java:692] : Bind entity org.example.models.Book on table Book
DEBUG 2022-09-06 22:46:04,779 [main][Ejb3Column.java:213] : Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Book), mappingColumn=id, insertable=true, updatable=true, unique=false}
DEBUG 2022-09-06 22:46:04,779 [main][PropertyBinder.java:174] : MetadataSourceProcessor property id with lazy=false
DEBUG 2022-09-06 22:46:04,780 [main][AbstractPropertyHolder.java:89] : Attempting to locate auto-apply AttributeConverter for property [org.example.models.Book:id]
DEBUG 2022-09-06 22:46:04,780 [main][SimpleValueBinder.java:398] : building SimpleValue for id
DEBUG 2022-09-06 22:46:04,780 [main][PropertyBinder.java:265] : Building property id
DEBUG 2022-09-06 22:46:04,780 [main][Ejb3Column.java:213] : Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Book), mappingColumn=author_id, insertable=true, updatable=true, unique=false}
DEBUG 2022-09-06 22:46:04,780 [main][PropertyBinder.java:174] : MetadataSourceProcessor property author_id with lazy=false
DEBUG 2022-09-06 22:46:04,781 [main][AbstractPropertyHolder.java:89] : Attempting to locate auto-apply AttributeConverter for property [org.example.models.Book:author_id]
DEBUG 2022-09-06 22:46:04,781 [main][SimpleValueBinder.java:398] : building SimpleValue for author_id
DEBUG 2022-09-06 22:46:04,781 [main][PropertyBinder.java:265] : Building property author_id
DEBUG 2022-09-06 22:46:04,782 [main][Ejb3Column.java:213] : Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Book), mappingColumn=name, insertable=true, updatable=true, unique=false}
DEBUG 2022-09-06 22:46:04,783 [main][PropertyBinder.java:174] : MetadataSourceProcessor property name with lazy=false
DEBUG 2022-09-06 22:46:04,783 [main][AbstractPropertyHolder.java:89] : Attempting to locate auto-apply AttributeConverter for property [org.example.models.Book:name]
DEBUG 2022-09-06 22:46:04,783 [main][SimpleValueBinder.java:398] : building SimpleValue for name
DEBUG 2022-09-06 22:46:04,783 [main][PropertyBinder.java:265] : Building property name
DEBUG 2022-09-06 22:46:04,784 [main][SimpleValueBinder.java:443] : Starting fillSimpleValue for id
DEBUG 2022-09-06 22:46:04,784 [main][SimpleValueBinder.java:443] : Starting fillSimpleValue for name
DEBUG 2022-09-06 22:46:04,785 [main][SimpleValueBinder.java:443] : Starting fillSimpleValue for salary
DEBUG 2022-09-06 22:46:04,785 [main][SimpleValueBinder.java:443] : Starting fillSimpleValue for id
DEBUG 2022-09-06 22:46:04,785 [main][SimpleValueBinder.java:443] : Starting fillSimpleValue for author_id
DEBUG 2022-09-06 22:46:04,785 [main][SimpleValueBinder.java:443] : Starting fillSimpleValue for name
DEBUG 2022-09-06 22:46:04,786 [main][PrimaryKey.java:35] : Forcing column [id] to be non-null as it is part of the primary key for table [author]
DEBUG 2022-09-06 22:46:04,786 [main][PrimaryKey.java:35] : Forcing column [id] to be non-null as it is part of the primary key for table [book]
DEBUG 2022-09-06 22:46:04,813 [main][SessionFactoryImpl.java:197] : Building session factory
DEBUG 2022-09-06 22:46:04,813 [main][Settings.java:69] : SessionFactory name : null
DEBUG 2022-09-06 22:46:04,814 [main][Settings.java:70] : Automatic flush during beforeCompletion(): enabled
DEBUG 2022-09-06 22:46:04,814 [main][Settings.java:71] : Automatic session close at end of transaction: disabled
DEBUG 2022-09-06 22:46:04,814 [main][Settings.java:73] : Statistics: disabled
DEBUG 2022-09-06 22:46:04,814 [main][Settings.java:75] : Deleted entity synthetic identifier rollback: disabled
DEBUG 2022-09-06 22:46:04,814 [main][Settings.java:76] : Default entity-mode: pojo
DEBUG 2022-09-06 22:46:04,814 [main][Settings.java:77] : Check Nullability in Core (should be disabled when Bean Validation is on): enabled
DEBUG 2022-09-06 22:46:04,815 [main][Settings.java:78] : Allow initialization of lazy state outside session : disabled
DEBUG 2022-09-06 22:46:04,815 [main][Settings.java:80] : Using BatchFetchStyle : LEGACY
DEBUG 2022-09-06 22:46:04,815 [main][Settings.java:81] : Default batch fetch size: -1
DEBUG 2022-09-06 22:46:04,815 [main][Settings.java:82] : Maximum outer join fetch depth: 2
DEBUG 2022-09-06 22:46:04,815 [main][Settings.java:83] : Default null ordering: NONE
DEBUG 2022-09-06 22:46:04,816 [main][Settings.java:84] : Order SQL updates by primary key: disabled
DEBUG 2022-09-06 22:46:04,816 [main][Settings.java:85] : Order SQL inserts for batching: disabled
DEBUG 2022-09-06 22:46:04,816 [main][Settings.java:87] : multi-tenancy strategy : NONE
DEBUG 2022-09-06 22:46:04,816 [main][Settings.java:89] : JTA Track by Thread: enabled
DEBUG 2022-09-06 22:46:04,816 [main][Settings.java:91] : Query language substitutions: {}
DEBUG 2022-09-06 22:46:04,817 [main][Settings.java:92] : JPA query language strict compliance: disabled
DEBUG 2022-09-06 22:46:04,817 [main][Settings.java:93] : Named query checking : enabled
DEBUG 2022-09-06 22:46:04,817 [main][Settings.java:95] : Second-level cache: enabled
DEBUG 2022-09-06 22:46:04,817 [main][Settings.java:96] : Second-level query cache: disabled
DEBUG 2022-09-06 22:46:04,817 [main][Settings.java:97] : Second-level query cache factory: org.hibernate.cache.internal.StandardQueryCacheFactory@a7a2a3d3
DEBUG 2022-09-06 22:46:04,817 [main][Settings.java:98] : Second-level cache region prefix: null
DEBUG 2022-09-06 22:46:04,818 [main][Settings.java:99] : Optimize second-level cache for minimal puts: disabled
DEBUG 2022-09-06 22:46:04,818 [main][Settings.java:100] : Structured second-level cache entries: disabled
DEBUG 2022-09-06 22:46:04,818 [main][Settings.java:101] : Second-level cache direct-reference entries: disabled
DEBUG 2022-09-06 22:46:04,818 [main][Settings.java:102] : Automatic eviction of collection cache: disabled
DEBUG 2022-09-06 22:46:04,818 [main][Settings.java:104] : JDBC batch size: 15
DEBUG 2022-09-06 22:46:04,819 [main][Settings.java:105] : JDBC batch updates for versioned data: enabled
DEBUG 2022-09-06 22:46:04,819 [main][Settings.java:106] : Scrollable result sets: enabled
DEBUG 2022-09-06 22:46:04,819 [main][Settings.java:107] : Wrap result sets: disabled
DEBUG 2022-09-06 22:46:04,819 [main][Settings.java:108] : JDBC3 getGeneratedKeys(): enabled
DEBUG 2022-09-06 22:46:04,820 [main][Settings.java:109] : JDBC result set fetch size: null
DEBUG 2022-09-06 22:46:04,820 [main][Settings.java:110] : Connection release mode: AFTER_TRANSACTION
DEBUG 2022-09-06 22:46:04,820 [main][Settings.java:111] : Generate SQL with comments: disabled
DEBUG 2022-09-06 22:46:04,851 [main][SessionFactoryImpl.java:252] : Session factory constructed with filter configurations : {}
DEBUG 2022-09-06 22:46:04,851 [main][SessionFactoryImpl.java:253] : Instantiating session factory with properties: {awt.toolkit=sun.lwawt.macosx.LWCToolkit, java.specification.version=11, file.encoding.pkg=sun.io, jdk.extensions.version=11.0.15.0, sun.jnu.encoding=UTF-8, hibernate.dialect=org.hibernate.dialect.MySQLDialect, java.class.path=/Users/vdonets/IdeaProjects/testmaven/target/classes:/Users/vdonets/.m2/repository/org/hibernate/hibernate-core/5.2.2.Final/hibernate-core-5.2.2.Final.jar:/Users/vdonets/.m2/repository/org/jboss/logging/jboss-logging/3.3.0.Final/jboss-logging-3.3.0.Final.jar:/Users/vdonets/.m2/repository/org/hibernate/javax/persistence/hibernate-jpa-2.1-api/1.0.0.Final/hibernate-jpa-2.1-api-1.0.0.Final.jar:/Users/vdonets/.m2/repository/org/javassist/javassist/3.20.0-GA/javassist-3.20.0-GA.jar:/Users/vdonets/.m2/repository/antlr/antlr/2.7.7/antlr-2.7.7.jar:/Users/vdonets/.m2/repository/org/apache/geronimo/specs/geronimo-jta_1.1_spec/1.1.1/geronimo-jta_1.1_spec-1.1.1.jar:/Users/vdonets/.m2/repository/org/jboss/jandex/2.0.0.Final/jandex-2.0.0.Final.jar:/Users/vdonets/.m2/repository/com/fasterxml/classmate/1.3.0/classmate-1.3.0.jar:/Users/vdonets/.m2/repository/dom4j/dom4j/1.6.1/dom4j-1.6.1.jar:/Users/vdonets/.m2/repository/org/hibernate/common/hibernate-commons-annotations/5.0.1.Final/hibernate-commons-annotations-5.0.1.Final.jar:/Users/vdonets/.m2/repository/javax/enterprise/cdi-api/1.1/cdi-api-1.1.jar:/Users/vdonets/.m2/repository/javax/el/el-api/2.2/el-api-2.2.jar:/Users/vdonets/.m2/repository/org/jboss/spec/javax/interceptor/jboss-interceptors-api_1.1_spec/1.0.0.Beta1/jboss-interceptors-api_1.1_spec-1.0.0.Beta1.jar:/Users/vdonets/.m2/repository/javax/annotation/jsr250-api/1.0/jsr250-api-1.0.jar:/Users/vdonets/.m2/repository/javax/inject/javax.inject/1/javax.inject-1.jar:/Users/vdonets/.m2/repository/mysql/mysql-connector-java/8.0.29/mysql-connector-java-8.0.29.jar:/Users/vdonets/.m2/repository/com/google/protobuf/protobuf-java/3.19.4/protobuf-java-3.19.4.jar:/Users/vdonets/.m2/repository/jakarta/xml/bind/jakarta.xml.bind-api/2.3.2/jakarta.xml.bind-api-2.3.2.jar:/Users/vdonets/.m2/repository/jakarta/activation/jakarta.activation-api/1.2.1/jakarta.activation-api-1.2.1.jar:/Users/vdonets/.m2/repository/org/glassfish/jaxb/jaxb-runtime/2.3.2/jaxb-runtime-2.3.2.jar:/Users/vdonets/.m2/repository/org/glassfish/jaxb/txw2/2.3.2/txw2-2.3.2.jar:/Users/vdonets/.m2/repository/com/sun/istack/istack-commons-runtime/3.0.8/istack-commons-runtime-3.0.8.jar:/Users/vdonets/.m2/repository/org/jvnet/staxex/stax-ex/1.8.1/stax-ex-1.8.1.jar:/Users/vdonets/.m2/repository/com/sun/xml/fastinfoset/FastInfoset/1.2.16/FastInfoset-1.2.16.jar:/Users/vdonets/.m2/repository/log4j/log4j/1.2.14/log4j-1.2.14.jar:/Applications/IntelliJ IDEA.app/Contents/lib/idea_rt.jar:/Users/vdonets/Library/Caches/JetBrains/IntelliJIdea2022.1/captureAgent/debugger-agent.jar, java.vm.vendor=Eclipse OpenJ9, sun.arch.data.model=64, com.ibm.vm.bitmode=64, hbm2ddl.auto=create-drop, user.variant=, com.ibm.oti.vm.library.version=29, java.vendor.url=https://www.ibm.com/semeru-runtimes, user.timezone=Europe/Warsaw, java.vm.specification.version=11, os.name=Mac OS X, sun.java.launcher=SUN_STANDARD, user.country=US, sun.boot.library.path=/Users/vdonets/Library/Java/JavaVirtualMachines/semeru-11.0.15/Contents/Home/lib/default:/Users/vdonets/Library/Java/JavaVirtualMachines/semeru-11.0.15/Contents/Home/lib, sun.java.command=org.example.Main, sun.cpu.endian=little, user.home=/Users/vdonets, user.language=en, java.specification.vendor=Oracle Corporation, java.version.date=2022-04-19, java.home=/Users/vdonets/Library/Java/JavaVirtualMachines/semeru-11.0.15/Contents/Home, ibm.signalhandling.rs=false, jdk.extensions.name=Extensions for OpenJDK for Eclipse OpenJ9, file.separator=/, line.separator=
, java.specification.name=Java Platform API Specification, java.vm.specification.vendor=Oracle Corporation, intellij.debug.agent=true, java.compiler=j9jit29, com.ibm.util.extralibs.properties=, java.awt.graphicsenv=sun.awt.CGraphicsEnvironment, com.ibm.oti.configuration=scar, com.ibm.oti.shared.enabled=false, hibernate.hbm2ddl.auto=create-drop, com.ibm.oti.vm.bootstrap.library.path=/Users/vdonets/Library/Java/JavaVirtualMachines/semeru-11.0.15/Contents/Home/lib/default:/Users/vdonets/Library/Java/JavaVirtualMachines/semeru-11.0.15/Contents/Home/lib, com.ibm.cpu.endian=little, java.fullversion=11.0.15-ea+10
JRE 11 Mac OS X aarch64-64-Bit 20220422_36 (JIT enabled, AOT enabled)
OpenJ9   - 9a84ec34e
OMR      - ab24b6666
JCL      - b7b5b42ea6 based on jdk-11.0.15+10, java.runtime.version=11.0.15-ea+10, user.name=vdonets, path.separator=:, hibernate.connection.username=root, os.version=12.5, java.runtime.name=IBM Semeru Runtime Open Edition, hibernate.connection.url=jdbc:mysql://localhost:3306/classicmodels?serverTimezone=UTC, connection.pool_size=5, ibm.signalhandling.sigint=true, file.encoding=UTF-8, java.vm.name=Eclipse OpenJ9 VM, hibernate.show_sql=true, java.vendor.version=11.0.15.0, ibm.signalhandling.sigchain=true, show_sql=true, hibernate.connection.driver_class=com.mysql.cj.jdbc.Driver, java.vendor.url.bug=https://github.com/ibmruntimes/Semeru-Runtimes/issues, java.io.tmpdir=/var/folders/wv/6c3_66yd6kq3r7z477kwz4lr0000gn/T/, java.version=11.0.15-ea, jboss.modules.system.pkgs=com.intellij.rt, com.ibm.system.agent.path=/Users/vdonets/Library/Java/JavaVirtualMachines/semeru-11.0.15/Contents/Home/lib, user.dir=/Users/vdonets/IdeaProjects/testmaven, os.arch=aarch64, java.vm.specification.name=Java Virtual Machine Specification, java.awt.printerjob=sun.lwawt.macosx.CPrinterJob, hibernate.connection.password=****, os.encoding=UTF-8, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@980dd735, java.library.path=/Users/vdonets/Library/Java/JavaVirtualMachines/semeru-11.0.15/Contents/Home/lib/default:/Users/vdonets/Library/Java/JavaVirtualMachines/semeru-11.0.15/Contents/Home/lib:/usr/lib, java.vendor=IBM Corporation, java.vm.info=JRE 11 Mac OS X aarch64-64-Bit 20220422_36 (JIT enabled, AOT enabled)
OpenJ9   - 9a84ec34e
OMR      - ab24b6666
JCL      - b7b5b42ea6 based on jdk-11.0.15+10, java.vm.version=openj9-0.32.0, ibm.system.encoding=UTF-8, hibernate.bytecode.use_reflection_optimizer=false, com.ibm.jcl.checkClassPath=, sun.io.unicode.encoding=UnicodeLittle, hibernate.connection.pool_size=5, java.class.version=55.0}
DEBUG 2022-09-06 22:46:04,859 [main][JaccIntegrator.java:80] : Skipping JACC integration as it was not enabled
DEBUG 2022-09-06 22:46:04,860 [main][SessionFactoryImpl.java:292] : Instantiated session factory
DEBUG 2022-09-06 22:46:04,884 [main][ClassLoaderAccessImpl.java:55] : Not known whether passed class name [org.example.models.Book] is safe
DEBUG 2022-09-06 22:46:04,884 [main][ClassLoaderAccessImpl.java:57] : No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.models.Book
DEBUG 2022-09-06 22:46:04,891 [main][ClassLoaderAccessImpl.java:55] : Not known whether passed class name [org.example.models.Book] is safe
DEBUG 2022-09-06 22:46:04,891 [main][ClassLoaderAccessImpl.java:57] : No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.models.Book
DEBUG 2022-09-06 22:46:04,919 [main][ClassLoaderAccessImpl.java:55] : Not known whether passed class name [org.example.models.Author] is safe
DEBUG 2022-09-06 22:46:04,920 [main][ClassLoaderAccessImpl.java:57] : No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.models.Author
DEBUG 2022-09-06 22:46:04,920 [main][ClassLoaderAccessImpl.java:55] : Not known whether passed class name [org.example.models.Author] is safe
DEBUG 2022-09-06 22:46:04,920 [main][ClassLoaderAccessImpl.java:57] : No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.models.Author
DEBUG 2022-09-06 22:46:04,925 [main][AbstractEntityPersister.java:3529] : Static SQL for entity: org.example.models.Book
DEBUG 2022-09-06 22:46:04,925 [main][AbstractEntityPersister.java:3534] :  Version select: select id from Book where id =?
DEBUG 2022-09-06 22:46:04,925 [main][AbstractEntityPersister.java:3537] :  Snapshot select: select book_.id, book_.author_id as author_i2_1_, book_.name as name3_1_ from Book book_ where book_.id=?
DEBUG 2022-09-06 22:46:04,926 [main][DelegatingBasicLogger.java:394] :  Insert 0: insert into Book (author_id, name, id) values (?, ?, ?)
DEBUG 2022-09-06 22:46:04,926 [main][DelegatingBasicLogger.java:394] :  Update 0: update Book set author_id=?, name=? where id=?
DEBUG 2022-09-06 22:46:04,926 [main][DelegatingBasicLogger.java:394] :  Delete 0: delete from Book where id=?
DEBUG 2022-09-06 22:46:04,936 [main][QuerySpacesImpl.java:174] : Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@c4809612]
DEBUG 2022-09-06 22:46:04,936 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : author_id
DEBUG 2022-09-06 22:46:04,937 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : name
DEBUG 2022-09-06 22:46:04,937 [main][FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150] : Building LoadPlan...
DEBUG 2022-09-06 22:46:04,943 [main][LoadQueryJoinAndFetchProcessor.java:100] : processing queryspace <gen:0>
DEBUG 2022-09-06 22:46:04,944 [main][LoadPlanTreePrinter.java:55] : LoadPlan(entity=org.example.models.Book)
    - Returns
       - EntityReturnImpl(entity=org.example.models.Book, querySpaceUid=<gen:0>, path=org.example.models.Book)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=org.example.models.Book)
          - SQL table alias mapping - book0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

DEBUG 2022-09-06 22:46:04,945 [main][EntityLoader.java:115] : Static select for entity org.example.models.Book [NONE]: select book0_.id as id1_1_0_, book0_.author_id as author_i2_1_0_, book0_.name as name3_1_0_ from Book book0_ where book0_.id=?
DEBUG 2022-09-06 22:46:04,946 [main][QuerySpacesImpl.java:174] : Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7c78ef2]
DEBUG 2022-09-06 22:46:04,946 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : author_id
DEBUG 2022-09-06 22:46:04,946 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : name
DEBUG 2022-09-06 22:46:04,946 [main][FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150] : Building LoadPlan...
DEBUG 2022-09-06 22:46:04,946 [main][LoadQueryJoinAndFetchProcessor.java:100] : processing queryspace <gen:0>
DEBUG 2022-09-06 22:46:04,947 [main][LoadPlanTreePrinter.java:55] : LoadPlan(entity=org.example.models.Book)
    - Returns
       - EntityReturnImpl(entity=org.example.models.Book, querySpaceUid=<gen:0>, path=org.example.models.Book)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=org.example.models.Book)
          - SQL table alias mapping - book0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

DEBUG 2022-09-06 22:46:04,947 [main][EntityLoader.java:115] : Static select for entity org.example.models.Book [READ]: select book0_.id as id1_1_0_, book0_.author_id as author_i2_1_0_, book0_.name as name3_1_0_ from Book book0_ where book0_.id=?
DEBUG 2022-09-06 22:46:04,947 [main][QuerySpacesImpl.java:174] : Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@fb90095c]
DEBUG 2022-09-06 22:46:04,947 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : author_id
DEBUG 2022-09-06 22:46:04,948 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : name
DEBUG 2022-09-06 22:46:04,948 [main][FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150] : Building LoadPlan...
DEBUG 2022-09-06 22:46:04,948 [main][LoadQueryJoinAndFetchProcessor.java:100] : processing queryspace <gen:0>
DEBUG 2022-09-06 22:46:04,948 [main][LoadPlanTreePrinter.java:55] : LoadPlan(entity=org.example.models.Book)
    - Returns
       - EntityReturnImpl(entity=org.example.models.Book, querySpaceUid=<gen:0>, path=org.example.models.Book)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=org.example.models.Book)
          - SQL table alias mapping - book0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

DEBUG 2022-09-06 22:46:04,949 [main][EntityLoader.java:115] : Static select for entity org.example.models.Book [UPGRADE]: select book0_.id as id1_1_0_, book0_.author_id as author_i2_1_0_, book0_.name as name3_1_0_ from Book book0_ where book0_.id=? for update
DEBUG 2022-09-06 22:46:04,949 [main][QuerySpacesImpl.java:174] : Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@b45cb53d]
DEBUG 2022-09-06 22:46:04,949 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : author_id
DEBUG 2022-09-06 22:46:04,949 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : name
DEBUG 2022-09-06 22:46:04,949 [main][FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150] : Building LoadPlan...
DEBUG 2022-09-06 22:46:04,950 [main][LoadQueryJoinAndFetchProcessor.java:100] : processing queryspace <gen:0>
DEBUG 2022-09-06 22:46:04,950 [main][LoadPlanTreePrinter.java:55] : LoadPlan(entity=org.example.models.Book)
    - Returns
       - EntityReturnImpl(entity=org.example.models.Book, querySpaceUid=<gen:0>, path=org.example.models.Book)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=org.example.models.Book)
          - SQL table alias mapping - book0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

DEBUG 2022-09-06 22:46:04,950 [main][EntityLoader.java:115] : Static select for entity org.example.models.Book [UPGRADE_NOWAIT]: select book0_.id as id1_1_0_, book0_.author_id as author_i2_1_0_, book0_.name as name3_1_0_ from Book book0_ where book0_.id=? for update
DEBUG 2022-09-06 22:46:04,950 [main][QuerySpacesImpl.java:174] : Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@ffca7ed6]
DEBUG 2022-09-06 22:46:04,951 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : author_id
DEBUG 2022-09-06 22:46:04,951 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : name
DEBUG 2022-09-06 22:46:04,951 [main][FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150] : Building LoadPlan...
DEBUG 2022-09-06 22:46:04,952 [main][LoadQueryJoinAndFetchProcessor.java:100] : processing queryspace <gen:0>
DEBUG 2022-09-06 22:46:04,952 [main][LoadPlanTreePrinter.java:55] : LoadPlan(entity=org.example.models.Book)
    - Returns
       - EntityReturnImpl(entity=org.example.models.Book, querySpaceUid=<gen:0>, path=org.example.models.Book)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=org.example.models.Book)
          - SQL table alias mapping - book0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

DEBUG 2022-09-06 22:46:04,953 [main][EntityLoader.java:115] : Static select for entity org.example.models.Book [UPGRADE_SKIPLOCKED]: select book0_.id as id1_1_0_, book0_.author_id as author_i2_1_0_, book0_.name as name3_1_0_ from Book book0_ where book0_.id=? for update
DEBUG 2022-09-06 22:46:04,953 [main][QuerySpacesImpl.java:174] : Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@ee926297]
DEBUG 2022-09-06 22:46:04,953 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : author_id
DEBUG 2022-09-06 22:46:04,953 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : name
DEBUG 2022-09-06 22:46:04,954 [main][FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150] : Building LoadPlan...
DEBUG 2022-09-06 22:46:04,954 [main][LoadQueryJoinAndFetchProcessor.java:100] : processing queryspace <gen:0>
DEBUG 2022-09-06 22:46:04,954 [main][LoadPlanTreePrinter.java:55] : LoadPlan(entity=org.example.models.Book)
    - Returns
       - EntityReturnImpl(entity=org.example.models.Book, querySpaceUid=<gen:0>, path=org.example.models.Book)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=org.example.models.Book)
          - SQL table alias mapping - book0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

DEBUG 2022-09-06 22:46:04,954 [main][EntityLoader.java:115] : Static select for entity org.example.models.Book [FORCE]: select book0_.id as id1_1_0_, book0_.author_id as author_i2_1_0_, book0_.name as name3_1_0_ from Book book0_ where book0_.id=? for update
DEBUG 2022-09-06 22:46:04,955 [main][QuerySpacesImpl.java:174] : Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4fa252af]
DEBUG 2022-09-06 22:46:04,955 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : author_id
DEBUG 2022-09-06 22:46:04,955 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : name
DEBUG 2022-09-06 22:46:04,955 [main][FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150] : Building LoadPlan...
DEBUG 2022-09-06 22:46:04,955 [main][LoadQueryJoinAndFetchProcessor.java:100] : processing queryspace <gen:0>
DEBUG 2022-09-06 22:46:04,956 [main][LoadPlanTreePrinter.java:55] : LoadPlan(entity=org.example.models.Book)
    - Returns
       - EntityReturnImpl(entity=org.example.models.Book, querySpaceUid=<gen:0>, path=org.example.models.Book)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=org.example.models.Book)
          - SQL table alias mapping - book0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

DEBUG 2022-09-06 22:46:04,956 [main][EntityLoader.java:115] : Static select for entity org.example.models.Book [PESSIMISTIC_READ]: select book0_.id as id1_1_0_, book0_.author_id as author_i2_1_0_, book0_.name as name3_1_0_ from Book book0_ where book0_.id=? lock in share mode
DEBUG 2022-09-06 22:46:04,956 [main][QuerySpacesImpl.java:174] : Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@85004389]
DEBUG 2022-09-06 22:46:04,956 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : author_id
DEBUG 2022-09-06 22:46:04,956 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : name
DEBUG 2022-09-06 22:46:04,957 [main][FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150] : Building LoadPlan...
DEBUG 2022-09-06 22:46:04,957 [main][LoadQueryJoinAndFetchProcessor.java:100] : processing queryspace <gen:0>
DEBUG 2022-09-06 22:46:04,957 [main][LoadPlanTreePrinter.java:55] : LoadPlan(entity=org.example.models.Book)
    - Returns
       - EntityReturnImpl(entity=org.example.models.Book, querySpaceUid=<gen:0>, path=org.example.models.Book)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=org.example.models.Book)
          - SQL table alias mapping - book0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

DEBUG 2022-09-06 22:46:04,957 [main][EntityLoader.java:115] : Static select for entity org.example.models.Book [PESSIMISTIC_WRITE]: select book0_.id as id1_1_0_, book0_.author_id as author_i2_1_0_, book0_.name as name3_1_0_ from Book book0_ where book0_.id=? for update
DEBUG 2022-09-06 22:46:04,958 [main][QuerySpacesImpl.java:174] : Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@412cb3fa]
DEBUG 2022-09-06 22:46:04,958 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : author_id
DEBUG 2022-09-06 22:46:04,958 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : name
DEBUG 2022-09-06 22:46:04,958 [main][FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150] : Building LoadPlan...
DEBUG 2022-09-06 22:46:04,958 [main][LoadQueryJoinAndFetchProcessor.java:100] : processing queryspace <gen:0>
DEBUG 2022-09-06 22:46:04,959 [main][LoadPlanTreePrinter.java:55] : LoadPlan(entity=org.example.models.Book)
    - Returns
       - EntityReturnImpl(entity=org.example.models.Book, querySpaceUid=<gen:0>, path=org.example.models.Book)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=org.example.models.Book)
          - SQL table alias mapping - book0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

DEBUG 2022-09-06 22:46:04,959 [main][EntityLoader.java:115] : Static select for entity org.example.models.Book [PESSIMISTIC_FORCE_INCREMENT]: select book0_.id as id1_1_0_, book0_.author_id as author_i2_1_0_, book0_.name as name3_1_0_ from Book book0_ where book0_.id=? for update
DEBUG 2022-09-06 22:46:04,959 [main][QuerySpacesImpl.java:174] : Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2fc4b787]
DEBUG 2022-09-06 22:46:04,959 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : author_id
DEBUG 2022-09-06 22:46:04,960 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : name
DEBUG 2022-09-06 22:46:04,960 [main][FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150] : Building LoadPlan...
DEBUG 2022-09-06 22:46:04,960 [main][LoadQueryJoinAndFetchProcessor.java:100] : processing queryspace <gen:0>
DEBUG 2022-09-06 22:46:04,961 [main][LoadPlanTreePrinter.java:55] : LoadPlan(entity=org.example.models.Book)
    - Returns
       - EntityReturnImpl(entity=org.example.models.Book, querySpaceUid=<gen:0>, path=org.example.models.Book)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=org.example.models.Book)
          - SQL table alias mapping - book0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

DEBUG 2022-09-06 22:46:04,962 [main][EntityLoader.java:115] : Static select for entity org.example.models.Book [OPTIMISTIC]: select book0_.id as id1_1_0_, book0_.author_id as author_i2_1_0_, book0_.name as name3_1_0_ from Book book0_ where book0_.id=?
DEBUG 2022-09-06 22:46:04,962 [main][QuerySpacesImpl.java:174] : Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@9eba6f7e]
DEBUG 2022-09-06 22:46:04,962 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : author_id
DEBUG 2022-09-06 22:46:04,962 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : name
DEBUG 2022-09-06 22:46:04,963 [main][FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150] : Building LoadPlan...
DEBUG 2022-09-06 22:46:04,963 [main][LoadQueryJoinAndFetchProcessor.java:100] : processing queryspace <gen:0>
DEBUG 2022-09-06 22:46:04,963 [main][LoadPlanTreePrinter.java:55] : LoadPlan(entity=org.example.models.Book)
    - Returns
       - EntityReturnImpl(entity=org.example.models.Book, querySpaceUid=<gen:0>, path=org.example.models.Book)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=org.example.models.Book)
          - SQL table alias mapping - book0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

DEBUG 2022-09-06 22:46:04,963 [main][EntityLoader.java:115] : Static select for entity org.example.models.Book [OPTIMISTIC_FORCE_INCREMENT]: select book0_.id as id1_1_0_, book0_.author_id as author_i2_1_0_, book0_.name as name3_1_0_ from Book book0_ where book0_.id=?
DEBUG 2022-09-06 22:46:04,970 [main][CascadeEntityLoader.java:38] : Static select for action ACTION_MERGE on entity org.example.models.Book: select book0_.id as id1_1_0_, book0_.author_id as author_i2_1_0_, book0_.name as name3_1_0_ from Book book0_ where book0_.id=?
DEBUG 2022-09-06 22:46:04,970 [main][CascadeEntityLoader.java:38] : Static select for action ACTION_REFRESH on entity org.example.models.Book: select book0_.id as id1_1_0_, book0_.author_id as author_i2_1_0_, book0_.name as name3_1_0_ from Book book0_ where book0_.id=?
DEBUG 2022-09-06 22:46:04,971 [main][AbstractEntityPersister.java:3529] : Static SQL for entity: org.example.models.Author
DEBUG 2022-09-06 22:46:04,971 [main][AbstractEntityPersister.java:3534] :  Version select: select id from Author where id =?
DEBUG 2022-09-06 22:46:04,972 [main][AbstractEntityPersister.java:3537] :  Snapshot select: select author_.id, author_.name as name2_0_, author_.salary as salary3_0_ from Author author_ where author_.id=?
DEBUG 2022-09-06 22:46:04,972 [main][DelegatingBasicLogger.java:394] :  Insert 0: insert into Author (name, salary, id) values (?, ?, ?)
DEBUG 2022-09-06 22:46:04,972 [main][DelegatingBasicLogger.java:394] :  Update 0: update Author set name=?, salary=? where id=?
DEBUG 2022-09-06 22:46:04,972 [main][DelegatingBasicLogger.java:394] :  Delete 0: delete from Author where id=?
DEBUG 2022-09-06 22:46:04,972 [main][AbstractEntityPersister.java:3545] :  Identity insert: insert into Author (name, salary) values (?, ?)
DEBUG 2022-09-06 22:46:04,972 [main][QuerySpacesImpl.java:174] : Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@dfe000e7]
DEBUG 2022-09-06 22:46:04,973 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : name
DEBUG 2022-09-06 22:46:04,973 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : salary
DEBUG 2022-09-06 22:46:04,973 [main][FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150] : Building LoadPlan...
DEBUG 2022-09-06 22:46:04,973 [main][LoadQueryJoinAndFetchProcessor.java:100] : processing queryspace <gen:0>
DEBUG 2022-09-06 22:46:04,974 [main][LoadPlanTreePrinter.java:55] : LoadPlan(entity=org.example.models.Author)
    - Returns
       - EntityReturnImpl(entity=org.example.models.Author, querySpaceUid=<gen:0>, path=org.example.models.Author)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=org.example.models.Author)
          - SQL table alias mapping - author0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

DEBUG 2022-09-06 22:46:04,974 [main][EntityLoader.java:115] : Static select for entity org.example.models.Author [NONE]: select author0_.id as id1_0_0_, author0_.name as name2_0_0_, author0_.salary as salary3_0_0_ from Author author0_ where author0_.id=?
DEBUG 2022-09-06 22:46:04,974 [main][QuerySpacesImpl.java:174] : Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@69440409]
DEBUG 2022-09-06 22:46:04,975 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : name
DEBUG 2022-09-06 22:46:04,975 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : salary
DEBUG 2022-09-06 22:46:04,976 [main][FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150] : Building LoadPlan...
DEBUG 2022-09-06 22:46:04,976 [main][LoadQueryJoinAndFetchProcessor.java:100] : processing queryspace <gen:0>
DEBUG 2022-09-06 22:46:04,976 [main][LoadPlanTreePrinter.java:55] : LoadPlan(entity=org.example.models.Author)
    - Returns
       - EntityReturnImpl(entity=org.example.models.Author, querySpaceUid=<gen:0>, path=org.example.models.Author)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=org.example.models.Author)
          - SQL table alias mapping - author0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

DEBUG 2022-09-06 22:46:04,976 [main][EntityLoader.java:115] : Static select for entity org.example.models.Author [READ]: select author0_.id as id1_0_0_, author0_.name as name2_0_0_, author0_.salary as salary3_0_0_ from Author author0_ where author0_.id=?
DEBUG 2022-09-06 22:46:04,977 [main][QuerySpacesImpl.java:174] : Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@26e3bd0b]
DEBUG 2022-09-06 22:46:04,977 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : name
DEBUG 2022-09-06 22:46:04,977 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : salary
DEBUG 2022-09-06 22:46:04,977 [main][FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150] : Building LoadPlan...
DEBUG 2022-09-06 22:46:04,977 [main][LoadQueryJoinAndFetchProcessor.java:100] : processing queryspace <gen:0>
DEBUG 2022-09-06 22:46:04,978 [main][LoadPlanTreePrinter.java:55] : LoadPlan(entity=org.example.models.Author)
    - Returns
       - EntityReturnImpl(entity=org.example.models.Author, querySpaceUid=<gen:0>, path=org.example.models.Author)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=org.example.models.Author)
          - SQL table alias mapping - author0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

DEBUG 2022-09-06 22:46:04,978 [main][EntityLoader.java:115] : Static select for entity org.example.models.Author [UPGRADE]: select author0_.id as id1_0_0_, author0_.name as name2_0_0_, author0_.salary as salary3_0_0_ from Author author0_ where author0_.id=? for update
DEBUG 2022-09-06 22:46:04,978 [main][QuerySpacesImpl.java:174] : Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@502ae850]
DEBUG 2022-09-06 22:46:04,978 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : name
DEBUG 2022-09-06 22:46:04,978 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : salary
DEBUG 2022-09-06 22:46:04,979 [main][FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150] : Building LoadPlan...
DEBUG 2022-09-06 22:46:04,979 [main][LoadQueryJoinAndFetchProcessor.java:100] : processing queryspace <gen:0>
DEBUG 2022-09-06 22:46:04,979 [main][LoadPlanTreePrinter.java:55] : LoadPlan(entity=org.example.models.Author)
    - Returns
       - EntityReturnImpl(entity=org.example.models.Author, querySpaceUid=<gen:0>, path=org.example.models.Author)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=org.example.models.Author)
          - SQL table alias mapping - author0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

DEBUG 2022-09-06 22:46:04,979 [main][EntityLoader.java:115] : Static select for entity org.example.models.Author [UPGRADE_NOWAIT]: select author0_.id as id1_0_0_, author0_.name as name2_0_0_, author0_.salary as salary3_0_0_ from Author author0_ where author0_.id=? for update
DEBUG 2022-09-06 22:46:04,980 [main][QuerySpacesImpl.java:174] : Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@8de329cd]
DEBUG 2022-09-06 22:46:04,980 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : name
DEBUG 2022-09-06 22:46:04,980 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : salary
DEBUG 2022-09-06 22:46:04,980 [main][FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150] : Building LoadPlan...
DEBUG 2022-09-06 22:46:04,980 [main][LoadQueryJoinAndFetchProcessor.java:100] : processing queryspace <gen:0>
DEBUG 2022-09-06 22:46:04,981 [main][LoadPlanTreePrinter.java:55] : LoadPlan(entity=org.example.models.Author)
    - Returns
       - EntityReturnImpl(entity=org.example.models.Author, querySpaceUid=<gen:0>, path=org.example.models.Author)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=org.example.models.Author)
          - SQL table alias mapping - author0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

DEBUG 2022-09-06 22:46:04,981 [main][EntityLoader.java:115] : Static select for entity org.example.models.Author [UPGRADE_SKIPLOCKED]: select author0_.id as id1_0_0_, author0_.name as name2_0_0_, author0_.salary as salary3_0_0_ from Author author0_ where author0_.id=? for update
DEBUG 2022-09-06 22:46:04,981 [main][QuerySpacesImpl.java:174] : Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@218eee9f]
DEBUG 2022-09-06 22:46:04,981 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : name
DEBUG 2022-09-06 22:46:04,982 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : salary
DEBUG 2022-09-06 22:46:04,982 [main][FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150] : Building LoadPlan...
DEBUG 2022-09-06 22:46:04,982 [main][LoadQueryJoinAndFetchProcessor.java:100] : processing queryspace <gen:0>
DEBUG 2022-09-06 22:46:04,982 [main][LoadPlanTreePrinter.java:55] : LoadPlan(entity=org.example.models.Author)
    - Returns
       - EntityReturnImpl(entity=org.example.models.Author, querySpaceUid=<gen:0>, path=org.example.models.Author)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=org.example.models.Author)
          - SQL table alias mapping - author0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

DEBUG 2022-09-06 22:46:04,982 [main][EntityLoader.java:115] : Static select for entity org.example.models.Author [FORCE]: select author0_.id as id1_0_0_, author0_.name as name2_0_0_, author0_.salary as salary3_0_0_ from Author author0_ where author0_.id=? for update
DEBUG 2022-09-06 22:46:04,983 [main][QuerySpacesImpl.java:174] : Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@17f5be45]
DEBUG 2022-09-06 22:46:04,983 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : name
DEBUG 2022-09-06 22:46:04,983 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : salary
DEBUG 2022-09-06 22:46:04,983 [main][FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150] : Building LoadPlan...
DEBUG 2022-09-06 22:46:04,983 [main][LoadQueryJoinAndFetchProcessor.java:100] : processing queryspace <gen:0>
DEBUG 2022-09-06 22:46:04,984 [main][LoadPlanTreePrinter.java:55] : LoadPlan(entity=org.example.models.Author)
    - Returns
       - EntityReturnImpl(entity=org.example.models.Author, querySpaceUid=<gen:0>, path=org.example.models.Author)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=org.example.models.Author)
          - SQL table alias mapping - author0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

DEBUG 2022-09-06 22:46:04,985 [main][EntityLoader.java:115] : Static select for entity org.example.models.Author [PESSIMISTIC_READ]: select author0_.id as id1_0_0_, author0_.name as name2_0_0_, author0_.salary as salary3_0_0_ from Author author0_ where author0_.id=? lock in share mode
DEBUG 2022-09-06 22:46:04,985 [main][QuerySpacesImpl.java:174] : Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@9865bb06]
DEBUG 2022-09-06 22:46:04,985 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : name
DEBUG 2022-09-06 22:46:04,985 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : salary
DEBUG 2022-09-06 22:46:04,985 [main][FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150] : Building LoadPlan...
DEBUG 2022-09-06 22:46:04,986 [main][LoadQueryJoinAndFetchProcessor.java:100] : processing queryspace <gen:0>
DEBUG 2022-09-06 22:46:04,986 [main][LoadPlanTreePrinter.java:55] : LoadPlan(entity=org.example.models.Author)
    - Returns
       - EntityReturnImpl(entity=org.example.models.Author, querySpaceUid=<gen:0>, path=org.example.models.Author)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=org.example.models.Author)
          - SQL table alias mapping - author0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

DEBUG 2022-09-06 22:46:04,986 [main][EntityLoader.java:115] : Static select for entity org.example.models.Author [PESSIMISTIC_WRITE]: select author0_.id as id1_0_0_, author0_.name as name2_0_0_, author0_.salary as salary3_0_0_ from Author author0_ where author0_.id=? for update
DEBUG 2022-09-06 22:46:04,987 [main][QuerySpacesImpl.java:174] : Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@127e2c10]
DEBUG 2022-09-06 22:46:04,987 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : name
DEBUG 2022-09-06 22:46:04,987 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : salary
DEBUG 2022-09-06 22:46:04,987 [main][FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150] : Building LoadPlan...
DEBUG 2022-09-06 22:46:04,987 [main][LoadQueryJoinAndFetchProcessor.java:100] : processing queryspace <gen:0>
DEBUG 2022-09-06 22:46:04,988 [main][LoadPlanTreePrinter.java:55] : LoadPlan(entity=org.example.models.Author)
    - Returns
       - EntityReturnImpl(entity=org.example.models.Author, querySpaceUid=<gen:0>, path=org.example.models.Author)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=org.example.models.Author)
          - SQL table alias mapping - author0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

DEBUG 2022-09-06 22:46:04,988 [main][EntityLoader.java:115] : Static select for entity org.example.models.Author [PESSIMISTIC_FORCE_INCREMENT]: select author0_.id as id1_0_0_, author0_.name as name2_0_0_, author0_.salary as salary3_0_0_ from Author author0_ where author0_.id=? for update
DEBUG 2022-09-06 22:46:04,988 [main][QuerySpacesImpl.java:174] : Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7670d1cf]
DEBUG 2022-09-06 22:46:04,988 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : name
DEBUG 2022-09-06 22:46:04,989 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : salary
DEBUG 2022-09-06 22:46:04,989 [main][FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150] : Building LoadPlan...
DEBUG 2022-09-06 22:46:04,989 [main][LoadQueryJoinAndFetchProcessor.java:100] : processing queryspace <gen:0>
DEBUG 2022-09-06 22:46:04,989 [main][LoadPlanTreePrinter.java:55] : LoadPlan(entity=org.example.models.Author)
    - Returns
       - EntityReturnImpl(entity=org.example.models.Author, querySpaceUid=<gen:0>, path=org.example.models.Author)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=org.example.models.Author)
          - SQL table alias mapping - author0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

DEBUG 2022-09-06 22:46:04,990 [main][EntityLoader.java:115] : Static select for entity org.example.models.Author [OPTIMISTIC]: select author0_.id as id1_0_0_, author0_.name as name2_0_0_, author0_.salary as salary3_0_0_ from Author author0_ where author0_.id=?
DEBUG 2022-09-06 22:46:04,990 [main][QuerySpacesImpl.java:174] : Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@34f55e10]
DEBUG 2022-09-06 22:46:04,990 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : name
DEBUG 2022-09-06 22:46:04,990 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : salary
DEBUG 2022-09-06 22:46:04,990 [main][FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150] : Building LoadPlan...
DEBUG 2022-09-06 22:46:04,991 [main][LoadQueryJoinAndFetchProcessor.java:100] : processing queryspace <gen:0>
DEBUG 2022-09-06 22:46:04,991 [main][LoadPlanTreePrinter.java:55] : LoadPlan(entity=org.example.models.Author)
    - Returns
       - EntityReturnImpl(entity=org.example.models.Author, querySpaceUid=<gen:0>, path=org.example.models.Author)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=org.example.models.Author)
          - SQL table alias mapping - author0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

DEBUG 2022-09-06 22:46:04,991 [main][EntityLoader.java:115] : Static select for entity org.example.models.Author [OPTIMISTIC_FORCE_INCREMENT]: select author0_.id as id1_0_0_, author0_.name as name2_0_0_, author0_.salary as salary3_0_0_ from Author author0_ where author0_.id=?
DEBUG 2022-09-06 22:46:04,992 [main][CascadeEntityLoader.java:38] : Static select for action ACTION_MERGE on entity org.example.models.Author: select author0_.id as id1_0_0_, author0_.name as name2_0_0_, author0_.salary as salary3_0_0_ from Author author0_ where author0_.id=?
DEBUG 2022-09-06 22:46:04,992 [main][CascadeEntityLoader.java:38] : Static select for action ACTION_REFRESH on entity org.example.models.Author: select author0_.id as id1_0_0_, author0_.name as name2_0_0_, author0_.salary as salary3_0_0_ from Author author0_ where author0_.id=?
DEBUG 2022-09-06 22:46:05,006 [main][SqlStatementLogger.java:92] : drop table if exists Author
INFO  2022-09-06 22:46:05,008 [main][DdlTransactionIsolatorNonJtaImpl.java:48] : HHH10001501: Connection obtained from JdbcConnectionAccess [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess@6eaa912a] for (non-JTA) DDL execution was not in auto-commit mode; the Connection 'local transaction' will be committed and the Connection will be set into auto-commit mode.
DEBUG 2022-09-06 22:46:05,018 [main][SqlStatementLogger.java:92] : drop table if exists Book
DEBUG 2022-09-06 22:46:05,022 [main][SqlStatementLogger.java:92] : drop table if exists hibernate_sequence
DEBUG 2022-09-06 22:46:05,028 [main][SqlStatementLogger.java:92] : create table Author (id bigint not null auto_increment, name varchar(255), salary integer, primary key (id))
INFO  2022-09-06 22:46:05,029 [main][DdlTransactionIsolatorNonJtaImpl.java:48] : HHH10001501: Connection obtained from JdbcConnectionAccess [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess@cde38d13] for (non-JTA) DDL execution was not in auto-commit mode; the Connection 'local transaction' will be committed and the Connection will be set into auto-commit mode.
DEBUG 2022-09-06 22:46:05,036 [main][SqlStatementLogger.java:92] : create table Book (id bigint not null, author_id bigint not null, name varchar(255), primary key (id))
DEBUG 2022-09-06 22:46:05,043 [main][SqlStatementLogger.java:92] : create table hibernate_sequence (next_val bigint)
DEBUG 2022-09-06 22:46:05,047 [main][SqlStatementLogger.java:92] : insert into hibernate_sequence values ( 1 )
INFO  2022-09-06 22:46:05,050 [main][SchemaCreatorImpl.java:485] : HHH000476: Executing import script 'org.hibernate.tool.schema.internal.exec.ScriptSourceInputNonExistentImpl@be464ab0'
DEBUG 2022-09-06 22:46:05,051 [main][JtaPlatformInitiator.java:42] : No JtaPlatform was specified, checking resolver
DEBUG 2022-09-06 22:46:05,053 [main][JtaPlatformResolverInitiator.java:33] : No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
DEBUG 2022-09-06 22:46:05,055 [main][StandardJtaPlatformResolver.java:101] : Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
DEBUG 2022-09-06 22:46:05,055 [main][NamedQueryRepository.java:151] : Checking 0 named HQL queries
DEBUG 2022-09-06 22:46:05,055 [main][NamedQueryRepository.java:167] : Checking 0 named SQL queries
DEBUG 2022-09-06 22:46:05,056 [main][SessionFactoryRegistry.java:52] : Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@abe32b16
DEBUG 2022-09-06 22:46:05,057 [main][SessionFactoryRegistry.java:74] : Registering SessionFactory: 3dbca64c-4aa0-48bb-999b-62c73199474d (<unnamed>)
DEBUG 2022-09-06 22:46:05,058 [main][SessionFactoryRegistry.java:81] : Not binding SessionFactory to JNDI, no JNDI name configured
DEBUG 2022-09-06 22:46:05,087 [main][StatisticsInitiator.java:82] : Statistics initialized [enabled=false]
DEBUG 2022-09-06 22:46:05,091 [main][TransactionImpl.java:55] : begin
DEBUG 2022-09-06 22:46:05,097 [main][ActionQueue.java:272] : Executing identity-insert immediately
DEBUG 2022-09-06 22:46:05,099 [main][SqlStatementLogger.java:92] : insert into Author (name, salary) values (?, ?)
DEBUG 2022-09-06 22:46:05,108 [main][IdentifierGeneratorHelper.java:78] : Natively generated identity: 1
DEBUG 2022-09-06 22:46:05,108 [main][ResourceRegistryStandardImpl.java:104] : HHH000387: ResultSet's statement was not registered
DEBUG 2022-09-06 22:46:05,109 [main][TransactionImpl.java:66] : committing
DEBUG 2022-09-06 22:46:05,110 [main][AbstractFlushingEventListener.java:132] : Processing flush-time cascades
DEBUG 2022-09-06 22:46:05,110 [main][AbstractFlushingEventListener.java:174] : Dirty checking collections
DEBUG 2022-09-06 22:46:05,111 [main][AbstractFlushingEventListener.java:106] : Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
DEBUG 2022-09-06 22:46:05,111 [main][AbstractFlushingEventListener.java:113] : Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
DEBUG 2022-09-06 22:46:05,112 [main][EntityPrinter.java:102] : Listing entities:
DEBUG 2022-09-06 22:46:05,113 [main][EntityPrinter.java:109] : org.example.models.Author{name=David Baldacci, id=1, salary=1703}
DEBUG 2022-09-06 22:46:05,115 [main][LogicalConnectionManagedImpl.java:154] : Initiating JDBC connection release from afterTransaction
DEBUG 2022-09-06 22:46:05,115 [main][LogicalConnectionManagedImpl.java:154] : Initiating JDBC connection release from afterTransaction
DEBUG 2022-09-06 22:46:05,133 [main][TransactionImpl.java:55] : begin
DEBUG 2022-09-06 22:46:05,134 [main][ActionQueue.java:272] : Executing identity-insert immediately
DEBUG 2022-09-06 22:46:05,135 [main][SqlStatementLogger.java:92] : insert into Author (name, salary) values (?, ?)
DEBUG 2022-09-06 22:46:05,136 [main][IdentifierGeneratorHelper.java:78] : Natively generated identity: 2
DEBUG 2022-09-06 22:46:05,137 [main][ResourceRegistryStandardImpl.java:104] : HHH000387: ResultSet's statement was not registered
DEBUG 2022-09-06 22:46:05,137 [main][TransactionImpl.java:66] : committing
DEBUG 2022-09-06 22:46:05,137 [main][AbstractFlushingEventListener.java:132] : Processing flush-time cascades
DEBUG 2022-09-06 22:46:05,137 [main][AbstractFlushingEventListener.java:174] : Dirty checking collections
DEBUG 2022-09-06 22:46:05,137 [main][AbstractFlushingEventListener.java:106] : Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
DEBUG 2022-09-06 22:46:05,138 [main][AbstractFlushingEventListener.java:113] : Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
DEBUG 2022-09-06 22:46:05,138 [main][EntityPrinter.java:102] : Listing entities:
DEBUG 2022-09-06 22:46:05,138 [main][EntityPrinter.java:109] : org.example.models.Author{name=Colleen Hoover, id=2, salary=4280}
DEBUG 2022-09-06 22:46:05,139 [main][LogicalConnectionManagedImpl.java:154] : Initiating JDBC connection release from afterTransaction
DEBUG 2022-09-06 22:46:05,139 [main][LogicalConnectionManagedImpl.java:154] : Initiating JDBC connection release from afterTransaction
DEBUG 2022-09-06 22:46:05,139 [main][TransactionImpl.java:55] : begin
DEBUG 2022-09-06 22:46:05,140 [main][ActionQueue.java:272] : Executing identity-insert immediately
DEBUG 2022-09-06 22:46:05,140 [main][SqlStatementLogger.java:92] : insert into Author (name, salary) values (?, ?)
DEBUG 2022-09-06 22:46:05,141 [main][IdentifierGeneratorHelper.java:78] : Natively generated identity: 3
DEBUG 2022-09-06 22:46:05,142 [main][ResourceRegistryStandardImpl.java:104] : HHH000387: ResultSet's statement was not registered
DEBUG 2022-09-06 22:46:05,142 [main][TransactionImpl.java:66] : committing
DEBUG 2022-09-06 22:46:05,142 [main][AbstractFlushingEventListener.java:132] : Processing flush-time cascades
DEBUG 2022-09-06 22:46:05,142 [main][AbstractFlushingEventListener.java:174] : Dirty checking collections
DEBUG 2022-09-06 22:46:05,142 [main][AbstractFlushingEventListener.java:106] : Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
DEBUG 2022-09-06 22:46:05,142 [main][AbstractFlushingEventListener.java:113] : Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
DEBUG 2022-09-06 22:46:05,144 [main][EntityPrinter.java:102] : Listing entities:
DEBUG 2022-09-06 22:46:05,144 [main][EntityPrinter.java:109] : org.example.models.Author{name=Stuart Woods, id=3, salary=1533}
DEBUG 2022-09-06 22:46:05,145 [main][LogicalConnectionManagedImpl.java:154] : Initiating JDBC connection release from afterTransaction
DEBUG 2022-09-06 22:46:05,145 [main][LogicalConnectionManagedImpl.java:154] : Initiating JDBC connection release from afterTransaction
DEBUG 2022-09-06 22:46:05,146 [main][TransactionImpl.java:55] : begin
DEBUG 2022-09-06 22:46:05,147 [main][ActionQueue.java:272] : Executing identity-insert immediately
DEBUG 2022-09-06 22:46:05,147 [main][SqlStatementLogger.java:92] : insert into Author (name, salary) values (?, ?)
DEBUG 2022-09-06 22:46:05,148 [main][IdentifierGeneratorHelper.java:78] : Natively generated identity: 4
DEBUG 2022-09-06 22:46:05,148 [main][ResourceRegistryStandardImpl.java:104] : HHH000387: ResultSet's statement was not registered
DEBUG 2022-09-06 22:46:05,148 [main][TransactionImpl.java:66] : committing
DEBUG 2022-09-06 22:46:05,148 [main][AbstractFlushingEventListener.java:132] : Processing flush-time cascades
DEBUG 2022-09-06 22:46:05,148 [main][AbstractFlushingEventListener.java:174] : Dirty checking collections
DEBUG 2022-09-06 22:46:05,148 [main][AbstractFlushingEventListener.java:106] : Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
DEBUG 2022-09-06 22:46:05,149 [main][AbstractFlushingEventListener.java:113] : Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
DEBUG 2022-09-06 22:46:05,149 [main][EntityPrinter.java:102] : Listing entities:
DEBUG 2022-09-06 22:46:05,149 [main][EntityPrinter.java:109] : org.example.models.Author{name=Nora Roberts, id=4, salary=4626}
DEBUG 2022-09-06 22:46:05,149 [main][LogicalConnectionManagedImpl.java:154] : Initiating JDBC connection release from afterTransaction
DEBUG 2022-09-06 22:46:05,150 [main][LogicalConnectionManagedImpl.java:154] : Initiating JDBC connection release from afterTransaction
DEBUG 2022-09-06 22:46:05,150 [main][TransactionImpl.java:55] : begin
DEBUG 2022-09-06 22:46:05,151 [main][ActionQueue.java:272] : Executing identity-insert immediately
DEBUG 2022-09-06 22:46:05,151 [main][SqlStatementLogger.java:92] : insert into Author (name, salary) values (?, ?)
DEBUG 2022-09-06 22:46:05,153 [main][IdentifierGeneratorHelper.java:78] : Natively generated identity: 5
DEBUG 2022-09-06 22:46:05,153 [main][ResourceRegistryStandardImpl.java:104] : HHH000387: ResultSet's statement was not registered
DEBUG 2022-09-06 22:46:05,153 [main][TransactionImpl.java:66] : committing
DEBUG 2022-09-06 22:46:05,153 [main][AbstractFlushingEventListener.java:132] : Processing flush-time cascades
DEBUG 2022-09-06 22:46:05,153 [main][AbstractFlushingEventListener.java:174] : Dirty checking collections
DEBUG 2022-09-06 22:46:05,153 [main][AbstractFlushingEventListener.java:106] : Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
DEBUG 2022-09-06 22:46:05,154 [main][AbstractFlushingEventListener.java:113] : Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
DEBUG 2022-09-06 22:46:05,154 [main][EntityPrinter.java:102] : Listing entities:
DEBUG 2022-09-06 22:46:05,154 [main][EntityPrinter.java:109] : org.example.models.Author{name=Michael Connelly, id=5, salary=3194}
DEBUG 2022-09-06 22:46:05,155 [main][LogicalConnectionManagedImpl.java:154] : Initiating JDBC connection release from afterTransaction
DEBUG 2022-09-06 22:46:05,155 [main][LogicalConnectionManagedImpl.java:154] : Initiating JDBC connection release from afterTransaction
DEBUG 2022-09-06 22:46:05,165 [main][CriteriaQueryImpl.java:307] : Rendered criteria query -> select generatedAlias0 from Author as generatedAlias0
DEBUG 2022-09-06 22:46:05,172 [main][QueryTranslatorFactoryInitiator.java:45] : QueryTranslatorFactory : org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory@4bd72162
INFO  2022-09-06 22:46:05,173 [main][QueryTranslatorFactoryInitiator.java:47] : HHH000397: Using ASTQueryTranslatorFactory
DEBUG 2022-09-06 22:46:05,190 [main][QueryTranslatorImpl.java:278] : parse() - HQL: select generatedAlias0 from org.example.models.Author as generatedAlias0
DEBUG 2022-09-06 22:46:05,194 [main][QueryTranslatorImpl.java:296] : --- HQL AST ---
 \-[QUERY] Node: 'query'
    \-[SELECT_FROM] Node: 'SELECT_FROM'
       +-[FROM] Node: 'from'
       |  \-[RANGE] Node: 'RANGE'
       |     +-[DOT] Node: '.'
       |     |  +-[DOT] Node: '.'
       |     |  |  +-[DOT] Node: '.'
       |     |  |  |  +-[IDENT] Node: 'org'
       |     |  |  |  \-[IDENT] Node: 'example'
       |     |  |  \-[IDENT] Node: 'models'
       |     |  \-[IDENT] Node: 'Author'
       |     \-[ALIAS] Node: 'generatedAlias0'
       \-[SELECT] Node: 'select'
          \-[IDENT] Node: 'generatedAlias0'

DEBUG 2022-09-06 22:46:05,194 [main][ErrorCounter.java:95] : throwQueryException() : no errors
DEBUG 2022-09-06 22:46:05,204 [main][HqlSqlBaseWalker.java:124] : select << begin [level=1, statement=select]
DEBUG 2022-09-06 22:46:05,209 [main][FromElement.java:148] : FromClause{level=1} : org.example.models.Author (generatedAlias0) -> author0_
DEBUG 2022-09-06 22:46:05,210 [main][FromReferenceNode.java:60] : Resolved : generatedAlias0 -> author0_.id
DEBUG 2022-09-06 22:46:05,210 [main][HqlSqlBaseWalker.java:128] : select : finishing up [level=1, statement=select]
DEBUG 2022-09-06 22:46:05,211 [main][HqlSqlWalker.java:725] : processQuery() :  ( SELECT ( {select clause} author0_.id ) ( FromClause{level=1} Author author0_ ) )
DEBUG 2022-09-06 22:46:05,215 [main][JoinProcessor.java:169] : Using FROM fragment [Author author0_]
DEBUG 2022-09-06 22:46:05,215 [main][HqlSqlBaseWalker.java:132] : select >> end [level=1, statement=select]
DEBUG 2022-09-06 22:46:05,215 [main][QueryTranslatorImpl.java:265] : --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (Author)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'author0_.id as id1_0_' {alias=generatedAlias0, className=org.example.models.Author, tableAlias=author0_}
    |  \-[SQL_TOKEN] SqlFragment: 'author0_.name as name2_0_, author0_.salary as salary3_0_'
    \-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[author0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'Author author0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=Author,tableAlias=author0_,origin=null,columns={,className=org.example.models.Author}}

DEBUG 2022-09-06 22:46:05,215 [main][ErrorCounter.java:95] : throwQueryException() : no errors
DEBUG 2022-09-06 22:46:05,218 [main][QueryTranslatorImpl.java:247] : HQL: select generatedAlias0 from org.example.models.Author as generatedAlias0
DEBUG 2022-09-06 22:46:05,218 [main][QueryTranslatorImpl.java:248] : SQL: select author0_.id as id1_0_, author0_.name as name2_0_, author0_.salary as salary3_0_ from Author author0_
DEBUG 2022-09-06 22:46:05,218 [main][ErrorCounter.java:95] : throwQueryException() : no errors
DEBUG 2022-09-06 22:46:05,225 [main][SqlStatementLogger.java:92] : select author0_.id as id1_0_, author0_.name as name2_0_, author0_.salary as salary3_0_ from Author author0_
DEBUG 2022-09-06 22:46:05,227 [main][DelegatingBasicLogger.java:384] : Result set row: 0
DEBUG 2022-09-06 22:46:05,229 [main][Loader.java:1527] : Result row: EntityKey[org.example.models.Author#1]
DEBUG 2022-09-06 22:46:05,231 [main][DelegatingBasicLogger.java:384] : Result set row: 1
DEBUG 2022-09-06 22:46:05,231 [main][Loader.java:1527] : Result row: EntityKey[org.example.models.Author#2]
DEBUG 2022-09-06 22:46:05,232 [main][DelegatingBasicLogger.java:384] : Result set row: 2
DEBUG 2022-09-06 22:46:05,232 [main][Loader.java:1527] : Result row: EntityKey[org.example.models.Author#3]
DEBUG 2022-09-06 22:46:05,232 [main][DelegatingBasicLogger.java:384] : Result set row: 3
DEBUG 2022-09-06 22:46:05,232 [main][Loader.java:1527] : Result row: EntityKey[org.example.models.Author#4]
DEBUG 2022-09-06 22:46:05,232 [main][DelegatingBasicLogger.java:384] : Result set row: 4
DEBUG 2022-09-06 22:46:05,232 [main][Loader.java:1527] : Result row: EntityKey[org.example.models.Author#5]
DEBUG 2022-09-06 22:46:05,233 [main][TwoPhaseLoad.java:141] : Resolving associations for [org.example.models.Author#1]
DEBUG 2022-09-06 22:46:05,233 [main][TwoPhaseLoad.java:267] : Done materializing entity [org.example.models.Author#1]
DEBUG 2022-09-06 22:46:05,233 [main][TwoPhaseLoad.java:141] : Resolving associations for [org.example.models.Author#2]
DEBUG 2022-09-06 22:46:05,233 [main][TwoPhaseLoad.java:267] : Done materializing entity [org.example.models.Author#2]
DEBUG 2022-09-06 22:46:05,234 [main][TwoPhaseLoad.java:141] : Resolving associations for [org.example.models.Author#3]
DEBUG 2022-09-06 22:46:05,234 [main][TwoPhaseLoad.java:267] : Done materializing entity [org.example.models.Author#3]
DEBUG 2022-09-06 22:46:05,234 [main][TwoPhaseLoad.java:141] : Resolving associations for [org.example.models.Author#4]
DEBUG 2022-09-06 22:46:05,234 [main][TwoPhaseLoad.java:267] : Done materializing entity [org.example.models.Author#4]
DEBUG 2022-09-06 22:46:05,234 [main][TwoPhaseLoad.java:141] : Resolving associations for [org.example.models.Author#5]
DEBUG 2022-09-06 22:46:05,234 [main][TwoPhaseLoad.java:267] : Done materializing entity [org.example.models.Author#5]
DEBUG 2022-09-06 22:46:05,235 [main][LogicalConnectionManagedImpl.java:154] : Initiating JDBC connection release from afterTransaction
DEBUG 2022-09-06 22:46:05,249 [main][SqlStatementLogger.java:92] : SELECT * FROM Author
DEBUG 2022-09-06 22:46:05,251 [main][DelegatingBasicLogger.java:384] : Result set row: 0
DEBUG 2022-09-06 22:46:05,251 [main][Loader.java:1527] : Result row: EntityKey[org.example.models.Author#1]
DEBUG 2022-09-06 22:46:05,251 [main][DelegatingBasicLogger.java:384] : Result set row: 1
DEBUG 2022-09-06 22:46:05,251 [main][Loader.java:1527] : Result row: EntityKey[org.example.models.Author#2]
DEBUG 2022-09-06 22:46:05,252 [main][DelegatingBasicLogger.java:384] : Result set row: 2
DEBUG 2022-09-06 22:46:05,252 [main][Loader.java:1527] : Result row: EntityKey[org.example.models.Author#3]
DEBUG 2022-09-06 22:46:05,252 [main][DelegatingBasicLogger.java:384] : Result set row: 3
DEBUG 2022-09-06 22:46:05,252 [main][Loader.java:1527] : Result row: EntityKey[org.example.models.Author#4]
DEBUG 2022-09-06 22:46:05,252 [main][DelegatingBasicLogger.java:384] : Result set row: 4
DEBUG 2022-09-06 22:46:05,252 [main][Loader.java:1527] : Result row: EntityKey[org.example.models.Author#5]
DEBUG 2022-09-06 22:46:05,253 [main][TwoPhaseLoad.java:141] : Resolving associations for [org.example.models.Author#1]
DEBUG 2022-09-06 22:46:05,253 [main][TwoPhaseLoad.java:267] : Done materializing entity [org.example.models.Author#1]
DEBUG 2022-09-06 22:46:05,253 [main][TwoPhaseLoad.java:141] : Resolving associations for [org.example.models.Author#2]
DEBUG 2022-09-06 22:46:05,253 [main][TwoPhaseLoad.java:267] : Done materializing entity [org.example.models.Author#2]
DEBUG 2022-09-06 22:46:05,253 [main][TwoPhaseLoad.java:141] : Resolving associations for [org.example.models.Author#3]
DEBUG 2022-09-06 22:46:05,253 [main][TwoPhaseLoad.java:267] : Done materializing entity [org.example.models.Author#3]
DEBUG 2022-09-06 22:46:05,254 [main][TwoPhaseLoad.java:141] : Resolving associations for [org.example.models.Author#4]
DEBUG 2022-09-06 22:46:05,254 [main][TwoPhaseLoad.java:267] : Done materializing entity [org.example.models.Author#4]
DEBUG 2022-09-06 22:46:05,254 [main][TwoPhaseLoad.java:141] : Resolving associations for [org.example.models.Author#5]
DEBUG 2022-09-06 22:46:05,254 [main][TwoPhaseLoad.java:267] : Done materializing entity [org.example.models.Author#5]
DEBUG 2022-09-06 22:46:05,254 [main][LogicalConnectionManagedImpl.java:154] : Initiating JDBC connection release from afterTransaction
DEBUG 2022-09-06 22:46:05,257 [main][SqlStatementLogger.java:92] : select author0_.id as id1_0_0_, author0_.name as name2_0_0_, author0_.salary as salary3_0_0_ from Author author0_ where author0_.id=?
DEBUG 2022-09-06 22:46:05,260 [main][ResultSetProcessorImpl.java:120] : Starting ResultSet row #0
DEBUG 2022-09-06 22:46:05,261 [main][EntityReferenceInitializerImpl.java:126] : On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
DEBUG 2022-09-06 22:46:05,261 [main][TwoPhaseLoad.java:141] : Resolving associations for [org.example.models.Author#2]
DEBUG 2022-09-06 22:46:05,261 [main][TwoPhaseLoad.java:267] : Done materializing entity [org.example.models.Author#2]
DEBUG 2022-09-06 22:46:05,262 [main][ResourceRegistryStandardImpl.java:73] : HHH000387: ResultSet's statement was not registered
DEBUG 2022-09-06 22:46:05,262 [main][AbstractLoadPlanBasedEntityLoader.java:189] : Done entity load : org.example.models.Author#2
DEBUG 2022-09-06 22:46:05,262 [main][LogicalConnectionManagedImpl.java:154] : Initiating JDBC connection release from afterTransaction
DEBUG 2022-09-06 22:46:05,265 [main][QueryTranslatorImpl.java:278] : parse() - HQL: select a from org.example.models.Author a where a.salary between :minSalary and :maxSalary
DEBUG 2022-09-06 22:46:05,266 [main][QueryTranslatorImpl.java:296] : --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[IDENT] Node: 'org'
    |  |     |  |  |  \-[IDENT] Node: 'example'
    |  |     |  |  \-[IDENT] Node: 'models'
    |  |     |  \-[IDENT] Node: 'Author'
    |  |     \-[ALIAS] Node: 'a'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'a'
    \-[WHERE] Node: 'where'
       \-[BETWEEN] Node: 'between'
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'a'
          |  \-[IDENT] Node: 'salary'
          +-[COLON] Node: ':'
          |  \-[IDENT] Node: 'minSalary'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'maxSalary'

DEBUG 2022-09-06 22:46:05,266 [main][ErrorCounter.java:95] : throwQueryException() : no errors
DEBUG 2022-09-06 22:46:05,267 [main][HqlSqlBaseWalker.java:124] : select << begin [level=1, statement=select]
DEBUG 2022-09-06 22:46:05,267 [main][FromElement.java:148] : FromClause{level=1} : org.example.models.Author (a) -> author0_
DEBUG 2022-09-06 22:46:05,268 [main][FromReferenceNode.java:60] : Resolved : a -> author0_.id
DEBUG 2022-09-06 22:46:05,269 [main][FromReferenceNode.java:60] : Resolved : a -> author0_.id
DEBUG 2022-09-06 22:46:05,270 [main][DotNode.java:661] : getDataType() : salary -> org.hibernate.type.IntegerType@2494b617
DEBUG 2022-09-06 22:46:05,270 [main][FromReferenceNode.java:60] : Resolved : a.salary -> author0_.salary
DEBUG 2022-09-06 22:46:05,271 [main][HqlSqlBaseWalker.java:128] : select : finishing up [level=1, statement=select]
DEBUG 2022-09-06 22:46:05,271 [main][HqlSqlWalker.java:725] : processQuery() :  ( SELECT ( {select clause} author0_.id ) ( FromClause{level=1} Author author0_ ) ( where ( between ( author0_.salary author0_.id salary ) ? ? ) ) )
DEBUG 2022-09-06 22:46:05,271 [main][JoinProcessor.java:169] : Using FROM fragment [Author author0_]
DEBUG 2022-09-06 22:46:05,271 [main][HqlSqlBaseWalker.java:132] : select >> end [level=1, statement=select]
DEBUG 2022-09-06 22:46:05,272 [main][QueryTranslatorImpl.java:265] : --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (Author)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'author0_.id as id1_0_' {alias=a, className=org.example.models.Author, tableAlias=author0_}
    |  \-[SQL_TOKEN] SqlFragment: 'author0_.name as name2_0_, author0_.salary as salary3_0_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[a], fromElementByTableAlias=[author0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'Author author0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=a,role=null,tableName=Author,tableAlias=author0_,origin=null,columns={,className=org.example.models.Author}}
    \-[WHERE] SqlNode: 'where'
       \-[BETWEEN] BetweenOperatorNode: 'between'
          +-[DOT] DotNode: 'author0_.salary' {propertyName=salary,dereferenceType=PRIMITIVE,getPropertyPath=salary,path=a.salary,tableAlias=author0_,className=org.example.models.Author,classAlias=a}
          |  +-[ALIAS_REF] IdentNode: 'author0_.id' {alias=a, className=org.example.models.Author, tableAlias=author0_}
          |  \-[IDENT] IdentNode: 'salary' {originalText=salary}
          +-[NAMED_PARAM] ParameterNode: '?' {name=minSalary, expectedType=org.hibernate.type.IntegerType@2494b617}
          \-[NAMED_PARAM] ParameterNode: '?' {name=maxSalary, expectedType=org.hibernate.type.IntegerType@2494b617}

DEBUG 2022-09-06 22:46:05,272 [main][ErrorCounter.java:95] : throwQueryException() : no errors
DEBUG 2022-09-06 22:46:05,272 [main][QueryTranslatorImpl.java:247] : HQL: select a from org.example.models.Author a where a.salary between :minSalary and :maxSalary
DEBUG 2022-09-06 22:46:05,273 [main][QueryTranslatorImpl.java:248] : SQL: select author0_.id as id1_0_, author0_.name as name2_0_, author0_.salary as salary3_0_ from Author author0_ where author0_.salary between ? and ?
DEBUG 2022-09-06 22:46:05,273 [main][ErrorCounter.java:95] : throwQueryException() : no errors
DEBUG 2022-09-06 22:46:05,274 [main][SqlStatementLogger.java:92] : select author0_.id as id1_0_, author0_.name as name2_0_, author0_.salary as salary3_0_ from Author author0_ where author0_.salary between ? and ?
DEBUG 2022-09-06 22:46:05,276 [main][DelegatingBasicLogger.java:384] : Result set row: 0
DEBUG 2022-09-06 22:46:05,276 [main][Loader.java:1527] : Result row: EntityKey[org.example.models.Author#5]
DEBUG 2022-09-06 22:46:05,277 [main][TwoPhaseLoad.java:141] : Resolving associations for [org.example.models.Author#5]
DEBUG 2022-09-06 22:46:05,277 [main][TwoPhaseLoad.java:267] : Done materializing entity [org.example.models.Author#5]
DEBUG 2022-09-06 22:46:05,277 [main][LogicalConnectionManagedImpl.java:154] : Initiating JDBC connection release from afterTransaction
DEBUG 2022-09-06 22:46:05,278 [main][SqlStatementLogger.java:92] : select author0_.id as id1_0_0_, author0_.name as name2_0_0_, author0_.salary as salary3_0_0_ from Author author0_ where author0_.id=?
DEBUG 2022-09-06 22:46:05,280 [main][ResultSetProcessorImpl.java:120] : Starting ResultSet row #0
DEBUG 2022-09-06 22:46:05,280 [main][EntityReferenceInitializerImpl.java:126] : On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
DEBUG 2022-09-06 22:46:05,281 [main][TwoPhaseLoad.java:141] : Resolving associations for [org.example.models.Author#2]
DEBUG 2022-09-06 22:46:05,281 [main][TwoPhaseLoad.java:267] : Done materializing entity [org.example.models.Author#2]
DEBUG 2022-09-06 22:46:05,281 [main][ResourceRegistryStandardImpl.java:73] : HHH000387: ResultSet's statement was not registered
DEBUG 2022-09-06 22:46:05,281 [main][AbstractLoadPlanBasedEntityLoader.java:189] : Done entity load : org.example.models.Author#2
DEBUG 2022-09-06 22:46:05,281 [main][LogicalConnectionManagedImpl.java:154] : Initiating JDBC connection release from afterTransaction
DEBUG 2022-09-06 22:46:05,281 [main][TransactionImpl.java:55] : begin
DEBUG 2022-09-06 22:46:05,282 [main][TransactionImpl.java:66] : committing
DEBUG 2022-09-06 22:46:05,282 [main][AbstractFlushingEventListener.java:132] : Processing flush-time cascades
DEBUG 2022-09-06 22:46:05,283 [main][AbstractFlushingEventListener.java:174] : Dirty checking collections
DEBUG 2022-09-06 22:46:05,283 [main][AbstractFlushingEventListener.java:106] : Flushed: 0 insertions, 1 updates, 0 deletions to 1 objects
DEBUG 2022-09-06 22:46:05,284 [main][AbstractFlushingEventListener.java:113] : Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
DEBUG 2022-09-06 22:46:05,284 [main][EntityPrinter.java:102] : Listing entities:
DEBUG 2022-09-06 22:46:05,284 [main][EntityPrinter.java:109] : org.example.models.Author{name=Ihor Kosolapow, id=2, salary=4280}
DEBUG 2022-09-06 22:46:05,288 [main][SqlStatementLogger.java:92] : update Author set name=? where id=?
DEBUG 2022-09-06 22:46:05,291 [main][LogicalConnectionManagedImpl.java:154] : Initiating JDBC connection release from afterTransaction
DEBUG 2022-09-06 22:46:05,291 [main][LogicalConnectionManagedImpl.java:154] : Initiating JDBC connection release from afterTransaction
DEBUG 2022-09-06 22:46:05,291 [main][JdbcCoordinatorImpl.java:177] : HHH000420: Closing un-released batch
DEBUG 2022-09-06 22:46:05,292 [main][SqlStatementLogger.java:92] : select author0_.id as id1_0_0_, author0_.name as name2_0_0_, author0_.salary as salary3_0_0_ from Author author0_ where author0_.id=?
DEBUG 2022-09-06 22:46:05,294 [main][ResultSetProcessorImpl.java:120] : Starting ResultSet row #0
DEBUG 2022-09-06 22:46:05,294 [main][EntityReferenceInitializerImpl.java:126] : On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
DEBUG 2022-09-06 22:46:05,294 [main][TwoPhaseLoad.java:141] : Resolving associations for [org.example.models.Author#2]
DEBUG 2022-09-06 22:46:05,294 [main][TwoPhaseLoad.java:267] : Done materializing entity [org.example.models.Author#2]
DEBUG 2022-09-06 22:46:05,294 [main][ResourceRegistryStandardImpl.java:73] : HHH000387: ResultSet's statement was not registered
DEBUG 2022-09-06 22:46:05,295 [main][AbstractLoadPlanBasedEntityLoader.java:189] : Done entity load : org.example.models.Author#2
DEBUG 2022-09-06 22:46:05,295 [main][LogicalConnectionManagedImpl.java:154] : Initiating JDBC connection release from afterTransaction
WARN  2022-09-08 17:47:08,880 [main][Main.java:16] : TEST
DEBUG 2022-09-08 17:47:08,943 [main][CoreLogging.java:28] : Logging Provider: org.jboss.logging.Log4jLoggerProvider
DEBUG 2022-09-08 17:47:08,957 [main][IntegratorServiceImpl.java:46] : Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
DEBUG 2022-09-08 17:47:08,960 [main][IntegratorServiceImpl.java:46] : Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
DEBUG 2022-09-08 17:47:08,965 [main][IntegratorServiceImpl.java:46] : Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
INFO  2022-09-08 17:47:09,049 [main][Version.java:45] : HHH000412: Hibernate Core {5.2.2.Final}
INFO  2022-09-08 17:47:09,051 [main][Environment.java:213] : HHH000206: hibernate.properties not found
INFO  2022-09-08 17:47:09,053 [main][Environment.java:318] : HHH000021: Bytecode provider name : javassist
DEBUG 2022-09-08 17:47:09,081 [main][LocalXmlResourceResolver.java:57] : Interpreting public/system identifier : [null] - [http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd]
DEBUG 2022-09-08 17:47:09,082 [main][LocalXmlResourceResolver.java:85] : Recognized hibernate-configuration identifier; attempting to resolve on classpath under org/hibernate/
DEBUG 2022-09-08 17:47:09,088 [main][JaxbCfgProcessor.java:116] : cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
DEBUG 2022-09-08 17:47:09,387 [main][Configuration.java:724] : Building session factory using internal StandardServiceRegistryBuilder
DEBUG 2022-09-08 17:47:09,392 [main][ServiceBinding.java:68] : Overriding existing service binding [org.hibernate.secure.spi.JaccService]
DEBUG 2022-09-08 17:47:09,393 [main][Configuration.java:652] : Building session factory using provided StandardServiceRegistry
DEBUG 2022-09-08 17:47:09,404 [main][RegionFactoryInitiator.java:75] : Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
INFO  2022-09-08 17:47:09,411 [main][JavaReflectionManager.java:66] : HCANN000001: Hibernate Commons Annotations {5.0.1.Final}
DEBUG 2022-09-08 17:47:09,428 [main][BasicTypeRegistry.java:145] : Adding type registration boolean -> org.hibernate.type.BooleanType@c7a5edc1
DEBUG 2022-09-08 17:47:09,429 [main][BasicTypeRegistry.java:145] : Adding type registration boolean -> org.hibernate.type.BooleanType@c7a5edc1
DEBUG 2022-09-08 17:47:09,430 [main][BasicTypeRegistry.java:145] : Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@c7a5edc1
DEBUG 2022-09-08 17:47:09,432 [main][BasicTypeRegistry.java:145] : Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@378f1dcb
DEBUG 2022-09-08 17:47:09,433 [main][BasicTypeRegistry.java:145] : Adding type registration true_false -> org.hibernate.type.TrueFalseType@c3efea69
DEBUG 2022-09-08 17:47:09,434 [main][BasicTypeRegistry.java:145] : Adding type registration yes_no -> org.hibernate.type.YesNoType@8d1bb0d
DEBUG 2022-09-08 17:47:09,435 [main][BasicTypeRegistry.java:145] : Adding type registration byte -> org.hibernate.type.ByteType@d1c9309a
DEBUG 2022-09-08 17:47:09,436 [main][BasicTypeRegistry.java:145] : Adding type registration byte -> org.hibernate.type.ByteType@d1c9309a
DEBUG 2022-09-08 17:47:09,436 [main][BasicTypeRegistry.java:145] : Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@d1c9309a
DEBUG 2022-09-08 17:47:09,437 [main][BasicTypeRegistry.java:145] : Adding type registration character -> org.hibernate.type.CharacterType@64c39962
DEBUG 2022-09-08 17:47:09,438 [main][BasicTypeRegistry.java:145] : Adding type registration char -> org.hibernate.type.CharacterType@64c39962
DEBUG 2022-09-08 17:47:09,439 [main][BasicTypeRegistry.java:145] : Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@64c39962
DEBUG 2022-09-08 17:47:09,440 [main][BasicTypeRegistry.java:145] : Adding type registration short -> org.hibernate.type.ShortType@7c7127c5
DEBUG 2022-09-08 17:47:09,441 [main][BasicTypeRegistry.java:145] : Adding type registration short -> org.hibernate.type.ShortType@7c7127c5
DEBUG 2022-09-08 17:47:09,441 [main][BasicTypeRegistry.java:145] : Adding type registration java.lang.Short -> org.hibernate.type.ShortType@7c7127c5
DEBUG 2022-09-08 17:47:09,445 [main][BasicTypeRegistry.java:145] : Adding type registration integer -> org.hibernate.type.IntegerType@1730bd2d
DEBUG 2022-09-08 17:47:09,446 [main][BasicTypeRegistry.java:145] : Adding type registration int -> org.hibernate.type.IntegerType@1730bd2d
DEBUG 2022-09-08 17:47:09,446 [main][BasicTypeRegistry.java:145] : Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@1730bd2d
DEBUG 2022-09-08 17:47:09,449 [main][BasicTypeRegistry.java:145] : Adding type registration long -> org.hibernate.type.LongType@653d67d0
DEBUG 2022-09-08 17:47:09,450 [main][BasicTypeRegistry.java:145] : Adding type registration long -> org.hibernate.type.LongType@653d67d0
DEBUG 2022-09-08 17:47:09,450 [main][BasicTypeRegistry.java:145] : Adding type registration java.lang.Long -> org.hibernate.type.LongType@653d67d0
DEBUG 2022-09-08 17:47:09,452 [main][BasicTypeRegistry.java:145] : Adding type registration float -> org.hibernate.type.FloatType@544751c0
DEBUG 2022-09-08 17:47:09,452 [main][BasicTypeRegistry.java:145] : Adding type registration float -> org.hibernate.type.FloatType@544751c0
DEBUG 2022-09-08 17:47:09,453 [main][BasicTypeRegistry.java:145] : Adding type registration java.lang.Float -> org.hibernate.type.FloatType@544751c0
DEBUG 2022-09-08 17:47:09,454 [main][BasicTypeRegistry.java:145] : Adding type registration double -> org.hibernate.type.DoubleType@fe626d5
DEBUG 2022-09-08 17:47:09,455 [main][BasicTypeRegistry.java:145] : Adding type registration double -> org.hibernate.type.DoubleType@fe626d5
DEBUG 2022-09-08 17:47:09,455 [main][BasicTypeRegistry.java:145] : Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@fe626d5
DEBUG 2022-09-08 17:47:09,458 [main][BasicTypeRegistry.java:145] : Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@6ef3a1f7
DEBUG 2022-09-08 17:47:09,458 [main][BasicTypeRegistry.java:145] : Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@6ef3a1f7
DEBUG 2022-09-08 17:47:09,459 [main][BasicTypeRegistry.java:145] : Adding type registration big_integer -> org.hibernate.type.BigIntegerType@e7f7bdff
DEBUG 2022-09-08 17:47:09,460 [main][BasicTypeRegistry.java:145] : Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@e7f7bdff
DEBUG 2022-09-08 17:47:09,461 [main][BasicTypeRegistry.java:145] : Adding type registration string -> org.hibernate.type.StringType@6689042f
DEBUG 2022-09-08 17:47:09,462 [main][BasicTypeRegistry.java:145] : Adding type registration java.lang.String -> org.hibernate.type.StringType@6689042f
DEBUG 2022-09-08 17:47:09,462 [main][BasicTypeRegistry.java:145] : Adding type registration nstring -> org.hibernate.type.StringNVarcharType@39998609
DEBUG 2022-09-08 17:47:09,463 [main][BasicTypeRegistry.java:145] : Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@299a098b
DEBUG 2022-09-08 17:47:09,464 [main][BasicTypeRegistry.java:145] : Adding type registration url -> org.hibernate.type.UrlType@a23a8f40
DEBUG 2022-09-08 17:47:09,464 [main][BasicTypeRegistry.java:145] : Adding type registration java.net.URL -> org.hibernate.type.UrlType@a23a8f40
DEBUG 2022-09-08 17:47:09,466 [main][BasicTypeRegistry.java:145] : Adding type registration Duration -> org.hibernate.type.DurationType@cbf53267
DEBUG 2022-09-08 17:47:09,466 [main][BasicTypeRegistry.java:145] : Adding type registration java.time.Duration -> org.hibernate.type.DurationType@cbf53267
DEBUG 2022-09-08 17:47:09,472 [main][BasicTypeRegistry.java:145] : Adding type registration Instant -> org.hibernate.type.InstantType@f56e354d
DEBUG 2022-09-08 17:47:09,473 [main][BasicTypeRegistry.java:145] : Adding type registration java.time.Instant -> org.hibernate.type.InstantType@f56e354d
DEBUG 2022-09-08 17:47:09,475 [main][BasicTypeRegistry.java:145] : Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@b907bc8a
DEBUG 2022-09-08 17:47:09,476 [main][BasicTypeRegistry.java:145] : Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@b907bc8a
DEBUG 2022-09-08 17:47:09,477 [main][BasicTypeRegistry.java:145] : Adding type registration LocalDate -> org.hibernate.type.LocalDateType@d3541d28
DEBUG 2022-09-08 17:47:09,478 [main][BasicTypeRegistry.java:145] : Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@d3541d28
DEBUG 2022-09-08 17:47:09,479 [main][BasicTypeRegistry.java:145] : Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@cfd70c72
DEBUG 2022-09-08 17:47:09,480 [main][BasicTypeRegistry.java:145] : Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@cfd70c72
DEBUG 2022-09-08 17:47:09,481 [main][BasicTypeRegistry.java:145] : Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@12a6e558
DEBUG 2022-09-08 17:47:09,481 [main][BasicTypeRegistry.java:145] : Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@12a6e558
DEBUG 2022-09-08 17:47:09,482 [main][BasicTypeRegistry.java:145] : Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@c1015758
DEBUG 2022-09-08 17:47:09,483 [main][BasicTypeRegistry.java:145] : Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@c1015758
DEBUG 2022-09-08 17:47:09,484 [main][BasicTypeRegistry.java:145] : Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@6cc93476
DEBUG 2022-09-08 17:47:09,484 [main][BasicTypeRegistry.java:145] : Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@6cc93476
DEBUG 2022-09-08 17:47:09,486 [main][BasicTypeRegistry.java:145] : Adding type registration date -> org.hibernate.type.DateType@f070fef2
DEBUG 2022-09-08 17:47:09,486 [main][BasicTypeRegistry.java:145] : Adding type registration java.sql.Date -> org.hibernate.type.DateType@f070fef2
DEBUG 2022-09-08 17:47:09,487 [main][BasicTypeRegistry.java:145] : Adding type registration time -> org.hibernate.type.TimeType@34c70ccd
DEBUG 2022-09-08 17:47:09,487 [main][BasicTypeRegistry.java:145] : Adding type registration java.sql.Time -> org.hibernate.type.TimeType@34c70ccd
DEBUG 2022-09-08 17:47:09,488 [main][BasicTypeRegistry.java:145] : Adding type registration timestamp -> org.hibernate.type.TimestampType@b8b342fa
DEBUG 2022-09-08 17:47:09,489 [main][BasicTypeRegistry.java:145] : Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@b8b342fa
DEBUG 2022-09-08 17:47:09,489 [main][BasicTypeRegistry.java:145] : Adding type registration java.util.Date -> org.hibernate.type.TimestampType@b8b342fa
DEBUG 2022-09-08 17:47:09,491 [main][BasicTypeRegistry.java:145] : Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@8468580
DEBUG 2022-09-08 17:47:09,493 [main][BasicTypeRegistry.java:145] : Adding type registration calendar -> org.hibernate.type.CalendarType@6cfe1156
DEBUG 2022-09-08 17:47:09,493 [main][BasicTypeRegistry.java:145] : Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@6cfe1156
DEBUG 2022-09-08 17:47:09,493 [main][BasicTypeRegistry.java:145] : Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@6cfe1156
DEBUG 2022-09-08 17:47:09,494 [main][BasicTypeRegistry.java:145] : Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@52d48165
DEBUG 2022-09-08 17:47:09,495 [main][BasicTypeRegistry.java:145] : Adding type registration locale -> org.hibernate.type.LocaleType@2397c75
DEBUG 2022-09-08 17:47:09,495 [main][BasicTypeRegistry.java:145] : Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@2397c75
DEBUG 2022-09-08 17:47:09,497 [main][BasicTypeRegistry.java:145] : Adding type registration currency -> org.hibernate.type.CurrencyType@1609c0a3
DEBUG 2022-09-08 17:47:09,498 [main][BasicTypeRegistry.java:145] : Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@1609c0a3
DEBUG 2022-09-08 17:47:09,499 [main][BasicTypeRegistry.java:145] : Adding type registration timezone -> org.hibernate.type.TimeZoneType@6956737e
DEBUG 2022-09-08 17:47:09,499 [main][BasicTypeRegistry.java:145] : Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@6956737e
DEBUG 2022-09-08 17:47:09,500 [main][BasicTypeRegistry.java:145] : Adding type registration class -> org.hibernate.type.ClassType@d5829de4
DEBUG 2022-09-08 17:47:09,500 [main][BasicTypeRegistry.java:145] : Adding type registration java.lang.Class -> org.hibernate.type.ClassType@d5829de4
DEBUG 2022-09-08 17:47:09,501 [main][BasicTypeRegistry.java:145] : Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@228b6e30
DEBUG 2022-09-08 17:47:09,501 [main][BasicTypeRegistry.java:145] : Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@228b6e30
DEBUG 2022-09-08 17:47:09,501 [main][BasicTypeRegistry.java:145] : Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@77fc068f
DEBUG 2022-09-08 17:47:09,502 [main][BasicTypeRegistry.java:145] : Adding type registration binary -> org.hibernate.type.BinaryType@999ea0a3
DEBUG 2022-09-08 17:47:09,502 [main][BasicTypeRegistry.java:145] : Adding type registration byte[] -> org.hibernate.type.BinaryType@999ea0a3
DEBUG 2022-09-08 17:47:09,503 [main][BasicTypeRegistry.java:145] : Adding type registration [B -> org.hibernate.type.BinaryType@999ea0a3
DEBUG 2022-09-08 17:47:09,503 [main][BasicTypeRegistry.java:145] : Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@31412044
DEBUG 2022-09-08 17:47:09,504 [main][BasicTypeRegistry.java:145] : Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@31412044
DEBUG 2022-09-08 17:47:09,504 [main][BasicTypeRegistry.java:145] : Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@31412044
DEBUG 2022-09-08 17:47:09,505 [main][BasicTypeRegistry.java:145] : Adding type registration row_version -> org.hibernate.type.RowVersionType@37d93368
DEBUG 2022-09-08 17:47:09,506 [main][BasicTypeRegistry.java:145] : Adding type registration image -> org.hibernate.type.ImageType@e894288f
DEBUG 2022-09-08 17:47:09,506 [main][BasicTypeRegistry.java:145] : Adding type registration characters -> org.hibernate.type.CharArrayType@d5a83ab6
DEBUG 2022-09-08 17:47:09,507 [main][BasicTypeRegistry.java:145] : Adding type registration char[] -> org.hibernate.type.CharArrayType@d5a83ab6
DEBUG 2022-09-08 17:47:09,507 [main][BasicTypeRegistry.java:145] : Adding type registration [C -> org.hibernate.type.CharArrayType@d5a83ab6
DEBUG 2022-09-08 17:47:09,508 [main][BasicTypeRegistry.java:145] : Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@ac8ff6dc
DEBUG 2022-09-08 17:47:09,508 [main][BasicTypeRegistry.java:145] : Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@ac8ff6dc
DEBUG 2022-09-08 17:47:09,508 [main][BasicTypeRegistry.java:145] : Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@ac8ff6dc
DEBUG 2022-09-08 17:47:09,509 [main][BasicTypeRegistry.java:145] : Adding type registration text -> org.hibernate.type.TextType@61743f95
DEBUG 2022-09-08 17:47:09,510 [main][BasicTypeRegistry.java:145] : Adding type registration ntext -> org.hibernate.type.NTextType@99339a9b
DEBUG 2022-09-08 17:47:09,514 [main][BasicTypeRegistry.java:145] : Adding type registration blob -> org.hibernate.type.BlobType@bbc23e64
DEBUG 2022-09-08 17:47:09,514 [main][BasicTypeRegistry.java:145] : Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@bbc23e64
DEBUG 2022-09-08 17:47:09,515 [main][BasicTypeRegistry.java:145] : Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@5fd6dc3a
DEBUG 2022-09-08 17:47:09,516 [main][BasicTypeRegistry.java:145] : Adding type registration clob -> org.hibernate.type.ClobType@a5534db6
DEBUG 2022-09-08 17:47:09,517 [main][BasicTypeRegistry.java:145] : Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@a5534db6
DEBUG 2022-09-08 17:47:09,520 [main][BasicTypeRegistry.java:145] : Adding type registration nclob -> org.hibernate.type.NClobType@e859e0cf
DEBUG 2022-09-08 17:47:09,520 [main][BasicTypeRegistry.java:145] : Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@e859e0cf
DEBUG 2022-09-08 17:47:09,520 [main][BasicTypeRegistry.java:145] : Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@7382a407
DEBUG 2022-09-08 17:47:09,521 [main][BasicTypeRegistry.java:145] : Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@2dc84c10
DEBUG 2022-09-08 17:47:09,522 [main][BasicTypeRegistry.java:145] : Adding type registration serializable -> org.hibernate.type.SerializableType@e48e3762
DEBUG 2022-09-08 17:47:09,524 [main][BasicTypeRegistry.java:145] : Adding type registration object -> org.hibernate.type.ObjectType@49893995
DEBUG 2022-09-08 17:47:09,524 [main][BasicTypeRegistry.java:145] : Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@49893995
DEBUG 2022-09-08 17:47:09,524 [main][BasicTypeRegistry.java:145] : Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@f7119
DEBUG 2022-09-08 17:47:09,525 [main][BasicTypeRegistry.java:145] : Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@4a7eeed3
DEBUG 2022-09-08 17:47:09,525 [main][BasicTypeRegistry.java:145] : Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@33a178d2
DEBUG 2022-09-08 17:47:09,525 [main][BasicTypeRegistry.java:145] : Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@3ccd6039
DEBUG 2022-09-08 17:47:09,526 [main][BasicTypeRegistry.java:145] : Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@4d360dd3
DEBUG 2022-09-08 17:47:09,526 [main][BasicTypeRegistry.java:145] : Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@6253cf3e
DEBUG 2022-09-08 17:47:09,526 [main][BasicTypeRegistry.java:145] : Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@a0492351
DEBUG 2022-09-08 17:47:09,527 [main][BasicTypeRegistry.java:145] : Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@76eb2da8
WARN  2022-09-08 17:47:09,533 [main][DriverManagerConnectionProviderImpl.java:70] : HHH10001002: Using Hibernate built-in connection pool (not for production use!)
INFO  2022-09-08 17:47:09,540 [main][DriverManagerConnectionProviderImpl.java:126] : HHH10001005: using driver [com.mysql.cj.jdbc.Driver] at URL [jdbc:mysql://localhost:3306/classicmodels?serverTimezone=UTC]
INFO  2022-09-08 17:47:09,540 [main][DriverManagerConnectionProviderImpl.java:132] : HHH10001001: Connection properties: {password=rootroot, user=root}
INFO  2022-09-08 17:47:09,541 [main][DriverManagerConnectionProviderImpl.java:140] : HHH10001003: Autocommit mode: false
DEBUG 2022-09-08 17:47:09,544 [main][DelegatingBasicLogger.java:384] : Initializing Connection pool with 1 Connections
INFO  2022-09-08 17:47:09,544 [main][PooledConnections.java:41] : HHH000115: Hibernate connection pool size: 5 (min=1)
DEBUG 2022-09-08 17:47:10,011 [main][JdbcEnvironmentInitiator.java:72] : Database ->
       name : MySQL
    version : 8.0.29
      major : 8
      minor : 0
DEBUG 2022-09-08 17:47:10,011 [main][JdbcEnvironmentInitiator.java:83] : Driver ->
       name : MySQL Connector/J
    version : mysql-connector-java-8.0.29 (Revision: dd61577595edad45c398af508cf91ad26fc4144f)
      major : 8
      minor : 0
DEBUG 2022-09-08 17:47:10,012 [main][DelegatingBasicLogger.java:389] : JDBC version : 4.2
INFO  2022-09-08 17:47:10,021 [main][Dialect.java:153] : HHH000400: Using dialect: org.hibernate.dialect.MySQLDialect
DEBUG 2022-09-08 17:47:10,063 [main][IdentifierHelperBuilder.java:117] : JDBC driver metadata reported database stores quoted identifiers in more than one case
DEBUG 2022-09-08 17:47:10,065 [main][IdentifierHelperBuilder.java:191] : IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [MIXED]; that will likely lead to problems in schema update and validation if using quoted identifiers
DEBUG 2022-09-08 17:47:10,087 [main][DefaultIdentifierGeneratorFactory.java:81] : Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
DEBUG 2022-09-08 17:47:10,088 [main][DefaultIdentifierGeneratorFactory.java:81] : Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
DEBUG 2022-09-08 17:47:10,089 [main][DefaultIdentifierGeneratorFactory.java:81] : Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
DEBUG 2022-09-08 17:47:10,089 [main][DefaultIdentifierGeneratorFactory.java:81] : Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
DEBUG 2022-09-08 17:47:10,090 [main][DefaultIdentifierGeneratorFactory.java:81] : Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
DEBUG 2022-09-08 17:47:10,091 [main][DefaultIdentifierGeneratorFactory.java:81] : Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
DEBUG 2022-09-08 17:47:10,092 [main][DefaultIdentifierGeneratorFactory.java:81] : Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
DEBUG 2022-09-08 17:47:10,094 [main][DefaultIdentifierGeneratorFactory.java:81] : Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
DEBUG 2022-09-08 17:47:10,096 [main][DefaultIdentifierGeneratorFactory.java:81] : Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
DEBUG 2022-09-08 17:47:10,097 [main][DefaultIdentifierGeneratorFactory.java:81] : Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
DEBUG 2022-09-08 17:47:10,097 [main][DefaultIdentifierGeneratorFactory.java:81] : Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
DEBUG 2022-09-08 17:47:10,098 [main][DefaultIdentifierGeneratorFactory.java:81] : Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
DEBUG 2022-09-08 17:47:10,099 [main][DefaultIdentifierGeneratorFactory.java:81] : Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
DEBUG 2022-09-08 17:47:10,099 [main][DefaultIdentifierGeneratorFactory.java:81] : Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
DEBUG 2022-09-08 17:47:10,134 [main][Namespace.java:47] : Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
DEBUG 2022-09-08 17:47:10,150 [main][AnnotationBinder.java:511] : Binding entity from annotated class: org.example.models.Author
DEBUG 2022-09-08 17:47:10,160 [main][Ejb3Column.java:213] : Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
DEBUG 2022-09-08 17:47:10,163 [main][EntityBinder.java:416] : Import with entity name Author
DEBUG 2022-09-08 17:47:10,166 [main][EntityBinder.java:692] : Bind entity org.example.models.Author on table Author
DEBUG 2022-09-08 17:47:10,180 [main][Ejb3Column.java:213] : Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Author), mappingColumn=id, insertable=true, updatable=true, unique=false}
DEBUG 2022-09-08 17:47:10,182 [main][PropertyBinder.java:174] : MetadataSourceProcessor property id with lazy=false
DEBUG 2022-09-08 17:47:10,183 [main][AbstractPropertyHolder.java:89] : Attempting to locate auto-apply AttributeConverter for property [org.example.models.Author:id]
DEBUG 2022-09-08 17:47:10,183 [main][SimpleValueBinder.java:398] : building SimpleValue for id
DEBUG 2022-09-08 17:47:10,184 [main][PropertyBinder.java:265] : Building property id
DEBUG 2022-09-08 17:47:10,188 [main][Ejb3Column.java:213] : Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Author), mappingColumn=name, insertable=true, updatable=true, unique=false}
DEBUG 2022-09-08 17:47:10,189 [main][PropertyBinder.java:174] : MetadataSourceProcessor property name with lazy=false
DEBUG 2022-09-08 17:47:10,189 [main][AbstractPropertyHolder.java:89] : Attempting to locate auto-apply AttributeConverter for property [org.example.models.Author:name]
DEBUG 2022-09-08 17:47:10,190 [main][SimpleValueBinder.java:398] : building SimpleValue for name
DEBUG 2022-09-08 17:47:10,190 [main][PropertyBinder.java:265] : Building property name
DEBUG 2022-09-08 17:47:10,191 [main][Ejb3Column.java:213] : Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Author), mappingColumn=salary, insertable=true, updatable=true, unique=false}
DEBUG 2022-09-08 17:47:10,191 [main][PropertyBinder.java:174] : MetadataSourceProcessor property salary with lazy=false
DEBUG 2022-09-08 17:47:10,191 [main][AbstractPropertyHolder.java:89] : Attempting to locate auto-apply AttributeConverter for property [org.example.models.Author:salary]
DEBUG 2022-09-08 17:47:10,192 [main][SimpleValueBinder.java:398] : building SimpleValue for salary
DEBUG 2022-09-08 17:47:10,192 [main][PropertyBinder.java:265] : Building property salary
DEBUG 2022-09-08 17:47:10,193 [main][AnnotationBinder.java:511] : Binding entity from annotated class: org.example.models.Book
DEBUG 2022-09-08 17:47:10,193 [main][Ejb3Column.java:213] : Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
DEBUG 2022-09-08 17:47:10,194 [main][EntityBinder.java:416] : Import with entity name Book
DEBUG 2022-09-08 17:47:10,194 [main][EntityBinder.java:692] : Bind entity org.example.models.Book on table Book
DEBUG 2022-09-08 17:47:10,195 [main][Ejb3Column.java:213] : Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Book), mappingColumn=id, insertable=true, updatable=true, unique=false}
DEBUG 2022-09-08 17:47:10,195 [main][PropertyBinder.java:174] : MetadataSourceProcessor property id with lazy=false
DEBUG 2022-09-08 17:47:10,196 [main][AbstractPropertyHolder.java:89] : Attempting to locate auto-apply AttributeConverter for property [org.example.models.Book:id]
DEBUG 2022-09-08 17:47:10,197 [main][SimpleValueBinder.java:398] : building SimpleValue for id
DEBUG 2022-09-08 17:47:10,197 [main][PropertyBinder.java:265] : Building property id
DEBUG 2022-09-08 17:47:10,198 [main][Ejb3Column.java:213] : Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Book), mappingColumn=author_id, insertable=true, updatable=true, unique=false}
DEBUG 2022-09-08 17:47:10,198 [main][PropertyBinder.java:174] : MetadataSourceProcessor property author_id with lazy=false
DEBUG 2022-09-08 17:47:10,198 [main][AbstractPropertyHolder.java:89] : Attempting to locate auto-apply AttributeConverter for property [org.example.models.Book:author_id]
DEBUG 2022-09-08 17:47:10,199 [main][SimpleValueBinder.java:398] : building SimpleValue for author_id
DEBUG 2022-09-08 17:47:10,199 [main][PropertyBinder.java:265] : Building property author_id
DEBUG 2022-09-08 17:47:10,199 [main][Ejb3Column.java:213] : Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Book), mappingColumn=name, insertable=true, updatable=true, unique=false}
DEBUG 2022-09-08 17:47:10,199 [main][PropertyBinder.java:174] : MetadataSourceProcessor property name with lazy=false
DEBUG 2022-09-08 17:47:10,200 [main][AbstractPropertyHolder.java:89] : Attempting to locate auto-apply AttributeConverter for property [org.example.models.Book:name]
DEBUG 2022-09-08 17:47:10,200 [main][SimpleValueBinder.java:398] : building SimpleValue for name
DEBUG 2022-09-08 17:47:10,200 [main][PropertyBinder.java:265] : Building property name
DEBUG 2022-09-08 17:47:10,201 [main][SimpleValueBinder.java:443] : Starting fillSimpleValue for id
DEBUG 2022-09-08 17:47:10,202 [main][SimpleValueBinder.java:443] : Starting fillSimpleValue for name
DEBUG 2022-09-08 17:47:10,202 [main][SimpleValueBinder.java:443] : Starting fillSimpleValue for salary
DEBUG 2022-09-08 17:47:10,202 [main][SimpleValueBinder.java:443] : Starting fillSimpleValue for id
DEBUG 2022-09-08 17:47:10,202 [main][SimpleValueBinder.java:443] : Starting fillSimpleValue for author_id
DEBUG 2022-09-08 17:47:10,203 [main][SimpleValueBinder.java:443] : Starting fillSimpleValue for name
DEBUG 2022-09-08 17:47:10,204 [main][PrimaryKey.java:35] : Forcing column [id] to be non-null as it is part of the primary key for table [author]
DEBUG 2022-09-08 17:47:10,204 [main][PrimaryKey.java:35] : Forcing column [id] to be non-null as it is part of the primary key for table [book]
DEBUG 2022-09-08 17:47:10,241 [main][SessionFactoryImpl.java:197] : Building session factory
DEBUG 2022-09-08 17:47:10,242 [main][Settings.java:69] : SessionFactory name : null
DEBUG 2022-09-08 17:47:10,242 [main][Settings.java:70] : Automatic flush during beforeCompletion(): enabled
DEBUG 2022-09-08 17:47:10,242 [main][Settings.java:71] : Automatic session close at end of transaction: disabled
DEBUG 2022-09-08 17:47:10,243 [main][Settings.java:73] : Statistics: disabled
DEBUG 2022-09-08 17:47:10,243 [main][Settings.java:75] : Deleted entity synthetic identifier rollback: disabled
DEBUG 2022-09-08 17:47:10,243 [main][Settings.java:76] : Default entity-mode: pojo
DEBUG 2022-09-08 17:47:10,244 [main][Settings.java:77] : Check Nullability in Core (should be disabled when Bean Validation is on): enabled
DEBUG 2022-09-08 17:47:10,244 [main][Settings.java:78] : Allow initialization of lazy state outside session : disabled
DEBUG 2022-09-08 17:47:10,244 [main][Settings.java:80] : Using BatchFetchStyle : LEGACY
DEBUG 2022-09-08 17:47:10,245 [main][Settings.java:81] : Default batch fetch size: -1
DEBUG 2022-09-08 17:47:10,245 [main][Settings.java:82] : Maximum outer join fetch depth: 2
DEBUG 2022-09-08 17:47:10,245 [main][Settings.java:83] : Default null ordering: NONE
DEBUG 2022-09-08 17:47:10,245 [main][Settings.java:84] : Order SQL updates by primary key: disabled
DEBUG 2022-09-08 17:47:10,245 [main][Settings.java:85] : Order SQL inserts for batching: disabled
DEBUG 2022-09-08 17:47:10,246 [main][Settings.java:87] : multi-tenancy strategy : NONE
DEBUG 2022-09-08 17:47:10,246 [main][Settings.java:89] : JTA Track by Thread: enabled
DEBUG 2022-09-08 17:47:10,246 [main][Settings.java:91] : Query language substitutions: {}
DEBUG 2022-09-08 17:47:10,246 [main][Settings.java:92] : JPA query language strict compliance: disabled
DEBUG 2022-09-08 17:47:10,246 [main][Settings.java:93] : Named query checking : enabled
DEBUG 2022-09-08 17:47:10,247 [main][Settings.java:95] : Second-level cache: enabled
DEBUG 2022-09-08 17:47:10,247 [main][Settings.java:96] : Second-level query cache: disabled
DEBUG 2022-09-08 17:47:10,247 [main][Settings.java:97] : Second-level query cache factory: org.hibernate.cache.internal.StandardQueryCacheFactory@f51751a7
DEBUG 2022-09-08 17:47:10,247 [main][Settings.java:98] : Second-level cache region prefix: null
DEBUG 2022-09-08 17:47:10,248 [main][Settings.java:99] : Optimize second-level cache for minimal puts: disabled
DEBUG 2022-09-08 17:47:10,248 [main][Settings.java:100] : Structured second-level cache entries: disabled
DEBUG 2022-09-08 17:47:10,248 [main][Settings.java:101] : Second-level cache direct-reference entries: disabled
DEBUG 2022-09-08 17:47:10,248 [main][Settings.java:102] : Automatic eviction of collection cache: disabled
DEBUG 2022-09-08 17:47:10,249 [main][Settings.java:104] : JDBC batch size: 15
DEBUG 2022-09-08 17:47:10,249 [main][Settings.java:105] : JDBC batch updates for versioned data: enabled
DEBUG 2022-09-08 17:47:10,249 [main][Settings.java:106] : Scrollable result sets: enabled
DEBUG 2022-09-08 17:47:10,249 [main][Settings.java:107] : Wrap result sets: disabled
DEBUG 2022-09-08 17:47:10,249 [main][Settings.java:108] : JDBC3 getGeneratedKeys(): enabled
DEBUG 2022-09-08 17:47:10,249 [main][Settings.java:109] : JDBC result set fetch size: null
DEBUG 2022-09-08 17:47:10,250 [main][Settings.java:110] : Connection release mode: AFTER_TRANSACTION
DEBUG 2022-09-08 17:47:10,250 [main][Settings.java:111] : Generate SQL with comments: disabled
DEBUG 2022-09-08 17:47:10,286 [main][SessionFactoryImpl.java:252] : Session factory constructed with filter configurations : {}
DEBUG 2022-09-08 17:47:10,286 [main][SessionFactoryImpl.java:253] : Instantiating session factory with properties: {awt.toolkit=sun.lwawt.macosx.LWCToolkit, java.specification.version=11, file.encoding.pkg=sun.io, jdk.extensions.version=11.0.15.0, sun.jnu.encoding=UTF-8, hibernate.dialect=org.hibernate.dialect.MySQLDialect, java.class.path=/Users/vdonets/IdeaProjects/testmaven/target/classes:/Users/vdonets/.m2/repository/org/hibernate/hibernate-core/5.2.2.Final/hibernate-core-5.2.2.Final.jar:/Users/vdonets/.m2/repository/org/jboss/logging/jboss-logging/3.3.0.Final/jboss-logging-3.3.0.Final.jar:/Users/vdonets/.m2/repository/org/hibernate/javax/persistence/hibernate-jpa-2.1-api/1.0.0.Final/hibernate-jpa-2.1-api-1.0.0.Final.jar:/Users/vdonets/.m2/repository/org/javassist/javassist/3.20.0-GA/javassist-3.20.0-GA.jar:/Users/vdonets/.m2/repository/antlr/antlr/2.7.7/antlr-2.7.7.jar:/Users/vdonets/.m2/repository/org/apache/geronimo/specs/geronimo-jta_1.1_spec/1.1.1/geronimo-jta_1.1_spec-1.1.1.jar:/Users/vdonets/.m2/repository/org/jboss/jandex/2.0.0.Final/jandex-2.0.0.Final.jar:/Users/vdonets/.m2/repository/com/fasterxml/classmate/1.3.0/classmate-1.3.0.jar:/Users/vdonets/.m2/repository/dom4j/dom4j/1.6.1/dom4j-1.6.1.jar:/Users/vdonets/.m2/repository/org/hibernate/common/hibernate-commons-annotations/5.0.1.Final/hibernate-commons-annotations-5.0.1.Final.jar:/Users/vdonets/.m2/repository/javax/enterprise/cdi-api/1.1/cdi-api-1.1.jar:/Users/vdonets/.m2/repository/javax/el/el-api/2.2/el-api-2.2.jar:/Users/vdonets/.m2/repository/org/jboss/spec/javax/interceptor/jboss-interceptors-api_1.1_spec/1.0.0.Beta1/jboss-interceptors-api_1.1_spec-1.0.0.Beta1.jar:/Users/vdonets/.m2/repository/javax/annotation/jsr250-api/1.0/jsr250-api-1.0.jar:/Users/vdonets/.m2/repository/javax/inject/javax.inject/1/javax.inject-1.jar:/Users/vdonets/.m2/repository/mysql/mysql-connector-java/8.0.29/mysql-connector-java-8.0.29.jar:/Users/vdonets/.m2/repository/com/google/protobuf/protobuf-java/3.19.4/protobuf-java-3.19.4.jar:/Users/vdonets/.m2/repository/jakarta/xml/bind/jakarta.xml.bind-api/2.3.2/jakarta.xml.bind-api-2.3.2.jar:/Users/vdonets/.m2/repository/jakarta/activation/jakarta.activation-api/1.2.1/jakarta.activation-api-1.2.1.jar:/Users/vdonets/.m2/repository/org/glassfish/jaxb/jaxb-runtime/2.3.2/jaxb-runtime-2.3.2.jar:/Users/vdonets/.m2/repository/org/glassfish/jaxb/txw2/2.3.2/txw2-2.3.2.jar:/Users/vdonets/.m2/repository/com/sun/istack/istack-commons-runtime/3.0.8/istack-commons-runtime-3.0.8.jar:/Users/vdonets/.m2/repository/org/jvnet/staxex/stax-ex/1.8.1/stax-ex-1.8.1.jar:/Users/vdonets/.m2/repository/com/sun/xml/fastinfoset/FastInfoset/1.2.16/FastInfoset-1.2.16.jar:/Users/vdonets/.m2/repository/log4j/log4j/1.2.14/log4j-1.2.14.jar:/Applications/IntelliJ IDEA.app/Contents/lib/idea_rt.jar:/Users/vdonets/Library/Caches/JetBrains/IntelliJIdea2022.1/captureAgent/debugger-agent.jar, java.vm.vendor=Eclipse OpenJ9, sun.arch.data.model=64, com.ibm.vm.bitmode=64, hbm2ddl.auto=create-drop, user.variant=, com.ibm.oti.vm.library.version=29, java.vendor.url=https://www.ibm.com/semeru-runtimes, user.timezone=Europe/Warsaw, java.vm.specification.version=11, os.name=Mac OS X, sun.java.launcher=SUN_STANDARD, user.country=US, sun.boot.library.path=/Users/vdonets/Library/Java/JavaVirtualMachines/semeru-11.0.15/Contents/Home/lib/default:/Users/vdonets/Library/Java/JavaVirtualMachines/semeru-11.0.15/Contents/Home/lib, sun.java.command=org.example.Main, sun.cpu.endian=little, user.home=/Users/vdonets, user.language=en, java.specification.vendor=Oracle Corporation, java.version.date=2022-04-19, java.home=/Users/vdonets/Library/Java/JavaVirtualMachines/semeru-11.0.15/Contents/Home, ibm.signalhandling.rs=false, jdk.extensions.name=Extensions for OpenJDK for Eclipse OpenJ9, file.separator=/, line.separator=
, java.specification.name=Java Platform API Specification, java.vm.specification.vendor=Oracle Corporation, intellij.debug.agent=true, java.compiler=j9jit29, com.ibm.util.extralibs.properties=, java.awt.graphicsenv=sun.awt.CGraphicsEnvironment, com.ibm.oti.configuration=scar, com.ibm.oti.shared.enabled=false, hibernate.hbm2ddl.auto=create-drop, com.ibm.oti.vm.bootstrap.library.path=/Users/vdonets/Library/Java/JavaVirtualMachines/semeru-11.0.15/Contents/Home/lib/default:/Users/vdonets/Library/Java/JavaVirtualMachines/semeru-11.0.15/Contents/Home/lib, com.ibm.cpu.endian=little, java.fullversion=11.0.15-ea+10
JRE 11 Mac OS X aarch64-64-Bit 20220422_36 (JIT enabled, AOT enabled)
OpenJ9   - 9a84ec34e
OMR      - ab24b6666
JCL      - b7b5b42ea6 based on jdk-11.0.15+10, java.runtime.version=11.0.15-ea+10, user.name=vdonets, path.separator=:, hibernate.connection.username=root, os.version=12.5, java.runtime.name=IBM Semeru Runtime Open Edition, hibernate.connection.url=jdbc:mysql://localhost:3306/classicmodels?serverTimezone=UTC, connection.pool_size=5, ibm.signalhandling.sigint=true, file.encoding=UTF-8, java.vm.name=Eclipse OpenJ9 VM, hibernate.show_sql=true, java.vendor.version=11.0.15.0, ibm.signalhandling.sigchain=true, show_sql=true, hibernate.connection.driver_class=com.mysql.cj.jdbc.Driver, java.vendor.url.bug=https://github.com/ibmruntimes/Semeru-Runtimes/issues, java.io.tmpdir=/var/folders/wv/6c3_66yd6kq3r7z477kwz4lr0000gn/T/, java.version=11.0.15-ea, jboss.modules.system.pkgs=com.intellij.rt, com.ibm.system.agent.path=/Users/vdonets/Library/Java/JavaVirtualMachines/semeru-11.0.15/Contents/Home/lib, user.dir=/Users/vdonets/IdeaProjects/testmaven, os.arch=aarch64, java.vm.specification.name=Java Virtual Machine Specification, java.awt.printerjob=sun.lwawt.macosx.CPrinterJob, hibernate.connection.password=****, os.encoding=UTF-8, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@647eb1ec, java.library.path=/Users/vdonets/Library/Java/JavaVirtualMachines/semeru-11.0.15/Contents/Home/lib/default:/Users/vdonets/Library/Java/JavaVirtualMachines/semeru-11.0.15/Contents/Home/lib:/usr/lib, java.vendor=IBM Corporation, java.vm.info=JRE 11 Mac OS X aarch64-64-Bit 20220422_36 (JIT enabled, AOT enabled)
OpenJ9   - 9a84ec34e
OMR      - ab24b6666
JCL      - b7b5b42ea6 based on jdk-11.0.15+10, java.vm.version=openj9-0.32.0, ibm.system.encoding=UTF-8, hibernate.bytecode.use_reflection_optimizer=false, com.ibm.jcl.checkClassPath=, sun.io.unicode.encoding=UnicodeLittle, hibernate.connection.pool_size=5, java.class.version=55.0}
DEBUG 2022-09-08 17:47:10,294 [main][JaccIntegrator.java:80] : Skipping JACC integration as it was not enabled
DEBUG 2022-09-08 17:47:10,295 [main][SessionFactoryImpl.java:292] : Instantiated session factory
DEBUG 2022-09-08 17:47:10,316 [main][ClassLoaderAccessImpl.java:55] : Not known whether passed class name [org.example.models.Book] is safe
DEBUG 2022-09-08 17:47:10,317 [main][ClassLoaderAccessImpl.java:57] : No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.models.Book
DEBUG 2022-09-08 17:47:10,325 [main][ClassLoaderAccessImpl.java:55] : Not known whether passed class name [org.example.models.Book] is safe
DEBUG 2022-09-08 17:47:10,325 [main][ClassLoaderAccessImpl.java:57] : No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.models.Book
DEBUG 2022-09-08 17:47:10,351 [main][ClassLoaderAccessImpl.java:55] : Not known whether passed class name [org.example.models.Author] is safe
DEBUG 2022-09-08 17:47:10,351 [main][ClassLoaderAccessImpl.java:57] : No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.models.Author
DEBUG 2022-09-08 17:47:10,352 [main][ClassLoaderAccessImpl.java:55] : Not known whether passed class name [org.example.models.Author] is safe
DEBUG 2022-09-08 17:47:10,352 [main][ClassLoaderAccessImpl.java:57] : No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.models.Author
DEBUG 2022-09-08 17:47:10,356 [main][AbstractEntityPersister.java:3529] : Static SQL for entity: org.example.models.Book
DEBUG 2022-09-08 17:47:10,357 [main][AbstractEntityPersister.java:3534] :  Version select: select id from Book where id =?
DEBUG 2022-09-08 17:47:10,357 [main][AbstractEntityPersister.java:3537] :  Snapshot select: select book_.id, book_.author_id as author_i2_1_, book_.name as name3_1_ from Book book_ where book_.id=?
DEBUG 2022-09-08 17:47:10,357 [main][DelegatingBasicLogger.java:394] :  Insert 0: insert into Book (author_id, name, id) values (?, ?, ?)
DEBUG 2022-09-08 17:47:10,358 [main][DelegatingBasicLogger.java:394] :  Update 0: update Book set author_id=?, name=? where id=?
DEBUG 2022-09-08 17:47:10,358 [main][DelegatingBasicLogger.java:394] :  Delete 0: delete from Book where id=?
DEBUG 2022-09-08 17:47:10,368 [main][QuerySpacesImpl.java:174] : Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3bb51779]
DEBUG 2022-09-08 17:47:10,369 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : author_id
DEBUG 2022-09-08 17:47:10,369 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : name
DEBUG 2022-09-08 17:47:10,370 [main][FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150] : Building LoadPlan...
DEBUG 2022-09-08 17:47:10,374 [main][LoadQueryJoinAndFetchProcessor.java:100] : processing queryspace <gen:0>
DEBUG 2022-09-08 17:47:10,376 [main][LoadPlanTreePrinter.java:55] : LoadPlan(entity=org.example.models.Book)
    - Returns
       - EntityReturnImpl(entity=org.example.models.Book, querySpaceUid=<gen:0>, path=org.example.models.Book)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=org.example.models.Book)
          - SQL table alias mapping - book0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

DEBUG 2022-09-08 17:47:10,378 [main][EntityLoader.java:115] : Static select for entity org.example.models.Book [NONE]: select book0_.id as id1_1_0_, book0_.author_id as author_i2_1_0_, book0_.name as name3_1_0_ from Book book0_ where book0_.id=?
DEBUG 2022-09-08 17:47:10,378 [main][QuerySpacesImpl.java:174] : Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7247fa85]
DEBUG 2022-09-08 17:47:10,379 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : author_id
DEBUG 2022-09-08 17:47:10,379 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : name
DEBUG 2022-09-08 17:47:10,379 [main][FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150] : Building LoadPlan...
DEBUG 2022-09-08 17:47:10,380 [main][LoadQueryJoinAndFetchProcessor.java:100] : processing queryspace <gen:0>
DEBUG 2022-09-08 17:47:10,381 [main][LoadPlanTreePrinter.java:55] : LoadPlan(entity=org.example.models.Book)
    - Returns
       - EntityReturnImpl(entity=org.example.models.Book, querySpaceUid=<gen:0>, path=org.example.models.Book)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=org.example.models.Book)
          - SQL table alias mapping - book0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

DEBUG 2022-09-08 17:47:10,382 [main][EntityLoader.java:115] : Static select for entity org.example.models.Book [READ]: select book0_.id as id1_1_0_, book0_.author_id as author_i2_1_0_, book0_.name as name3_1_0_ from Book book0_ where book0_.id=?
DEBUG 2022-09-08 17:47:10,382 [main][QuerySpacesImpl.java:174] : Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1f2d0413]
DEBUG 2022-09-08 17:47:10,382 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : author_id
DEBUG 2022-09-08 17:47:10,383 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : name
DEBUG 2022-09-08 17:47:10,383 [main][FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150] : Building LoadPlan...
DEBUG 2022-09-08 17:47:10,384 [main][LoadQueryJoinAndFetchProcessor.java:100] : processing queryspace <gen:0>
DEBUG 2022-09-08 17:47:10,384 [main][LoadPlanTreePrinter.java:55] : LoadPlan(entity=org.example.models.Book)
    - Returns
       - EntityReturnImpl(entity=org.example.models.Book, querySpaceUid=<gen:0>, path=org.example.models.Book)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=org.example.models.Book)
          - SQL table alias mapping - book0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

DEBUG 2022-09-08 17:47:10,385 [main][EntityLoader.java:115] : Static select for entity org.example.models.Book [UPGRADE]: select book0_.id as id1_1_0_, book0_.author_id as author_i2_1_0_, book0_.name as name3_1_0_ from Book book0_ where book0_.id=? for update
DEBUG 2022-09-08 17:47:10,385 [main][QuerySpacesImpl.java:174] : Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@796d5c0d]
DEBUG 2022-09-08 17:47:10,385 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : author_id
DEBUG 2022-09-08 17:47:10,386 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : name
DEBUG 2022-09-08 17:47:10,386 [main][FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150] : Building LoadPlan...
DEBUG 2022-09-08 17:47:10,386 [main][LoadQueryJoinAndFetchProcessor.java:100] : processing queryspace <gen:0>
DEBUG 2022-09-08 17:47:10,387 [main][LoadPlanTreePrinter.java:55] : LoadPlan(entity=org.example.models.Book)
    - Returns
       - EntityReturnImpl(entity=org.example.models.Book, querySpaceUid=<gen:0>, path=org.example.models.Book)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=org.example.models.Book)
          - SQL table alias mapping - book0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

DEBUG 2022-09-08 17:47:10,387 [main][EntityLoader.java:115] : Static select for entity org.example.models.Book [UPGRADE_NOWAIT]: select book0_.id as id1_1_0_, book0_.author_id as author_i2_1_0_, book0_.name as name3_1_0_ from Book book0_ where book0_.id=? for update
DEBUG 2022-09-08 17:47:10,388 [main][QuerySpacesImpl.java:174] : Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6104682d]
DEBUG 2022-09-08 17:47:10,388 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : author_id
DEBUG 2022-09-08 17:47:10,388 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : name
DEBUG 2022-09-08 17:47:10,388 [main][FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150] : Building LoadPlan...
DEBUG 2022-09-08 17:47:10,388 [main][LoadQueryJoinAndFetchProcessor.java:100] : processing queryspace <gen:0>
DEBUG 2022-09-08 17:47:10,389 [main][LoadPlanTreePrinter.java:55] : LoadPlan(entity=org.example.models.Book)
    - Returns
       - EntityReturnImpl(entity=org.example.models.Book, querySpaceUid=<gen:0>, path=org.example.models.Book)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=org.example.models.Book)
          - SQL table alias mapping - book0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

DEBUG 2022-09-08 17:47:10,389 [main][EntityLoader.java:115] : Static select for entity org.example.models.Book [UPGRADE_SKIPLOCKED]: select book0_.id as id1_1_0_, book0_.author_id as author_i2_1_0_, book0_.name as name3_1_0_ from Book book0_ where book0_.id=? for update
DEBUG 2022-09-08 17:47:10,389 [main][QuerySpacesImpl.java:174] : Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@e393118c]
DEBUG 2022-09-08 17:47:10,389 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : author_id
DEBUG 2022-09-08 17:47:10,389 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : name
DEBUG 2022-09-08 17:47:10,389 [main][FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150] : Building LoadPlan...
DEBUG 2022-09-08 17:47:10,390 [main][LoadQueryJoinAndFetchProcessor.java:100] : processing queryspace <gen:0>
DEBUG 2022-09-08 17:47:10,390 [main][LoadPlanTreePrinter.java:55] : LoadPlan(entity=org.example.models.Book)
    - Returns
       - EntityReturnImpl(entity=org.example.models.Book, querySpaceUid=<gen:0>, path=org.example.models.Book)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=org.example.models.Book)
          - SQL table alias mapping - book0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

DEBUG 2022-09-08 17:47:10,390 [main][EntityLoader.java:115] : Static select for entity org.example.models.Book [FORCE]: select book0_.id as id1_1_0_, book0_.author_id as author_i2_1_0_, book0_.name as name3_1_0_ from Book book0_ where book0_.id=? for update
DEBUG 2022-09-08 17:47:10,390 [main][QuerySpacesImpl.java:174] : Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@8ce3d3dc]
DEBUG 2022-09-08 17:47:10,391 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : author_id
DEBUG 2022-09-08 17:47:10,391 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : name
DEBUG 2022-09-08 17:47:10,391 [main][FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150] : Building LoadPlan...
DEBUG 2022-09-08 17:47:10,391 [main][LoadQueryJoinAndFetchProcessor.java:100] : processing queryspace <gen:0>
DEBUG 2022-09-08 17:47:10,392 [main][LoadPlanTreePrinter.java:55] : LoadPlan(entity=org.example.models.Book)
    - Returns
       - EntityReturnImpl(entity=org.example.models.Book, querySpaceUid=<gen:0>, path=org.example.models.Book)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=org.example.models.Book)
          - SQL table alias mapping - book0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

DEBUG 2022-09-08 17:47:10,392 [main][EntityLoader.java:115] : Static select for entity org.example.models.Book [PESSIMISTIC_READ]: select book0_.id as id1_1_0_, book0_.author_id as author_i2_1_0_, book0_.name as name3_1_0_ from Book book0_ where book0_.id=? lock in share mode
DEBUG 2022-09-08 17:47:10,392 [main][QuerySpacesImpl.java:174] : Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@dcb2f3bc]
DEBUG 2022-09-08 17:47:10,392 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : author_id
DEBUG 2022-09-08 17:47:10,392 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : name
DEBUG 2022-09-08 17:47:10,392 [main][FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150] : Building LoadPlan...
DEBUG 2022-09-08 17:47:10,393 [main][LoadQueryJoinAndFetchProcessor.java:100] : processing queryspace <gen:0>
DEBUG 2022-09-08 17:47:10,394 [main][LoadPlanTreePrinter.java:55] : LoadPlan(entity=org.example.models.Book)
    - Returns
       - EntityReturnImpl(entity=org.example.models.Book, querySpaceUid=<gen:0>, path=org.example.models.Book)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=org.example.models.Book)
          - SQL table alias mapping - book0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

DEBUG 2022-09-08 17:47:10,394 [main][EntityLoader.java:115] : Static select for entity org.example.models.Book [PESSIMISTIC_WRITE]: select book0_.id as id1_1_0_, book0_.author_id as author_i2_1_0_, book0_.name as name3_1_0_ from Book book0_ where book0_.id=? for update
DEBUG 2022-09-08 17:47:10,394 [main][QuerySpacesImpl.java:174] : Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@b784d3de]
DEBUG 2022-09-08 17:47:10,394 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : author_id
DEBUG 2022-09-08 17:47:10,394 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : name
DEBUG 2022-09-08 17:47:10,394 [main][FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150] : Building LoadPlan...
DEBUG 2022-09-08 17:47:10,395 [main][LoadQueryJoinAndFetchProcessor.java:100] : processing queryspace <gen:0>
DEBUG 2022-09-08 17:47:10,395 [main][LoadPlanTreePrinter.java:55] : LoadPlan(entity=org.example.models.Book)
    - Returns
       - EntityReturnImpl(entity=org.example.models.Book, querySpaceUid=<gen:0>, path=org.example.models.Book)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=org.example.models.Book)
          - SQL table alias mapping - book0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

DEBUG 2022-09-08 17:47:10,395 [main][EntityLoader.java:115] : Static select for entity org.example.models.Book [PESSIMISTIC_FORCE_INCREMENT]: select book0_.id as id1_1_0_, book0_.author_id as author_i2_1_0_, book0_.name as name3_1_0_ from Book book0_ where book0_.id=? for update
DEBUG 2022-09-08 17:47:10,395 [main][QuerySpacesImpl.java:174] : Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@bfe85bb0]
DEBUG 2022-09-08 17:47:10,395 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : author_id
DEBUG 2022-09-08 17:47:10,395 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : name
DEBUG 2022-09-08 17:47:10,396 [main][FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150] : Building LoadPlan...
DEBUG 2022-09-08 17:47:10,396 [main][LoadQueryJoinAndFetchProcessor.java:100] : processing queryspace <gen:0>
DEBUG 2022-09-08 17:47:10,396 [main][LoadPlanTreePrinter.java:55] : LoadPlan(entity=org.example.models.Book)
    - Returns
       - EntityReturnImpl(entity=org.example.models.Book, querySpaceUid=<gen:0>, path=org.example.models.Book)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=org.example.models.Book)
          - SQL table alias mapping - book0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

DEBUG 2022-09-08 17:47:10,396 [main][EntityLoader.java:115] : Static select for entity org.example.models.Book [OPTIMISTIC]: select book0_.id as id1_1_0_, book0_.author_id as author_i2_1_0_, book0_.name as name3_1_0_ from Book book0_ where book0_.id=?
DEBUG 2022-09-08 17:47:10,396 [main][QuerySpacesImpl.java:174] : Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4009e6c9]
DEBUG 2022-09-08 17:47:10,396 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : author_id
DEBUG 2022-09-08 17:47:10,397 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : name
DEBUG 2022-09-08 17:47:10,397 [main][FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150] : Building LoadPlan...
DEBUG 2022-09-08 17:47:10,397 [main][LoadQueryJoinAndFetchProcessor.java:100] : processing queryspace <gen:0>
DEBUG 2022-09-08 17:47:10,397 [main][LoadPlanTreePrinter.java:55] : LoadPlan(entity=org.example.models.Book)
    - Returns
       - EntityReturnImpl(entity=org.example.models.Book, querySpaceUid=<gen:0>, path=org.example.models.Book)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=org.example.models.Book)
          - SQL table alias mapping - book0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

DEBUG 2022-09-08 17:47:10,397 [main][EntityLoader.java:115] : Static select for entity org.example.models.Book [OPTIMISTIC_FORCE_INCREMENT]: select book0_.id as id1_1_0_, book0_.author_id as author_i2_1_0_, book0_.name as name3_1_0_ from Book book0_ where book0_.id=?
DEBUG 2022-09-08 17:47:10,404 [main][CascadeEntityLoader.java:38] : Static select for action ACTION_MERGE on entity org.example.models.Book: select book0_.id as id1_1_0_, book0_.author_id as author_i2_1_0_, book0_.name as name3_1_0_ from Book book0_ where book0_.id=?
DEBUG 2022-09-08 17:47:10,405 [main][CascadeEntityLoader.java:38] : Static select for action ACTION_REFRESH on entity org.example.models.Book: select book0_.id as id1_1_0_, book0_.author_id as author_i2_1_0_, book0_.name as name3_1_0_ from Book book0_ where book0_.id=?
DEBUG 2022-09-08 17:47:10,407 [main][AbstractEntityPersister.java:3529] : Static SQL for entity: org.example.models.Author
DEBUG 2022-09-08 17:47:10,407 [main][AbstractEntityPersister.java:3534] :  Version select: select id from Author where id =?
DEBUG 2022-09-08 17:47:10,407 [main][AbstractEntityPersister.java:3537] :  Snapshot select: select author_.id, author_.name as name2_0_, author_.salary as salary3_0_ from Author author_ where author_.id=?
DEBUG 2022-09-08 17:47:10,408 [main][DelegatingBasicLogger.java:394] :  Insert 0: insert into Author (name, salary, id) values (?, ?, ?)
DEBUG 2022-09-08 17:47:10,408 [main][DelegatingBasicLogger.java:394] :  Update 0: update Author set name=?, salary=? where id=?
DEBUG 2022-09-08 17:47:10,408 [main][DelegatingBasicLogger.java:394] :  Delete 0: delete from Author where id=?
DEBUG 2022-09-08 17:47:10,408 [main][AbstractEntityPersister.java:3545] :  Identity insert: insert into Author (name, salary) values (?, ?)
DEBUG 2022-09-08 17:47:10,408 [main][QuerySpacesImpl.java:174] : Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@b214601b]
DEBUG 2022-09-08 17:47:10,408 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : name
DEBUG 2022-09-08 17:47:10,409 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : salary
DEBUG 2022-09-08 17:47:10,409 [main][FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150] : Building LoadPlan...
DEBUG 2022-09-08 17:47:10,409 [main][LoadQueryJoinAndFetchProcessor.java:100] : processing queryspace <gen:0>
DEBUG 2022-09-08 17:47:10,409 [main][LoadPlanTreePrinter.java:55] : LoadPlan(entity=org.example.models.Author)
    - Returns
       - EntityReturnImpl(entity=org.example.models.Author, querySpaceUid=<gen:0>, path=org.example.models.Author)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=org.example.models.Author)
          - SQL table alias mapping - author0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

DEBUG 2022-09-08 17:47:10,409 [main][EntityLoader.java:115] : Static select for entity org.example.models.Author [NONE]: select author0_.id as id1_0_0_, author0_.name as name2_0_0_, author0_.salary as salary3_0_0_ from Author author0_ where author0_.id=?
DEBUG 2022-09-08 17:47:10,409 [main][QuerySpacesImpl.java:174] : Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@42611583]
DEBUG 2022-09-08 17:47:10,410 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : name
DEBUG 2022-09-08 17:47:10,410 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : salary
DEBUG 2022-09-08 17:47:10,410 [main][FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150] : Building LoadPlan...
DEBUG 2022-09-08 17:47:10,410 [main][LoadQueryJoinAndFetchProcessor.java:100] : processing queryspace <gen:0>
DEBUG 2022-09-08 17:47:10,410 [main][LoadPlanTreePrinter.java:55] : LoadPlan(entity=org.example.models.Author)
    - Returns
       - EntityReturnImpl(entity=org.example.models.Author, querySpaceUid=<gen:0>, path=org.example.models.Author)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=org.example.models.Author)
          - SQL table alias mapping - author0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

DEBUG 2022-09-08 17:47:10,410 [main][EntityLoader.java:115] : Static select for entity org.example.models.Author [READ]: select author0_.id as id1_0_0_, author0_.name as name2_0_0_, author0_.salary as salary3_0_0_ from Author author0_ where author0_.id=?
DEBUG 2022-09-08 17:47:10,411 [main][QuerySpacesImpl.java:174] : Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6d816791]
DEBUG 2022-09-08 17:47:10,411 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : name
DEBUG 2022-09-08 17:47:10,411 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : salary
DEBUG 2022-09-08 17:47:10,411 [main][FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150] : Building LoadPlan...
DEBUG 2022-09-08 17:47:10,411 [main][LoadQueryJoinAndFetchProcessor.java:100] : processing queryspace <gen:0>
DEBUG 2022-09-08 17:47:10,411 [main][LoadPlanTreePrinter.java:55] : LoadPlan(entity=org.example.models.Author)
    - Returns
       - EntityReturnImpl(entity=org.example.models.Author, querySpaceUid=<gen:0>, path=org.example.models.Author)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=org.example.models.Author)
          - SQL table alias mapping - author0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

DEBUG 2022-09-08 17:47:10,412 [main][EntityLoader.java:115] : Static select for entity org.example.models.Author [UPGRADE]: select author0_.id as id1_0_0_, author0_.name as name2_0_0_, author0_.salary as salary3_0_0_ from Author author0_ where author0_.id=? for update
DEBUG 2022-09-08 17:47:10,412 [main][QuerySpacesImpl.java:174] : Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@85b19cc5]
DEBUG 2022-09-08 17:47:10,412 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : name
DEBUG 2022-09-08 17:47:10,412 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : salary
DEBUG 2022-09-08 17:47:10,412 [main][FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150] : Building LoadPlan...
DEBUG 2022-09-08 17:47:10,412 [main][LoadQueryJoinAndFetchProcessor.java:100] : processing queryspace <gen:0>
DEBUG 2022-09-08 17:47:10,413 [main][LoadPlanTreePrinter.java:55] : LoadPlan(entity=org.example.models.Author)
    - Returns
       - EntityReturnImpl(entity=org.example.models.Author, querySpaceUid=<gen:0>, path=org.example.models.Author)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=org.example.models.Author)
          - SQL table alias mapping - author0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

DEBUG 2022-09-08 17:47:10,413 [main][EntityLoader.java:115] : Static select for entity org.example.models.Author [UPGRADE_NOWAIT]: select author0_.id as id1_0_0_, author0_.name as name2_0_0_, author0_.salary as salary3_0_0_ from Author author0_ where author0_.id=? for update
DEBUG 2022-09-08 17:47:10,413 [main][QuerySpacesImpl.java:174] : Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5a95e94a]
DEBUG 2022-09-08 17:47:10,413 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : name
DEBUG 2022-09-08 17:47:10,413 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : salary
DEBUG 2022-09-08 17:47:10,413 [main][FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150] : Building LoadPlan...
DEBUG 2022-09-08 17:47:10,413 [main][LoadQueryJoinAndFetchProcessor.java:100] : processing queryspace <gen:0>
DEBUG 2022-09-08 17:47:10,413 [main][LoadPlanTreePrinter.java:55] : LoadPlan(entity=org.example.models.Author)
    - Returns
       - EntityReturnImpl(entity=org.example.models.Author, querySpaceUid=<gen:0>, path=org.example.models.Author)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=org.example.models.Author)
          - SQL table alias mapping - author0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

DEBUG 2022-09-08 17:47:10,414 [main][EntityLoader.java:115] : Static select for entity org.example.models.Author [UPGRADE_SKIPLOCKED]: select author0_.id as id1_0_0_, author0_.name as name2_0_0_, author0_.salary as salary3_0_0_ from Author author0_ where author0_.id=? for update
DEBUG 2022-09-08 17:47:10,414 [main][QuerySpacesImpl.java:174] : Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@73246455]
DEBUG 2022-09-08 17:47:10,414 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : name
DEBUG 2022-09-08 17:47:10,414 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : salary
DEBUG 2022-09-08 17:47:10,414 [main][FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150] : Building LoadPlan...
DEBUG 2022-09-08 17:47:10,414 [main][LoadQueryJoinAndFetchProcessor.java:100] : processing queryspace <gen:0>
DEBUG 2022-09-08 17:47:10,414 [main][LoadPlanTreePrinter.java:55] : LoadPlan(entity=org.example.models.Author)
    - Returns
       - EntityReturnImpl(entity=org.example.models.Author, querySpaceUid=<gen:0>, path=org.example.models.Author)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=org.example.models.Author)
          - SQL table alias mapping - author0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

DEBUG 2022-09-08 17:47:10,415 [main][EntityLoader.java:115] : Static select for entity org.example.models.Author [FORCE]: select author0_.id as id1_0_0_, author0_.name as name2_0_0_, author0_.salary as salary3_0_0_ from Author author0_ where author0_.id=? for update
DEBUG 2022-09-08 17:47:10,415 [main][QuerySpacesImpl.java:174] : Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@40243b04]
DEBUG 2022-09-08 17:47:10,416 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : name
DEBUG 2022-09-08 17:47:10,416 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : salary
DEBUG 2022-09-08 17:47:10,416 [main][FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150] : Building LoadPlan...
DEBUG 2022-09-08 17:47:10,416 [main][LoadQueryJoinAndFetchProcessor.java:100] : processing queryspace <gen:0>
DEBUG 2022-09-08 17:47:10,416 [main][LoadPlanTreePrinter.java:55] : LoadPlan(entity=org.example.models.Author)
    - Returns
       - EntityReturnImpl(entity=org.example.models.Author, querySpaceUid=<gen:0>, path=org.example.models.Author)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=org.example.models.Author)
          - SQL table alias mapping - author0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

DEBUG 2022-09-08 17:47:10,416 [main][EntityLoader.java:115] : Static select for entity org.example.models.Author [PESSIMISTIC_READ]: select author0_.id as id1_0_0_, author0_.name as name2_0_0_, author0_.salary as salary3_0_0_ from Author author0_ where author0_.id=? lock in share mode
DEBUG 2022-09-08 17:47:10,416 [main][QuerySpacesImpl.java:174] : Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1055b138]
DEBUG 2022-09-08 17:47:10,417 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : name
DEBUG 2022-09-08 17:47:10,417 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : salary
DEBUG 2022-09-08 17:47:10,417 [main][FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150] : Building LoadPlan...
DEBUG 2022-09-08 17:47:10,417 [main][LoadQueryJoinAndFetchProcessor.java:100] : processing queryspace <gen:0>
DEBUG 2022-09-08 17:47:10,417 [main][LoadPlanTreePrinter.java:55] : LoadPlan(entity=org.example.models.Author)
    - Returns
       - EntityReturnImpl(entity=org.example.models.Author, querySpaceUid=<gen:0>, path=org.example.models.Author)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=org.example.models.Author)
          - SQL table alias mapping - author0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

DEBUG 2022-09-08 17:47:10,417 [main][EntityLoader.java:115] : Static select for entity org.example.models.Author [PESSIMISTIC_WRITE]: select author0_.id as id1_0_0_, author0_.name as name2_0_0_, author0_.salary as salary3_0_0_ from Author author0_ where author0_.id=? for update
DEBUG 2022-09-08 17:47:10,417 [main][QuerySpacesImpl.java:174] : Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@fd11a1cf]
DEBUG 2022-09-08 17:47:10,418 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : name
DEBUG 2022-09-08 17:47:10,418 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : salary
DEBUG 2022-09-08 17:47:10,418 [main][FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150] : Building LoadPlan...
DEBUG 2022-09-08 17:47:10,418 [main][LoadQueryJoinAndFetchProcessor.java:100] : processing queryspace <gen:0>
DEBUG 2022-09-08 17:47:10,418 [main][LoadPlanTreePrinter.java:55] : LoadPlan(entity=org.example.models.Author)
    - Returns
       - EntityReturnImpl(entity=org.example.models.Author, querySpaceUid=<gen:0>, path=org.example.models.Author)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=org.example.models.Author)
          - SQL table alias mapping - author0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

DEBUG 2022-09-08 17:47:10,418 [main][EntityLoader.java:115] : Static select for entity org.example.models.Author [PESSIMISTIC_FORCE_INCREMENT]: select author0_.id as id1_0_0_, author0_.name as name2_0_0_, author0_.salary as salary3_0_0_ from Author author0_ where author0_.id=? for update
DEBUG 2022-09-08 17:47:10,418 [main][QuerySpacesImpl.java:174] : Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@17c31d33]
DEBUG 2022-09-08 17:47:10,419 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : name
DEBUG 2022-09-08 17:47:10,419 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : salary
DEBUG 2022-09-08 17:47:10,419 [main][FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150] : Building LoadPlan...
DEBUG 2022-09-08 17:47:10,419 [main][LoadQueryJoinAndFetchProcessor.java:100] : processing queryspace <gen:0>
DEBUG 2022-09-08 17:47:10,419 [main][LoadPlanTreePrinter.java:55] : LoadPlan(entity=org.example.models.Author)
    - Returns
       - EntityReturnImpl(entity=org.example.models.Author, querySpaceUid=<gen:0>, path=org.example.models.Author)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=org.example.models.Author)
          - SQL table alias mapping - author0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

DEBUG 2022-09-08 17:47:10,419 [main][EntityLoader.java:115] : Static select for entity org.example.models.Author [OPTIMISTIC]: select author0_.id as id1_0_0_, author0_.name as name2_0_0_, author0_.salary as salary3_0_0_ from Author author0_ where author0_.id=?
DEBUG 2022-09-08 17:47:10,419 [main][QuerySpacesImpl.java:174] : Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3c2bed07]
DEBUG 2022-09-08 17:47:10,419 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : name
DEBUG 2022-09-08 17:47:10,420 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : salary
DEBUG 2022-09-08 17:47:10,420 [main][FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150] : Building LoadPlan...
DEBUG 2022-09-08 17:47:10,420 [main][LoadQueryJoinAndFetchProcessor.java:100] : processing queryspace <gen:0>
DEBUG 2022-09-08 17:47:10,420 [main][LoadPlanTreePrinter.java:55] : LoadPlan(entity=org.example.models.Author)
    - Returns
       - EntityReturnImpl(entity=org.example.models.Author, querySpaceUid=<gen:0>, path=org.example.models.Author)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=org.example.models.Author)
          - SQL table alias mapping - author0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

DEBUG 2022-09-08 17:47:10,420 [main][EntityLoader.java:115] : Static select for entity org.example.models.Author [OPTIMISTIC_FORCE_INCREMENT]: select author0_.id as id1_0_0_, author0_.name as name2_0_0_, author0_.salary as salary3_0_0_ from Author author0_ where author0_.id=?
DEBUG 2022-09-08 17:47:10,421 [main][CascadeEntityLoader.java:38] : Static select for action ACTION_MERGE on entity org.example.models.Author: select author0_.id as id1_0_0_, author0_.name as name2_0_0_, author0_.salary as salary3_0_0_ from Author author0_ where author0_.id=?
DEBUG 2022-09-08 17:47:10,421 [main][CascadeEntityLoader.java:38] : Static select for action ACTION_REFRESH on entity org.example.models.Author: select author0_.id as id1_0_0_, author0_.name as name2_0_0_, author0_.salary as salary3_0_0_ from Author author0_ where author0_.id=?
DEBUG 2022-09-08 17:47:10,435 [main][SqlStatementLogger.java:92] : drop table if exists Author
INFO  2022-09-08 17:47:10,436 [main][DdlTransactionIsolatorNonJtaImpl.java:48] : HHH10001501: Connection obtained from JdbcConnectionAccess [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess@7af8ae4b] for (non-JTA) DDL execution was not in auto-commit mode; the Connection 'local transaction' will be committed and the Connection will be set into auto-commit mode.
DEBUG 2022-09-08 17:47:10,447 [main][SqlStatementLogger.java:92] : drop table if exists Book
DEBUG 2022-09-08 17:47:10,449 [main][SqlStatementLogger.java:92] : drop table if exists hibernate_sequence
DEBUG 2022-09-08 17:47:10,452 [main][SqlStatementLogger.java:92] : create table Author (id bigint not null auto_increment, name varchar(255), salary integer, primary key (id))
INFO  2022-09-08 17:47:10,453 [main][DdlTransactionIsolatorNonJtaImpl.java:48] : HHH10001501: Connection obtained from JdbcConnectionAccess [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess@1c8f031a] for (non-JTA) DDL execution was not in auto-commit mode; the Connection 'local transaction' will be committed and the Connection will be set into auto-commit mode.
DEBUG 2022-09-08 17:47:10,469 [main][SqlStatementLogger.java:92] : create table Book (id bigint not null, author_id bigint not null, name varchar(255), primary key (id))
DEBUG 2022-09-08 17:47:10,476 [main][SqlStatementLogger.java:92] : create table hibernate_sequence (next_val bigint)
DEBUG 2022-09-08 17:47:10,480 [main][SqlStatementLogger.java:92] : insert into hibernate_sequence values ( 1 )
INFO  2022-09-08 17:47:10,484 [main][SchemaCreatorImpl.java:485] : HHH000476: Executing import script 'org.hibernate.tool.schema.internal.exec.ScriptSourceInputNonExistentImpl@c52276d'
DEBUG 2022-09-08 17:47:10,486 [main][JtaPlatformInitiator.java:42] : No JtaPlatform was specified, checking resolver
DEBUG 2022-09-08 17:47:10,487 [main][JtaPlatformResolverInitiator.java:33] : No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
DEBUG 2022-09-08 17:47:10,488 [main][StandardJtaPlatformResolver.java:101] : Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
DEBUG 2022-09-08 17:47:10,488 [main][NamedQueryRepository.java:151] : Checking 0 named HQL queries
DEBUG 2022-09-08 17:47:10,489 [main][NamedQueryRepository.java:167] : Checking 0 named SQL queries
DEBUG 2022-09-08 17:47:10,489 [main][SessionFactoryRegistry.java:52] : Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@bfb90365
DEBUG 2022-09-08 17:47:10,491 [main][SessionFactoryRegistry.java:74] : Registering SessionFactory: 956f3682-6a04-4160-8555-f3468b85228f (<unnamed>)
DEBUG 2022-09-08 17:47:10,491 [main][SessionFactoryRegistry.java:81] : Not binding SessionFactory to JNDI, no JNDI name configured
DEBUG 2022-09-08 17:47:10,520 [main][StatisticsInitiator.java:82] : Statistics initialized [enabled=false]
DEBUG 2022-09-08 17:47:10,525 [main][TransactionImpl.java:55] : begin
DEBUG 2022-09-08 17:47:10,532 [main][ActionQueue.java:272] : Executing identity-insert immediately
DEBUG 2022-09-08 17:47:10,533 [main][SqlStatementLogger.java:92] : insert into Author (name, salary) values (?, ?)
DEBUG 2022-09-08 17:47:10,540 [main][IdentifierGeneratorHelper.java:78] : Natively generated identity: 1
DEBUG 2022-09-08 17:47:10,541 [main][ResourceRegistryStandardImpl.java:104] : HHH000387: ResultSet's statement was not registered
DEBUG 2022-09-08 17:47:10,541 [main][TransactionImpl.java:66] : committing
DEBUG 2022-09-08 17:47:10,542 [main][AbstractFlushingEventListener.java:132] : Processing flush-time cascades
DEBUG 2022-09-08 17:47:10,542 [main][AbstractFlushingEventListener.java:174] : Dirty checking collections
DEBUG 2022-09-08 17:47:10,543 [main][AbstractFlushingEventListener.java:106] : Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
DEBUG 2022-09-08 17:47:10,543 [main][AbstractFlushingEventListener.java:113] : Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
DEBUG 2022-09-08 17:47:10,544 [main][EntityPrinter.java:102] : Listing entities:
DEBUG 2022-09-08 17:47:10,544 [main][EntityPrinter.java:109] : org.example.models.Author{name=David Baldacci, id=1, salary=4499}
DEBUG 2022-09-08 17:47:10,545 [main][LogicalConnectionManagedImpl.java:154] : Initiating JDBC connection release from afterTransaction
DEBUG 2022-09-08 17:47:10,546 [main][LogicalConnectionManagedImpl.java:154] : Initiating JDBC connection release from afterTransaction
DEBUG 2022-09-08 17:47:10,563 [main][TransactionImpl.java:55] : begin
DEBUG 2022-09-08 17:47:10,565 [main][ActionQueue.java:272] : Executing identity-insert immediately
DEBUG 2022-09-08 17:47:10,565 [main][SqlStatementLogger.java:92] : insert into Author (name, salary) values (?, ?)
DEBUG 2022-09-08 17:47:10,566 [main][IdentifierGeneratorHelper.java:78] : Natively generated identity: 2
DEBUG 2022-09-08 17:47:10,567 [main][ResourceRegistryStandardImpl.java:104] : HHH000387: ResultSet's statement was not registered
DEBUG 2022-09-08 17:47:10,567 [main][TransactionImpl.java:66] : committing
DEBUG 2022-09-08 17:47:10,567 [main][AbstractFlushingEventListener.java:132] : Processing flush-time cascades
DEBUG 2022-09-08 17:47:10,567 [main][AbstractFlushingEventListener.java:174] : Dirty checking collections
DEBUG 2022-09-08 17:47:10,567 [main][AbstractFlushingEventListener.java:106] : Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
DEBUG 2022-09-08 17:47:10,567 [main][AbstractFlushingEventListener.java:113] : Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
DEBUG 2022-09-08 17:47:10,567 [main][EntityPrinter.java:102] : Listing entities:
DEBUG 2022-09-08 17:47:10,567 [main][EntityPrinter.java:109] : org.example.models.Author{name=Colleen Hoover, id=2, salary=526}
DEBUG 2022-09-08 17:47:10,568 [main][LogicalConnectionManagedImpl.java:154] : Initiating JDBC connection release from afterTransaction
DEBUG 2022-09-08 17:47:10,568 [main][LogicalConnectionManagedImpl.java:154] : Initiating JDBC connection release from afterTransaction
DEBUG 2022-09-08 17:47:10,569 [main][TransactionImpl.java:55] : begin
DEBUG 2022-09-08 17:47:10,570 [main][ActionQueue.java:272] : Executing identity-insert immediately
DEBUG 2022-09-08 17:47:10,570 [main][SqlStatementLogger.java:92] : insert into Author (name, salary) values (?, ?)
DEBUG 2022-09-08 17:47:10,571 [main][IdentifierGeneratorHelper.java:78] : Natively generated identity: 3
DEBUG 2022-09-08 17:47:10,571 [main][ResourceRegistryStandardImpl.java:104] : HHH000387: ResultSet's statement was not registered
DEBUG 2022-09-08 17:47:10,571 [main][TransactionImpl.java:66] : committing
DEBUG 2022-09-08 17:47:10,571 [main][AbstractFlushingEventListener.java:132] : Processing flush-time cascades
DEBUG 2022-09-08 17:47:10,572 [main][AbstractFlushingEventListener.java:174] : Dirty checking collections
DEBUG 2022-09-08 17:47:10,572 [main][AbstractFlushingEventListener.java:106] : Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
DEBUG 2022-09-08 17:47:10,572 [main][AbstractFlushingEventListener.java:113] : Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
DEBUG 2022-09-08 17:47:10,572 [main][EntityPrinter.java:102] : Listing entities:
DEBUG 2022-09-08 17:47:10,572 [main][EntityPrinter.java:109] : org.example.models.Author{name=Stuart Woods, id=3, salary=3458}
DEBUG 2022-09-08 17:47:10,573 [main][LogicalConnectionManagedImpl.java:154] : Initiating JDBC connection release from afterTransaction
DEBUG 2022-09-08 17:47:10,574 [main][LogicalConnectionManagedImpl.java:154] : Initiating JDBC connection release from afterTransaction
DEBUG 2022-09-08 17:47:10,574 [main][TransactionImpl.java:55] : begin
DEBUG 2022-09-08 17:47:10,575 [main][ActionQueue.java:272] : Executing identity-insert immediately
DEBUG 2022-09-08 17:47:10,575 [main][SqlStatementLogger.java:92] : insert into Author (name, salary) values (?, ?)
DEBUG 2022-09-08 17:47:10,576 [main][IdentifierGeneratorHelper.java:78] : Natively generated identity: 4
DEBUG 2022-09-08 17:47:10,576 [main][ResourceRegistryStandardImpl.java:104] : HHH000387: ResultSet's statement was not registered
DEBUG 2022-09-08 17:47:10,576 [main][TransactionImpl.java:66] : committing
DEBUG 2022-09-08 17:47:10,576 [main][AbstractFlushingEventListener.java:132] : Processing flush-time cascades
DEBUG 2022-09-08 17:47:10,576 [main][AbstractFlushingEventListener.java:174] : Dirty checking collections
DEBUG 2022-09-08 17:47:10,576 [main][AbstractFlushingEventListener.java:106] : Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
DEBUG 2022-09-08 17:47:10,576 [main][AbstractFlushingEventListener.java:113] : Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
DEBUG 2022-09-08 17:47:10,576 [main][EntityPrinter.java:102] : Listing entities:
DEBUG 2022-09-08 17:47:10,577 [main][EntityPrinter.java:109] : org.example.models.Author{name=Nora Roberts, id=4, salary=359}
DEBUG 2022-09-08 17:47:10,577 [main][LogicalConnectionManagedImpl.java:154] : Initiating JDBC connection release from afterTransaction
DEBUG 2022-09-08 17:47:10,577 [main][LogicalConnectionManagedImpl.java:154] : Initiating JDBC connection release from afterTransaction
DEBUG 2022-09-08 17:47:10,579 [main][TransactionImpl.java:55] : begin
DEBUG 2022-09-08 17:47:10,580 [main][ActionQueue.java:272] : Executing identity-insert immediately
DEBUG 2022-09-08 17:47:10,580 [main][SqlStatementLogger.java:92] : insert into Author (name, salary) values (?, ?)
DEBUG 2022-09-08 17:47:10,581 [main][IdentifierGeneratorHelper.java:78] : Natively generated identity: 5
DEBUG 2022-09-08 17:47:10,581 [main][ResourceRegistryStandardImpl.java:104] : HHH000387: ResultSet's statement was not registered
DEBUG 2022-09-08 17:47:10,581 [main][TransactionImpl.java:66] : committing
DEBUG 2022-09-08 17:47:10,581 [main][AbstractFlushingEventListener.java:132] : Processing flush-time cascades
DEBUG 2022-09-08 17:47:10,581 [main][AbstractFlushingEventListener.java:174] : Dirty checking collections
DEBUG 2022-09-08 17:47:10,581 [main][AbstractFlushingEventListener.java:106] : Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
DEBUG 2022-09-08 17:47:10,581 [main][AbstractFlushingEventListener.java:113] : Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
DEBUG 2022-09-08 17:47:10,582 [main][EntityPrinter.java:102] : Listing entities:
DEBUG 2022-09-08 17:47:10,582 [main][EntityPrinter.java:109] : org.example.models.Author{name=Michael Connelly, id=5, salary=383}
DEBUG 2022-09-08 17:47:10,582 [main][LogicalConnectionManagedImpl.java:154] : Initiating JDBC connection release from afterTransaction
DEBUG 2022-09-08 17:47:10,582 [main][LogicalConnectionManagedImpl.java:154] : Initiating JDBC connection release from afterTransaction
DEBUG 2022-09-08 17:47:10,590 [main][CriteriaQueryImpl.java:307] : Rendered criteria query -> select generatedAlias0 from Author as generatedAlias0
DEBUG 2022-09-08 17:47:10,597 [main][QueryTranslatorFactoryInitiator.java:45] : QueryTranslatorFactory : org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory@a90edd1d
INFO  2022-09-08 17:47:10,597 [main][QueryTranslatorFactoryInitiator.java:47] : HHH000397: Using ASTQueryTranslatorFactory
DEBUG 2022-09-08 17:47:10,615 [main][QueryTranslatorImpl.java:278] : parse() - HQL: select generatedAlias0 from org.example.models.Author as generatedAlias0
DEBUG 2022-09-08 17:47:10,618 [main][QueryTranslatorImpl.java:296] : --- HQL AST ---
 \-[QUERY] Node: 'query'
    \-[SELECT_FROM] Node: 'SELECT_FROM'
       +-[FROM] Node: 'from'
       |  \-[RANGE] Node: 'RANGE'
       |     +-[DOT] Node: '.'
       |     |  +-[DOT] Node: '.'
       |     |  |  +-[DOT] Node: '.'
       |     |  |  |  +-[IDENT] Node: 'org'
       |     |  |  |  \-[IDENT] Node: 'example'
       |     |  |  \-[IDENT] Node: 'models'
       |     |  \-[IDENT] Node: 'Author'
       |     \-[ALIAS] Node: 'generatedAlias0'
       \-[SELECT] Node: 'select'
          \-[IDENT] Node: 'generatedAlias0'

DEBUG 2022-09-08 17:47:10,618 [main][ErrorCounter.java:95] : throwQueryException() : no errors
DEBUG 2022-09-08 17:47:10,627 [main][HqlSqlBaseWalker.java:124] : select << begin [level=1, statement=select]
DEBUG 2022-09-08 17:47:10,631 [main][FromElement.java:148] : FromClause{level=1} : org.example.models.Author (generatedAlias0) -> author0_
DEBUG 2022-09-08 17:47:10,632 [main][FromReferenceNode.java:60] : Resolved : generatedAlias0 -> author0_.id
DEBUG 2022-09-08 17:47:10,632 [main][HqlSqlBaseWalker.java:128] : select : finishing up [level=1, statement=select]
DEBUG 2022-09-08 17:47:10,633 [main][HqlSqlWalker.java:725] : processQuery() :  ( SELECT ( {select clause} author0_.id ) ( FromClause{level=1} Author author0_ ) )
DEBUG 2022-09-08 17:47:10,635 [main][JoinProcessor.java:169] : Using FROM fragment [Author author0_]
DEBUG 2022-09-08 17:47:10,635 [main][HqlSqlBaseWalker.java:132] : select >> end [level=1, statement=select]
DEBUG 2022-09-08 17:47:10,636 [main][QueryTranslatorImpl.java:265] : --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (Author)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'author0_.id as id1_0_' {alias=generatedAlias0, className=org.example.models.Author, tableAlias=author0_}
    |  \-[SQL_TOKEN] SqlFragment: 'author0_.name as name2_0_, author0_.salary as salary3_0_'
    \-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[author0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'Author author0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=Author,tableAlias=author0_,origin=null,columns={,className=org.example.models.Author}}

DEBUG 2022-09-08 17:47:10,637 [main][ErrorCounter.java:95] : throwQueryException() : no errors
DEBUG 2022-09-08 17:47:10,640 [main][QueryTranslatorImpl.java:247] : HQL: select generatedAlias0 from org.example.models.Author as generatedAlias0
DEBUG 2022-09-08 17:47:10,640 [main][QueryTranslatorImpl.java:248] : SQL: select author0_.id as id1_0_, author0_.name as name2_0_, author0_.salary as salary3_0_ from Author author0_
DEBUG 2022-09-08 17:47:10,640 [main][ErrorCounter.java:95] : throwQueryException() : no errors
DEBUG 2022-09-08 17:47:10,646 [main][SqlStatementLogger.java:92] : select author0_.id as id1_0_, author0_.name as name2_0_, author0_.salary as salary3_0_ from Author author0_
DEBUG 2022-09-08 17:47:10,648 [main][DelegatingBasicLogger.java:384] : Result set row: 0
DEBUG 2022-09-08 17:47:10,649 [main][Loader.java:1527] : Result row: EntityKey[org.example.models.Author#1]
DEBUG 2022-09-08 17:47:10,650 [main][DelegatingBasicLogger.java:384] : Result set row: 1
DEBUG 2022-09-08 17:47:10,650 [main][Loader.java:1527] : Result row: EntityKey[org.example.models.Author#2]
DEBUG 2022-09-08 17:47:10,650 [main][DelegatingBasicLogger.java:384] : Result set row: 2
DEBUG 2022-09-08 17:47:10,650 [main][Loader.java:1527] : Result row: EntityKey[org.example.models.Author#3]
DEBUG 2022-09-08 17:47:10,650 [main][DelegatingBasicLogger.java:384] : Result set row: 3
DEBUG 2022-09-08 17:47:10,650 [main][Loader.java:1527] : Result row: EntityKey[org.example.models.Author#4]
DEBUG 2022-09-08 17:47:10,651 [main][DelegatingBasicLogger.java:384] : Result set row: 4
DEBUG 2022-09-08 17:47:10,651 [main][Loader.java:1527] : Result row: EntityKey[org.example.models.Author#5]
DEBUG 2022-09-08 17:47:10,652 [main][TwoPhaseLoad.java:141] : Resolving associations for [org.example.models.Author#1]
DEBUG 2022-09-08 17:47:10,652 [main][TwoPhaseLoad.java:267] : Done materializing entity [org.example.models.Author#1]
DEBUG 2022-09-08 17:47:10,652 [main][TwoPhaseLoad.java:141] : Resolving associations for [org.example.models.Author#2]
DEBUG 2022-09-08 17:47:10,652 [main][TwoPhaseLoad.java:267] : Done materializing entity [org.example.models.Author#2]
DEBUG 2022-09-08 17:47:10,653 [main][TwoPhaseLoad.java:141] : Resolving associations for [org.example.models.Author#3]
DEBUG 2022-09-08 17:47:10,653 [main][TwoPhaseLoad.java:267] : Done materializing entity [org.example.models.Author#3]
DEBUG 2022-09-08 17:47:10,653 [main][TwoPhaseLoad.java:141] : Resolving associations for [org.example.models.Author#4]
DEBUG 2022-09-08 17:47:10,653 [main][TwoPhaseLoad.java:267] : Done materializing entity [org.example.models.Author#4]
DEBUG 2022-09-08 17:47:10,653 [main][TwoPhaseLoad.java:141] : Resolving associations for [org.example.models.Author#5]
DEBUG 2022-09-08 17:47:10,653 [main][TwoPhaseLoad.java:267] : Done materializing entity [org.example.models.Author#5]
DEBUG 2022-09-08 17:47:10,653 [main][LogicalConnectionManagedImpl.java:154] : Initiating JDBC connection release from afterTransaction
DEBUG 2022-09-08 17:47:10,661 [main][SqlStatementLogger.java:92] : SELECT * FROM Author
DEBUG 2022-09-08 17:47:10,663 [main][DelegatingBasicLogger.java:384] : Result set row: 0
DEBUG 2022-09-08 17:47:10,663 [main][Loader.java:1527] : Result row: EntityKey[org.example.models.Author#1]
DEBUG 2022-09-08 17:47:10,663 [main][DelegatingBasicLogger.java:384] : Result set row: 1
DEBUG 2022-09-08 17:47:10,663 [main][Loader.java:1527] : Result row: EntityKey[org.example.models.Author#2]
DEBUG 2022-09-08 17:47:10,663 [main][DelegatingBasicLogger.java:384] : Result set row: 2
DEBUG 2022-09-08 17:47:10,664 [main][Loader.java:1527] : Result row: EntityKey[org.example.models.Author#3]
DEBUG 2022-09-08 17:47:10,664 [main][DelegatingBasicLogger.java:384] : Result set row: 3
DEBUG 2022-09-08 17:47:10,664 [main][Loader.java:1527] : Result row: EntityKey[org.example.models.Author#4]
DEBUG 2022-09-08 17:47:10,664 [main][DelegatingBasicLogger.java:384] : Result set row: 4
DEBUG 2022-09-08 17:47:10,664 [main][Loader.java:1527] : Result row: EntityKey[org.example.models.Author#5]
DEBUG 2022-09-08 17:47:10,664 [main][TwoPhaseLoad.java:141] : Resolving associations for [org.example.models.Author#1]
DEBUG 2022-09-08 17:47:10,664 [main][TwoPhaseLoad.java:267] : Done materializing entity [org.example.models.Author#1]
DEBUG 2022-09-08 17:47:10,664 [main][TwoPhaseLoad.java:141] : Resolving associations for [org.example.models.Author#2]
DEBUG 2022-09-08 17:47:10,665 [main][TwoPhaseLoad.java:267] : Done materializing entity [org.example.models.Author#2]
DEBUG 2022-09-08 17:47:10,665 [main][TwoPhaseLoad.java:141] : Resolving associations for [org.example.models.Author#3]
DEBUG 2022-09-08 17:47:10,665 [main][TwoPhaseLoad.java:267] : Done materializing entity [org.example.models.Author#3]
DEBUG 2022-09-08 17:47:10,665 [main][TwoPhaseLoad.java:141] : Resolving associations for [org.example.models.Author#4]
DEBUG 2022-09-08 17:47:10,665 [main][TwoPhaseLoad.java:267] : Done materializing entity [org.example.models.Author#4]
DEBUG 2022-09-08 17:47:10,667 [main][TwoPhaseLoad.java:141] : Resolving associations for [org.example.models.Author#5]
DEBUG 2022-09-08 17:47:10,667 [main][TwoPhaseLoad.java:267] : Done materializing entity [org.example.models.Author#5]
DEBUG 2022-09-08 17:47:10,667 [main][LogicalConnectionManagedImpl.java:154] : Initiating JDBC connection release from afterTransaction
DEBUG 2022-09-08 17:47:10,669 [main][SqlStatementLogger.java:92] : select author0_.id as id1_0_0_, author0_.name as name2_0_0_, author0_.salary as salary3_0_0_ from Author author0_ where author0_.id=?
DEBUG 2022-09-08 17:47:10,672 [main][ResultSetProcessorImpl.java:120] : Starting ResultSet row #0
DEBUG 2022-09-08 17:47:10,673 [main][EntityReferenceInitializerImpl.java:126] : On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
DEBUG 2022-09-08 17:47:10,674 [main][TwoPhaseLoad.java:141] : Resolving associations for [org.example.models.Author#2]
DEBUG 2022-09-08 17:47:10,674 [main][TwoPhaseLoad.java:267] : Done materializing entity [org.example.models.Author#2]
DEBUG 2022-09-08 17:47:10,674 [main][ResourceRegistryStandardImpl.java:73] : HHH000387: ResultSet's statement was not registered
DEBUG 2022-09-08 17:47:10,675 [main][AbstractLoadPlanBasedEntityLoader.java:189] : Done entity load : org.example.models.Author#2
DEBUG 2022-09-08 17:47:10,675 [main][LogicalConnectionManagedImpl.java:154] : Initiating JDBC connection release from afterTransaction
DEBUG 2022-09-08 17:47:10,676 [main][QueryTranslatorImpl.java:278] : parse() - HQL: select a from org.example.models.Author a where a.salary between :minSalary and :maxSalary
DEBUG 2022-09-08 17:47:10,677 [main][QueryTranslatorImpl.java:296] : --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[IDENT] Node: 'org'
    |  |     |  |  |  \-[IDENT] Node: 'example'
    |  |     |  |  \-[IDENT] Node: 'models'
    |  |     |  \-[IDENT] Node: 'Author'
    |  |     \-[ALIAS] Node: 'a'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'a'
    \-[WHERE] Node: 'where'
       \-[BETWEEN] Node: 'between'
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'a'
          |  \-[IDENT] Node: 'salary'
          +-[COLON] Node: ':'
          |  \-[IDENT] Node: 'minSalary'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'maxSalary'

DEBUG 2022-09-08 17:47:10,678 [main][ErrorCounter.java:95] : throwQueryException() : no errors
DEBUG 2022-09-08 17:47:10,678 [main][HqlSqlBaseWalker.java:124] : select << begin [level=1, statement=select]
DEBUG 2022-09-08 17:47:10,678 [main][FromElement.java:148] : FromClause{level=1} : org.example.models.Author (a) -> author0_
DEBUG 2022-09-08 17:47:10,679 [main][FromReferenceNode.java:60] : Resolved : a -> author0_.id
DEBUG 2022-09-08 17:47:10,679 [main][FromReferenceNode.java:60] : Resolved : a -> author0_.id
DEBUG 2022-09-08 17:47:10,680 [main][DotNode.java:661] : getDataType() : salary -> org.hibernate.type.IntegerType@1730bd2d
DEBUG 2022-09-08 17:47:10,680 [main][FromReferenceNode.java:60] : Resolved : a.salary -> author0_.salary
DEBUG 2022-09-08 17:47:10,681 [main][HqlSqlBaseWalker.java:128] : select : finishing up [level=1, statement=select]
DEBUG 2022-09-08 17:47:10,681 [main][HqlSqlWalker.java:725] : processQuery() :  ( SELECT ( {select clause} author0_.id ) ( FromClause{level=1} Author author0_ ) ( where ( between ( author0_.salary author0_.id salary ) ? ? ) ) )
DEBUG 2022-09-08 17:47:10,681 [main][JoinProcessor.java:169] : Using FROM fragment [Author author0_]
DEBUG 2022-09-08 17:47:10,681 [main][HqlSqlBaseWalker.java:132] : select >> end [level=1, statement=select]
DEBUG 2022-09-08 17:47:10,682 [main][QueryTranslatorImpl.java:265] : --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (Author)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'author0_.id as id1_0_' {alias=a, className=org.example.models.Author, tableAlias=author0_}
    |  \-[SQL_TOKEN] SqlFragment: 'author0_.name as name2_0_, author0_.salary as salary3_0_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[a], fromElementByTableAlias=[author0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'Author author0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=a,role=null,tableName=Author,tableAlias=author0_,origin=null,columns={,className=org.example.models.Author}}
    \-[WHERE] SqlNode: 'where'
       \-[BETWEEN] BetweenOperatorNode: 'between'
          +-[DOT] DotNode: 'author0_.salary' {propertyName=salary,dereferenceType=PRIMITIVE,getPropertyPath=salary,path=a.salary,tableAlias=author0_,className=org.example.models.Author,classAlias=a}
          |  +-[ALIAS_REF] IdentNode: 'author0_.id' {alias=a, className=org.example.models.Author, tableAlias=author0_}
          |  \-[IDENT] IdentNode: 'salary' {originalText=salary}
          +-[NAMED_PARAM] ParameterNode: '?' {name=minSalary, expectedType=org.hibernate.type.IntegerType@1730bd2d}
          \-[NAMED_PARAM] ParameterNode: '?' {name=maxSalary, expectedType=org.hibernate.type.IntegerType@1730bd2d}

DEBUG 2022-09-08 17:47:10,682 [main][ErrorCounter.java:95] : throwQueryException() : no errors
DEBUG 2022-09-08 17:47:10,682 [main][QueryTranslatorImpl.java:247] : HQL: select a from org.example.models.Author a where a.salary between :minSalary and :maxSalary
DEBUG 2022-09-08 17:47:10,682 [main][QueryTranslatorImpl.java:248] : SQL: select author0_.id as id1_0_, author0_.name as name2_0_, author0_.salary as salary3_0_ from Author author0_ where author0_.salary between ? and ?
DEBUG 2022-09-08 17:47:10,682 [main][ErrorCounter.java:95] : throwQueryException() : no errors
DEBUG 2022-09-08 17:47:10,684 [main][SqlStatementLogger.java:92] : select author0_.id as id1_0_, author0_.name as name2_0_, author0_.salary as salary3_0_ from Author author0_ where author0_.salary between ? and ?
DEBUG 2022-09-08 17:47:10,686 [main][DelegatingBasicLogger.java:384] : Result set row: 0
DEBUG 2022-09-08 17:47:10,686 [main][Loader.java:1527] : Result row: EntityKey[org.example.models.Author#3]
DEBUG 2022-09-08 17:47:10,686 [main][TwoPhaseLoad.java:141] : Resolving associations for [org.example.models.Author#3]
DEBUG 2022-09-08 17:47:10,686 [main][TwoPhaseLoad.java:267] : Done materializing entity [org.example.models.Author#3]
DEBUG 2022-09-08 17:47:10,686 [main][LogicalConnectionManagedImpl.java:154] : Initiating JDBC connection release from afterTransaction
DEBUG 2022-09-08 17:47:10,687 [main][SqlStatementLogger.java:92] : select author0_.id as id1_0_0_, author0_.name as name2_0_0_, author0_.salary as salary3_0_0_ from Author author0_ where author0_.id=?
DEBUG 2022-09-08 17:47:10,688 [main][ResultSetProcessorImpl.java:120] : Starting ResultSet row #0
DEBUG 2022-09-08 17:47:10,690 [main][EntityReferenceInitializerImpl.java:126] : On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
DEBUG 2022-09-08 17:47:10,690 [main][TwoPhaseLoad.java:141] : Resolving associations for [org.example.models.Author#2]
DEBUG 2022-09-08 17:47:10,690 [main][TwoPhaseLoad.java:267] : Done materializing entity [org.example.models.Author#2]
DEBUG 2022-09-08 17:47:10,690 [main][ResourceRegistryStandardImpl.java:73] : HHH000387: ResultSet's statement was not registered
DEBUG 2022-09-08 17:47:10,690 [main][AbstractLoadPlanBasedEntityLoader.java:189] : Done entity load : org.example.models.Author#2
DEBUG 2022-09-08 17:47:10,690 [main][LogicalConnectionManagedImpl.java:154] : Initiating JDBC connection release from afterTransaction
DEBUG 2022-09-08 17:47:10,691 [main][TransactionImpl.java:55] : begin
DEBUG 2022-09-08 17:47:10,692 [main][TransactionImpl.java:66] : committing
DEBUG 2022-09-08 17:47:10,692 [main][AbstractFlushingEventListener.java:132] : Processing flush-time cascades
DEBUG 2022-09-08 17:47:10,692 [main][AbstractFlushingEventListener.java:174] : Dirty checking collections
DEBUG 2022-09-08 17:47:10,693 [main][AbstractFlushingEventListener.java:106] : Flushed: 0 insertions, 1 updates, 0 deletions to 1 objects
DEBUG 2022-09-08 17:47:10,693 [main][AbstractFlushingEventListener.java:113] : Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
DEBUG 2022-09-08 17:47:10,693 [main][EntityPrinter.java:102] : Listing entities:
DEBUG 2022-09-08 17:47:10,693 [main][EntityPrinter.java:109] : org.example.models.Author{name=Ihor Kosolapow, id=2, salary=526}
DEBUG 2022-09-08 17:47:10,696 [main][SqlStatementLogger.java:92] : update Author set name=? where id=?
DEBUG 2022-09-08 17:47:10,698 [main][LogicalConnectionManagedImpl.java:154] : Initiating JDBC connection release from afterTransaction
DEBUG 2022-09-08 17:47:10,698 [main][LogicalConnectionManagedImpl.java:154] : Initiating JDBC connection release from afterTransaction
DEBUG 2022-09-08 17:47:10,698 [main][JdbcCoordinatorImpl.java:177] : HHH000420: Closing un-released batch
DEBUG 2022-09-08 17:47:10,699 [main][SqlStatementLogger.java:92] : select author0_.id as id1_0_0_, author0_.name as name2_0_0_, author0_.salary as salary3_0_0_ from Author author0_ where author0_.id=?
DEBUG 2022-09-08 17:47:10,700 [main][ResultSetProcessorImpl.java:120] : Starting ResultSet row #0
DEBUG 2022-09-08 17:47:10,701 [main][EntityReferenceInitializerImpl.java:126] : On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
DEBUG 2022-09-08 17:47:10,701 [main][TwoPhaseLoad.java:141] : Resolving associations for [org.example.models.Author#2]
DEBUG 2022-09-08 17:47:10,701 [main][TwoPhaseLoad.java:267] : Done materializing entity [org.example.models.Author#2]
DEBUG 2022-09-08 17:47:10,701 [main][ResourceRegistryStandardImpl.java:73] : HHH000387: ResultSet's statement was not registered
DEBUG 2022-09-08 17:47:10,702 [main][AbstractLoadPlanBasedEntityLoader.java:189] : Done entity load : org.example.models.Author#2
DEBUG 2022-09-08 17:47:10,702 [main][LogicalConnectionManagedImpl.java:154] : Initiating JDBC connection release from afterTransaction
DEBUG 2022-09-08 17:47:40,021 [pool-1-thread-1][PooledConnections.java:51] : Connection pool now considered primed; min-size will be maintained
WARN  2022-09-08 17:52:24,163 [main][Main.java:16] : TEST
DEBUG 2022-09-08 17:52:24,217 [main][CoreLogging.java:28] : Logging Provider: org.jboss.logging.Log4jLoggerProvider
DEBUG 2022-09-08 17:52:24,225 [main][IntegratorServiceImpl.java:46] : Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
DEBUG 2022-09-08 17:52:24,227 [main][IntegratorServiceImpl.java:46] : Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
DEBUG 2022-09-08 17:52:24,231 [main][IntegratorServiceImpl.java:46] : Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
INFO  2022-09-08 17:52:24,319 [main][Version.java:45] : HHH000412: Hibernate Core {5.2.2.Final}
INFO  2022-09-08 17:52:24,321 [main][Environment.java:213] : HHH000206: hibernate.properties not found
INFO  2022-09-08 17:52:24,322 [main][Environment.java:318] : HHH000021: Bytecode provider name : javassist
DEBUG 2022-09-08 17:52:24,353 [main][LocalXmlResourceResolver.java:57] : Interpreting public/system identifier : [null] - [http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd]
DEBUG 2022-09-08 17:52:24,354 [main][LocalXmlResourceResolver.java:85] : Recognized hibernate-configuration identifier; attempting to resolve on classpath under org/hibernate/
DEBUG 2022-09-08 17:52:24,362 [main][JaxbCfgProcessor.java:116] : cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
DEBUG 2022-09-08 17:52:24,593 [main][Configuration.java:724] : Building session factory using internal StandardServiceRegistryBuilder
DEBUG 2022-09-08 17:52:24,597 [main][ServiceBinding.java:68] : Overriding existing service binding [org.hibernate.secure.spi.JaccService]
DEBUG 2022-09-08 17:52:24,597 [main][Configuration.java:652] : Building session factory using provided StandardServiceRegistry
DEBUG 2022-09-08 17:52:24,607 [main][RegionFactoryInitiator.java:75] : Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
INFO  2022-09-08 17:52:24,615 [main][JavaReflectionManager.java:66] : HCANN000001: Hibernate Commons Annotations {5.0.1.Final}
DEBUG 2022-09-08 17:52:24,629 [main][BasicTypeRegistry.java:145] : Adding type registration boolean -> org.hibernate.type.BooleanType@7ce86b3
DEBUG 2022-09-08 17:52:24,629 [main][BasicTypeRegistry.java:145] : Adding type registration boolean -> org.hibernate.type.BooleanType@7ce86b3
DEBUG 2022-09-08 17:52:24,631 [main][BasicTypeRegistry.java:145] : Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@7ce86b3
DEBUG 2022-09-08 17:52:24,632 [main][BasicTypeRegistry.java:145] : Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@5b7559c2
DEBUG 2022-09-08 17:52:24,633 [main][BasicTypeRegistry.java:145] : Adding type registration true_false -> org.hibernate.type.TrueFalseType@1371ee19
DEBUG 2022-09-08 17:52:24,634 [main][BasicTypeRegistry.java:145] : Adding type registration yes_no -> org.hibernate.type.YesNoType@f6c68fa4
DEBUG 2022-09-08 17:52:24,635 [main][BasicTypeRegistry.java:145] : Adding type registration byte -> org.hibernate.type.ByteType@6ca22bf0
DEBUG 2022-09-08 17:52:24,636 [main][BasicTypeRegistry.java:145] : Adding type registration byte -> org.hibernate.type.ByteType@6ca22bf0
DEBUG 2022-09-08 17:52:24,636 [main][BasicTypeRegistry.java:145] : Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@6ca22bf0
DEBUG 2022-09-08 17:52:24,637 [main][BasicTypeRegistry.java:145] : Adding type registration character -> org.hibernate.type.CharacterType@5e290ff4
DEBUG 2022-09-08 17:52:24,638 [main][BasicTypeRegistry.java:145] : Adding type registration char -> org.hibernate.type.CharacterType@5e290ff4
DEBUG 2022-09-08 17:52:24,639 [main][BasicTypeRegistry.java:145] : Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@5e290ff4
DEBUG 2022-09-08 17:52:24,640 [main][BasicTypeRegistry.java:145] : Adding type registration short -> org.hibernate.type.ShortType@9b6d973f
DEBUG 2022-09-08 17:52:24,640 [main][BasicTypeRegistry.java:145] : Adding type registration short -> org.hibernate.type.ShortType@9b6d973f
DEBUG 2022-09-08 17:52:24,641 [main][BasicTypeRegistry.java:145] : Adding type registration java.lang.Short -> org.hibernate.type.ShortType@9b6d973f
DEBUG 2022-09-08 17:52:24,642 [main][BasicTypeRegistry.java:145] : Adding type registration integer -> org.hibernate.type.IntegerType@5acb379f
DEBUG 2022-09-08 17:52:24,643 [main][BasicTypeRegistry.java:145] : Adding type registration int -> org.hibernate.type.IntegerType@5acb379f
DEBUG 2022-09-08 17:52:24,643 [main][BasicTypeRegistry.java:145] : Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@5acb379f
DEBUG 2022-09-08 17:52:24,645 [main][BasicTypeRegistry.java:145] : Adding type registration long -> org.hibernate.type.LongType@60f6fa83
DEBUG 2022-09-08 17:52:24,646 [main][BasicTypeRegistry.java:145] : Adding type registration long -> org.hibernate.type.LongType@60f6fa83
DEBUG 2022-09-08 17:52:24,646 [main][BasicTypeRegistry.java:145] : Adding type registration java.lang.Long -> org.hibernate.type.LongType@60f6fa83
DEBUG 2022-09-08 17:52:24,647 [main][BasicTypeRegistry.java:145] : Adding type registration float -> org.hibernate.type.FloatType@ffba9ae1
DEBUG 2022-09-08 17:52:24,648 [main][BasicTypeRegistry.java:145] : Adding type registration float -> org.hibernate.type.FloatType@ffba9ae1
DEBUG 2022-09-08 17:52:24,649 [main][BasicTypeRegistry.java:145] : Adding type registration java.lang.Float -> org.hibernate.type.FloatType@ffba9ae1
DEBUG 2022-09-08 17:52:24,650 [main][BasicTypeRegistry.java:145] : Adding type registration double -> org.hibernate.type.DoubleType@332707c
DEBUG 2022-09-08 17:52:24,651 [main][BasicTypeRegistry.java:145] : Adding type registration double -> org.hibernate.type.DoubleType@332707c
DEBUG 2022-09-08 17:52:24,652 [main][BasicTypeRegistry.java:145] : Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@332707c
DEBUG 2022-09-08 17:52:24,653 [main][BasicTypeRegistry.java:145] : Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@f911c251
DEBUG 2022-09-08 17:52:24,654 [main][BasicTypeRegistry.java:145] : Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@f911c251
DEBUG 2022-09-08 17:52:24,656 [main][BasicTypeRegistry.java:145] : Adding type registration big_integer -> org.hibernate.type.BigIntegerType@d6190c7e
DEBUG 2022-09-08 17:52:24,657 [main][BasicTypeRegistry.java:145] : Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@d6190c7e
DEBUG 2022-09-08 17:52:24,658 [main][BasicTypeRegistry.java:145] : Adding type registration string -> org.hibernate.type.StringType@4c0e7647
DEBUG 2022-09-08 17:52:24,659 [main][BasicTypeRegistry.java:145] : Adding type registration java.lang.String -> org.hibernate.type.StringType@4c0e7647
DEBUG 2022-09-08 17:52:24,660 [main][BasicTypeRegistry.java:145] : Adding type registration nstring -> org.hibernate.type.StringNVarcharType@d8aa7dc1
DEBUG 2022-09-08 17:52:24,661 [main][BasicTypeRegistry.java:145] : Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@1edc3de9
DEBUG 2022-09-08 17:52:24,662 [main][BasicTypeRegistry.java:145] : Adding type registration url -> org.hibernate.type.UrlType@f9ded9d5
DEBUG 2022-09-08 17:52:24,662 [main][BasicTypeRegistry.java:145] : Adding type registration java.net.URL -> org.hibernate.type.UrlType@f9ded9d5
DEBUG 2022-09-08 17:52:24,663 [main][BasicTypeRegistry.java:145] : Adding type registration Duration -> org.hibernate.type.DurationType@7a115b8b
DEBUG 2022-09-08 17:52:24,664 [main][BasicTypeRegistry.java:145] : Adding type registration java.time.Duration -> org.hibernate.type.DurationType@7a115b8b
DEBUG 2022-09-08 17:52:24,670 [main][BasicTypeRegistry.java:145] : Adding type registration Instant -> org.hibernate.type.InstantType@43bbe4aa
DEBUG 2022-09-08 17:52:24,670 [main][BasicTypeRegistry.java:145] : Adding type registration java.time.Instant -> org.hibernate.type.InstantType@43bbe4aa
DEBUG 2022-09-08 17:52:24,672 [main][BasicTypeRegistry.java:145] : Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@b12f2f25
DEBUG 2022-09-08 17:52:24,672 [main][BasicTypeRegistry.java:145] : Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@b12f2f25
DEBUG 2022-09-08 17:52:24,673 [main][BasicTypeRegistry.java:145] : Adding type registration LocalDate -> org.hibernate.type.LocalDateType@e3f46ecb
DEBUG 2022-09-08 17:52:24,673 [main][BasicTypeRegistry.java:145] : Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@e3f46ecb
DEBUG 2022-09-08 17:52:24,674 [main][BasicTypeRegistry.java:145] : Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@92539d1c
DEBUG 2022-09-08 17:52:24,675 [main][BasicTypeRegistry.java:145] : Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@92539d1c
DEBUG 2022-09-08 17:52:24,676 [main][BasicTypeRegistry.java:145] : Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@daf557e6
DEBUG 2022-09-08 17:52:24,677 [main][BasicTypeRegistry.java:145] : Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@daf557e6
DEBUG 2022-09-08 17:52:24,678 [main][BasicTypeRegistry.java:145] : Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@51e4bb0e
DEBUG 2022-09-08 17:52:24,679 [main][BasicTypeRegistry.java:145] : Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@51e4bb0e
DEBUG 2022-09-08 17:52:24,680 [main][BasicTypeRegistry.java:145] : Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@3641cf80
DEBUG 2022-09-08 17:52:24,680 [main][BasicTypeRegistry.java:145] : Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@3641cf80
DEBUG 2022-09-08 17:52:24,682 [main][BasicTypeRegistry.java:145] : Adding type registration date -> org.hibernate.type.DateType@dbbbe2db
DEBUG 2022-09-08 17:52:24,682 [main][BasicTypeRegistry.java:145] : Adding type registration java.sql.Date -> org.hibernate.type.DateType@dbbbe2db
DEBUG 2022-09-08 17:52:24,683 [main][BasicTypeRegistry.java:145] : Adding type registration time -> org.hibernate.type.TimeType@c0cf10ac
DEBUG 2022-09-08 17:52:24,683 [main][BasicTypeRegistry.java:145] : Adding type registration java.sql.Time -> org.hibernate.type.TimeType@c0cf10ac
DEBUG 2022-09-08 17:52:24,684 [main][BasicTypeRegistry.java:145] : Adding type registration timestamp -> org.hibernate.type.TimestampType@83eafe9
DEBUG 2022-09-08 17:52:24,684 [main][BasicTypeRegistry.java:145] : Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@83eafe9
DEBUG 2022-09-08 17:52:24,684 [main][BasicTypeRegistry.java:145] : Adding type registration java.util.Date -> org.hibernate.type.TimestampType@83eafe9
DEBUG 2022-09-08 17:52:24,686 [main][BasicTypeRegistry.java:145] : Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@5331c6b4
DEBUG 2022-09-08 17:52:24,687 [main][BasicTypeRegistry.java:145] : Adding type registration calendar -> org.hibernate.type.CalendarType@18fef471
DEBUG 2022-09-08 17:52:24,687 [main][BasicTypeRegistry.java:145] : Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@18fef471
DEBUG 2022-09-08 17:52:24,687 [main][BasicTypeRegistry.java:145] : Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@18fef471
DEBUG 2022-09-08 17:52:24,688 [main][BasicTypeRegistry.java:145] : Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@fbcbdd7
DEBUG 2022-09-08 17:52:24,688 [main][BasicTypeRegistry.java:145] : Adding type registration locale -> org.hibernate.type.LocaleType@69a08bb6
DEBUG 2022-09-08 17:52:24,689 [main][BasicTypeRegistry.java:145] : Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@69a08bb6
DEBUG 2022-09-08 17:52:24,690 [main][BasicTypeRegistry.java:145] : Adding type registration currency -> org.hibernate.type.CurrencyType@644b7b1b
DEBUG 2022-09-08 17:52:24,690 [main][BasicTypeRegistry.java:145] : Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@644b7b1b
DEBUG 2022-09-08 17:52:24,691 [main][BasicTypeRegistry.java:145] : Adding type registration timezone -> org.hibernate.type.TimeZoneType@710a62dc
DEBUG 2022-09-08 17:52:24,691 [main][BasicTypeRegistry.java:145] : Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@710a62dc
DEBUG 2022-09-08 17:52:24,692 [main][BasicTypeRegistry.java:145] : Adding type registration class -> org.hibernate.type.ClassType@9fa1fe1a
DEBUG 2022-09-08 17:52:24,692 [main][BasicTypeRegistry.java:145] : Adding type registration java.lang.Class -> org.hibernate.type.ClassType@9fa1fe1a
DEBUG 2022-09-08 17:52:24,693 [main][BasicTypeRegistry.java:145] : Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@c33e3d9a
DEBUG 2022-09-08 17:52:24,693 [main][BasicTypeRegistry.java:145] : Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@c33e3d9a
DEBUG 2022-09-08 17:52:24,694 [main][BasicTypeRegistry.java:145] : Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@259c6ede
DEBUG 2022-09-08 17:52:24,695 [main][BasicTypeRegistry.java:145] : Adding type registration binary -> org.hibernate.type.BinaryType@2d1be3b4
DEBUG 2022-09-08 17:52:24,696 [main][BasicTypeRegistry.java:145] : Adding type registration byte[] -> org.hibernate.type.BinaryType@2d1be3b4
DEBUG 2022-09-08 17:52:24,696 [main][BasicTypeRegistry.java:145] : Adding type registration [B -> org.hibernate.type.BinaryType@2d1be3b4
DEBUG 2022-09-08 17:52:24,697 [main][BasicTypeRegistry.java:145] : Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@c53b5afb
DEBUG 2022-09-08 17:52:24,697 [main][BasicTypeRegistry.java:145] : Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@c53b5afb
DEBUG 2022-09-08 17:52:24,697 [main][BasicTypeRegistry.java:145] : Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@c53b5afb
DEBUG 2022-09-08 17:52:24,698 [main][BasicTypeRegistry.java:145] : Adding type registration row_version -> org.hibernate.type.RowVersionType@c80bd982
DEBUG 2022-09-08 17:52:24,698 [main][BasicTypeRegistry.java:145] : Adding type registration image -> org.hibernate.type.ImageType@6c749de3
DEBUG 2022-09-08 17:52:24,699 [main][BasicTypeRegistry.java:145] : Adding type registration characters -> org.hibernate.type.CharArrayType@a29cb588
DEBUG 2022-09-08 17:52:24,699 [main][BasicTypeRegistry.java:145] : Adding type registration char[] -> org.hibernate.type.CharArrayType@a29cb588
DEBUG 2022-09-08 17:52:24,699 [main][BasicTypeRegistry.java:145] : Adding type registration [C -> org.hibernate.type.CharArrayType@a29cb588
DEBUG 2022-09-08 17:52:24,700 [main][BasicTypeRegistry.java:145] : Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@5eac9d22
DEBUG 2022-09-08 17:52:24,700 [main][BasicTypeRegistry.java:145] : Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@5eac9d22
DEBUG 2022-09-08 17:52:24,701 [main][BasicTypeRegistry.java:145] : Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@5eac9d22
DEBUG 2022-09-08 17:52:24,701 [main][BasicTypeRegistry.java:145] : Adding type registration text -> org.hibernate.type.TextType@4ed93f9f
DEBUG 2022-09-08 17:52:24,701 [main][BasicTypeRegistry.java:145] : Adding type registration ntext -> org.hibernate.type.NTextType@7b481040
DEBUG 2022-09-08 17:52:24,704 [main][BasicTypeRegistry.java:145] : Adding type registration blob -> org.hibernate.type.BlobType@897907af
DEBUG 2022-09-08 17:52:24,704 [main][BasicTypeRegistry.java:145] : Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@897907af
DEBUG 2022-09-08 17:52:24,705 [main][BasicTypeRegistry.java:145] : Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@87c7fecc
DEBUG 2022-09-08 17:52:24,707 [main][BasicTypeRegistry.java:145] : Adding type registration clob -> org.hibernate.type.ClobType@b18a39c6
DEBUG 2022-09-08 17:52:24,707 [main][BasicTypeRegistry.java:145] : Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@b18a39c6
DEBUG 2022-09-08 17:52:24,709 [main][BasicTypeRegistry.java:145] : Adding type registration nclob -> org.hibernate.type.NClobType@b40df393
DEBUG 2022-09-08 17:52:24,709 [main][BasicTypeRegistry.java:145] : Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@b40df393
DEBUG 2022-09-08 17:52:24,710 [main][BasicTypeRegistry.java:145] : Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@2de9471d
DEBUG 2022-09-08 17:52:24,710 [main][BasicTypeRegistry.java:145] : Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@512f2155
DEBUG 2022-09-08 17:52:24,712 [main][BasicTypeRegistry.java:145] : Adding type registration serializable -> org.hibernate.type.SerializableType@9175cd58
DEBUG 2022-09-08 17:52:24,713 [main][BasicTypeRegistry.java:145] : Adding type registration object -> org.hibernate.type.ObjectType@f25bcae5
DEBUG 2022-09-08 17:52:24,714 [main][BasicTypeRegistry.java:145] : Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@f25bcae5
DEBUG 2022-09-08 17:52:24,714 [main][BasicTypeRegistry.java:145] : Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@68b19f45
DEBUG 2022-09-08 17:52:24,714 [main][BasicTypeRegistry.java:145] : Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@ad368442
DEBUG 2022-09-08 17:52:24,715 [main][BasicTypeRegistry.java:145] : Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@58e42848
DEBUG 2022-09-08 17:52:24,715 [main][BasicTypeRegistry.java:145] : Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@63f0b49d
DEBUG 2022-09-08 17:52:24,715 [main][BasicTypeRegistry.java:145] : Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@3fb54eab
DEBUG 2022-09-08 17:52:24,715 [main][BasicTypeRegistry.java:145] : Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@97975f82
DEBUG 2022-09-08 17:52:24,716 [main][BasicTypeRegistry.java:145] : Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@ca80f35d
DEBUG 2022-09-08 17:52:24,716 [main][BasicTypeRegistry.java:145] : Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@7eb86432
WARN  2022-09-08 17:52:24,722 [main][DriverManagerConnectionProviderImpl.java:70] : HHH10001002: Using Hibernate built-in connection pool (not for production use!)
INFO  2022-09-08 17:52:24,727 [main][DriverManagerConnectionProviderImpl.java:126] : HHH10001005: using driver [com.mysql.cj.jdbc.Driver] at URL [jdbc:mysql://localhost:3306/classicmodels?serverTimezone=UTC]
INFO  2022-09-08 17:52:24,727 [main][DriverManagerConnectionProviderImpl.java:132] : HHH10001001: Connection properties: {password=rootroot, user=root}
INFO  2022-09-08 17:52:24,728 [main][DriverManagerConnectionProviderImpl.java:140] : HHH10001003: Autocommit mode: false
DEBUG 2022-09-08 17:52:24,731 [main][DelegatingBasicLogger.java:384] : Initializing Connection pool with 1 Connections
INFO  2022-09-08 17:52:24,732 [main][PooledConnections.java:41] : HHH000115: Hibernate connection pool size: 5 (min=1)
DEBUG 2022-09-08 17:52:25,156 [main][JdbcEnvironmentInitiator.java:72] : Database ->
       name : MySQL
    version : 8.0.29
      major : 8
      minor : 0
DEBUG 2022-09-08 17:52:25,156 [main][JdbcEnvironmentInitiator.java:83] : Driver ->
       name : MySQL Connector/J
    version : mysql-connector-java-8.0.29 (Revision: dd61577595edad45c398af508cf91ad26fc4144f)
      major : 8
      minor : 0
DEBUG 2022-09-08 17:52:25,157 [main][DelegatingBasicLogger.java:389] : JDBC version : 4.2
INFO  2022-09-08 17:52:25,164 [main][Dialect.java:153] : HHH000400: Using dialect: org.hibernate.dialect.MySQLDialect
DEBUG 2022-09-08 17:52:25,210 [main][IdentifierHelperBuilder.java:117] : JDBC driver metadata reported database stores quoted identifiers in more than one case
DEBUG 2022-09-08 17:52:25,211 [main][IdentifierHelperBuilder.java:191] : IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [MIXED]; that will likely lead to problems in schema update and validation if using quoted identifiers
DEBUG 2022-09-08 17:52:25,231 [main][DefaultIdentifierGeneratorFactory.java:81] : Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
DEBUG 2022-09-08 17:52:25,232 [main][DefaultIdentifierGeneratorFactory.java:81] : Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
DEBUG 2022-09-08 17:52:25,233 [main][DefaultIdentifierGeneratorFactory.java:81] : Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
DEBUG 2022-09-08 17:52:25,233 [main][DefaultIdentifierGeneratorFactory.java:81] : Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
DEBUG 2022-09-08 17:52:25,233 [main][DefaultIdentifierGeneratorFactory.java:81] : Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
DEBUG 2022-09-08 17:52:25,234 [main][DefaultIdentifierGeneratorFactory.java:81] : Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
DEBUG 2022-09-08 17:52:25,234 [main][DefaultIdentifierGeneratorFactory.java:81] : Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
DEBUG 2022-09-08 17:52:25,235 [main][DefaultIdentifierGeneratorFactory.java:81] : Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
DEBUG 2022-09-08 17:52:25,235 [main][DefaultIdentifierGeneratorFactory.java:81] : Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
DEBUG 2022-09-08 17:52:25,236 [main][DefaultIdentifierGeneratorFactory.java:81] : Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
DEBUG 2022-09-08 17:52:25,236 [main][DefaultIdentifierGeneratorFactory.java:81] : Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
DEBUG 2022-09-08 17:52:25,238 [main][DefaultIdentifierGeneratorFactory.java:81] : Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
DEBUG 2022-09-08 17:52:25,238 [main][DefaultIdentifierGeneratorFactory.java:81] : Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
DEBUG 2022-09-08 17:52:25,239 [main][DefaultIdentifierGeneratorFactory.java:81] : Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
DEBUG 2022-09-08 17:52:25,268 [main][Namespace.java:47] : Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
DEBUG 2022-09-08 17:52:25,285 [main][AnnotationBinder.java:511] : Binding entity from annotated class: org.example.models.Author
DEBUG 2022-09-08 17:52:25,293 [main][Ejb3Column.java:213] : Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
DEBUG 2022-09-08 17:52:25,296 [main][EntityBinder.java:416] : Import with entity name Author
DEBUG 2022-09-08 17:52:25,299 [main][EntityBinder.java:692] : Bind entity org.example.models.Author on table Author
DEBUG 2022-09-08 17:52:25,310 [main][Ejb3Column.java:213] : Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Author), mappingColumn=id, insertable=true, updatable=true, unique=false}
DEBUG 2022-09-08 17:52:25,311 [main][PropertyBinder.java:174] : MetadataSourceProcessor property id with lazy=false
DEBUG 2022-09-08 17:52:25,312 [main][AbstractPropertyHolder.java:89] : Attempting to locate auto-apply AttributeConverter for property [org.example.models.Author:id]
DEBUG 2022-09-08 17:52:25,313 [main][SimpleValueBinder.java:398] : building SimpleValue for id
DEBUG 2022-09-08 17:52:25,314 [main][PropertyBinder.java:265] : Building property id
DEBUG 2022-09-08 17:52:25,317 [main][Ejb3Column.java:213] : Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Author), mappingColumn=name, insertable=true, updatable=true, unique=false}
DEBUG 2022-09-08 17:52:25,317 [main][PropertyBinder.java:174] : MetadataSourceProcessor property name with lazy=false
DEBUG 2022-09-08 17:52:25,317 [main][AbstractPropertyHolder.java:89] : Attempting to locate auto-apply AttributeConverter for property [org.example.models.Author:name]
DEBUG 2022-09-08 17:52:25,317 [main][SimpleValueBinder.java:398] : building SimpleValue for name
DEBUG 2022-09-08 17:52:25,317 [main][PropertyBinder.java:265] : Building property name
DEBUG 2022-09-08 17:52:25,318 [main][Ejb3Column.java:213] : Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Author), mappingColumn=salary, insertable=true, updatable=true, unique=false}
DEBUG 2022-09-08 17:52:25,318 [main][PropertyBinder.java:174] : MetadataSourceProcessor property salary with lazy=false
DEBUG 2022-09-08 17:52:25,318 [main][AbstractPropertyHolder.java:89] : Attempting to locate auto-apply AttributeConverter for property [org.example.models.Author:salary]
DEBUG 2022-09-08 17:52:25,318 [main][SimpleValueBinder.java:398] : building SimpleValue for salary
DEBUG 2022-09-08 17:52:25,319 [main][PropertyBinder.java:265] : Building property salary
DEBUG 2022-09-08 17:52:25,319 [main][AnnotationBinder.java:511] : Binding entity from annotated class: org.example.models.Book
DEBUG 2022-09-08 17:52:25,319 [main][Ejb3Column.java:213] : Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
DEBUG 2022-09-08 17:52:25,319 [main][EntityBinder.java:416] : Import with entity name Book
DEBUG 2022-09-08 17:52:25,320 [main][EntityBinder.java:692] : Bind entity org.example.models.Book on table Book
DEBUG 2022-09-08 17:52:25,320 [main][Ejb3Column.java:213] : Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Book), mappingColumn=id, insertable=true, updatable=true, unique=false}
DEBUG 2022-09-08 17:52:25,320 [main][PropertyBinder.java:174] : MetadataSourceProcessor property id with lazy=false
DEBUG 2022-09-08 17:52:25,321 [main][AbstractPropertyHolder.java:89] : Attempting to locate auto-apply AttributeConverter for property [org.example.models.Book:id]
DEBUG 2022-09-08 17:52:25,321 [main][SimpleValueBinder.java:398] : building SimpleValue for id
DEBUG 2022-09-08 17:52:25,321 [main][PropertyBinder.java:265] : Building property id
DEBUG 2022-09-08 17:52:25,321 [main][Ejb3Column.java:213] : Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Book), mappingColumn=author_id, insertable=true, updatable=true, unique=false}
DEBUG 2022-09-08 17:52:25,321 [main][PropertyBinder.java:174] : MetadataSourceProcessor property author_id with lazy=false
DEBUG 2022-09-08 17:52:25,321 [main][AbstractPropertyHolder.java:89] : Attempting to locate auto-apply AttributeConverter for property [org.example.models.Book:author_id]
DEBUG 2022-09-08 17:52:25,322 [main][SimpleValueBinder.java:398] : building SimpleValue for author_id
DEBUG 2022-09-08 17:52:25,322 [main][PropertyBinder.java:265] : Building property author_id
DEBUG 2022-09-08 17:52:25,323 [main][Ejb3Column.java:213] : Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Book), mappingColumn=name, insertable=true, updatable=true, unique=false}
DEBUG 2022-09-08 17:52:25,323 [main][PropertyBinder.java:174] : MetadataSourceProcessor property name with lazy=false
DEBUG 2022-09-08 17:52:25,323 [main][AbstractPropertyHolder.java:89] : Attempting to locate auto-apply AttributeConverter for property [org.example.models.Book:name]
DEBUG 2022-09-08 17:52:25,323 [main][SimpleValueBinder.java:398] : building SimpleValue for name
DEBUG 2022-09-08 17:52:25,324 [main][PropertyBinder.java:265] : Building property name
DEBUG 2022-09-08 17:52:25,324 [main][SimpleValueBinder.java:443] : Starting fillSimpleValue for id
DEBUG 2022-09-08 17:52:25,324 [main][SimpleValueBinder.java:443] : Starting fillSimpleValue for name
DEBUG 2022-09-08 17:52:25,324 [main][SimpleValueBinder.java:443] : Starting fillSimpleValue for salary
DEBUG 2022-09-08 17:52:25,325 [main][SimpleValueBinder.java:443] : Starting fillSimpleValue for id
DEBUG 2022-09-08 17:52:25,325 [main][SimpleValueBinder.java:443] : Starting fillSimpleValue for author_id
DEBUG 2022-09-08 17:52:25,325 [main][SimpleValueBinder.java:443] : Starting fillSimpleValue for name
DEBUG 2022-09-08 17:52:25,326 [main][PrimaryKey.java:35] : Forcing column [id] to be non-null as it is part of the primary key for table [author]
DEBUG 2022-09-08 17:52:25,326 [main][PrimaryKey.java:35] : Forcing column [id] to be non-null as it is part of the primary key for table [book]
DEBUG 2022-09-08 17:52:25,345 [main][SessionFactoryImpl.java:197] : Building session factory
DEBUG 2022-09-08 17:52:25,346 [main][Settings.java:69] : SessionFactory name : null
DEBUG 2022-09-08 17:52:25,346 [main][Settings.java:70] : Automatic flush during beforeCompletion(): enabled
DEBUG 2022-09-08 17:52:25,346 [main][Settings.java:71] : Automatic session close at end of transaction: disabled
DEBUG 2022-09-08 17:52:25,346 [main][Settings.java:73] : Statistics: disabled
DEBUG 2022-09-08 17:52:25,346 [main][Settings.java:75] : Deleted entity synthetic identifier rollback: disabled
DEBUG 2022-09-08 17:52:25,346 [main][Settings.java:76] : Default entity-mode: pojo
DEBUG 2022-09-08 17:52:25,346 [main][Settings.java:77] : Check Nullability in Core (should be disabled when Bean Validation is on): enabled
DEBUG 2022-09-08 17:52:25,347 [main][Settings.java:78] : Allow initialization of lazy state outside session : disabled
DEBUG 2022-09-08 17:52:25,347 [main][Settings.java:80] : Using BatchFetchStyle : LEGACY
DEBUG 2022-09-08 17:52:25,347 [main][Settings.java:81] : Default batch fetch size: -1
DEBUG 2022-09-08 17:52:25,347 [main][Settings.java:82] : Maximum outer join fetch depth: 2
DEBUG 2022-09-08 17:52:25,347 [main][Settings.java:83] : Default null ordering: NONE
DEBUG 2022-09-08 17:52:25,347 [main][Settings.java:84] : Order SQL updates by primary key: disabled
DEBUG 2022-09-08 17:52:25,347 [main][Settings.java:85] : Order SQL inserts for batching: disabled
DEBUG 2022-09-08 17:52:25,347 [main][Settings.java:87] : multi-tenancy strategy : NONE
DEBUG 2022-09-08 17:52:25,347 [main][Settings.java:89] : JTA Track by Thread: enabled
DEBUG 2022-09-08 17:52:25,348 [main][Settings.java:91] : Query language substitutions: {}
DEBUG 2022-09-08 17:52:25,348 [main][Settings.java:92] : JPA query language strict compliance: disabled
DEBUG 2022-09-08 17:52:25,348 [main][Settings.java:93] : Named query checking : enabled
DEBUG 2022-09-08 17:52:25,348 [main][Settings.java:95] : Second-level cache: enabled
DEBUG 2022-09-08 17:52:25,348 [main][Settings.java:96] : Second-level query cache: disabled
DEBUG 2022-09-08 17:52:25,348 [main][Settings.java:97] : Second-level query cache factory: org.hibernate.cache.internal.StandardQueryCacheFactory@12f68fa5
DEBUG 2022-09-08 17:52:25,348 [main][Settings.java:98] : Second-level cache region prefix: null
DEBUG 2022-09-08 17:52:25,348 [main][Settings.java:99] : Optimize second-level cache for minimal puts: disabled
DEBUG 2022-09-08 17:52:25,348 [main][Settings.java:100] : Structured second-level cache entries: disabled
DEBUG 2022-09-08 17:52:25,349 [main][Settings.java:101] : Second-level cache direct-reference entries: disabled
DEBUG 2022-09-08 17:52:25,349 [main][Settings.java:102] : Automatic eviction of collection cache: disabled
DEBUG 2022-09-08 17:52:25,349 [main][Settings.java:104] : JDBC batch size: 15
DEBUG 2022-09-08 17:52:25,349 [main][Settings.java:105] : JDBC batch updates for versioned data: enabled
DEBUG 2022-09-08 17:52:25,349 [main][Settings.java:106] : Scrollable result sets: enabled
DEBUG 2022-09-08 17:52:25,349 [main][Settings.java:107] : Wrap result sets: disabled
DEBUG 2022-09-08 17:52:25,349 [main][Settings.java:108] : JDBC3 getGeneratedKeys(): enabled
DEBUG 2022-09-08 17:52:25,349 [main][Settings.java:109] : JDBC result set fetch size: null
DEBUG 2022-09-08 17:52:25,349 [main][Settings.java:110] : Connection release mode: AFTER_TRANSACTION
DEBUG 2022-09-08 17:52:25,349 [main][Settings.java:111] : Generate SQL with comments: disabled
DEBUG 2022-09-08 17:52:25,372 [main][SessionFactoryImpl.java:252] : Session factory constructed with filter configurations : {}
DEBUG 2022-09-08 17:52:25,372 [main][SessionFactoryImpl.java:253] : Instantiating session factory with properties: {awt.toolkit=sun.lwawt.macosx.LWCToolkit, java.specification.version=11, file.encoding.pkg=sun.io, jdk.extensions.version=11.0.15.0, sun.jnu.encoding=UTF-8, hibernate.dialect=org.hibernate.dialect.MySQLDialect, java.class.path=/Users/vdonets/IdeaProjects/testmaven/target/classes:/Users/vdonets/.m2/repository/org/hibernate/hibernate-core/5.2.2.Final/hibernate-core-5.2.2.Final.jar:/Users/vdonets/.m2/repository/org/jboss/logging/jboss-logging/3.3.0.Final/jboss-logging-3.3.0.Final.jar:/Users/vdonets/.m2/repository/org/hibernate/javax/persistence/hibernate-jpa-2.1-api/1.0.0.Final/hibernate-jpa-2.1-api-1.0.0.Final.jar:/Users/vdonets/.m2/repository/org/javassist/javassist/3.20.0-GA/javassist-3.20.0-GA.jar:/Users/vdonets/.m2/repository/antlr/antlr/2.7.7/antlr-2.7.7.jar:/Users/vdonets/.m2/repository/org/apache/geronimo/specs/geronimo-jta_1.1_spec/1.1.1/geronimo-jta_1.1_spec-1.1.1.jar:/Users/vdonets/.m2/repository/org/jboss/jandex/2.0.0.Final/jandex-2.0.0.Final.jar:/Users/vdonets/.m2/repository/com/fasterxml/classmate/1.3.0/classmate-1.3.0.jar:/Users/vdonets/.m2/repository/dom4j/dom4j/1.6.1/dom4j-1.6.1.jar:/Users/vdonets/.m2/repository/org/hibernate/common/hibernate-commons-annotations/5.0.1.Final/hibernate-commons-annotations-5.0.1.Final.jar:/Users/vdonets/.m2/repository/javax/enterprise/cdi-api/1.1/cdi-api-1.1.jar:/Users/vdonets/.m2/repository/javax/el/el-api/2.2/el-api-2.2.jar:/Users/vdonets/.m2/repository/org/jboss/spec/javax/interceptor/jboss-interceptors-api_1.1_spec/1.0.0.Beta1/jboss-interceptors-api_1.1_spec-1.0.0.Beta1.jar:/Users/vdonets/.m2/repository/javax/annotation/jsr250-api/1.0/jsr250-api-1.0.jar:/Users/vdonets/.m2/repository/javax/inject/javax.inject/1/javax.inject-1.jar:/Users/vdonets/.m2/repository/mysql/mysql-connector-java/8.0.29/mysql-connector-java-8.0.29.jar:/Users/vdonets/.m2/repository/com/google/protobuf/protobuf-java/3.19.4/protobuf-java-3.19.4.jar:/Users/vdonets/.m2/repository/jakarta/xml/bind/jakarta.xml.bind-api/2.3.2/jakarta.xml.bind-api-2.3.2.jar:/Users/vdonets/.m2/repository/jakarta/activation/jakarta.activation-api/1.2.1/jakarta.activation-api-1.2.1.jar:/Users/vdonets/.m2/repository/org/glassfish/jaxb/jaxb-runtime/2.3.2/jaxb-runtime-2.3.2.jar:/Users/vdonets/.m2/repository/org/glassfish/jaxb/txw2/2.3.2/txw2-2.3.2.jar:/Users/vdonets/.m2/repository/com/sun/istack/istack-commons-runtime/3.0.8/istack-commons-runtime-3.0.8.jar:/Users/vdonets/.m2/repository/org/jvnet/staxex/stax-ex/1.8.1/stax-ex-1.8.1.jar:/Users/vdonets/.m2/repository/com/sun/xml/fastinfoset/FastInfoset/1.2.16/FastInfoset-1.2.16.jar:/Users/vdonets/.m2/repository/log4j/log4j/1.2.14/log4j-1.2.14.jar:/Applications/IntelliJ IDEA.app/Contents/lib/idea_rt.jar:/Users/vdonets/Library/Caches/JetBrains/IntelliJIdea2022.1/captureAgent/debugger-agent.jar, java.vm.vendor=Eclipse OpenJ9, sun.arch.data.model=64, com.ibm.vm.bitmode=64, hbm2ddl.auto=create-drop, user.variant=, com.ibm.oti.vm.library.version=29, java.vendor.url=https://www.ibm.com/semeru-runtimes, user.timezone=Europe/Warsaw, java.vm.specification.version=11, os.name=Mac OS X, sun.java.launcher=SUN_STANDARD, user.country=US, sun.boot.library.path=/Users/vdonets/Library/Java/JavaVirtualMachines/semeru-11.0.15/Contents/Home/lib/default:/Users/vdonets/Library/Java/JavaVirtualMachines/semeru-11.0.15/Contents/Home/lib, sun.java.command=org.example.Main, sun.cpu.endian=little, user.home=/Users/vdonets, user.language=en, java.specification.vendor=Oracle Corporation, java.version.date=2022-04-19, java.home=/Users/vdonets/Library/Java/JavaVirtualMachines/semeru-11.0.15/Contents/Home, ibm.signalhandling.rs=false, jdk.extensions.name=Extensions for OpenJDK for Eclipse OpenJ9, file.separator=/, line.separator=
, java.specification.name=Java Platform API Specification, java.vm.specification.vendor=Oracle Corporation, intellij.debug.agent=true, java.compiler=j9jit29, com.ibm.util.extralibs.properties=, java.awt.graphicsenv=sun.awt.CGraphicsEnvironment, com.ibm.oti.configuration=scar, com.ibm.oti.shared.enabled=false, hibernate.hbm2ddl.auto=create-drop, com.ibm.oti.vm.bootstrap.library.path=/Users/vdonets/Library/Java/JavaVirtualMachines/semeru-11.0.15/Contents/Home/lib/default:/Users/vdonets/Library/Java/JavaVirtualMachines/semeru-11.0.15/Contents/Home/lib, com.ibm.cpu.endian=little, java.fullversion=11.0.15-ea+10
JRE 11 Mac OS X aarch64-64-Bit 20220422_36 (JIT enabled, AOT enabled)
OpenJ9   - 9a84ec34e
OMR      - ab24b6666
JCL      - b7b5b42ea6 based on jdk-11.0.15+10, java.runtime.version=11.0.15-ea+10, user.name=vdonets, path.separator=:, hibernate.connection.username=root, os.version=12.5, java.runtime.name=IBM Semeru Runtime Open Edition, hibernate.connection.url=jdbc:mysql://localhost:3306/classicmodels?serverTimezone=UTC, connection.pool_size=5, ibm.signalhandling.sigint=true, file.encoding=UTF-8, java.vm.name=Eclipse OpenJ9 VM, hibernate.show_sql=true, java.vendor.version=11.0.15.0, ibm.signalhandling.sigchain=true, show_sql=true, hibernate.connection.driver_class=com.mysql.cj.jdbc.Driver, java.vendor.url.bug=https://github.com/ibmruntimes/Semeru-Runtimes/issues, java.io.tmpdir=/var/folders/wv/6c3_66yd6kq3r7z477kwz4lr0000gn/T/, java.version=11.0.15-ea, jboss.modules.system.pkgs=com.intellij.rt, com.ibm.system.agent.path=/Users/vdonets/Library/Java/JavaVirtualMachines/semeru-11.0.15/Contents/Home/lib, user.dir=/Users/vdonets/IdeaProjects/testmaven, os.arch=aarch64, java.vm.specification.name=Java Virtual Machine Specification, java.awt.printerjob=sun.lwawt.macosx.CPrinterJob, hibernate.connection.password=****, os.encoding=UTF-8, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@ad3c530, java.library.path=/Users/vdonets/Library/Java/JavaVirtualMachines/semeru-11.0.15/Contents/Home/lib/default:/Users/vdonets/Library/Java/JavaVirtualMachines/semeru-11.0.15/Contents/Home/lib:/usr/lib, java.vendor=IBM Corporation, java.vm.info=JRE 11 Mac OS X aarch64-64-Bit 20220422_36 (JIT enabled, AOT enabled)
OpenJ9   - 9a84ec34e
OMR      - ab24b6666
JCL      - b7b5b42ea6 based on jdk-11.0.15+10, java.vm.version=openj9-0.32.0, ibm.system.encoding=UTF-8, hibernate.bytecode.use_reflection_optimizer=false, com.ibm.jcl.checkClassPath=, sun.io.unicode.encoding=UnicodeLittle, hibernate.connection.pool_size=5, java.class.version=55.0}
DEBUG 2022-09-08 17:52:25,378 [main][JaccIntegrator.java:80] : Skipping JACC integration as it was not enabled
DEBUG 2022-09-08 17:52:25,379 [main][SessionFactoryImpl.java:292] : Instantiated session factory
DEBUG 2022-09-08 17:52:25,399 [main][ClassLoaderAccessImpl.java:55] : Not known whether passed class name [org.example.models.Book] is safe
DEBUG 2022-09-08 17:52:25,399 [main][ClassLoaderAccessImpl.java:57] : No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.models.Book
DEBUG 2022-09-08 17:52:25,405 [main][ClassLoaderAccessImpl.java:55] : Not known whether passed class name [org.example.models.Book] is safe
DEBUG 2022-09-08 17:52:25,405 [main][ClassLoaderAccessImpl.java:57] : No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.models.Book
DEBUG 2022-09-08 17:52:25,429 [main][ClassLoaderAccessImpl.java:55] : Not known whether passed class name [org.example.models.Author] is safe
DEBUG 2022-09-08 17:52:25,429 [main][ClassLoaderAccessImpl.java:57] : No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.models.Author
DEBUG 2022-09-08 17:52:25,430 [main][ClassLoaderAccessImpl.java:55] : Not known whether passed class name [org.example.models.Author] is safe
DEBUG 2022-09-08 17:52:25,430 [main][ClassLoaderAccessImpl.java:57] : No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.models.Author
DEBUG 2022-09-08 17:52:25,434 [main][AbstractEntityPersister.java:3529] : Static SQL for entity: org.example.models.Book
DEBUG 2022-09-08 17:52:25,434 [main][AbstractEntityPersister.java:3534] :  Version select: select id from Book where id =?
DEBUG 2022-09-08 17:52:25,434 [main][AbstractEntityPersister.java:3537] :  Snapshot select: select book_.id, book_.author_id as author_i2_1_, book_.name as name3_1_ from Book book_ where book_.id=?
DEBUG 2022-09-08 17:52:25,434 [main][DelegatingBasicLogger.java:394] :  Insert 0: insert into Book (author_id, name, id) values (?, ?, ?)
DEBUG 2022-09-08 17:52:25,434 [main][DelegatingBasicLogger.java:394] :  Update 0: update Book set author_id=?, name=? where id=?
DEBUG 2022-09-08 17:52:25,434 [main][DelegatingBasicLogger.java:394] :  Delete 0: delete from Book where id=?
DEBUG 2022-09-08 17:52:25,443 [main][QuerySpacesImpl.java:174] : Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7bcdef19]
DEBUG 2022-09-08 17:52:25,443 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : author_id
DEBUG 2022-09-08 17:52:25,443 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : name
DEBUG 2022-09-08 17:52:25,444 [main][FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150] : Building LoadPlan...
DEBUG 2022-09-08 17:52:25,448 [main][LoadQueryJoinAndFetchProcessor.java:100] : processing queryspace <gen:0>
DEBUG 2022-09-08 17:52:25,450 [main][LoadPlanTreePrinter.java:55] : LoadPlan(entity=org.example.models.Book)
    - Returns
       - EntityReturnImpl(entity=org.example.models.Book, querySpaceUid=<gen:0>, path=org.example.models.Book)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=org.example.models.Book)
          - SQL table alias mapping - book0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

DEBUG 2022-09-08 17:52:25,451 [main][EntityLoader.java:115] : Static select for entity org.example.models.Book [NONE]: select book0_.id as id1_1_0_, book0_.author_id as author_i2_1_0_, book0_.name as name3_1_0_ from Book book0_ where book0_.id=?
DEBUG 2022-09-08 17:52:25,452 [main][QuerySpacesImpl.java:174] : Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5f853f41]
DEBUG 2022-09-08 17:52:25,452 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : author_id
DEBUG 2022-09-08 17:52:25,452 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : name
DEBUG 2022-09-08 17:52:25,452 [main][FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150] : Building LoadPlan...
DEBUG 2022-09-08 17:52:25,452 [main][LoadQueryJoinAndFetchProcessor.java:100] : processing queryspace <gen:0>
DEBUG 2022-09-08 17:52:25,453 [main][LoadPlanTreePrinter.java:55] : LoadPlan(entity=org.example.models.Book)
    - Returns
       - EntityReturnImpl(entity=org.example.models.Book, querySpaceUid=<gen:0>, path=org.example.models.Book)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=org.example.models.Book)
          - SQL table alias mapping - book0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

DEBUG 2022-09-08 17:52:25,453 [main][EntityLoader.java:115] : Static select for entity org.example.models.Book [READ]: select book0_.id as id1_1_0_, book0_.author_id as author_i2_1_0_, book0_.name as name3_1_0_ from Book book0_ where book0_.id=?
DEBUG 2022-09-08 17:52:25,453 [main][QuerySpacesImpl.java:174] : Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@f85acde6]
DEBUG 2022-09-08 17:52:25,453 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : author_id
DEBUG 2022-09-08 17:52:25,453 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : name
DEBUG 2022-09-08 17:52:25,454 [main][FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150] : Building LoadPlan...
DEBUG 2022-09-08 17:52:25,454 [main][LoadQueryJoinAndFetchProcessor.java:100] : processing queryspace <gen:0>
DEBUG 2022-09-08 17:52:25,454 [main][LoadPlanTreePrinter.java:55] : LoadPlan(entity=org.example.models.Book)
    - Returns
       - EntityReturnImpl(entity=org.example.models.Book, querySpaceUid=<gen:0>, path=org.example.models.Book)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=org.example.models.Book)
          - SQL table alias mapping - book0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

DEBUG 2022-09-08 17:52:25,454 [main][EntityLoader.java:115] : Static select for entity org.example.models.Book [UPGRADE]: select book0_.id as id1_1_0_, book0_.author_id as author_i2_1_0_, book0_.name as name3_1_0_ from Book book0_ where book0_.id=? for update
DEBUG 2022-09-08 17:52:25,454 [main][QuerySpacesImpl.java:174] : Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@b06f17f3]
DEBUG 2022-09-08 17:52:25,455 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : author_id
DEBUG 2022-09-08 17:52:25,455 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : name
DEBUG 2022-09-08 17:52:25,455 [main][FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150] : Building LoadPlan...
DEBUG 2022-09-08 17:52:25,455 [main][LoadQueryJoinAndFetchProcessor.java:100] : processing queryspace <gen:0>
DEBUG 2022-09-08 17:52:25,455 [main][LoadPlanTreePrinter.java:55] : LoadPlan(entity=org.example.models.Book)
    - Returns
       - EntityReturnImpl(entity=org.example.models.Book, querySpaceUid=<gen:0>, path=org.example.models.Book)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=org.example.models.Book)
          - SQL table alias mapping - book0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

DEBUG 2022-09-08 17:52:25,456 [main][EntityLoader.java:115] : Static select for entity org.example.models.Book [UPGRADE_NOWAIT]: select book0_.id as id1_1_0_, book0_.author_id as author_i2_1_0_, book0_.name as name3_1_0_ from Book book0_ where book0_.id=? for update
DEBUG 2022-09-08 17:52:25,456 [main][QuerySpacesImpl.java:174] : Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@e5ea496c]
DEBUG 2022-09-08 17:52:25,456 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : author_id
DEBUG 2022-09-08 17:52:25,456 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : name
DEBUG 2022-09-08 17:52:25,456 [main][FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150] : Building LoadPlan...
DEBUG 2022-09-08 17:52:25,456 [main][LoadQueryJoinAndFetchProcessor.java:100] : processing queryspace <gen:0>
DEBUG 2022-09-08 17:52:25,457 [main][LoadPlanTreePrinter.java:55] : LoadPlan(entity=org.example.models.Book)
    - Returns
       - EntityReturnImpl(entity=org.example.models.Book, querySpaceUid=<gen:0>, path=org.example.models.Book)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=org.example.models.Book)
          - SQL table alias mapping - book0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

DEBUG 2022-09-08 17:52:25,457 [main][EntityLoader.java:115] : Static select for entity org.example.models.Book [UPGRADE_SKIPLOCKED]: select book0_.id as id1_1_0_, book0_.author_id as author_i2_1_0_, book0_.name as name3_1_0_ from Book book0_ where book0_.id=? for update
DEBUG 2022-09-08 17:52:25,457 [main][QuerySpacesImpl.java:174] : Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@8559504c]
DEBUG 2022-09-08 17:52:25,457 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : author_id
DEBUG 2022-09-08 17:52:25,457 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : name
DEBUG 2022-09-08 17:52:25,458 [main][FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150] : Building LoadPlan...
DEBUG 2022-09-08 17:52:25,458 [main][LoadQueryJoinAndFetchProcessor.java:100] : processing queryspace <gen:0>
DEBUG 2022-09-08 17:52:25,458 [main][LoadPlanTreePrinter.java:55] : LoadPlan(entity=org.example.models.Book)
    - Returns
       - EntityReturnImpl(entity=org.example.models.Book, querySpaceUid=<gen:0>, path=org.example.models.Book)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=org.example.models.Book)
          - SQL table alias mapping - book0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

DEBUG 2022-09-08 17:52:25,459 [main][EntityLoader.java:115] : Static select for entity org.example.models.Book [FORCE]: select book0_.id as id1_1_0_, book0_.author_id as author_i2_1_0_, book0_.name as name3_1_0_ from Book book0_ where book0_.id=? for update
DEBUG 2022-09-08 17:52:25,459 [main][QuerySpacesImpl.java:174] : Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@eb2253b2]
DEBUG 2022-09-08 17:52:25,459 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : author_id
DEBUG 2022-09-08 17:52:25,460 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : name
DEBUG 2022-09-08 17:52:25,460 [main][FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150] : Building LoadPlan...
DEBUG 2022-09-08 17:52:25,460 [main][LoadQueryJoinAndFetchProcessor.java:100] : processing queryspace <gen:0>
DEBUG 2022-09-08 17:52:25,460 [main][LoadPlanTreePrinter.java:55] : LoadPlan(entity=org.example.models.Book)
    - Returns
       - EntityReturnImpl(entity=org.example.models.Book, querySpaceUid=<gen:0>, path=org.example.models.Book)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=org.example.models.Book)
          - SQL table alias mapping - book0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

DEBUG 2022-09-08 17:52:25,460 [main][EntityLoader.java:115] : Static select for entity org.example.models.Book [PESSIMISTIC_READ]: select book0_.id as id1_1_0_, book0_.author_id as author_i2_1_0_, book0_.name as name3_1_0_ from Book book0_ where book0_.id=? lock in share mode
DEBUG 2022-09-08 17:52:25,461 [main][QuerySpacesImpl.java:174] : Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1bfd0329]
DEBUG 2022-09-08 17:52:25,461 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : author_id
DEBUG 2022-09-08 17:52:25,461 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : name
DEBUG 2022-09-08 17:52:25,461 [main][FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150] : Building LoadPlan...
DEBUG 2022-09-08 17:52:25,461 [main][LoadQueryJoinAndFetchProcessor.java:100] : processing queryspace <gen:0>
DEBUG 2022-09-08 17:52:25,462 [main][LoadPlanTreePrinter.java:55] : LoadPlan(entity=org.example.models.Book)
    - Returns
       - EntityReturnImpl(entity=org.example.models.Book, querySpaceUid=<gen:0>, path=org.example.models.Book)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=org.example.models.Book)
          - SQL table alias mapping - book0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

DEBUG 2022-09-08 17:52:25,462 [main][EntityLoader.java:115] : Static select for entity org.example.models.Book [PESSIMISTIC_WRITE]: select book0_.id as id1_1_0_, book0_.author_id as author_i2_1_0_, book0_.name as name3_1_0_ from Book book0_ where book0_.id=? for update
DEBUG 2022-09-08 17:52:25,462 [main][QuerySpacesImpl.java:174] : Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@de3235db]
DEBUG 2022-09-08 17:52:25,462 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : author_id
DEBUG 2022-09-08 17:52:25,462 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : name
DEBUG 2022-09-08 17:52:25,463 [main][FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150] : Building LoadPlan...
DEBUG 2022-09-08 17:52:25,463 [main][LoadQueryJoinAndFetchProcessor.java:100] : processing queryspace <gen:0>
DEBUG 2022-09-08 17:52:25,463 [main][LoadPlanTreePrinter.java:55] : LoadPlan(entity=org.example.models.Book)
    - Returns
       - EntityReturnImpl(entity=org.example.models.Book, querySpaceUid=<gen:0>, path=org.example.models.Book)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=org.example.models.Book)
          - SQL table alias mapping - book0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

DEBUG 2022-09-08 17:52:25,463 [main][EntityLoader.java:115] : Static select for entity org.example.models.Book [PESSIMISTIC_FORCE_INCREMENT]: select book0_.id as id1_1_0_, book0_.author_id as author_i2_1_0_, book0_.name as name3_1_0_ from Book book0_ where book0_.id=? for update
DEBUG 2022-09-08 17:52:25,463 [main][QuerySpacesImpl.java:174] : Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@ae684b09]
DEBUG 2022-09-08 17:52:25,464 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : author_id
DEBUG 2022-09-08 17:52:25,464 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : name
DEBUG 2022-09-08 17:52:25,464 [main][FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150] : Building LoadPlan...
DEBUG 2022-09-08 17:52:25,464 [main][LoadQueryJoinAndFetchProcessor.java:100] : processing queryspace <gen:0>
DEBUG 2022-09-08 17:52:25,464 [main][LoadPlanTreePrinter.java:55] : LoadPlan(entity=org.example.models.Book)
    - Returns
       - EntityReturnImpl(entity=org.example.models.Book, querySpaceUid=<gen:0>, path=org.example.models.Book)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=org.example.models.Book)
          - SQL table alias mapping - book0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

DEBUG 2022-09-08 17:52:25,465 [main][EntityLoader.java:115] : Static select for entity org.example.models.Book [OPTIMISTIC]: select book0_.id as id1_1_0_, book0_.author_id as author_i2_1_0_, book0_.name as name3_1_0_ from Book book0_ where book0_.id=?
DEBUG 2022-09-08 17:52:25,465 [main][QuerySpacesImpl.java:174] : Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@c4b5185c]
DEBUG 2022-09-08 17:52:25,465 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : author_id
DEBUG 2022-09-08 17:52:25,466 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : name
DEBUG 2022-09-08 17:52:25,466 [main][FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150] : Building LoadPlan...
DEBUG 2022-09-08 17:52:25,466 [main][LoadQueryJoinAndFetchProcessor.java:100] : processing queryspace <gen:0>
DEBUG 2022-09-08 17:52:25,466 [main][LoadPlanTreePrinter.java:55] : LoadPlan(entity=org.example.models.Book)
    - Returns
       - EntityReturnImpl(entity=org.example.models.Book, querySpaceUid=<gen:0>, path=org.example.models.Book)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=org.example.models.Book)
          - SQL table alias mapping - book0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

DEBUG 2022-09-08 17:52:25,466 [main][EntityLoader.java:115] : Static select for entity org.example.models.Book [OPTIMISTIC_FORCE_INCREMENT]: select book0_.id as id1_1_0_, book0_.author_id as author_i2_1_0_, book0_.name as name3_1_0_ from Book book0_ where book0_.id=?
DEBUG 2022-09-08 17:52:25,474 [main][CascadeEntityLoader.java:38] : Static select for action ACTION_MERGE on entity org.example.models.Book: select book0_.id as id1_1_0_, book0_.author_id as author_i2_1_0_, book0_.name as name3_1_0_ from Book book0_ where book0_.id=?
DEBUG 2022-09-08 17:52:25,474 [main][CascadeEntityLoader.java:38] : Static select for action ACTION_REFRESH on entity org.example.models.Book: select book0_.id as id1_1_0_, book0_.author_id as author_i2_1_0_, book0_.name as name3_1_0_ from Book book0_ where book0_.id=?
DEBUG 2022-09-08 17:52:25,475 [main][AbstractEntityPersister.java:3529] : Static SQL for entity: org.example.models.Author
DEBUG 2022-09-08 17:52:25,475 [main][AbstractEntityPersister.java:3534] :  Version select: select id from Author where id =?
DEBUG 2022-09-08 17:52:25,475 [main][AbstractEntityPersister.java:3537] :  Snapshot select: select author_.id, author_.name as name2_0_, author_.salary as salary3_0_ from Author author_ where author_.id=?
DEBUG 2022-09-08 17:52:25,475 [main][DelegatingBasicLogger.java:394] :  Insert 0: insert into Author (name, salary, id) values (?, ?, ?)
DEBUG 2022-09-08 17:52:25,475 [main][DelegatingBasicLogger.java:394] :  Update 0: update Author set name=?, salary=? where id=?
DEBUG 2022-09-08 17:52:25,475 [main][DelegatingBasicLogger.java:394] :  Delete 0: delete from Author where id=?
DEBUG 2022-09-08 17:52:25,475 [main][AbstractEntityPersister.java:3545] :  Identity insert: insert into Author (name, salary) values (?, ?)
DEBUG 2022-09-08 17:52:25,476 [main][QuerySpacesImpl.java:174] : Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@40c6f5ac]
DEBUG 2022-09-08 17:52:25,476 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : name
DEBUG 2022-09-08 17:52:25,476 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : salary
DEBUG 2022-09-08 17:52:25,476 [main][FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150] : Building LoadPlan...
DEBUG 2022-09-08 17:52:25,476 [main][LoadQueryJoinAndFetchProcessor.java:100] : processing queryspace <gen:0>
DEBUG 2022-09-08 17:52:25,477 [main][LoadPlanTreePrinter.java:55] : LoadPlan(entity=org.example.models.Author)
    - Returns
       - EntityReturnImpl(entity=org.example.models.Author, querySpaceUid=<gen:0>, path=org.example.models.Author)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=org.example.models.Author)
          - SQL table alias mapping - author0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

DEBUG 2022-09-08 17:52:25,477 [main][EntityLoader.java:115] : Static select for entity org.example.models.Author [NONE]: select author0_.id as id1_0_0_, author0_.name as name2_0_0_, author0_.salary as salary3_0_0_ from Author author0_ where author0_.id=?
DEBUG 2022-09-08 17:52:25,477 [main][QuerySpacesImpl.java:174] : Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@bc25ee3]
DEBUG 2022-09-08 17:52:25,477 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : name
DEBUG 2022-09-08 17:52:25,477 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : salary
DEBUG 2022-09-08 17:52:25,477 [main][FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150] : Building LoadPlan...
DEBUG 2022-09-08 17:52:25,478 [main][LoadQueryJoinAndFetchProcessor.java:100] : processing queryspace <gen:0>
DEBUG 2022-09-08 17:52:25,478 [main][LoadPlanTreePrinter.java:55] : LoadPlan(entity=org.example.models.Author)
    - Returns
       - EntityReturnImpl(entity=org.example.models.Author, querySpaceUid=<gen:0>, path=org.example.models.Author)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=org.example.models.Author)
          - SQL table alias mapping - author0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

DEBUG 2022-09-08 17:52:25,478 [main][EntityLoader.java:115] : Static select for entity org.example.models.Author [READ]: select author0_.id as id1_0_0_, author0_.name as name2_0_0_, author0_.salary as salary3_0_0_ from Author author0_ where author0_.id=?
DEBUG 2022-09-08 17:52:25,478 [main][QuerySpacesImpl.java:174] : Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@976d691e]
DEBUG 2022-09-08 17:52:25,478 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : name
DEBUG 2022-09-08 17:52:25,478 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : salary
DEBUG 2022-09-08 17:52:25,479 [main][FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150] : Building LoadPlan...
DEBUG 2022-09-08 17:52:25,479 [main][LoadQueryJoinAndFetchProcessor.java:100] : processing queryspace <gen:0>
DEBUG 2022-09-08 17:52:25,479 [main][LoadPlanTreePrinter.java:55] : LoadPlan(entity=org.example.models.Author)
    - Returns
       - EntityReturnImpl(entity=org.example.models.Author, querySpaceUid=<gen:0>, path=org.example.models.Author)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=org.example.models.Author)
          - SQL table alias mapping - author0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

DEBUG 2022-09-08 17:52:25,479 [main][EntityLoader.java:115] : Static select for entity org.example.models.Author [UPGRADE]: select author0_.id as id1_0_0_, author0_.name as name2_0_0_, author0_.salary as salary3_0_0_ from Author author0_ where author0_.id=? for update
DEBUG 2022-09-08 17:52:25,479 [main][QuerySpacesImpl.java:174] : Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1bfca2ee]
DEBUG 2022-09-08 17:52:25,479 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : name
DEBUG 2022-09-08 17:52:25,480 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : salary
DEBUG 2022-09-08 17:52:25,481 [main][FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150] : Building LoadPlan...
DEBUG 2022-09-08 17:52:25,481 [main][LoadQueryJoinAndFetchProcessor.java:100] : processing queryspace <gen:0>
DEBUG 2022-09-08 17:52:25,481 [main][LoadPlanTreePrinter.java:55] : LoadPlan(entity=org.example.models.Author)
    - Returns
       - EntityReturnImpl(entity=org.example.models.Author, querySpaceUid=<gen:0>, path=org.example.models.Author)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=org.example.models.Author)
          - SQL table alias mapping - author0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

DEBUG 2022-09-08 17:52:25,481 [main][EntityLoader.java:115] : Static select for entity org.example.models.Author [UPGRADE_NOWAIT]: select author0_.id as id1_0_0_, author0_.name as name2_0_0_, author0_.salary as salary3_0_0_ from Author author0_ where author0_.id=? for update
DEBUG 2022-09-08 17:52:25,481 [main][QuerySpacesImpl.java:174] : Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@829d9de0]
DEBUG 2022-09-08 17:52:25,482 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : name
DEBUG 2022-09-08 17:52:25,482 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : salary
DEBUG 2022-09-08 17:52:25,482 [main][FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150] : Building LoadPlan...
DEBUG 2022-09-08 17:52:25,482 [main][LoadQueryJoinAndFetchProcessor.java:100] : processing queryspace <gen:0>
DEBUG 2022-09-08 17:52:25,482 [main][LoadPlanTreePrinter.java:55] : LoadPlan(entity=org.example.models.Author)
    - Returns
       - EntityReturnImpl(entity=org.example.models.Author, querySpaceUid=<gen:0>, path=org.example.models.Author)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=org.example.models.Author)
          - SQL table alias mapping - author0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

DEBUG 2022-09-08 17:52:25,482 [main][EntityLoader.java:115] : Static select for entity org.example.models.Author [UPGRADE_SKIPLOCKED]: select author0_.id as id1_0_0_, author0_.name as name2_0_0_, author0_.salary as salary3_0_0_ from Author author0_ where author0_.id=? for update
DEBUG 2022-09-08 17:52:25,483 [main][QuerySpacesImpl.java:174] : Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@25650e8b]
DEBUG 2022-09-08 17:52:25,483 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : name
DEBUG 2022-09-08 17:52:25,483 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : salary
DEBUG 2022-09-08 17:52:25,483 [main][FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150] : Building LoadPlan...
DEBUG 2022-09-08 17:52:25,483 [main][LoadQueryJoinAndFetchProcessor.java:100] : processing queryspace <gen:0>
DEBUG 2022-09-08 17:52:25,483 [main][LoadPlanTreePrinter.java:55] : LoadPlan(entity=org.example.models.Author)
    - Returns
       - EntityReturnImpl(entity=org.example.models.Author, querySpaceUid=<gen:0>, path=org.example.models.Author)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=org.example.models.Author)
          - SQL table alias mapping - author0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

DEBUG 2022-09-08 17:52:25,484 [main][EntityLoader.java:115] : Static select for entity org.example.models.Author [FORCE]: select author0_.id as id1_0_0_, author0_.name as name2_0_0_, author0_.salary as salary3_0_0_ from Author author0_ where author0_.id=? for update
DEBUG 2022-09-08 17:52:25,484 [main][QuerySpacesImpl.java:174] : Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5ffa39c3]
DEBUG 2022-09-08 17:52:25,484 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : name
DEBUG 2022-09-08 17:52:25,484 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : salary
DEBUG 2022-09-08 17:52:25,484 [main][FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150] : Building LoadPlan...
DEBUG 2022-09-08 17:52:25,484 [main][LoadQueryJoinAndFetchProcessor.java:100] : processing queryspace <gen:0>
DEBUG 2022-09-08 17:52:25,485 [main][LoadPlanTreePrinter.java:55] : LoadPlan(entity=org.example.models.Author)
    - Returns
       - EntityReturnImpl(entity=org.example.models.Author, querySpaceUid=<gen:0>, path=org.example.models.Author)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=org.example.models.Author)
          - SQL table alias mapping - author0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

DEBUG 2022-09-08 17:52:25,485 [main][EntityLoader.java:115] : Static select for entity org.example.models.Author [PESSIMISTIC_READ]: select author0_.id as id1_0_0_, author0_.name as name2_0_0_, author0_.salary as salary3_0_0_ from Author author0_ where author0_.id=? lock in share mode
DEBUG 2022-09-08 17:52:25,485 [main][QuerySpacesImpl.java:174] : Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@33240340]
DEBUG 2022-09-08 17:52:25,485 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : name
DEBUG 2022-09-08 17:52:25,485 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : salary
DEBUG 2022-09-08 17:52:25,485 [main][FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150] : Building LoadPlan...
DEBUG 2022-09-08 17:52:25,485 [main][LoadQueryJoinAndFetchProcessor.java:100] : processing queryspace <gen:0>
DEBUG 2022-09-08 17:52:25,486 [main][LoadPlanTreePrinter.java:55] : LoadPlan(entity=org.example.models.Author)
    - Returns
       - EntityReturnImpl(entity=org.example.models.Author, querySpaceUid=<gen:0>, path=org.example.models.Author)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=org.example.models.Author)
          - SQL table alias mapping - author0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

DEBUG 2022-09-08 17:52:25,486 [main][EntityLoader.java:115] : Static select for entity org.example.models.Author [PESSIMISTIC_WRITE]: select author0_.id as id1_0_0_, author0_.name as name2_0_0_, author0_.salary as salary3_0_0_ from Author author0_ where author0_.id=? for update
DEBUG 2022-09-08 17:52:25,486 [main][QuerySpacesImpl.java:174] : Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@dc42bc28]
DEBUG 2022-09-08 17:52:25,486 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : name
DEBUG 2022-09-08 17:52:25,486 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : salary
DEBUG 2022-09-08 17:52:25,486 [main][FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150] : Building LoadPlan...
DEBUG 2022-09-08 17:52:25,487 [main][LoadQueryJoinAndFetchProcessor.java:100] : processing queryspace <gen:0>
DEBUG 2022-09-08 17:52:25,487 [main][LoadPlanTreePrinter.java:55] : LoadPlan(entity=org.example.models.Author)
    - Returns
       - EntityReturnImpl(entity=org.example.models.Author, querySpaceUid=<gen:0>, path=org.example.models.Author)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=org.example.models.Author)
          - SQL table alias mapping - author0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

DEBUG 2022-09-08 17:52:25,487 [main][EntityLoader.java:115] : Static select for entity org.example.models.Author [PESSIMISTIC_FORCE_INCREMENT]: select author0_.id as id1_0_0_, author0_.name as name2_0_0_, author0_.salary as salary3_0_0_ from Author author0_ where author0_.id=? for update
DEBUG 2022-09-08 17:52:25,487 [main][QuerySpacesImpl.java:174] : Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@a0b1c75a]
DEBUG 2022-09-08 17:52:25,487 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : name
DEBUG 2022-09-08 17:52:25,487 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : salary
DEBUG 2022-09-08 17:52:25,488 [main][FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150] : Building LoadPlan...
DEBUG 2022-09-08 17:52:25,488 [main][LoadQueryJoinAndFetchProcessor.java:100] : processing queryspace <gen:0>
DEBUG 2022-09-08 17:52:25,488 [main][LoadPlanTreePrinter.java:55] : LoadPlan(entity=org.example.models.Author)
    - Returns
       - EntityReturnImpl(entity=org.example.models.Author, querySpaceUid=<gen:0>, path=org.example.models.Author)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=org.example.models.Author)
          - SQL table alias mapping - author0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

DEBUG 2022-09-08 17:52:25,488 [main][EntityLoader.java:115] : Static select for entity org.example.models.Author [OPTIMISTIC]: select author0_.id as id1_0_0_, author0_.name as name2_0_0_, author0_.salary as salary3_0_0_ from Author author0_ where author0_.id=?
DEBUG 2022-09-08 17:52:25,488 [main][QuerySpacesImpl.java:174] : Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@620bd10c]
DEBUG 2022-09-08 17:52:25,489 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : name
DEBUG 2022-09-08 17:52:25,489 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : salary
DEBUG 2022-09-08 17:52:25,489 [main][FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150] : Building LoadPlan...
DEBUG 2022-09-08 17:52:25,489 [main][LoadQueryJoinAndFetchProcessor.java:100] : processing queryspace <gen:0>
DEBUG 2022-09-08 17:52:25,490 [main][LoadPlanTreePrinter.java:55] : LoadPlan(entity=org.example.models.Author)
    - Returns
       - EntityReturnImpl(entity=org.example.models.Author, querySpaceUid=<gen:0>, path=org.example.models.Author)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=org.example.models.Author)
          - SQL table alias mapping - author0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

DEBUG 2022-09-08 17:52:25,490 [main][EntityLoader.java:115] : Static select for entity org.example.models.Author [OPTIMISTIC_FORCE_INCREMENT]: select author0_.id as id1_0_0_, author0_.name as name2_0_0_, author0_.salary as salary3_0_0_ from Author author0_ where author0_.id=?
DEBUG 2022-09-08 17:52:25,490 [main][CascadeEntityLoader.java:38] : Static select for action ACTION_MERGE on entity org.example.models.Author: select author0_.id as id1_0_0_, author0_.name as name2_0_0_, author0_.salary as salary3_0_0_ from Author author0_ where author0_.id=?
DEBUG 2022-09-08 17:52:25,490 [main][CascadeEntityLoader.java:38] : Static select for action ACTION_REFRESH on entity org.example.models.Author: select author0_.id as id1_0_0_, author0_.name as name2_0_0_, author0_.salary as salary3_0_0_ from Author author0_ where author0_.id=?
DEBUG 2022-09-08 17:52:25,502 [main][SqlStatementLogger.java:92] : drop table if exists Author
INFO  2022-09-08 17:52:25,503 [main][DdlTransactionIsolatorNonJtaImpl.java:48] : HHH10001501: Connection obtained from JdbcConnectionAccess [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess@4e50da9d] for (non-JTA) DDL execution was not in auto-commit mode; the Connection 'local transaction' will be committed and the Connection will be set into auto-commit mode.
DEBUG 2022-09-08 17:52:25,513 [main][SqlStatementLogger.java:92] : drop table if exists Book
DEBUG 2022-09-08 17:52:25,519 [main][SqlStatementLogger.java:92] : drop table if exists hibernate_sequence
DEBUG 2022-09-08 17:52:25,525 [main][SqlStatementLogger.java:92] : create table Author (id bigint not null auto_increment, name varchar(255), salary integer, primary key (id))
INFO  2022-09-08 17:52:25,526 [main][DdlTransactionIsolatorNonJtaImpl.java:48] : HHH10001501: Connection obtained from JdbcConnectionAccess [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess@ebddf2be] for (non-JTA) DDL execution was not in auto-commit mode; the Connection 'local transaction' will be committed and the Connection will be set into auto-commit mode.
DEBUG 2022-09-08 17:52:25,534 [main][SqlStatementLogger.java:92] : create table Book (id bigint not null, author_id bigint not null, name varchar(255), primary key (id))
DEBUG 2022-09-08 17:52:25,537 [main][SqlStatementLogger.java:92] : create table hibernate_sequence (next_val bigint)
DEBUG 2022-09-08 17:52:25,541 [main][SqlStatementLogger.java:92] : insert into hibernate_sequence values ( 1 )
INFO  2022-09-08 17:52:25,543 [main][SchemaCreatorImpl.java:485] : HHH000476: Executing import script 'org.hibernate.tool.schema.internal.exec.ScriptSourceInputNonExistentImpl@e07d209'
DEBUG 2022-09-08 17:52:25,544 [main][JtaPlatformInitiator.java:42] : No JtaPlatform was specified, checking resolver
DEBUG 2022-09-08 17:52:25,544 [main][JtaPlatformResolverInitiator.java:33] : No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
DEBUG 2022-09-08 17:52:25,545 [main][StandardJtaPlatformResolver.java:101] : Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
DEBUG 2022-09-08 17:52:25,546 [main][NamedQueryRepository.java:151] : Checking 0 named HQL queries
DEBUG 2022-09-08 17:52:25,546 [main][NamedQueryRepository.java:167] : Checking 0 named SQL queries
DEBUG 2022-09-08 17:52:25,547 [main][SessionFactoryRegistry.java:52] : Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@afc938c6
DEBUG 2022-09-08 17:52:25,548 [main][SessionFactoryRegistry.java:74] : Registering SessionFactory: 406d5b9b-22af-4358-a2f8-adf687f5793c (<unnamed>)
DEBUG 2022-09-08 17:52:25,548 [main][SessionFactoryRegistry.java:81] : Not binding SessionFactory to JNDI, no JNDI name configured
DEBUG 2022-09-08 17:52:25,572 [main][StatisticsInitiator.java:82] : Statistics initialized [enabled=false]
DEBUG 2022-09-08 17:52:25,575 [main][TransactionImpl.java:55] : begin
DEBUG 2022-09-08 17:52:25,581 [main][ActionQueue.java:272] : Executing identity-insert immediately
DEBUG 2022-09-08 17:52:25,582 [main][SqlStatementLogger.java:92] : insert into Author (name, salary) values (?, ?)
DEBUG 2022-09-08 17:52:25,589 [main][IdentifierGeneratorHelper.java:78] : Natively generated identity: 1
DEBUG 2022-09-08 17:52:25,589 [main][ResourceRegistryStandardImpl.java:104] : HHH000387: ResultSet's statement was not registered
DEBUG 2022-09-08 17:52:25,590 [main][TransactionImpl.java:66] : committing
DEBUG 2022-09-08 17:52:25,590 [main][AbstractFlushingEventListener.java:132] : Processing flush-time cascades
DEBUG 2022-09-08 17:52:25,590 [main][AbstractFlushingEventListener.java:174] : Dirty checking collections
DEBUG 2022-09-08 17:52:25,591 [main][AbstractFlushingEventListener.java:106] : Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
DEBUG 2022-09-08 17:52:25,591 [main][AbstractFlushingEventListener.java:113] : Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
DEBUG 2022-09-08 17:52:25,592 [main][EntityPrinter.java:102] : Listing entities:
DEBUG 2022-09-08 17:52:25,592 [main][EntityPrinter.java:109] : org.example.models.Author{name=David Baldacci, id=1, salary=903}
DEBUG 2022-09-08 17:52:25,594 [main][LogicalConnectionManagedImpl.java:154] : Initiating JDBC connection release from afterTransaction
DEBUG 2022-09-08 17:52:25,594 [main][LogicalConnectionManagedImpl.java:154] : Initiating JDBC connection release from afterTransaction
DEBUG 2022-09-08 17:52:25,611 [main][TransactionImpl.java:55] : begin
DEBUG 2022-09-08 17:52:25,612 [main][ActionQueue.java:272] : Executing identity-insert immediately
DEBUG 2022-09-08 17:52:25,612 [main][SqlStatementLogger.java:92] : insert into Author (name, salary) values (?, ?)
DEBUG 2022-09-08 17:52:25,613 [main][IdentifierGeneratorHelper.java:78] : Natively generated identity: 2
DEBUG 2022-09-08 17:52:25,614 [main][ResourceRegistryStandardImpl.java:104] : HHH000387: ResultSet's statement was not registered
DEBUG 2022-09-08 17:52:25,614 [main][TransactionImpl.java:66] : committing
DEBUG 2022-09-08 17:52:25,614 [main][AbstractFlushingEventListener.java:132] : Processing flush-time cascades
DEBUG 2022-09-08 17:52:25,614 [main][AbstractFlushingEventListener.java:174] : Dirty checking collections
DEBUG 2022-09-08 17:52:25,614 [main][AbstractFlushingEventListener.java:106] : Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
DEBUG 2022-09-08 17:52:25,614 [main][AbstractFlushingEventListener.java:113] : Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
DEBUG 2022-09-08 17:52:25,614 [main][EntityPrinter.java:102] : Listing entities:
DEBUG 2022-09-08 17:52:25,614 [main][EntityPrinter.java:109] : org.example.models.Author{name=Colleen Hoover, id=2, salary=543}
DEBUG 2022-09-08 17:52:25,615 [main][LogicalConnectionManagedImpl.java:154] : Initiating JDBC connection release from afterTransaction
DEBUG 2022-09-08 17:52:25,615 [main][LogicalConnectionManagedImpl.java:154] : Initiating JDBC connection release from afterTransaction
DEBUG 2022-09-08 17:52:25,616 [main][TransactionImpl.java:55] : begin
DEBUG 2022-09-08 17:52:25,617 [main][ActionQueue.java:272] : Executing identity-insert immediately
DEBUG 2022-09-08 17:52:25,617 [main][SqlStatementLogger.java:92] : insert into Author (name, salary) values (?, ?)
DEBUG 2022-09-08 17:52:25,619 [main][IdentifierGeneratorHelper.java:78] : Natively generated identity: 3
DEBUG 2022-09-08 17:52:25,619 [main][ResourceRegistryStandardImpl.java:104] : HHH000387: ResultSet's statement was not registered
DEBUG 2022-09-08 17:52:25,619 [main][TransactionImpl.java:66] : committing
DEBUG 2022-09-08 17:52:25,619 [main][AbstractFlushingEventListener.java:132] : Processing flush-time cascades
DEBUG 2022-09-08 17:52:25,619 [main][AbstractFlushingEventListener.java:174] : Dirty checking collections
DEBUG 2022-09-08 17:52:25,620 [main][AbstractFlushingEventListener.java:106] : Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
DEBUG 2022-09-08 17:52:25,620 [main][AbstractFlushingEventListener.java:113] : Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
DEBUG 2022-09-08 17:52:25,620 [main][EntityPrinter.java:102] : Listing entities:
DEBUG 2022-09-08 17:52:25,620 [main][EntityPrinter.java:109] : org.example.models.Author{name=Stuart Woods, id=3, salary=1156}
DEBUG 2022-09-08 17:52:25,621 [main][LogicalConnectionManagedImpl.java:154] : Initiating JDBC connection release from afterTransaction
DEBUG 2022-09-08 17:52:25,621 [main][LogicalConnectionManagedImpl.java:154] : Initiating JDBC connection release from afterTransaction
DEBUG 2022-09-08 17:52:25,622 [main][TransactionImpl.java:55] : begin
DEBUG 2022-09-08 17:52:25,622 [main][ActionQueue.java:272] : Executing identity-insert immediately
DEBUG 2022-09-08 17:52:25,623 [main][SqlStatementLogger.java:92] : insert into Author (name, salary) values (?, ?)
DEBUG 2022-09-08 17:52:25,624 [main][IdentifierGeneratorHelper.java:78] : Natively generated identity: 4
DEBUG 2022-09-08 17:52:25,624 [main][ResourceRegistryStandardImpl.java:104] : HHH000387: ResultSet's statement was not registered
DEBUG 2022-09-08 17:52:25,624 [main][TransactionImpl.java:66] : committing
DEBUG 2022-09-08 17:52:25,624 [main][AbstractFlushingEventListener.java:132] : Processing flush-time cascades
DEBUG 2022-09-08 17:52:25,624 [main][AbstractFlushingEventListener.java:174] : Dirty checking collections
DEBUG 2022-09-08 17:52:25,624 [main][AbstractFlushingEventListener.java:106] : Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
DEBUG 2022-09-08 17:52:25,624 [main][AbstractFlushingEventListener.java:113] : Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
DEBUG 2022-09-08 17:52:25,625 [main][EntityPrinter.java:102] : Listing entities:
DEBUG 2022-09-08 17:52:25,625 [main][EntityPrinter.java:109] : org.example.models.Author{name=Nora Roberts, id=4, salary=198}
DEBUG 2022-09-08 17:52:25,625 [main][LogicalConnectionManagedImpl.java:154] : Initiating JDBC connection release from afterTransaction
DEBUG 2022-09-08 17:52:25,626 [main][LogicalConnectionManagedImpl.java:154] : Initiating JDBC connection release from afterTransaction
DEBUG 2022-09-08 17:52:25,626 [main][TransactionImpl.java:55] : begin
DEBUG 2022-09-08 17:52:25,627 [main][ActionQueue.java:272] : Executing identity-insert immediately
DEBUG 2022-09-08 17:52:25,627 [main][SqlStatementLogger.java:92] : insert into Author (name, salary) values (?, ?)
DEBUG 2022-09-08 17:52:25,629 [main][IdentifierGeneratorHelper.java:78] : Natively generated identity: 5
DEBUG 2022-09-08 17:52:25,630 [main][ResourceRegistryStandardImpl.java:104] : HHH000387: ResultSet's statement was not registered
DEBUG 2022-09-08 17:52:25,630 [main][TransactionImpl.java:66] : committing
DEBUG 2022-09-08 17:52:25,630 [main][AbstractFlushingEventListener.java:132] : Processing flush-time cascades
DEBUG 2022-09-08 17:52:25,630 [main][AbstractFlushingEventListener.java:174] : Dirty checking collections
DEBUG 2022-09-08 17:52:25,631 [main][AbstractFlushingEventListener.java:106] : Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
DEBUG 2022-09-08 17:52:25,631 [main][AbstractFlushingEventListener.java:113] : Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
DEBUG 2022-09-08 17:52:25,631 [main][EntityPrinter.java:102] : Listing entities:
DEBUG 2022-09-08 17:52:25,631 [main][EntityPrinter.java:109] : org.example.models.Author{name=Michael Connelly, id=5, salary=2848}
DEBUG 2022-09-08 17:52:25,632 [main][LogicalConnectionManagedImpl.java:154] : Initiating JDBC connection release from afterTransaction
DEBUG 2022-09-08 17:52:25,632 [main][LogicalConnectionManagedImpl.java:154] : Initiating JDBC connection release from afterTransaction
DEBUG 2022-09-08 17:52:25,641 [main][CriteriaQueryImpl.java:307] : Rendered criteria query -> select generatedAlias0 from Author as generatedAlias0
DEBUG 2022-09-08 17:52:25,648 [main][QueryTranslatorFactoryInitiator.java:45] : QueryTranslatorFactory : org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory@7d6827f7
INFO  2022-09-08 17:52:25,648 [main][QueryTranslatorFactoryInitiator.java:47] : HHH000397: Using ASTQueryTranslatorFactory
DEBUG 2022-09-08 17:52:25,662 [main][QueryTranslatorImpl.java:278] : parse() - HQL: select generatedAlias0 from org.example.models.Author as generatedAlias0
DEBUG 2022-09-08 17:52:25,666 [main][QueryTranslatorImpl.java:296] : --- HQL AST ---
 \-[QUERY] Node: 'query'
    \-[SELECT_FROM] Node: 'SELECT_FROM'
       +-[FROM] Node: 'from'
       |  \-[RANGE] Node: 'RANGE'
       |     +-[DOT] Node: '.'
       |     |  +-[DOT] Node: '.'
       |     |  |  +-[DOT] Node: '.'
       |     |  |  |  +-[IDENT] Node: 'org'
       |     |  |  |  \-[IDENT] Node: 'example'
       |     |  |  \-[IDENT] Node: 'models'
       |     |  \-[IDENT] Node: 'Author'
       |     \-[ALIAS] Node: 'generatedAlias0'
       \-[SELECT] Node: 'select'
          \-[IDENT] Node: 'generatedAlias0'

DEBUG 2022-09-08 17:52:25,667 [main][ErrorCounter.java:95] : throwQueryException() : no errors
DEBUG 2022-09-08 17:52:25,675 [main][HqlSqlBaseWalker.java:124] : select << begin [level=1, statement=select]
DEBUG 2022-09-08 17:52:25,680 [main][FromElement.java:148] : FromClause{level=1} : org.example.models.Author (generatedAlias0) -> author0_
DEBUG 2022-09-08 17:52:25,680 [main][FromReferenceNode.java:60] : Resolved : generatedAlias0 -> author0_.id
DEBUG 2022-09-08 17:52:25,681 [main][HqlSqlBaseWalker.java:128] : select : finishing up [level=1, statement=select]
DEBUG 2022-09-08 17:52:25,681 [main][HqlSqlWalker.java:725] : processQuery() :  ( SELECT ( {select clause} author0_.id ) ( FromClause{level=1} Author author0_ ) )
DEBUG 2022-09-08 17:52:25,684 [main][JoinProcessor.java:169] : Using FROM fragment [Author author0_]
DEBUG 2022-09-08 17:52:25,684 [main][HqlSqlBaseWalker.java:132] : select >> end [level=1, statement=select]
DEBUG 2022-09-08 17:52:25,684 [main][QueryTranslatorImpl.java:265] : --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (Author)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'author0_.id as id1_0_' {alias=generatedAlias0, className=org.example.models.Author, tableAlias=author0_}
    |  \-[SQL_TOKEN] SqlFragment: 'author0_.name as name2_0_, author0_.salary as salary3_0_'
    \-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[author0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'Author author0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=Author,tableAlias=author0_,origin=null,columns={,className=org.example.models.Author}}

DEBUG 2022-09-08 17:52:25,685 [main][ErrorCounter.java:95] : throwQueryException() : no errors
DEBUG 2022-09-08 17:52:25,687 [main][QueryTranslatorImpl.java:247] : HQL: select generatedAlias0 from org.example.models.Author as generatedAlias0
DEBUG 2022-09-08 17:52:25,687 [main][QueryTranslatorImpl.java:248] : SQL: select author0_.id as id1_0_, author0_.name as name2_0_, author0_.salary as salary3_0_ from Author author0_
DEBUG 2022-09-08 17:52:25,687 [main][ErrorCounter.java:95] : throwQueryException() : no errors
DEBUG 2022-09-08 17:52:25,693 [main][SqlStatementLogger.java:92] : select author0_.id as id1_0_, author0_.name as name2_0_, author0_.salary as salary3_0_ from Author author0_
DEBUG 2022-09-08 17:52:25,695 [main][DelegatingBasicLogger.java:384] : Result set row: 0
DEBUG 2022-09-08 17:52:25,696 [main][Loader.java:1527] : Result row: EntityKey[org.example.models.Author#1]
DEBUG 2022-09-08 17:52:25,697 [main][DelegatingBasicLogger.java:384] : Result set row: 1
DEBUG 2022-09-08 17:52:25,697 [main][Loader.java:1527] : Result row: EntityKey[org.example.models.Author#2]
DEBUG 2022-09-08 17:52:25,697 [main][DelegatingBasicLogger.java:384] : Result set row: 2
DEBUG 2022-09-08 17:52:25,697 [main][Loader.java:1527] : Result row: EntityKey[org.example.models.Author#3]
DEBUG 2022-09-08 17:52:25,698 [main][DelegatingBasicLogger.java:384] : Result set row: 3
DEBUG 2022-09-08 17:52:25,698 [main][Loader.java:1527] : Result row: EntityKey[org.example.models.Author#4]
DEBUG 2022-09-08 17:52:25,698 [main][DelegatingBasicLogger.java:384] : Result set row: 4
DEBUG 2022-09-08 17:52:25,698 [main][Loader.java:1527] : Result row: EntityKey[org.example.models.Author#5]
DEBUG 2022-09-08 17:52:25,698 [main][TwoPhaseLoad.java:141] : Resolving associations for [org.example.models.Author#1]
DEBUG 2022-09-08 17:52:25,698 [main][TwoPhaseLoad.java:267] : Done materializing entity [org.example.models.Author#1]
DEBUG 2022-09-08 17:52:25,699 [main][TwoPhaseLoad.java:141] : Resolving associations for [org.example.models.Author#2]
DEBUG 2022-09-08 17:52:25,699 [main][TwoPhaseLoad.java:267] : Done materializing entity [org.example.models.Author#2]
DEBUG 2022-09-08 17:52:25,699 [main][TwoPhaseLoad.java:141] : Resolving associations for [org.example.models.Author#3]
DEBUG 2022-09-08 17:52:25,699 [main][TwoPhaseLoad.java:267] : Done materializing entity [org.example.models.Author#3]
DEBUG 2022-09-08 17:52:25,699 [main][TwoPhaseLoad.java:141] : Resolving associations for [org.example.models.Author#4]
DEBUG 2022-09-08 17:52:25,699 [main][TwoPhaseLoad.java:267] : Done materializing entity [org.example.models.Author#4]
DEBUG 2022-09-08 17:52:25,699 [main][TwoPhaseLoad.java:141] : Resolving associations for [org.example.models.Author#5]
DEBUG 2022-09-08 17:52:25,699 [main][TwoPhaseLoad.java:267] : Done materializing entity [org.example.models.Author#5]
DEBUG 2022-09-08 17:52:25,700 [main][LogicalConnectionManagedImpl.java:154] : Initiating JDBC connection release from afterTransaction
DEBUG 2022-09-08 17:52:25,708 [main][SqlStatementLogger.java:92] : SELECT * FROM Author
DEBUG 2022-09-08 17:52:25,709 [main][DelegatingBasicLogger.java:384] : Result set row: 0
DEBUG 2022-09-08 17:52:25,710 [main][Loader.java:1527] : Result row: EntityKey[org.example.models.Author#1]
DEBUG 2022-09-08 17:52:25,711 [main][DelegatingBasicLogger.java:384] : Result set row: 1
DEBUG 2022-09-08 17:52:25,711 [main][Loader.java:1527] : Result row: EntityKey[org.example.models.Author#2]
DEBUG 2022-09-08 17:52:25,711 [main][DelegatingBasicLogger.java:384] : Result set row: 2
DEBUG 2022-09-08 17:52:25,711 [main][Loader.java:1527] : Result row: EntityKey[org.example.models.Author#3]
DEBUG 2022-09-08 17:52:25,711 [main][DelegatingBasicLogger.java:384] : Result set row: 3
DEBUG 2022-09-08 17:52:25,711 [main][Loader.java:1527] : Result row: EntityKey[org.example.models.Author#4]
DEBUG 2022-09-08 17:52:25,711 [main][DelegatingBasicLogger.java:384] : Result set row: 4
DEBUG 2022-09-08 17:52:25,711 [main][Loader.java:1527] : Result row: EntityKey[org.example.models.Author#5]
DEBUG 2022-09-08 17:52:25,711 [main][TwoPhaseLoad.java:141] : Resolving associations for [org.example.models.Author#1]
DEBUG 2022-09-08 17:52:25,712 [main][TwoPhaseLoad.java:267] : Done materializing entity [org.example.models.Author#1]
DEBUG 2022-09-08 17:52:25,712 [main][TwoPhaseLoad.java:141] : Resolving associations for [org.example.models.Author#2]
DEBUG 2022-09-08 17:52:25,712 [main][TwoPhaseLoad.java:267] : Done materializing entity [org.example.models.Author#2]
DEBUG 2022-09-08 17:52:25,712 [main][TwoPhaseLoad.java:141] : Resolving associations for [org.example.models.Author#3]
DEBUG 2022-09-08 17:52:25,712 [main][TwoPhaseLoad.java:267] : Done materializing entity [org.example.models.Author#3]
DEBUG 2022-09-08 17:52:25,712 [main][TwoPhaseLoad.java:141] : Resolving associations for [org.example.models.Author#4]
DEBUG 2022-09-08 17:52:25,712 [main][TwoPhaseLoad.java:267] : Done materializing entity [org.example.models.Author#4]
DEBUG 2022-09-08 17:52:25,712 [main][TwoPhaseLoad.java:141] : Resolving associations for [org.example.models.Author#5]
DEBUG 2022-09-08 17:52:25,712 [main][TwoPhaseLoad.java:267] : Done materializing entity [org.example.models.Author#5]
DEBUG 2022-09-08 17:52:25,712 [main][LogicalConnectionManagedImpl.java:154] : Initiating JDBC connection release from afterTransaction
DEBUG 2022-09-08 17:52:25,714 [main][SqlStatementLogger.java:92] : select author0_.id as id1_0_0_, author0_.name as name2_0_0_, author0_.salary as salary3_0_0_ from Author author0_ where author0_.id=?
DEBUG 2022-09-08 17:52:25,717 [main][ResultSetProcessorImpl.java:120] : Starting ResultSet row #0
DEBUG 2022-09-08 17:52:25,717 [main][EntityReferenceInitializerImpl.java:126] : On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
DEBUG 2022-09-08 17:52:25,717 [main][TwoPhaseLoad.java:141] : Resolving associations for [org.example.models.Author#2]
DEBUG 2022-09-08 17:52:25,717 [main][TwoPhaseLoad.java:267] : Done materializing entity [org.example.models.Author#2]
DEBUG 2022-09-08 17:52:25,717 [main][ResourceRegistryStandardImpl.java:73] : HHH000387: ResultSet's statement was not registered
DEBUG 2022-09-08 17:52:25,718 [main][AbstractLoadPlanBasedEntityLoader.java:189] : Done entity load : org.example.models.Author#2
DEBUG 2022-09-08 17:52:25,718 [main][LogicalConnectionManagedImpl.java:154] : Initiating JDBC connection release from afterTransaction
DEBUG 2022-09-08 17:52:25,719 [main][QueryTranslatorImpl.java:278] : parse() - HQL: select a from org.example.models.Author a where a.salary between :minSalary and :maxSalary
DEBUG 2022-09-08 17:52:25,720 [main][QueryTranslatorImpl.java:296] : --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[IDENT] Node: 'org'
    |  |     |  |  |  \-[IDENT] Node: 'example'
    |  |     |  |  \-[IDENT] Node: 'models'
    |  |     |  \-[IDENT] Node: 'Author'
    |  |     \-[ALIAS] Node: 'a'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'a'
    \-[WHERE] Node: 'where'
       \-[BETWEEN] Node: 'between'
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'a'
          |  \-[IDENT] Node: 'salary'
          +-[COLON] Node: ':'
          |  \-[IDENT] Node: 'minSalary'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'maxSalary'

DEBUG 2022-09-08 17:52:25,720 [main][ErrorCounter.java:95] : throwQueryException() : no errors
DEBUG 2022-09-08 17:52:25,720 [main][HqlSqlBaseWalker.java:124] : select << begin [level=1, statement=select]
DEBUG 2022-09-08 17:52:25,721 [main][FromElement.java:148] : FromClause{level=1} : org.example.models.Author (a) -> author0_
DEBUG 2022-09-08 17:52:25,721 [main][FromReferenceNode.java:60] : Resolved : a -> author0_.id
DEBUG 2022-09-08 17:52:25,721 [main][FromReferenceNode.java:60] : Resolved : a -> author0_.id
DEBUG 2022-09-08 17:52:25,725 [main][DotNode.java:661] : getDataType() : salary -> org.hibernate.type.IntegerType@5acb379f
DEBUG 2022-09-08 17:52:25,726 [main][FromReferenceNode.java:60] : Resolved : a.salary -> author0_.salary
DEBUG 2022-09-08 17:52:25,726 [main][HqlSqlBaseWalker.java:128] : select : finishing up [level=1, statement=select]
DEBUG 2022-09-08 17:52:25,726 [main][HqlSqlWalker.java:725] : processQuery() :  ( SELECT ( {select clause} author0_.id ) ( FromClause{level=1} Author author0_ ) ( where ( between ( author0_.salary author0_.id salary ) ? ? ) ) )
DEBUG 2022-09-08 17:52:25,726 [main][JoinProcessor.java:169] : Using FROM fragment [Author author0_]
DEBUG 2022-09-08 17:52:25,727 [main][HqlSqlBaseWalker.java:132] : select >> end [level=1, statement=select]
DEBUG 2022-09-08 17:52:25,750 [main][QueryTranslatorImpl.java:265] : --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (Author)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'author0_.id as id1_0_' {alias=a, className=org.example.models.Author, tableAlias=author0_}
    |  \-[SQL_TOKEN] SqlFragment: 'author0_.name as name2_0_, author0_.salary as salary3_0_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[a], fromElementByTableAlias=[author0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'Author author0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=a,role=null,tableName=Author,tableAlias=author0_,origin=null,columns={,className=org.example.models.Author}}
    \-[WHERE] SqlNode: 'where'
       \-[BETWEEN] BetweenOperatorNode: 'between'
          +-[DOT] DotNode: 'author0_.salary' {propertyName=salary,dereferenceType=PRIMITIVE,getPropertyPath=salary,path=a.salary,tableAlias=author0_,className=org.example.models.Author,classAlias=a}
          |  +-[ALIAS_REF] IdentNode: 'author0_.id' {alias=a, className=org.example.models.Author, tableAlias=author0_}
          |  \-[IDENT] IdentNode: 'salary' {originalText=salary}
          +-[NAMED_PARAM] ParameterNode: '?' {name=minSalary, expectedType=org.hibernate.type.IntegerType@5acb379f}
          \-[NAMED_PARAM] ParameterNode: '?' {name=maxSalary, expectedType=org.hibernate.type.IntegerType@5acb379f}

DEBUG 2022-09-08 17:52:25,751 [main][ErrorCounter.java:95] : throwQueryException() : no errors
DEBUG 2022-09-08 17:52:25,751 [main][QueryTranslatorImpl.java:247] : HQL: select a from org.example.models.Author a where a.salary between :minSalary and :maxSalary
DEBUG 2022-09-08 17:52:25,751 [main][QueryTranslatorImpl.java:248] : SQL: select author0_.id as id1_0_, author0_.name as name2_0_, author0_.salary as salary3_0_ from Author author0_ where author0_.salary between ? and ?
DEBUG 2022-09-08 17:52:25,751 [main][ErrorCounter.java:95] : throwQueryException() : no errors
DEBUG 2022-09-08 17:52:25,753 [main][SqlStatementLogger.java:92] : select author0_.id as id1_0_, author0_.name as name2_0_, author0_.salary as salary3_0_ from Author author0_ where author0_.salary between ? and ?
DEBUG 2022-09-08 17:52:25,755 [main][LogicalConnectionManagedImpl.java:154] : Initiating JDBC connection release from afterTransaction
DEBUG 2022-09-08 17:52:25,755 [main][SqlStatementLogger.java:92] : select author0_.id as id1_0_0_, author0_.name as name2_0_0_, author0_.salary as salary3_0_0_ from Author author0_ where author0_.id=?
DEBUG 2022-09-08 17:52:25,756 [main][ResultSetProcessorImpl.java:120] : Starting ResultSet row #0
DEBUG 2022-09-08 17:52:25,757 [main][EntityReferenceInitializerImpl.java:126] : On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
DEBUG 2022-09-08 17:52:25,757 [main][TwoPhaseLoad.java:141] : Resolving associations for [org.example.models.Author#2]
DEBUG 2022-09-08 17:52:25,757 [main][TwoPhaseLoad.java:267] : Done materializing entity [org.example.models.Author#2]
DEBUG 2022-09-08 17:52:25,757 [main][ResourceRegistryStandardImpl.java:73] : HHH000387: ResultSet's statement was not registered
DEBUG 2022-09-08 17:52:25,757 [main][AbstractLoadPlanBasedEntityLoader.java:189] : Done entity load : org.example.models.Author#2
DEBUG 2022-09-08 17:52:25,757 [main][LogicalConnectionManagedImpl.java:154] : Initiating JDBC connection release from afterTransaction
DEBUG 2022-09-08 17:52:25,758 [main][TransactionImpl.java:55] : begin
DEBUG 2022-09-08 17:52:25,758 [main][TransactionImpl.java:66] : committing
DEBUG 2022-09-08 17:52:25,758 [main][AbstractFlushingEventListener.java:132] : Processing flush-time cascades
DEBUG 2022-09-08 17:52:25,758 [main][AbstractFlushingEventListener.java:174] : Dirty checking collections
DEBUG 2022-09-08 17:52:25,759 [main][AbstractFlushingEventListener.java:106] : Flushed: 0 insertions, 1 updates, 0 deletions to 1 objects
DEBUG 2022-09-08 17:52:25,759 [main][AbstractFlushingEventListener.java:113] : Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
DEBUG 2022-09-08 17:52:25,759 [main][EntityPrinter.java:102] : Listing entities:
DEBUG 2022-09-08 17:52:25,759 [main][EntityPrinter.java:109] : org.example.models.Author{name=Ihor Kosolapow, id=2, salary=543}
DEBUG 2022-09-08 17:52:25,762 [main][SqlStatementLogger.java:92] : update Author set name=? where id=?
DEBUG 2022-09-08 17:52:25,764 [main][LogicalConnectionManagedImpl.java:154] : Initiating JDBC connection release from afterTransaction
DEBUG 2022-09-08 17:52:25,765 [main][LogicalConnectionManagedImpl.java:154] : Initiating JDBC connection release from afterTransaction
DEBUG 2022-09-08 17:52:25,765 [main][JdbcCoordinatorImpl.java:177] : HHH000420: Closing un-released batch
DEBUG 2022-09-08 17:52:25,766 [main][SqlStatementLogger.java:92] : select author0_.id as id1_0_0_, author0_.name as name2_0_0_, author0_.salary as salary3_0_0_ from Author author0_ where author0_.id=?
DEBUG 2022-09-08 17:52:25,767 [main][ResultSetProcessorImpl.java:120] : Starting ResultSet row #0
DEBUG 2022-09-08 17:52:25,767 [main][EntityReferenceInitializerImpl.java:126] : On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
DEBUG 2022-09-08 17:52:25,767 [main][TwoPhaseLoad.java:141] : Resolving associations for [org.example.models.Author#2]
DEBUG 2022-09-08 17:52:25,767 [main][TwoPhaseLoad.java:267] : Done materializing entity [org.example.models.Author#2]
DEBUG 2022-09-08 17:52:25,768 [main][ResourceRegistryStandardImpl.java:73] : HHH000387: ResultSet's statement was not registered
DEBUG 2022-09-08 17:52:25,768 [main][AbstractLoadPlanBasedEntityLoader.java:189] : Done entity load : org.example.models.Author#2
DEBUG 2022-09-08 17:52:25,768 [main][LogicalConnectionManagedImpl.java:154] : Initiating JDBC connection release from afterTransaction
DEBUG 2022-09-08 17:52:55,162 [pool-1-thread-1][PooledConnections.java:51] : Connection pool now considered primed; min-size will be maintained
WARN  2022-09-08 17:56:14,579 [main][Main.java:16] : TEST
DEBUG 2022-09-08 17:56:14,633 [main][CoreLogging.java:28] : Logging Provider: org.jboss.logging.Log4jLoggerProvider
DEBUG 2022-09-08 17:56:14,641 [main][IntegratorServiceImpl.java:46] : Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
DEBUG 2022-09-08 17:56:14,644 [main][IntegratorServiceImpl.java:46] : Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
DEBUG 2022-09-08 17:56:14,648 [main][IntegratorServiceImpl.java:46] : Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
INFO  2022-09-08 17:56:14,725 [main][Version.java:45] : HHH000412: Hibernate Core {5.2.2.Final}
INFO  2022-09-08 17:56:14,727 [main][Environment.java:213] : HHH000206: hibernate.properties not found
INFO  2022-09-08 17:56:14,729 [main][Environment.java:318] : HHH000021: Bytecode provider name : javassist
DEBUG 2022-09-08 17:56:14,753 [main][LocalXmlResourceResolver.java:57] : Interpreting public/system identifier : [null] - [http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd]
DEBUG 2022-09-08 17:56:14,754 [main][LocalXmlResourceResolver.java:85] : Recognized hibernate-configuration identifier; attempting to resolve on classpath under org/hibernate/
DEBUG 2022-09-08 17:56:14,762 [main][JaxbCfgProcessor.java:116] : cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
DEBUG 2022-09-08 17:56:14,979 [main][Configuration.java:724] : Building session factory using internal StandardServiceRegistryBuilder
DEBUG 2022-09-08 17:56:14,983 [main][ServiceBinding.java:68] : Overriding existing service binding [org.hibernate.secure.spi.JaccService]
DEBUG 2022-09-08 17:56:14,983 [main][Configuration.java:652] : Building session factory using provided StandardServiceRegistry
DEBUG 2022-09-08 17:56:14,992 [main][RegionFactoryInitiator.java:75] : Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
INFO  2022-09-08 17:56:14,998 [main][JavaReflectionManager.java:66] : HCANN000001: Hibernate Commons Annotations {5.0.1.Final}
DEBUG 2022-09-08 17:56:15,012 [main][BasicTypeRegistry.java:145] : Adding type registration boolean -> org.hibernate.type.BooleanType@b980be4a
DEBUG 2022-09-08 17:56:15,012 [main][BasicTypeRegistry.java:145] : Adding type registration boolean -> org.hibernate.type.BooleanType@b980be4a
DEBUG 2022-09-08 17:56:15,013 [main][BasicTypeRegistry.java:145] : Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@b980be4a
DEBUG 2022-09-08 17:56:15,014 [main][BasicTypeRegistry.java:145] : Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@498b2e77
DEBUG 2022-09-08 17:56:15,014 [main][BasicTypeRegistry.java:145] : Adding type registration true_false -> org.hibernate.type.TrueFalseType@e9875639
DEBUG 2022-09-08 17:56:15,015 [main][BasicTypeRegistry.java:145] : Adding type registration yes_no -> org.hibernate.type.YesNoType@76ea0c86
DEBUG 2022-09-08 17:56:15,016 [main][BasicTypeRegistry.java:145] : Adding type registration byte -> org.hibernate.type.ByteType@e023b7
DEBUG 2022-09-08 17:56:15,016 [main][BasicTypeRegistry.java:145] : Adding type registration byte -> org.hibernate.type.ByteType@e023b7
DEBUG 2022-09-08 17:56:15,017 [main][BasicTypeRegistry.java:145] : Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@e023b7
DEBUG 2022-09-08 17:56:15,017 [main][BasicTypeRegistry.java:145] : Adding type registration character -> org.hibernate.type.CharacterType@394bfd2a
DEBUG 2022-09-08 17:56:15,018 [main][BasicTypeRegistry.java:145] : Adding type registration char -> org.hibernate.type.CharacterType@394bfd2a
DEBUG 2022-09-08 17:56:15,018 [main][BasicTypeRegistry.java:145] : Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@394bfd2a
DEBUG 2022-09-08 17:56:15,019 [main][BasicTypeRegistry.java:145] : Adding type registration short -> org.hibernate.type.ShortType@fd53e521
DEBUG 2022-09-08 17:56:15,019 [main][BasicTypeRegistry.java:145] : Adding type registration short -> org.hibernate.type.ShortType@fd53e521
DEBUG 2022-09-08 17:56:15,020 [main][BasicTypeRegistry.java:145] : Adding type registration java.lang.Short -> org.hibernate.type.ShortType@fd53e521
DEBUG 2022-09-08 17:56:15,021 [main][BasicTypeRegistry.java:145] : Adding type registration integer -> org.hibernate.type.IntegerType@3bdc7c39
DEBUG 2022-09-08 17:56:15,021 [main][BasicTypeRegistry.java:145] : Adding type registration int -> org.hibernate.type.IntegerType@3bdc7c39
DEBUG 2022-09-08 17:56:15,022 [main][BasicTypeRegistry.java:145] : Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@3bdc7c39
DEBUG 2022-09-08 17:56:15,023 [main][BasicTypeRegistry.java:145] : Adding type registration long -> org.hibernate.type.LongType@cb9bffc7
DEBUG 2022-09-08 17:56:15,023 [main][BasicTypeRegistry.java:145] : Adding type registration long -> org.hibernate.type.LongType@cb9bffc7
DEBUG 2022-09-08 17:56:15,023 [main][BasicTypeRegistry.java:145] : Adding type registration java.lang.Long -> org.hibernate.type.LongType@cb9bffc7
DEBUG 2022-09-08 17:56:15,024 [main][BasicTypeRegistry.java:145] : Adding type registration float -> org.hibernate.type.FloatType@16b4ca6b
DEBUG 2022-09-08 17:56:15,025 [main][BasicTypeRegistry.java:145] : Adding type registration float -> org.hibernate.type.FloatType@16b4ca6b
DEBUG 2022-09-08 17:56:15,025 [main][BasicTypeRegistry.java:145] : Adding type registration java.lang.Float -> org.hibernate.type.FloatType@16b4ca6b
DEBUG 2022-09-08 17:56:15,026 [main][BasicTypeRegistry.java:145] : Adding type registration double -> org.hibernate.type.DoubleType@d882efa2
DEBUG 2022-09-08 17:56:15,027 [main][BasicTypeRegistry.java:145] : Adding type registration double -> org.hibernate.type.DoubleType@d882efa2
DEBUG 2022-09-08 17:56:15,028 [main][BasicTypeRegistry.java:145] : Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@d882efa2
DEBUG 2022-09-08 17:56:15,029 [main][BasicTypeRegistry.java:145] : Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@5ff0ed4e
DEBUG 2022-09-08 17:56:15,029 [main][BasicTypeRegistry.java:145] : Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@5ff0ed4e
DEBUG 2022-09-08 17:56:15,030 [main][BasicTypeRegistry.java:145] : Adding type registration big_integer -> org.hibernate.type.BigIntegerType@dec608de
DEBUG 2022-09-08 17:56:15,031 [main][BasicTypeRegistry.java:145] : Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@dec608de
DEBUG 2022-09-08 17:56:15,031 [main][BasicTypeRegistry.java:145] : Adding type registration string -> org.hibernate.type.StringType@f31af301
DEBUG 2022-09-08 17:56:15,032 [main][BasicTypeRegistry.java:145] : Adding type registration java.lang.String -> org.hibernate.type.StringType@f31af301
DEBUG 2022-09-08 17:56:15,032 [main][BasicTypeRegistry.java:145] : Adding type registration nstring -> org.hibernate.type.StringNVarcharType@2c942fdd
DEBUG 2022-09-08 17:56:15,033 [main][BasicTypeRegistry.java:145] : Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@344a8d1d
DEBUG 2022-09-08 17:56:15,034 [main][BasicTypeRegistry.java:145] : Adding type registration url -> org.hibernate.type.UrlType@76f3f947
DEBUG 2022-09-08 17:56:15,034 [main][BasicTypeRegistry.java:145] : Adding type registration java.net.URL -> org.hibernate.type.UrlType@76f3f947
DEBUG 2022-09-08 17:56:15,035 [main][BasicTypeRegistry.java:145] : Adding type registration Duration -> org.hibernate.type.DurationType@9a619457
DEBUG 2022-09-08 17:56:15,035 [main][BasicTypeRegistry.java:145] : Adding type registration java.time.Duration -> org.hibernate.type.DurationType@9a619457
DEBUG 2022-09-08 17:56:15,041 [main][BasicTypeRegistry.java:145] : Adding type registration Instant -> org.hibernate.type.InstantType@1867a7b
DEBUG 2022-09-08 17:56:15,042 [main][BasicTypeRegistry.java:145] : Adding type registration java.time.Instant -> org.hibernate.type.InstantType@1867a7b
DEBUG 2022-09-08 17:56:15,043 [main][BasicTypeRegistry.java:145] : Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@abd9e103
DEBUG 2022-09-08 17:56:15,043 [main][BasicTypeRegistry.java:145] : Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@abd9e103
DEBUG 2022-09-08 17:56:15,045 [main][BasicTypeRegistry.java:145] : Adding type registration LocalDate -> org.hibernate.type.LocalDateType@295d1f82
DEBUG 2022-09-08 17:56:15,045 [main][BasicTypeRegistry.java:145] : Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@295d1f82
DEBUG 2022-09-08 17:56:15,048 [main][BasicTypeRegistry.java:145] : Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@64b3c58d
DEBUG 2022-09-08 17:56:15,048 [main][BasicTypeRegistry.java:145] : Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@64b3c58d
DEBUG 2022-09-08 17:56:15,051 [main][BasicTypeRegistry.java:145] : Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@17101fb7
DEBUG 2022-09-08 17:56:15,051 [main][BasicTypeRegistry.java:145] : Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@17101fb7
DEBUG 2022-09-08 17:56:15,052 [main][BasicTypeRegistry.java:145] : Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@62b84ffb
DEBUG 2022-09-08 17:56:15,053 [main][BasicTypeRegistry.java:145] : Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@62b84ffb
DEBUG 2022-09-08 17:56:15,054 [main][BasicTypeRegistry.java:145] : Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@23670bcf
DEBUG 2022-09-08 17:56:15,054 [main][BasicTypeRegistry.java:145] : Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@23670bcf
DEBUG 2022-09-08 17:56:15,055 [main][BasicTypeRegistry.java:145] : Adding type registration date -> org.hibernate.type.DateType@ed39c0b7
DEBUG 2022-09-08 17:56:15,056 [main][BasicTypeRegistry.java:145] : Adding type registration java.sql.Date -> org.hibernate.type.DateType@ed39c0b7
DEBUG 2022-09-08 17:56:15,057 [main][BasicTypeRegistry.java:145] : Adding type registration time -> org.hibernate.type.TimeType@9ddaceaa
DEBUG 2022-09-08 17:56:15,057 [main][BasicTypeRegistry.java:145] : Adding type registration java.sql.Time -> org.hibernate.type.TimeType@9ddaceaa
DEBUG 2022-09-08 17:56:15,058 [main][BasicTypeRegistry.java:145] : Adding type registration timestamp -> org.hibernate.type.TimestampType@9fcb2a3f
DEBUG 2022-09-08 17:56:15,058 [main][BasicTypeRegistry.java:145] : Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@9fcb2a3f
DEBUG 2022-09-08 17:56:15,059 [main][BasicTypeRegistry.java:145] : Adding type registration java.util.Date -> org.hibernate.type.TimestampType@9fcb2a3f
DEBUG 2022-09-08 17:56:15,060 [main][BasicTypeRegistry.java:145] : Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@f097c620
DEBUG 2022-09-08 17:56:15,061 [main][BasicTypeRegistry.java:145] : Adding type registration calendar -> org.hibernate.type.CalendarType@cb499f06
DEBUG 2022-09-08 17:56:15,061 [main][BasicTypeRegistry.java:145] : Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@cb499f06
DEBUG 2022-09-08 17:56:15,062 [main][BasicTypeRegistry.java:145] : Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@cb499f06
DEBUG 2022-09-08 17:56:15,062 [main][BasicTypeRegistry.java:145] : Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@14830d37
DEBUG 2022-09-08 17:56:15,063 [main][BasicTypeRegistry.java:145] : Adding type registration locale -> org.hibernate.type.LocaleType@472320d4
DEBUG 2022-09-08 17:56:15,063 [main][BasicTypeRegistry.java:145] : Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@472320d4
DEBUG 2022-09-08 17:56:15,064 [main][BasicTypeRegistry.java:145] : Adding type registration currency -> org.hibernate.type.CurrencyType@58f8b3f7
DEBUG 2022-09-08 17:56:15,064 [main][BasicTypeRegistry.java:145] : Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@58f8b3f7
DEBUG 2022-09-08 17:56:15,065 [main][BasicTypeRegistry.java:145] : Adding type registration timezone -> org.hibernate.type.TimeZoneType@3386a7cb
DEBUG 2022-09-08 17:56:15,065 [main][BasicTypeRegistry.java:145] : Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@3386a7cb
DEBUG 2022-09-08 17:56:15,066 [main][BasicTypeRegistry.java:145] : Adding type registration class -> org.hibernate.type.ClassType@5c085b6b
DEBUG 2022-09-08 17:56:15,066 [main][BasicTypeRegistry.java:145] : Adding type registration java.lang.Class -> org.hibernate.type.ClassType@5c085b6b
DEBUG 2022-09-08 17:56:15,067 [main][BasicTypeRegistry.java:145] : Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@515e05d6
DEBUG 2022-09-08 17:56:15,067 [main][BasicTypeRegistry.java:145] : Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@515e05d6
DEBUG 2022-09-08 17:56:15,068 [main][BasicTypeRegistry.java:145] : Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@10e1cea0
DEBUG 2022-09-08 17:56:15,069 [main][BasicTypeRegistry.java:145] : Adding type registration binary -> org.hibernate.type.BinaryType@a4b901c8
DEBUG 2022-09-08 17:56:15,069 [main][BasicTypeRegistry.java:145] : Adding type registration byte[] -> org.hibernate.type.BinaryType@a4b901c8
DEBUG 2022-09-08 17:56:15,070 [main][BasicTypeRegistry.java:145] : Adding type registration [B -> org.hibernate.type.BinaryType@a4b901c8
DEBUG 2022-09-08 17:56:15,070 [main][BasicTypeRegistry.java:145] : Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@b57f240a
DEBUG 2022-09-08 17:56:15,071 [main][BasicTypeRegistry.java:145] : Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@b57f240a
DEBUG 2022-09-08 17:56:15,071 [main][BasicTypeRegistry.java:145] : Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@b57f240a
DEBUG 2022-09-08 17:56:15,071 [main][BasicTypeRegistry.java:145] : Adding type registration row_version -> org.hibernate.type.RowVersionType@50a6d0dd
DEBUG 2022-09-08 17:56:15,072 [main][BasicTypeRegistry.java:145] : Adding type registration image -> org.hibernate.type.ImageType@5067d87d
DEBUG 2022-09-08 17:56:15,072 [main][BasicTypeRegistry.java:145] : Adding type registration characters -> org.hibernate.type.CharArrayType@8732a73a
DEBUG 2022-09-08 17:56:15,073 [main][BasicTypeRegistry.java:145] : Adding type registration char[] -> org.hibernate.type.CharArrayType@8732a73a
DEBUG 2022-09-08 17:56:15,073 [main][BasicTypeRegistry.java:145] : Adding type registration [C -> org.hibernate.type.CharArrayType@8732a73a
DEBUG 2022-09-08 17:56:15,073 [main][BasicTypeRegistry.java:145] : Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@b92e35dc
DEBUG 2022-09-08 17:56:15,074 [main][BasicTypeRegistry.java:145] : Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@b92e35dc
DEBUG 2022-09-08 17:56:15,074 [main][BasicTypeRegistry.java:145] : Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@b92e35dc
DEBUG 2022-09-08 17:56:15,074 [main][BasicTypeRegistry.java:145] : Adding type registration text -> org.hibernate.type.TextType@bcec0d6b
DEBUG 2022-09-08 17:56:15,075 [main][BasicTypeRegistry.java:145] : Adding type registration ntext -> org.hibernate.type.NTextType@83f8ee40
DEBUG 2022-09-08 17:56:15,077 [main][BasicTypeRegistry.java:145] : Adding type registration blob -> org.hibernate.type.BlobType@3ff96aa6
DEBUG 2022-09-08 17:56:15,077 [main][BasicTypeRegistry.java:145] : Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@3ff96aa6
DEBUG 2022-09-08 17:56:15,077 [main][BasicTypeRegistry.java:145] : Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@ca7c7ca2
DEBUG 2022-09-08 17:56:15,080 [main][BasicTypeRegistry.java:145] : Adding type registration clob -> org.hibernate.type.ClobType@7cea1251
DEBUG 2022-09-08 17:56:15,080 [main][BasicTypeRegistry.java:145] : Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@7cea1251
DEBUG 2022-09-08 17:56:15,082 [main][BasicTypeRegistry.java:145] : Adding type registration nclob -> org.hibernate.type.NClobType@fcec9083
DEBUG 2022-09-08 17:56:15,082 [main][BasicTypeRegistry.java:145] : Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@fcec9083
DEBUG 2022-09-08 17:56:15,082 [main][BasicTypeRegistry.java:145] : Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@edd241ab
DEBUG 2022-09-08 17:56:15,083 [main][BasicTypeRegistry.java:145] : Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@e3718c4c
DEBUG 2022-09-08 17:56:15,084 [main][BasicTypeRegistry.java:145] : Adding type registration serializable -> org.hibernate.type.SerializableType@cb481754
DEBUG 2022-09-08 17:56:15,086 [main][BasicTypeRegistry.java:145] : Adding type registration object -> org.hibernate.type.ObjectType@a4924379
DEBUG 2022-09-08 17:56:15,086 [main][BasicTypeRegistry.java:145] : Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@a4924379
DEBUG 2022-09-08 17:56:15,086 [main][BasicTypeRegistry.java:145] : Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@9b86b49d
DEBUG 2022-09-08 17:56:15,086 [main][BasicTypeRegistry.java:145] : Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@bdb7cd37
DEBUG 2022-09-08 17:56:15,087 [main][BasicTypeRegistry.java:145] : Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@bf2294ed
DEBUG 2022-09-08 17:56:15,087 [main][BasicTypeRegistry.java:145] : Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@7ef2a6e2
DEBUG 2022-09-08 17:56:15,087 [main][BasicTypeRegistry.java:145] : Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@9e6cac06
DEBUG 2022-09-08 17:56:15,087 [main][BasicTypeRegistry.java:145] : Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@cc8d3429
DEBUG 2022-09-08 17:56:15,088 [main][BasicTypeRegistry.java:145] : Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@9b7eac72
DEBUG 2022-09-08 17:56:15,088 [main][BasicTypeRegistry.java:145] : Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@4d5478ed
WARN  2022-09-08 17:56:15,093 [main][DriverManagerConnectionProviderImpl.java:70] : HHH10001002: Using Hibernate built-in connection pool (not for production use!)
INFO  2022-09-08 17:56:15,099 [main][DriverManagerConnectionProviderImpl.java:126] : HHH10001005: using driver [com.mysql.cj.jdbc.Driver] at URL [jdbc:mysql://localhost:3306/classicmodels?serverTimezone=UTC]
INFO  2022-09-08 17:56:15,099 [main][DriverManagerConnectionProviderImpl.java:132] : HHH10001001: Connection properties: {password=rootroot, user=root}
INFO  2022-09-08 17:56:15,099 [main][DriverManagerConnectionProviderImpl.java:140] : HHH10001003: Autocommit mode: false
DEBUG 2022-09-08 17:56:15,103 [main][DelegatingBasicLogger.java:384] : Initializing Connection pool with 1 Connections
INFO  2022-09-08 17:56:15,103 [main][PooledConnections.java:41] : HHH000115: Hibernate connection pool size: 5 (min=1)
DEBUG 2022-09-08 17:56:15,487 [main][JdbcEnvironmentInitiator.java:72] : Database ->
       name : MySQL
    version : 8.0.29
      major : 8
      minor : 0
DEBUG 2022-09-08 17:56:15,488 [main][JdbcEnvironmentInitiator.java:83] : Driver ->
       name : MySQL Connector/J
    version : mysql-connector-java-8.0.29 (Revision: dd61577595edad45c398af508cf91ad26fc4144f)
      major : 8
      minor : 0
DEBUG 2022-09-08 17:56:15,488 [main][DelegatingBasicLogger.java:389] : JDBC version : 4.2
INFO  2022-09-08 17:56:15,495 [main][Dialect.java:153] : HHH000400: Using dialect: org.hibernate.dialect.MySQLDialect
DEBUG 2022-09-08 17:56:15,534 [main][IdentifierHelperBuilder.java:117] : JDBC driver metadata reported database stores quoted identifiers in more than one case
DEBUG 2022-09-08 17:56:15,535 [main][IdentifierHelperBuilder.java:191] : IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [MIXED]; that will likely lead to problems in schema update and validation if using quoted identifiers
DEBUG 2022-09-08 17:56:15,558 [main][DefaultIdentifierGeneratorFactory.java:81] : Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
DEBUG 2022-09-08 17:56:15,559 [main][DefaultIdentifierGeneratorFactory.java:81] : Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
DEBUG 2022-09-08 17:56:15,560 [main][DefaultIdentifierGeneratorFactory.java:81] : Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
DEBUG 2022-09-08 17:56:15,560 [main][DefaultIdentifierGeneratorFactory.java:81] : Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
DEBUG 2022-09-08 17:56:15,560 [main][DefaultIdentifierGeneratorFactory.java:81] : Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
DEBUG 2022-09-08 17:56:15,561 [main][DefaultIdentifierGeneratorFactory.java:81] : Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
DEBUG 2022-09-08 17:56:15,561 [main][DefaultIdentifierGeneratorFactory.java:81] : Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
DEBUG 2022-09-08 17:56:15,562 [main][DefaultIdentifierGeneratorFactory.java:81] : Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
DEBUG 2022-09-08 17:56:15,563 [main][DefaultIdentifierGeneratorFactory.java:81] : Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
DEBUG 2022-09-08 17:56:15,563 [main][DefaultIdentifierGeneratorFactory.java:81] : Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
DEBUG 2022-09-08 17:56:15,563 [main][DefaultIdentifierGeneratorFactory.java:81] : Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
DEBUG 2022-09-08 17:56:15,564 [main][DefaultIdentifierGeneratorFactory.java:81] : Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
DEBUG 2022-09-08 17:56:15,564 [main][DefaultIdentifierGeneratorFactory.java:81] : Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
DEBUG 2022-09-08 17:56:15,565 [main][DefaultIdentifierGeneratorFactory.java:81] : Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
DEBUG 2022-09-08 17:56:15,585 [main][Namespace.java:47] : Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
DEBUG 2022-09-08 17:56:15,599 [main][AnnotationBinder.java:511] : Binding entity from annotated class: org.example.models.Author
DEBUG 2022-09-08 17:56:15,610 [main][Ejb3Column.java:213] : Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
DEBUG 2022-09-08 17:56:15,612 [main][EntityBinder.java:416] : Import with entity name Author
DEBUG 2022-09-08 17:56:15,615 [main][EntityBinder.java:692] : Bind entity org.example.models.Author on table Author
DEBUG 2022-09-08 17:56:15,628 [main][Ejb3Column.java:213] : Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Author), mappingColumn=id, insertable=true, updatable=true, unique=false}
DEBUG 2022-09-08 17:56:15,630 [main][PropertyBinder.java:174] : MetadataSourceProcessor property id with lazy=false
DEBUG 2022-09-08 17:56:15,631 [main][AbstractPropertyHolder.java:89] : Attempting to locate auto-apply AttributeConverter for property [org.example.models.Author:id]
DEBUG 2022-09-08 17:56:15,632 [main][SimpleValueBinder.java:398] : building SimpleValue for id
DEBUG 2022-09-08 17:56:15,633 [main][PropertyBinder.java:265] : Building property id
DEBUG 2022-09-08 17:56:15,636 [main][Ejb3Column.java:213] : Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Author), mappingColumn=name, insertable=true, updatable=true, unique=false}
DEBUG 2022-09-08 17:56:15,636 [main][PropertyBinder.java:174] : MetadataSourceProcessor property name with lazy=false
DEBUG 2022-09-08 17:56:15,636 [main][AbstractPropertyHolder.java:89] : Attempting to locate auto-apply AttributeConverter for property [org.example.models.Author:name]
DEBUG 2022-09-08 17:56:15,636 [main][SimpleValueBinder.java:398] : building SimpleValue for name
DEBUG 2022-09-08 17:56:15,637 [main][PropertyBinder.java:265] : Building property name
DEBUG 2022-09-08 17:56:15,637 [main][Ejb3Column.java:213] : Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Author), mappingColumn=salary, insertable=true, updatable=true, unique=false}
DEBUG 2022-09-08 17:56:15,637 [main][PropertyBinder.java:174] : MetadataSourceProcessor property salary with lazy=false
DEBUG 2022-09-08 17:56:15,637 [main][AbstractPropertyHolder.java:89] : Attempting to locate auto-apply AttributeConverter for property [org.example.models.Author:salary]
DEBUG 2022-09-08 17:56:15,637 [main][SimpleValueBinder.java:398] : building SimpleValue for salary
DEBUG 2022-09-08 17:56:15,637 [main][PropertyBinder.java:265] : Building property salary
DEBUG 2022-09-08 17:56:15,638 [main][AnnotationBinder.java:511] : Binding entity from annotated class: org.example.models.Book
DEBUG 2022-09-08 17:56:15,638 [main][Ejb3Column.java:213] : Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
DEBUG 2022-09-08 17:56:15,639 [main][EntityBinder.java:416] : Import with entity name Book
DEBUG 2022-09-08 17:56:15,639 [main][EntityBinder.java:692] : Bind entity org.example.models.Book on table Book
DEBUG 2022-09-08 17:56:15,639 [main][Ejb3Column.java:213] : Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Book), mappingColumn=id, insertable=true, updatable=true, unique=false}
DEBUG 2022-09-08 17:56:15,640 [main][PropertyBinder.java:174] : MetadataSourceProcessor property id with lazy=false
DEBUG 2022-09-08 17:56:15,640 [main][AbstractPropertyHolder.java:89] : Attempting to locate auto-apply AttributeConverter for property [org.example.models.Book:id]
DEBUG 2022-09-08 17:56:15,640 [main][SimpleValueBinder.java:398] : building SimpleValue for id
DEBUG 2022-09-08 17:56:15,640 [main][PropertyBinder.java:265] : Building property id
DEBUG 2022-09-08 17:56:15,640 [main][Ejb3Column.java:213] : Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Book), mappingColumn=author_id, insertable=true, updatable=true, unique=false}
DEBUG 2022-09-08 17:56:15,640 [main][PropertyBinder.java:174] : MetadataSourceProcessor property author_id with lazy=false
DEBUG 2022-09-08 17:56:15,641 [main][AbstractPropertyHolder.java:89] : Attempting to locate auto-apply AttributeConverter for property [org.example.models.Book:author_id]
DEBUG 2022-09-08 17:56:15,641 [main][SimpleValueBinder.java:398] : building SimpleValue for author_id
DEBUG 2022-09-08 17:56:15,641 [main][PropertyBinder.java:265] : Building property author_id
DEBUG 2022-09-08 17:56:15,641 [main][Ejb3Column.java:213] : Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Book), mappingColumn=name, insertable=true, updatable=true, unique=false}
DEBUG 2022-09-08 17:56:15,641 [main][PropertyBinder.java:174] : MetadataSourceProcessor property name with lazy=false
DEBUG 2022-09-08 17:56:15,642 [main][AbstractPropertyHolder.java:89] : Attempting to locate auto-apply AttributeConverter for property [org.example.models.Book:name]
DEBUG 2022-09-08 17:56:15,642 [main][SimpleValueBinder.java:398] : building SimpleValue for name
DEBUG 2022-09-08 17:56:15,642 [main][PropertyBinder.java:265] : Building property name
DEBUG 2022-09-08 17:56:15,643 [main][SimpleValueBinder.java:443] : Starting fillSimpleValue for id
DEBUG 2022-09-08 17:56:15,643 [main][SimpleValueBinder.java:443] : Starting fillSimpleValue for name
DEBUG 2022-09-08 17:56:15,643 [main][SimpleValueBinder.java:443] : Starting fillSimpleValue for salary
DEBUG 2022-09-08 17:56:15,644 [main][SimpleValueBinder.java:443] : Starting fillSimpleValue for id
DEBUG 2022-09-08 17:56:15,644 [main][SimpleValueBinder.java:443] : Starting fillSimpleValue for author_id
DEBUG 2022-09-08 17:56:15,644 [main][SimpleValueBinder.java:443] : Starting fillSimpleValue for name
DEBUG 2022-09-08 17:56:15,645 [main][PrimaryKey.java:35] : Forcing column [id] to be non-null as it is part of the primary key for table [author]
DEBUG 2022-09-08 17:56:15,645 [main][PrimaryKey.java:35] : Forcing column [id] to be non-null as it is part of the primary key for table [book]
DEBUG 2022-09-08 17:56:15,667 [main][SessionFactoryImpl.java:197] : Building session factory
DEBUG 2022-09-08 17:56:15,668 [main][Settings.java:69] : SessionFactory name : null
DEBUG 2022-09-08 17:56:15,668 [main][Settings.java:70] : Automatic flush during beforeCompletion(): enabled
DEBUG 2022-09-08 17:56:15,668 [main][Settings.java:71] : Automatic session close at end of transaction: disabled
DEBUG 2022-09-08 17:56:15,668 [main][Settings.java:73] : Statistics: disabled
DEBUG 2022-09-08 17:56:15,668 [main][Settings.java:75] : Deleted entity synthetic identifier rollback: disabled
DEBUG 2022-09-08 17:56:15,668 [main][Settings.java:76] : Default entity-mode: pojo
DEBUG 2022-09-08 17:56:15,668 [main][Settings.java:77] : Check Nullability in Core (should be disabled when Bean Validation is on): enabled
DEBUG 2022-09-08 17:56:15,668 [main][Settings.java:78] : Allow initialization of lazy state outside session : disabled
DEBUG 2022-09-08 17:56:15,668 [main][Settings.java:80] : Using BatchFetchStyle : LEGACY
DEBUG 2022-09-08 17:56:15,669 [main][Settings.java:81] : Default batch fetch size: -1
DEBUG 2022-09-08 17:56:15,669 [main][Settings.java:82] : Maximum outer join fetch depth: 2
DEBUG 2022-09-08 17:56:15,669 [main][Settings.java:83] : Default null ordering: NONE
DEBUG 2022-09-08 17:56:15,669 [main][Settings.java:84] : Order SQL updates by primary key: disabled
DEBUG 2022-09-08 17:56:15,669 [main][Settings.java:85] : Order SQL inserts for batching: disabled
DEBUG 2022-09-08 17:56:15,669 [main][Settings.java:87] : multi-tenancy strategy : NONE
DEBUG 2022-09-08 17:56:15,669 [main][Settings.java:89] : JTA Track by Thread: enabled
DEBUG 2022-09-08 17:56:15,669 [main][Settings.java:91] : Query language substitutions: {}
DEBUG 2022-09-08 17:56:15,669 [main][Settings.java:92] : JPA query language strict compliance: disabled
DEBUG 2022-09-08 17:56:15,670 [main][Settings.java:93] : Named query checking : enabled
DEBUG 2022-09-08 17:56:15,670 [main][Settings.java:95] : Second-level cache: enabled
DEBUG 2022-09-08 17:56:15,670 [main][Settings.java:96] : Second-level query cache: disabled
DEBUG 2022-09-08 17:56:15,670 [main][Settings.java:97] : Second-level query cache factory: org.hibernate.cache.internal.StandardQueryCacheFactory@7687c97
DEBUG 2022-09-08 17:56:15,670 [main][Settings.java:98] : Second-level cache region prefix: null
DEBUG 2022-09-08 17:56:15,670 [main][Settings.java:99] : Optimize second-level cache for minimal puts: disabled
DEBUG 2022-09-08 17:56:15,670 [main][Settings.java:100] : Structured second-level cache entries: disabled
DEBUG 2022-09-08 17:56:15,670 [main][Settings.java:101] : Second-level cache direct-reference entries: disabled
DEBUG 2022-09-08 17:56:15,670 [main][Settings.java:102] : Automatic eviction of collection cache: disabled
DEBUG 2022-09-08 17:56:15,670 [main][Settings.java:104] : JDBC batch size: 15
DEBUG 2022-09-08 17:56:15,671 [main][Settings.java:105] : JDBC batch updates for versioned data: enabled
DEBUG 2022-09-08 17:56:15,671 [main][Settings.java:106] : Scrollable result sets: enabled
DEBUG 2022-09-08 17:56:15,671 [main][Settings.java:107] : Wrap result sets: disabled
DEBUG 2022-09-08 17:56:15,671 [main][Settings.java:108] : JDBC3 getGeneratedKeys(): enabled
DEBUG 2022-09-08 17:56:15,671 [main][Settings.java:109] : JDBC result set fetch size: null
DEBUG 2022-09-08 17:56:15,671 [main][Settings.java:110] : Connection release mode: AFTER_TRANSACTION
DEBUG 2022-09-08 17:56:15,671 [main][Settings.java:111] : Generate SQL with comments: disabled
DEBUG 2022-09-08 17:56:15,697 [main][SessionFactoryImpl.java:252] : Session factory constructed with filter configurations : {}
DEBUG 2022-09-08 17:56:15,697 [main][SessionFactoryImpl.java:253] : Instantiating session factory with properties: {awt.toolkit=sun.lwawt.macosx.LWCToolkit, java.specification.version=11, file.encoding.pkg=sun.io, jdk.extensions.version=11.0.15.0, sun.jnu.encoding=UTF-8, hibernate.dialect=org.hibernate.dialect.MySQLDialect, java.class.path=/Users/vdonets/IdeaProjects/testmaven/target/classes:/Users/vdonets/.m2/repository/org/hibernate/hibernate-core/5.2.2.Final/hibernate-core-5.2.2.Final.jar:/Users/vdonets/.m2/repository/org/jboss/logging/jboss-logging/3.3.0.Final/jboss-logging-3.3.0.Final.jar:/Users/vdonets/.m2/repository/org/hibernate/javax/persistence/hibernate-jpa-2.1-api/1.0.0.Final/hibernate-jpa-2.1-api-1.0.0.Final.jar:/Users/vdonets/.m2/repository/org/javassist/javassist/3.20.0-GA/javassist-3.20.0-GA.jar:/Users/vdonets/.m2/repository/antlr/antlr/2.7.7/antlr-2.7.7.jar:/Users/vdonets/.m2/repository/org/apache/geronimo/specs/geronimo-jta_1.1_spec/1.1.1/geronimo-jta_1.1_spec-1.1.1.jar:/Users/vdonets/.m2/repository/org/jboss/jandex/2.0.0.Final/jandex-2.0.0.Final.jar:/Users/vdonets/.m2/repository/com/fasterxml/classmate/1.3.0/classmate-1.3.0.jar:/Users/vdonets/.m2/repository/dom4j/dom4j/1.6.1/dom4j-1.6.1.jar:/Users/vdonets/.m2/repository/org/hibernate/common/hibernate-commons-annotations/5.0.1.Final/hibernate-commons-annotations-5.0.1.Final.jar:/Users/vdonets/.m2/repository/javax/enterprise/cdi-api/1.1/cdi-api-1.1.jar:/Users/vdonets/.m2/repository/javax/el/el-api/2.2/el-api-2.2.jar:/Users/vdonets/.m2/repository/org/jboss/spec/javax/interceptor/jboss-interceptors-api_1.1_spec/1.0.0.Beta1/jboss-interceptors-api_1.1_spec-1.0.0.Beta1.jar:/Users/vdonets/.m2/repository/javax/annotation/jsr250-api/1.0/jsr250-api-1.0.jar:/Users/vdonets/.m2/repository/javax/inject/javax.inject/1/javax.inject-1.jar:/Users/vdonets/.m2/repository/mysql/mysql-connector-java/8.0.29/mysql-connector-java-8.0.29.jar:/Users/vdonets/.m2/repository/com/google/protobuf/protobuf-java/3.19.4/protobuf-java-3.19.4.jar:/Users/vdonets/.m2/repository/jakarta/xml/bind/jakarta.xml.bind-api/2.3.2/jakarta.xml.bind-api-2.3.2.jar:/Users/vdonets/.m2/repository/jakarta/activation/jakarta.activation-api/1.2.1/jakarta.activation-api-1.2.1.jar:/Users/vdonets/.m2/repository/org/glassfish/jaxb/jaxb-runtime/2.3.2/jaxb-runtime-2.3.2.jar:/Users/vdonets/.m2/repository/org/glassfish/jaxb/txw2/2.3.2/txw2-2.3.2.jar:/Users/vdonets/.m2/repository/com/sun/istack/istack-commons-runtime/3.0.8/istack-commons-runtime-3.0.8.jar:/Users/vdonets/.m2/repository/org/jvnet/staxex/stax-ex/1.8.1/stax-ex-1.8.1.jar:/Users/vdonets/.m2/repository/com/sun/xml/fastinfoset/FastInfoset/1.2.16/FastInfoset-1.2.16.jar:/Users/vdonets/.m2/repository/log4j/log4j/1.2.14/log4j-1.2.14.jar:/Applications/IntelliJ IDEA.app/Contents/lib/idea_rt.jar:/Users/vdonets/Library/Caches/JetBrains/IntelliJIdea2022.1/captureAgent/debugger-agent.jar, java.vm.vendor=Eclipse OpenJ9, sun.arch.data.model=64, com.ibm.vm.bitmode=64, hbm2ddl.auto=create-drop, user.variant=, com.ibm.oti.vm.library.version=29, java.vendor.url=https://www.ibm.com/semeru-runtimes, user.timezone=Europe/Warsaw, java.vm.specification.version=11, os.name=Mac OS X, sun.java.launcher=SUN_STANDARD, user.country=US, sun.boot.library.path=/Users/vdonets/Library/Java/JavaVirtualMachines/semeru-11.0.15/Contents/Home/lib/default:/Users/vdonets/Library/Java/JavaVirtualMachines/semeru-11.0.15/Contents/Home/lib, sun.java.command=org.example.Main, sun.cpu.endian=little, user.home=/Users/vdonets, user.language=en, java.specification.vendor=Oracle Corporation, java.version.date=2022-04-19, java.home=/Users/vdonets/Library/Java/JavaVirtualMachines/semeru-11.0.15/Contents/Home, ibm.signalhandling.rs=false, jdk.extensions.name=Extensions for OpenJDK for Eclipse OpenJ9, file.separator=/, line.separator=
, java.specification.name=Java Platform API Specification, java.vm.specification.vendor=Oracle Corporation, intellij.debug.agent=true, java.compiler=j9jit29, com.ibm.util.extralibs.properties=, java.awt.graphicsenv=sun.awt.CGraphicsEnvironment, com.ibm.oti.configuration=scar, com.ibm.oti.shared.enabled=false, hibernate.hbm2ddl.auto=create-drop, com.ibm.oti.vm.bootstrap.library.path=/Users/vdonets/Library/Java/JavaVirtualMachines/semeru-11.0.15/Contents/Home/lib/default:/Users/vdonets/Library/Java/JavaVirtualMachines/semeru-11.0.15/Contents/Home/lib, com.ibm.cpu.endian=little, java.fullversion=11.0.15-ea+10
JRE 11 Mac OS X aarch64-64-Bit 20220422_36 (JIT enabled, AOT enabled)
OpenJ9   - 9a84ec34e
OMR      - ab24b6666
JCL      - b7b5b42ea6 based on jdk-11.0.15+10, java.runtime.version=11.0.15-ea+10, user.name=vdonets, path.separator=:, hibernate.connection.username=root, os.version=12.5, java.runtime.name=IBM Semeru Runtime Open Edition, hibernate.connection.url=jdbc:mysql://localhost:3306/classicmodels?serverTimezone=UTC, connection.pool_size=5, ibm.signalhandling.sigint=true, file.encoding=UTF-8, java.vm.name=Eclipse OpenJ9 VM, hibernate.show_sql=true, java.vendor.version=11.0.15.0, ibm.signalhandling.sigchain=true, show_sql=true, hibernate.connection.driver_class=com.mysql.cj.jdbc.Driver, java.vendor.url.bug=https://github.com/ibmruntimes/Semeru-Runtimes/issues, java.io.tmpdir=/var/folders/wv/6c3_66yd6kq3r7z477kwz4lr0000gn/T/, java.version=11.0.15-ea, jboss.modules.system.pkgs=com.intellij.rt, com.ibm.system.agent.path=/Users/vdonets/Library/Java/JavaVirtualMachines/semeru-11.0.15/Contents/Home/lib, user.dir=/Users/vdonets/IdeaProjects/testmaven, os.arch=aarch64, java.vm.specification.name=Java Virtual Machine Specification, java.awt.printerjob=sun.lwawt.macosx.CPrinterJob, hibernate.connection.password=****, os.encoding=UTF-8, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@e116b9a9, java.library.path=/Users/vdonets/Library/Java/JavaVirtualMachines/semeru-11.0.15/Contents/Home/lib/default:/Users/vdonets/Library/Java/JavaVirtualMachines/semeru-11.0.15/Contents/Home/lib:/usr/lib, java.vendor=IBM Corporation, java.vm.info=JRE 11 Mac OS X aarch64-64-Bit 20220422_36 (JIT enabled, AOT enabled)
OpenJ9   - 9a84ec34e
OMR      - ab24b6666
JCL      - b7b5b42ea6 based on jdk-11.0.15+10, java.vm.version=openj9-0.32.0, ibm.system.encoding=UTF-8, hibernate.bytecode.use_reflection_optimizer=false, com.ibm.jcl.checkClassPath=, sun.io.unicode.encoding=UnicodeLittle, hibernate.connection.pool_size=5, java.class.version=55.0}
DEBUG 2022-09-08 17:56:15,703 [main][JaccIntegrator.java:80] : Skipping JACC integration as it was not enabled
DEBUG 2022-09-08 17:56:15,704 [main][SessionFactoryImpl.java:292] : Instantiated session factory
DEBUG 2022-09-08 17:56:15,728 [main][ClassLoaderAccessImpl.java:55] : Not known whether passed class name [org.example.models.Book] is safe
DEBUG 2022-09-08 17:56:15,728 [main][ClassLoaderAccessImpl.java:57] : No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.models.Book
DEBUG 2022-09-08 17:56:15,735 [main][ClassLoaderAccessImpl.java:55] : Not known whether passed class name [org.example.models.Book] is safe
DEBUG 2022-09-08 17:56:15,736 [main][ClassLoaderAccessImpl.java:57] : No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.models.Book
DEBUG 2022-09-08 17:56:15,760 [main][ClassLoaderAccessImpl.java:55] : Not known whether passed class name [org.example.models.Author] is safe
DEBUG 2022-09-08 17:56:15,760 [main][ClassLoaderAccessImpl.java:57] : No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.models.Author
DEBUG 2022-09-08 17:56:15,760 [main][ClassLoaderAccessImpl.java:55] : Not known whether passed class name [org.example.models.Author] is safe
DEBUG 2022-09-08 17:56:15,760 [main][ClassLoaderAccessImpl.java:57] : No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.models.Author
DEBUG 2022-09-08 17:56:15,765 [main][AbstractEntityPersister.java:3529] : Static SQL for entity: org.example.models.Book
DEBUG 2022-09-08 17:56:15,765 [main][AbstractEntityPersister.java:3534] :  Version select: select id from Book where id =?
DEBUG 2022-09-08 17:56:15,765 [main][AbstractEntityPersister.java:3537] :  Snapshot select: select book_.id, book_.author_id as author_i2_1_, book_.name as name3_1_ from Book book_ where book_.id=?
DEBUG 2022-09-08 17:56:15,765 [main][DelegatingBasicLogger.java:394] :  Insert 0: insert into Book (author_id, name, id) values (?, ?, ?)
DEBUG 2022-09-08 17:56:15,765 [main][DelegatingBasicLogger.java:394] :  Update 0: update Book set author_id=?, name=? where id=?
DEBUG 2022-09-08 17:56:15,766 [main][DelegatingBasicLogger.java:394] :  Delete 0: delete from Book where id=?
DEBUG 2022-09-08 17:56:15,774 [main][QuerySpacesImpl.java:174] : Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@a9f692c6]
DEBUG 2022-09-08 17:56:15,775 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : author_id
DEBUG 2022-09-08 17:56:15,775 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : name
DEBUG 2022-09-08 17:56:15,775 [main][FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150] : Building LoadPlan...
DEBUG 2022-09-08 17:56:15,781 [main][LoadQueryJoinAndFetchProcessor.java:100] : processing queryspace <gen:0>
DEBUG 2022-09-08 17:56:15,782 [main][LoadPlanTreePrinter.java:55] : LoadPlan(entity=org.example.models.Book)
    - Returns
       - EntityReturnImpl(entity=org.example.models.Book, querySpaceUid=<gen:0>, path=org.example.models.Book)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=org.example.models.Book)
          - SQL table alias mapping - book0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

DEBUG 2022-09-08 17:56:15,783 [main][EntityLoader.java:115] : Static select for entity org.example.models.Book [NONE]: select book0_.id as id1_1_0_, book0_.author_id as author_i2_1_0_, book0_.name as name3_1_0_ from Book book0_ where book0_.id=?
DEBUG 2022-09-08 17:56:15,784 [main][QuerySpacesImpl.java:174] : Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@c096c1a3]
DEBUG 2022-09-08 17:56:15,784 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : author_id
DEBUG 2022-09-08 17:56:15,784 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : name
DEBUG 2022-09-08 17:56:15,784 [main][FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150] : Building LoadPlan...
DEBUG 2022-09-08 17:56:15,784 [main][LoadQueryJoinAndFetchProcessor.java:100] : processing queryspace <gen:0>
DEBUG 2022-09-08 17:56:15,784 [main][LoadPlanTreePrinter.java:55] : LoadPlan(entity=org.example.models.Book)
    - Returns
       - EntityReturnImpl(entity=org.example.models.Book, querySpaceUid=<gen:0>, path=org.example.models.Book)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=org.example.models.Book)
          - SQL table alias mapping - book0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

DEBUG 2022-09-08 17:56:15,785 [main][EntityLoader.java:115] : Static select for entity org.example.models.Book [READ]: select book0_.id as id1_1_0_, book0_.author_id as author_i2_1_0_, book0_.name as name3_1_0_ from Book book0_ where book0_.id=?
DEBUG 2022-09-08 17:56:15,785 [main][QuerySpacesImpl.java:174] : Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@b293ada2]
DEBUG 2022-09-08 17:56:15,785 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : author_id
DEBUG 2022-09-08 17:56:15,785 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : name
DEBUG 2022-09-08 17:56:15,785 [main][FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150] : Building LoadPlan...
DEBUG 2022-09-08 17:56:15,785 [main][LoadQueryJoinAndFetchProcessor.java:100] : processing queryspace <gen:0>
DEBUG 2022-09-08 17:56:15,786 [main][LoadPlanTreePrinter.java:55] : LoadPlan(entity=org.example.models.Book)
    - Returns
       - EntityReturnImpl(entity=org.example.models.Book, querySpaceUid=<gen:0>, path=org.example.models.Book)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=org.example.models.Book)
          - SQL table alias mapping - book0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

DEBUG 2022-09-08 17:56:15,786 [main][EntityLoader.java:115] : Static select for entity org.example.models.Book [UPGRADE]: select book0_.id as id1_1_0_, book0_.author_id as author_i2_1_0_, book0_.name as name3_1_0_ from Book book0_ where book0_.id=? for update
DEBUG 2022-09-08 17:56:15,786 [main][QuerySpacesImpl.java:174] : Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@52fdb1a]
DEBUG 2022-09-08 17:56:15,786 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : author_id
DEBUG 2022-09-08 17:56:15,786 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : name
DEBUG 2022-09-08 17:56:15,786 [main][FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150] : Building LoadPlan...
DEBUG 2022-09-08 17:56:15,787 [main][LoadQueryJoinAndFetchProcessor.java:100] : processing queryspace <gen:0>
DEBUG 2022-09-08 17:56:15,787 [main][LoadPlanTreePrinter.java:55] : LoadPlan(entity=org.example.models.Book)
    - Returns
       - EntityReturnImpl(entity=org.example.models.Book, querySpaceUid=<gen:0>, path=org.example.models.Book)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=org.example.models.Book)
          - SQL table alias mapping - book0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

DEBUG 2022-09-08 17:56:15,787 [main][EntityLoader.java:115] : Static select for entity org.example.models.Book [UPGRADE_NOWAIT]: select book0_.id as id1_1_0_, book0_.author_id as author_i2_1_0_, book0_.name as name3_1_0_ from Book book0_ where book0_.id=? for update
DEBUG 2022-09-08 17:56:15,787 [main][QuerySpacesImpl.java:174] : Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@165e5f4d]
DEBUG 2022-09-08 17:56:15,788 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : author_id
DEBUG 2022-09-08 17:56:15,789 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : name
DEBUG 2022-09-08 17:56:15,789 [main][FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150] : Building LoadPlan...
DEBUG 2022-09-08 17:56:15,789 [main][LoadQueryJoinAndFetchProcessor.java:100] : processing queryspace <gen:0>
DEBUG 2022-09-08 17:56:15,789 [main][LoadPlanTreePrinter.java:55] : LoadPlan(entity=org.example.models.Book)
    - Returns
       - EntityReturnImpl(entity=org.example.models.Book, querySpaceUid=<gen:0>, path=org.example.models.Book)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=org.example.models.Book)
          - SQL table alias mapping - book0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

DEBUG 2022-09-08 17:56:15,789 [main][EntityLoader.java:115] : Static select for entity org.example.models.Book [UPGRADE_SKIPLOCKED]: select book0_.id as id1_1_0_, book0_.author_id as author_i2_1_0_, book0_.name as name3_1_0_ from Book book0_ where book0_.id=? for update
DEBUG 2022-09-08 17:56:15,790 [main][QuerySpacesImpl.java:174] : Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@fccd676b]
DEBUG 2022-09-08 17:56:15,790 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : author_id
DEBUG 2022-09-08 17:56:15,790 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : name
DEBUG 2022-09-08 17:56:15,790 [main][FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150] : Building LoadPlan...
DEBUG 2022-09-08 17:56:15,790 [main][LoadQueryJoinAndFetchProcessor.java:100] : processing queryspace <gen:0>
DEBUG 2022-09-08 17:56:15,790 [main][LoadPlanTreePrinter.java:55] : LoadPlan(entity=org.example.models.Book)
    - Returns
       - EntityReturnImpl(entity=org.example.models.Book, querySpaceUid=<gen:0>, path=org.example.models.Book)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=org.example.models.Book)
          - SQL table alias mapping - book0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

DEBUG 2022-09-08 17:56:15,791 [main][EntityLoader.java:115] : Static select for entity org.example.models.Book [FORCE]: select book0_.id as id1_1_0_, book0_.author_id as author_i2_1_0_, book0_.name as name3_1_0_ from Book book0_ where book0_.id=? for update
DEBUG 2022-09-08 17:56:15,791 [main][QuerySpacesImpl.java:174] : Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@948531bd]
DEBUG 2022-09-08 17:56:15,791 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : author_id
DEBUG 2022-09-08 17:56:15,791 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : name
DEBUG 2022-09-08 17:56:15,791 [main][FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150] : Building LoadPlan...
DEBUG 2022-09-08 17:56:15,792 [main][LoadQueryJoinAndFetchProcessor.java:100] : processing queryspace <gen:0>
DEBUG 2022-09-08 17:56:15,792 [main][LoadPlanTreePrinter.java:55] : LoadPlan(entity=org.example.models.Book)
    - Returns
       - EntityReturnImpl(entity=org.example.models.Book, querySpaceUid=<gen:0>, path=org.example.models.Book)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=org.example.models.Book)
          - SQL table alias mapping - book0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

DEBUG 2022-09-08 17:56:15,792 [main][EntityLoader.java:115] : Static select for entity org.example.models.Book [PESSIMISTIC_READ]: select book0_.id as id1_1_0_, book0_.author_id as author_i2_1_0_, book0_.name as name3_1_0_ from Book book0_ where book0_.id=? lock in share mode
DEBUG 2022-09-08 17:56:15,792 [main][QuerySpacesImpl.java:174] : Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@b40f2009]
DEBUG 2022-09-08 17:56:15,792 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : author_id
DEBUG 2022-09-08 17:56:15,792 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : name
DEBUG 2022-09-08 17:56:15,793 [main][FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150] : Building LoadPlan...
DEBUG 2022-09-08 17:56:15,793 [main][LoadQueryJoinAndFetchProcessor.java:100] : processing queryspace <gen:0>
DEBUG 2022-09-08 17:56:15,793 [main][LoadPlanTreePrinter.java:55] : LoadPlan(entity=org.example.models.Book)
    - Returns
       - EntityReturnImpl(entity=org.example.models.Book, querySpaceUid=<gen:0>, path=org.example.models.Book)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=org.example.models.Book)
          - SQL table alias mapping - book0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

DEBUG 2022-09-08 17:56:15,793 [main][EntityLoader.java:115] : Static select for entity org.example.models.Book [PESSIMISTIC_WRITE]: select book0_.id as id1_1_0_, book0_.author_id as author_i2_1_0_, book0_.name as name3_1_0_ from Book book0_ where book0_.id=? for update
DEBUG 2022-09-08 17:56:15,793 [main][QuerySpacesImpl.java:174] : Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@192e93b8]
DEBUG 2022-09-08 17:56:15,794 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : author_id
DEBUG 2022-09-08 17:56:15,794 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : name
DEBUG 2022-09-08 17:56:15,794 [main][FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150] : Building LoadPlan...
DEBUG 2022-09-08 17:56:15,794 [main][LoadQueryJoinAndFetchProcessor.java:100] : processing queryspace <gen:0>
DEBUG 2022-09-08 17:56:15,794 [main][LoadPlanTreePrinter.java:55] : LoadPlan(entity=org.example.models.Book)
    - Returns
       - EntityReturnImpl(entity=org.example.models.Book, querySpaceUid=<gen:0>, path=org.example.models.Book)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=org.example.models.Book)
          - SQL table alias mapping - book0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

DEBUG 2022-09-08 17:56:15,795 [main][EntityLoader.java:115] : Static select for entity org.example.models.Book [PESSIMISTIC_FORCE_INCREMENT]: select book0_.id as id1_1_0_, book0_.author_id as author_i2_1_0_, book0_.name as name3_1_0_ from Book book0_ where book0_.id=? for update
DEBUG 2022-09-08 17:56:15,795 [main][QuerySpacesImpl.java:174] : Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@53125e5e]
DEBUG 2022-09-08 17:56:15,795 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : author_id
DEBUG 2022-09-08 17:56:15,795 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : name
DEBUG 2022-09-08 17:56:15,795 [main][FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150] : Building LoadPlan...
DEBUG 2022-09-08 17:56:15,796 [main][LoadQueryJoinAndFetchProcessor.java:100] : processing queryspace <gen:0>
DEBUG 2022-09-08 17:56:15,797 [main][LoadPlanTreePrinter.java:55] : LoadPlan(entity=org.example.models.Book)
    - Returns
       - EntityReturnImpl(entity=org.example.models.Book, querySpaceUid=<gen:0>, path=org.example.models.Book)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=org.example.models.Book)
          - SQL table alias mapping - book0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

DEBUG 2022-09-08 17:56:15,797 [main][EntityLoader.java:115] : Static select for entity org.example.models.Book [OPTIMISTIC]: select book0_.id as id1_1_0_, book0_.author_id as author_i2_1_0_, book0_.name as name3_1_0_ from Book book0_ where book0_.id=?
DEBUG 2022-09-08 17:56:15,797 [main][QuerySpacesImpl.java:174] : Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@84864f98]
DEBUG 2022-09-08 17:56:15,797 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : author_id
DEBUG 2022-09-08 17:56:15,797 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : name
DEBUG 2022-09-08 17:56:15,797 [main][FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150] : Building LoadPlan...
DEBUG 2022-09-08 17:56:15,798 [main][LoadQueryJoinAndFetchProcessor.java:100] : processing queryspace <gen:0>
DEBUG 2022-09-08 17:56:15,798 [main][LoadPlanTreePrinter.java:55] : LoadPlan(entity=org.example.models.Book)
    - Returns
       - EntityReturnImpl(entity=org.example.models.Book, querySpaceUid=<gen:0>, path=org.example.models.Book)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=org.example.models.Book)
          - SQL table alias mapping - book0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

DEBUG 2022-09-08 17:56:15,798 [main][EntityLoader.java:115] : Static select for entity org.example.models.Book [OPTIMISTIC_FORCE_INCREMENT]: select book0_.id as id1_1_0_, book0_.author_id as author_i2_1_0_, book0_.name as name3_1_0_ from Book book0_ where book0_.id=?
DEBUG 2022-09-08 17:56:15,804 [main][CascadeEntityLoader.java:38] : Static select for action ACTION_MERGE on entity org.example.models.Book: select book0_.id as id1_1_0_, book0_.author_id as author_i2_1_0_, book0_.name as name3_1_0_ from Book book0_ where book0_.id=?
DEBUG 2022-09-08 17:56:15,804 [main][CascadeEntityLoader.java:38] : Static select for action ACTION_REFRESH on entity org.example.models.Book: select book0_.id as id1_1_0_, book0_.author_id as author_i2_1_0_, book0_.name as name3_1_0_ from Book book0_ where book0_.id=?
DEBUG 2022-09-08 17:56:15,805 [main][AbstractEntityPersister.java:3529] : Static SQL for entity: org.example.models.Author
DEBUG 2022-09-08 17:56:15,805 [main][AbstractEntityPersister.java:3534] :  Version select: select id from Author where id =?
DEBUG 2022-09-08 17:56:15,805 [main][AbstractEntityPersister.java:3537] :  Snapshot select: select author_.id, author_.name as name2_0_, author_.salary as salary3_0_ from Author author_ where author_.id=?
DEBUG 2022-09-08 17:56:15,805 [main][DelegatingBasicLogger.java:394] :  Insert 0: insert into Author (name, salary, id) values (?, ?, ?)
DEBUG 2022-09-08 17:56:15,805 [main][DelegatingBasicLogger.java:394] :  Update 0: update Author set name=?, salary=? where id=?
DEBUG 2022-09-08 17:56:15,805 [main][DelegatingBasicLogger.java:394] :  Delete 0: delete from Author where id=?
DEBUG 2022-09-08 17:56:15,805 [main][AbstractEntityPersister.java:3545] :  Identity insert: insert into Author (name, salary) values (?, ?)
DEBUG 2022-09-08 17:56:15,805 [main][QuerySpacesImpl.java:174] : Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@d2ecd9c3]
DEBUG 2022-09-08 17:56:15,806 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : name
DEBUG 2022-09-08 17:56:15,806 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : salary
DEBUG 2022-09-08 17:56:15,806 [main][FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150] : Building LoadPlan...
DEBUG 2022-09-08 17:56:15,806 [main][LoadQueryJoinAndFetchProcessor.java:100] : processing queryspace <gen:0>
DEBUG 2022-09-08 17:56:15,806 [main][LoadPlanTreePrinter.java:55] : LoadPlan(entity=org.example.models.Author)
    - Returns
       - EntityReturnImpl(entity=org.example.models.Author, querySpaceUid=<gen:0>, path=org.example.models.Author)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=org.example.models.Author)
          - SQL table alias mapping - author0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

DEBUG 2022-09-08 17:56:15,807 [main][EntityLoader.java:115] : Static select for entity org.example.models.Author [NONE]: select author0_.id as id1_0_0_, author0_.name as name2_0_0_, author0_.salary as salary3_0_0_ from Author author0_ where author0_.id=?
DEBUG 2022-09-08 17:56:15,807 [main][QuerySpacesImpl.java:174] : Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@cd6e704f]
DEBUG 2022-09-08 17:56:15,807 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : name
DEBUG 2022-09-08 17:56:15,807 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : salary
DEBUG 2022-09-08 17:56:15,808 [main][FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150] : Building LoadPlan...
DEBUG 2022-09-08 17:56:15,808 [main][LoadQueryJoinAndFetchProcessor.java:100] : processing queryspace <gen:0>
DEBUG 2022-09-08 17:56:15,808 [main][LoadPlanTreePrinter.java:55] : LoadPlan(entity=org.example.models.Author)
    - Returns
       - EntityReturnImpl(entity=org.example.models.Author, querySpaceUid=<gen:0>, path=org.example.models.Author)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=org.example.models.Author)
          - SQL table alias mapping - author0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

DEBUG 2022-09-08 17:56:15,809 [main][EntityLoader.java:115] : Static select for entity org.example.models.Author [READ]: select author0_.id as id1_0_0_, author0_.name as name2_0_0_, author0_.salary as salary3_0_0_ from Author author0_ where author0_.id=?
DEBUG 2022-09-08 17:56:15,809 [main][QuerySpacesImpl.java:174] : Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@85618b7a]
DEBUG 2022-09-08 17:56:15,809 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : name
DEBUG 2022-09-08 17:56:15,809 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : salary
DEBUG 2022-09-08 17:56:15,809 [main][FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150] : Building LoadPlan...
DEBUG 2022-09-08 17:56:15,809 [main][LoadQueryJoinAndFetchProcessor.java:100] : processing queryspace <gen:0>
DEBUG 2022-09-08 17:56:15,810 [main][LoadPlanTreePrinter.java:55] : LoadPlan(entity=org.example.models.Author)
    - Returns
       - EntityReturnImpl(entity=org.example.models.Author, querySpaceUid=<gen:0>, path=org.example.models.Author)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=org.example.models.Author)
          - SQL table alias mapping - author0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

DEBUG 2022-09-08 17:56:15,810 [main][EntityLoader.java:115] : Static select for entity org.example.models.Author [UPGRADE]: select author0_.id as id1_0_0_, author0_.name as name2_0_0_, author0_.salary as salary3_0_0_ from Author author0_ where author0_.id=? for update
DEBUG 2022-09-08 17:56:15,810 [main][QuerySpacesImpl.java:174] : Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3224f9b3]
DEBUG 2022-09-08 17:56:15,810 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : name
DEBUG 2022-09-08 17:56:15,810 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : salary
DEBUG 2022-09-08 17:56:15,810 [main][FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150] : Building LoadPlan...
DEBUG 2022-09-08 17:56:15,811 [main][LoadQueryJoinAndFetchProcessor.java:100] : processing queryspace <gen:0>
DEBUG 2022-09-08 17:56:15,811 [main][LoadPlanTreePrinter.java:55] : LoadPlan(entity=org.example.models.Author)
    - Returns
       - EntityReturnImpl(entity=org.example.models.Author, querySpaceUid=<gen:0>, path=org.example.models.Author)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=org.example.models.Author)
          - SQL table alias mapping - author0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

DEBUG 2022-09-08 17:56:15,811 [main][EntityLoader.java:115] : Static select for entity org.example.models.Author [UPGRADE_NOWAIT]: select author0_.id as id1_0_0_, author0_.name as name2_0_0_, author0_.salary as salary3_0_0_ from Author author0_ where author0_.id=? for update
DEBUG 2022-09-08 17:56:15,811 [main][QuerySpacesImpl.java:174] : Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5276f27b]
DEBUG 2022-09-08 17:56:15,811 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : name
DEBUG 2022-09-08 17:56:15,811 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : salary
DEBUG 2022-09-08 17:56:15,812 [main][FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150] : Building LoadPlan...
DEBUG 2022-09-08 17:56:15,812 [main][LoadQueryJoinAndFetchProcessor.java:100] : processing queryspace <gen:0>
DEBUG 2022-09-08 17:56:15,812 [main][LoadPlanTreePrinter.java:55] : LoadPlan(entity=org.example.models.Author)
    - Returns
       - EntityReturnImpl(entity=org.example.models.Author, querySpaceUid=<gen:0>, path=org.example.models.Author)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=org.example.models.Author)
          - SQL table alias mapping - author0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

DEBUG 2022-09-08 17:56:15,812 [main][EntityLoader.java:115] : Static select for entity org.example.models.Author [UPGRADE_SKIPLOCKED]: select author0_.id as id1_0_0_, author0_.name as name2_0_0_, author0_.salary as salary3_0_0_ from Author author0_ where author0_.id=? for update
DEBUG 2022-09-08 17:56:15,812 [main][QuerySpacesImpl.java:174] : Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@215f9762]
DEBUG 2022-09-08 17:56:15,812 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : name
DEBUG 2022-09-08 17:56:15,813 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : salary
DEBUG 2022-09-08 17:56:15,813 [main][FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150] : Building LoadPlan...
DEBUG 2022-09-08 17:56:15,813 [main][LoadQueryJoinAndFetchProcessor.java:100] : processing queryspace <gen:0>
DEBUG 2022-09-08 17:56:15,813 [main][LoadPlanTreePrinter.java:55] : LoadPlan(entity=org.example.models.Author)
    - Returns
       - EntityReturnImpl(entity=org.example.models.Author, querySpaceUid=<gen:0>, path=org.example.models.Author)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=org.example.models.Author)
          - SQL table alias mapping - author0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

DEBUG 2022-09-08 17:56:15,813 [main][EntityLoader.java:115] : Static select for entity org.example.models.Author [FORCE]: select author0_.id as id1_0_0_, author0_.name as name2_0_0_, author0_.salary as salary3_0_0_ from Author author0_ where author0_.id=? for update
DEBUG 2022-09-08 17:56:15,814 [main][QuerySpacesImpl.java:174] : Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@f0fa6691]
DEBUG 2022-09-08 17:56:15,814 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : name
DEBUG 2022-09-08 17:56:15,814 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : salary
DEBUG 2022-09-08 17:56:15,814 [main][FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150] : Building LoadPlan...
DEBUG 2022-09-08 17:56:15,814 [main][LoadQueryJoinAndFetchProcessor.java:100] : processing queryspace <gen:0>
DEBUG 2022-09-08 17:56:15,814 [main][LoadPlanTreePrinter.java:55] : LoadPlan(entity=org.example.models.Author)
    - Returns
       - EntityReturnImpl(entity=org.example.models.Author, querySpaceUid=<gen:0>, path=org.example.models.Author)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=org.example.models.Author)
          - SQL table alias mapping - author0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

DEBUG 2022-09-08 17:56:15,815 [main][EntityLoader.java:115] : Static select for entity org.example.models.Author [PESSIMISTIC_READ]: select author0_.id as id1_0_0_, author0_.name as name2_0_0_, author0_.salary as salary3_0_0_ from Author author0_ where author0_.id=? lock in share mode
DEBUG 2022-09-08 17:56:15,815 [main][QuerySpacesImpl.java:174] : Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@99df4134]
DEBUG 2022-09-08 17:56:15,816 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : name
DEBUG 2022-09-08 17:56:15,816 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : salary
DEBUG 2022-09-08 17:56:15,816 [main][FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150] : Building LoadPlan...
DEBUG 2022-09-08 17:56:15,816 [main][LoadQueryJoinAndFetchProcessor.java:100] : processing queryspace <gen:0>
DEBUG 2022-09-08 17:56:15,816 [main][LoadPlanTreePrinter.java:55] : LoadPlan(entity=org.example.models.Author)
    - Returns
       - EntityReturnImpl(entity=org.example.models.Author, querySpaceUid=<gen:0>, path=org.example.models.Author)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=org.example.models.Author)
          - SQL table alias mapping - author0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

DEBUG 2022-09-08 17:56:15,816 [main][EntityLoader.java:115] : Static select for entity org.example.models.Author [PESSIMISTIC_WRITE]: select author0_.id as id1_0_0_, author0_.name as name2_0_0_, author0_.salary as salary3_0_0_ from Author author0_ where author0_.id=? for update
DEBUG 2022-09-08 17:56:15,817 [main][QuerySpacesImpl.java:174] : Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@386bbeed]
DEBUG 2022-09-08 17:56:15,817 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : name
DEBUG 2022-09-08 17:56:15,817 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : salary
DEBUG 2022-09-08 17:56:15,817 [main][FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150] : Building LoadPlan...
DEBUG 2022-09-08 17:56:15,817 [main][LoadQueryJoinAndFetchProcessor.java:100] : processing queryspace <gen:0>
DEBUG 2022-09-08 17:56:15,817 [main][LoadPlanTreePrinter.java:55] : LoadPlan(entity=org.example.models.Author)
    - Returns
       - EntityReturnImpl(entity=org.example.models.Author, querySpaceUid=<gen:0>, path=org.example.models.Author)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=org.example.models.Author)
          - SQL table alias mapping - author0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

DEBUG 2022-09-08 17:56:15,818 [main][EntityLoader.java:115] : Static select for entity org.example.models.Author [PESSIMISTIC_FORCE_INCREMENT]: select author0_.id as id1_0_0_, author0_.name as name2_0_0_, author0_.salary as salary3_0_0_ from Author author0_ where author0_.id=? for update
DEBUG 2022-09-08 17:56:15,818 [main][QuerySpacesImpl.java:174] : Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@9b0cbdba]
DEBUG 2022-09-08 17:56:15,818 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : name
DEBUG 2022-09-08 17:56:15,818 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : salary
DEBUG 2022-09-08 17:56:15,818 [main][FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150] : Building LoadPlan...
DEBUG 2022-09-08 17:56:15,818 [main][LoadQueryJoinAndFetchProcessor.java:100] : processing queryspace <gen:0>
DEBUG 2022-09-08 17:56:15,818 [main][LoadPlanTreePrinter.java:55] : LoadPlan(entity=org.example.models.Author)
    - Returns
       - EntityReturnImpl(entity=org.example.models.Author, querySpaceUid=<gen:0>, path=org.example.models.Author)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=org.example.models.Author)
          - SQL table alias mapping - author0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

DEBUG 2022-09-08 17:56:15,819 [main][EntityLoader.java:115] : Static select for entity org.example.models.Author [OPTIMISTIC]: select author0_.id as id1_0_0_, author0_.name as name2_0_0_, author0_.salary as salary3_0_0_ from Author author0_ where author0_.id=?
DEBUG 2022-09-08 17:56:15,819 [main][QuerySpacesImpl.java:174] : Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@8f1931d3]
DEBUG 2022-09-08 17:56:15,819 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : name
DEBUG 2022-09-08 17:56:15,819 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : salary
DEBUG 2022-09-08 17:56:15,819 [main][FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150] : Building LoadPlan...
DEBUG 2022-09-08 17:56:15,819 [main][LoadQueryJoinAndFetchProcessor.java:100] : processing queryspace <gen:0>
DEBUG 2022-09-08 17:56:15,819 [main][LoadPlanTreePrinter.java:55] : LoadPlan(entity=org.example.models.Author)
    - Returns
       - EntityReturnImpl(entity=org.example.models.Author, querySpaceUid=<gen:0>, path=org.example.models.Author)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=org.example.models.Author)
          - SQL table alias mapping - author0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

DEBUG 2022-09-08 17:56:15,820 [main][EntityLoader.java:115] : Static select for entity org.example.models.Author [OPTIMISTIC_FORCE_INCREMENT]: select author0_.id as id1_0_0_, author0_.name as name2_0_0_, author0_.salary as salary3_0_0_ from Author author0_ where author0_.id=?
DEBUG 2022-09-08 17:56:15,820 [main][CascadeEntityLoader.java:38] : Static select for action ACTION_MERGE on entity org.example.models.Author: select author0_.id as id1_0_0_, author0_.name as name2_0_0_, author0_.salary as salary3_0_0_ from Author author0_ where author0_.id=?
DEBUG 2022-09-08 17:56:15,820 [main][CascadeEntityLoader.java:38] : Static select for action ACTION_REFRESH on entity org.example.models.Author: select author0_.id as id1_0_0_, author0_.name as name2_0_0_, author0_.salary as salary3_0_0_ from Author author0_ where author0_.id=?
DEBUG 2022-09-08 17:56:15,832 [main][SqlStatementLogger.java:92] : drop table if exists Author
INFO  2022-09-08 17:56:15,833 [main][DdlTransactionIsolatorNonJtaImpl.java:48] : HHH10001501: Connection obtained from JdbcConnectionAccess [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess@704f087c] for (non-JTA) DDL execution was not in auto-commit mode; the Connection 'local transaction' will be committed and the Connection will be set into auto-commit mode.
DEBUG 2022-09-08 17:56:15,841 [main][SqlStatementLogger.java:92] : drop table if exists Book
DEBUG 2022-09-08 17:56:15,848 [main][SqlStatementLogger.java:92] : drop table if exists hibernate_sequence
DEBUG 2022-09-08 17:56:15,853 [main][SqlStatementLogger.java:92] : create table Author (id bigint not null auto_increment, name varchar(255), salary integer, primary key (id))
INFO  2022-09-08 17:56:15,853 [main][DdlTransactionIsolatorNonJtaImpl.java:48] : HHH10001501: Connection obtained from JdbcConnectionAccess [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess@4e3722de] for (non-JTA) DDL execution was not in auto-commit mode; the Connection 'local transaction' will be committed and the Connection will be set into auto-commit mode.
DEBUG 2022-09-08 17:56:15,860 [main][SqlStatementLogger.java:92] : create table Book (id bigint not null, author_id bigint not null, name varchar(255), primary key (id))
DEBUG 2022-09-08 17:56:15,865 [main][SqlStatementLogger.java:92] : create table hibernate_sequence (next_val bigint)
DEBUG 2022-09-08 17:56:15,867 [main][SqlStatementLogger.java:92] : insert into hibernate_sequence values ( 1 )
INFO  2022-09-08 17:56:15,869 [main][SchemaCreatorImpl.java:485] : HHH000476: Executing import script 'org.hibernate.tool.schema.internal.exec.ScriptSourceInputNonExistentImpl@6c9dd5e4'
DEBUG 2022-09-08 17:56:15,870 [main][JtaPlatformInitiator.java:42] : No JtaPlatform was specified, checking resolver
DEBUG 2022-09-08 17:56:15,870 [main][JtaPlatformResolverInitiator.java:33] : No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
DEBUG 2022-09-08 17:56:15,871 [main][StandardJtaPlatformResolver.java:101] : Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
DEBUG 2022-09-08 17:56:15,872 [main][NamedQueryRepository.java:151] : Checking 0 named HQL queries
DEBUG 2022-09-08 17:56:15,872 [main][NamedQueryRepository.java:167] : Checking 0 named SQL queries
DEBUG 2022-09-08 17:56:15,874 [main][SessionFactoryRegistry.java:52] : Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@98f303e5
DEBUG 2022-09-08 17:56:15,874 [main][SessionFactoryRegistry.java:74] : Registering SessionFactory: c73a0fd5-ebfc-433d-9a0a-25a39cc1afe4 (<unnamed>)
DEBUG 2022-09-08 17:56:15,875 [main][SessionFactoryRegistry.java:81] : Not binding SessionFactory to JNDI, no JNDI name configured
DEBUG 2022-09-08 17:56:15,898 [main][StatisticsInitiator.java:82] : Statistics initialized [enabled=false]
DEBUG 2022-09-08 17:56:15,900 [main][TransactionImpl.java:55] : begin
DEBUG 2022-09-08 17:56:15,906 [main][ActionQueue.java:272] : Executing identity-insert immediately
DEBUG 2022-09-08 17:56:15,907 [main][SqlStatementLogger.java:92] : insert into Author (name, salary) values (?, ?)
DEBUG 2022-09-08 17:56:15,914 [main][IdentifierGeneratorHelper.java:78] : Natively generated identity: 1
DEBUG 2022-09-08 17:56:15,914 [main][ResourceRegistryStandardImpl.java:104] : HHH000387: ResultSet's statement was not registered
DEBUG 2022-09-08 17:56:15,915 [main][TransactionImpl.java:66] : committing
DEBUG 2022-09-08 17:56:15,915 [main][AbstractFlushingEventListener.java:132] : Processing flush-time cascades
DEBUG 2022-09-08 17:56:15,916 [main][AbstractFlushingEventListener.java:174] : Dirty checking collections
DEBUG 2022-09-08 17:56:15,916 [main][AbstractFlushingEventListener.java:106] : Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
DEBUG 2022-09-08 17:56:15,917 [main][AbstractFlushingEventListener.java:113] : Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
DEBUG 2022-09-08 17:56:15,917 [main][EntityPrinter.java:102] : Listing entities:
DEBUG 2022-09-08 17:56:15,917 [main][EntityPrinter.java:109] : org.example.models.Author{name=David Baldacci, id=1, salary=2757}
DEBUG 2022-09-08 17:56:15,919 [main][LogicalConnectionManagedImpl.java:154] : Initiating JDBC connection release from afterTransaction
DEBUG 2022-09-08 17:56:15,919 [main][LogicalConnectionManagedImpl.java:154] : Initiating JDBC connection release from afterTransaction
DEBUG 2022-09-08 17:56:15,933 [main][TransactionImpl.java:55] : begin
DEBUG 2022-09-08 17:56:15,934 [main][ActionQueue.java:272] : Executing identity-insert immediately
DEBUG 2022-09-08 17:56:15,935 [main][SqlStatementLogger.java:92] : insert into Author (name, salary) values (?, ?)
DEBUG 2022-09-08 17:56:15,936 [main][IdentifierGeneratorHelper.java:78] : Natively generated identity: 2
DEBUG 2022-09-08 17:56:15,936 [main][ResourceRegistryStandardImpl.java:104] : HHH000387: ResultSet's statement was not registered
DEBUG 2022-09-08 17:56:15,936 [main][TransactionImpl.java:66] : committing
DEBUG 2022-09-08 17:56:15,936 [main][AbstractFlushingEventListener.java:132] : Processing flush-time cascades
DEBUG 2022-09-08 17:56:15,936 [main][AbstractFlushingEventListener.java:174] : Dirty checking collections
DEBUG 2022-09-08 17:56:15,936 [main][AbstractFlushingEventListener.java:106] : Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
DEBUG 2022-09-08 17:56:15,937 [main][AbstractFlushingEventListener.java:113] : Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
DEBUG 2022-09-08 17:56:15,937 [main][EntityPrinter.java:102] : Listing entities:
DEBUG 2022-09-08 17:56:15,937 [main][EntityPrinter.java:109] : org.example.models.Author{name=Colleen Hoover, id=2, salary=4622}
DEBUG 2022-09-08 17:56:15,937 [main][LogicalConnectionManagedImpl.java:154] : Initiating JDBC connection release from afterTransaction
DEBUG 2022-09-08 17:56:15,938 [main][LogicalConnectionManagedImpl.java:154] : Initiating JDBC connection release from afterTransaction
DEBUG 2022-09-08 17:56:15,938 [main][TransactionImpl.java:55] : begin
DEBUG 2022-09-08 17:56:15,939 [main][ActionQueue.java:272] : Executing identity-insert immediately
DEBUG 2022-09-08 17:56:15,939 [main][SqlStatementLogger.java:92] : insert into Author (name, salary) values (?, ?)
DEBUG 2022-09-08 17:56:15,940 [main][IdentifierGeneratorHelper.java:78] : Natively generated identity: 3
DEBUG 2022-09-08 17:56:15,940 [main][ResourceRegistryStandardImpl.java:104] : HHH000387: ResultSet's statement was not registered
DEBUG 2022-09-08 17:56:15,940 [main][TransactionImpl.java:66] : committing
DEBUG 2022-09-08 17:56:15,940 [main][AbstractFlushingEventListener.java:132] : Processing flush-time cascades
DEBUG 2022-09-08 17:56:15,940 [main][AbstractFlushingEventListener.java:174] : Dirty checking collections
DEBUG 2022-09-08 17:56:15,941 [main][AbstractFlushingEventListener.java:106] : Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
DEBUG 2022-09-08 17:56:15,941 [main][AbstractFlushingEventListener.java:113] : Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
DEBUG 2022-09-08 17:56:15,941 [main][EntityPrinter.java:102] : Listing entities:
DEBUG 2022-09-08 17:56:15,941 [main][EntityPrinter.java:109] : org.example.models.Author{name=Stuart Woods, id=3, salary=3768}
DEBUG 2022-09-08 17:56:15,953 [main][LogicalConnectionManagedImpl.java:154] : Initiating JDBC connection release from afterTransaction
DEBUG 2022-09-08 17:56:15,953 [main][LogicalConnectionManagedImpl.java:154] : Initiating JDBC connection release from afterTransaction
DEBUG 2022-09-08 17:56:15,954 [main][TransactionImpl.java:55] : begin
DEBUG 2022-09-08 17:56:15,954 [main][ActionQueue.java:272] : Executing identity-insert immediately
DEBUG 2022-09-08 17:56:15,954 [main][SqlStatementLogger.java:92] : insert into Author (name, salary) values (?, ?)
DEBUG 2022-09-08 17:56:15,956 [main][IdentifierGeneratorHelper.java:78] : Natively generated identity: 4
DEBUG 2022-09-08 17:56:15,957 [main][ResourceRegistryStandardImpl.java:104] : HHH000387: ResultSet's statement was not registered
DEBUG 2022-09-08 17:56:15,957 [main][TransactionImpl.java:66] : committing
DEBUG 2022-09-08 17:56:15,957 [main][AbstractFlushingEventListener.java:132] : Processing flush-time cascades
DEBUG 2022-09-08 17:56:15,957 [main][AbstractFlushingEventListener.java:174] : Dirty checking collections
DEBUG 2022-09-08 17:56:15,957 [main][AbstractFlushingEventListener.java:106] : Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
DEBUG 2022-09-08 17:56:15,957 [main][AbstractFlushingEventListener.java:113] : Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
DEBUG 2022-09-08 17:56:15,958 [main][EntityPrinter.java:102] : Listing entities:
DEBUG 2022-09-08 17:56:15,958 [main][EntityPrinter.java:109] : org.example.models.Author{name=Nora Roberts, id=4, salary=424}
DEBUG 2022-09-08 17:56:15,959 [main][LogicalConnectionManagedImpl.java:154] : Initiating JDBC connection release from afterTransaction
DEBUG 2022-09-08 17:56:15,960 [main][LogicalConnectionManagedImpl.java:154] : Initiating JDBC connection release from afterTransaction
DEBUG 2022-09-08 17:56:15,960 [main][TransactionImpl.java:55] : begin
DEBUG 2022-09-08 17:56:15,961 [main][ActionQueue.java:272] : Executing identity-insert immediately
DEBUG 2022-09-08 17:56:15,961 [main][SqlStatementLogger.java:92] : insert into Author (name, salary) values (?, ?)
DEBUG 2022-09-08 17:56:15,962 [main][IdentifierGeneratorHelper.java:78] : Natively generated identity: 5
DEBUG 2022-09-08 17:56:15,962 [main][ResourceRegistryStandardImpl.java:104] : HHH000387: ResultSet's statement was not registered
DEBUG 2022-09-08 17:56:15,963 [main][TransactionImpl.java:66] : committing
DEBUG 2022-09-08 17:56:15,963 [main][AbstractFlushingEventListener.java:132] : Processing flush-time cascades
DEBUG 2022-09-08 17:56:15,963 [main][AbstractFlushingEventListener.java:174] : Dirty checking collections
DEBUG 2022-09-08 17:56:15,963 [main][AbstractFlushingEventListener.java:106] : Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
DEBUG 2022-09-08 17:56:15,963 [main][AbstractFlushingEventListener.java:113] : Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
DEBUG 2022-09-08 17:56:15,963 [main][EntityPrinter.java:102] : Listing entities:
DEBUG 2022-09-08 17:56:15,963 [main][EntityPrinter.java:109] : org.example.models.Author{name=Michael Connelly, id=5, salary=3756}
DEBUG 2022-09-08 17:56:15,965 [main][LogicalConnectionManagedImpl.java:154] : Initiating JDBC connection release from afterTransaction
DEBUG 2022-09-08 17:56:15,966 [main][LogicalConnectionManagedImpl.java:154] : Initiating JDBC connection release from afterTransaction
DEBUG 2022-09-08 17:56:15,975 [main][CriteriaQueryImpl.java:307] : Rendered criteria query -> select generatedAlias0 from Author as generatedAlias0
DEBUG 2022-09-08 17:56:15,980 [main][QueryTranslatorFactoryInitiator.java:45] : QueryTranslatorFactory : org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory@30e91026
INFO  2022-09-08 17:56:15,981 [main][QueryTranslatorFactoryInitiator.java:47] : HHH000397: Using ASTQueryTranslatorFactory
DEBUG 2022-09-08 17:56:15,996 [main][QueryTranslatorImpl.java:278] : parse() - HQL: select generatedAlias0 from org.example.models.Author as generatedAlias0
DEBUG 2022-09-08 17:56:16,000 [main][QueryTranslatorImpl.java:296] : --- HQL AST ---
 \-[QUERY] Node: 'query'
    \-[SELECT_FROM] Node: 'SELECT_FROM'
       +-[FROM] Node: 'from'
       |  \-[RANGE] Node: 'RANGE'
       |     +-[DOT] Node: '.'
       |     |  +-[DOT] Node: '.'
       |     |  |  +-[DOT] Node: '.'
       |     |  |  |  +-[IDENT] Node: 'org'
       |     |  |  |  \-[IDENT] Node: 'example'
       |     |  |  \-[IDENT] Node: 'models'
       |     |  \-[IDENT] Node: 'Author'
       |     \-[ALIAS] Node: 'generatedAlias0'
       \-[SELECT] Node: 'select'
          \-[IDENT] Node: 'generatedAlias0'

DEBUG 2022-09-08 17:56:16,000 [main][ErrorCounter.java:95] : throwQueryException() : no errors
DEBUG 2022-09-08 17:56:16,010 [main][HqlSqlBaseWalker.java:124] : select << begin [level=1, statement=select]
DEBUG 2022-09-08 17:56:16,015 [main][FromElement.java:148] : FromClause{level=1} : org.example.models.Author (generatedAlias0) -> author0_
DEBUG 2022-09-08 17:56:16,016 [main][FromReferenceNode.java:60] : Resolved : generatedAlias0 -> author0_.id
DEBUG 2022-09-08 17:56:16,016 [main][HqlSqlBaseWalker.java:128] : select : finishing up [level=1, statement=select]
DEBUG 2022-09-08 17:56:16,018 [main][HqlSqlWalker.java:725] : processQuery() :  ( SELECT ( {select clause} author0_.id ) ( FromClause{level=1} Author author0_ ) )
DEBUG 2022-09-08 17:56:16,020 [main][JoinProcessor.java:169] : Using FROM fragment [Author author0_]
DEBUG 2022-09-08 17:56:16,020 [main][HqlSqlBaseWalker.java:132] : select >> end [level=1, statement=select]
DEBUG 2022-09-08 17:56:16,021 [main][QueryTranslatorImpl.java:265] : --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (Author)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'author0_.id as id1_0_' {alias=generatedAlias0, className=org.example.models.Author, tableAlias=author0_}
    |  \-[SQL_TOKEN] SqlFragment: 'author0_.name as name2_0_, author0_.salary as salary3_0_'
    \-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[author0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'Author author0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=Author,tableAlias=author0_,origin=null,columns={,className=org.example.models.Author}}

DEBUG 2022-09-08 17:56:16,021 [main][ErrorCounter.java:95] : throwQueryException() : no errors
DEBUG 2022-09-08 17:56:16,023 [main][QueryTranslatorImpl.java:247] : HQL: select generatedAlias0 from org.example.models.Author as generatedAlias0
DEBUG 2022-09-08 17:56:16,023 [main][QueryTranslatorImpl.java:248] : SQL: select author0_.id as id1_0_, author0_.name as name2_0_, author0_.salary as salary3_0_ from Author author0_
DEBUG 2022-09-08 17:56:16,023 [main][ErrorCounter.java:95] : throwQueryException() : no errors
DEBUG 2022-09-08 17:56:16,028 [main][SqlStatementLogger.java:92] : select author0_.id as id1_0_, author0_.name as name2_0_, author0_.salary as salary3_0_ from Author author0_
DEBUG 2022-09-08 17:56:16,031 [main][DelegatingBasicLogger.java:384] : Result set row: 0
DEBUG 2022-09-08 17:56:16,034 [main][Loader.java:1527] : Result row: EntityKey[org.example.models.Author#1]
DEBUG 2022-09-08 17:56:16,035 [main][DelegatingBasicLogger.java:384] : Result set row: 1
DEBUG 2022-09-08 17:56:16,035 [main][Loader.java:1527] : Result row: EntityKey[org.example.models.Author#2]
DEBUG 2022-09-08 17:56:16,035 [main][DelegatingBasicLogger.java:384] : Result set row: 2
DEBUG 2022-09-08 17:56:16,036 [main][Loader.java:1527] : Result row: EntityKey[org.example.models.Author#3]
DEBUG 2022-09-08 17:56:16,036 [main][DelegatingBasicLogger.java:384] : Result set row: 3
DEBUG 2022-09-08 17:56:16,036 [main][Loader.java:1527] : Result row: EntityKey[org.example.models.Author#4]
DEBUG 2022-09-08 17:56:16,036 [main][DelegatingBasicLogger.java:384] : Result set row: 4
DEBUG 2022-09-08 17:56:16,036 [main][Loader.java:1527] : Result row: EntityKey[org.example.models.Author#5]
DEBUG 2022-09-08 17:56:16,036 [main][TwoPhaseLoad.java:141] : Resolving associations for [org.example.models.Author#1]
DEBUG 2022-09-08 17:56:16,037 [main][TwoPhaseLoad.java:267] : Done materializing entity [org.example.models.Author#1]
DEBUG 2022-09-08 17:56:16,037 [main][TwoPhaseLoad.java:141] : Resolving associations for [org.example.models.Author#2]
DEBUG 2022-09-08 17:56:16,037 [main][TwoPhaseLoad.java:267] : Done materializing entity [org.example.models.Author#2]
DEBUG 2022-09-08 17:56:16,037 [main][TwoPhaseLoad.java:141] : Resolving associations for [org.example.models.Author#3]
DEBUG 2022-09-08 17:56:16,037 [main][TwoPhaseLoad.java:267] : Done materializing entity [org.example.models.Author#3]
DEBUG 2022-09-08 17:56:16,037 [main][TwoPhaseLoad.java:141] : Resolving associations for [org.example.models.Author#4]
DEBUG 2022-09-08 17:56:16,037 [main][TwoPhaseLoad.java:267] : Done materializing entity [org.example.models.Author#4]
DEBUG 2022-09-08 17:56:16,038 [main][TwoPhaseLoad.java:141] : Resolving associations for [org.example.models.Author#5]
DEBUG 2022-09-08 17:56:16,038 [main][TwoPhaseLoad.java:267] : Done materializing entity [org.example.models.Author#5]
DEBUG 2022-09-08 17:56:16,038 [main][LogicalConnectionManagedImpl.java:154] : Initiating JDBC connection release from afterTransaction
DEBUG 2022-09-08 17:56:16,046 [main][SqlStatementLogger.java:92] : SELECT * FROM Author
DEBUG 2022-09-08 17:56:16,048 [main][DelegatingBasicLogger.java:384] : Result set row: 0
DEBUG 2022-09-08 17:56:16,048 [main][Loader.java:1527] : Result row: EntityKey[org.example.models.Author#1]
DEBUG 2022-09-08 17:56:16,048 [main][DelegatingBasicLogger.java:384] : Result set row: 1
DEBUG 2022-09-08 17:56:16,048 [main][Loader.java:1527] : Result row: EntityKey[org.example.models.Author#2]
DEBUG 2022-09-08 17:56:16,048 [main][DelegatingBasicLogger.java:384] : Result set row: 2
DEBUG 2022-09-08 17:56:16,048 [main][Loader.java:1527] : Result row: EntityKey[org.example.models.Author#3]
DEBUG 2022-09-08 17:56:16,048 [main][DelegatingBasicLogger.java:384] : Result set row: 3
DEBUG 2022-09-08 17:56:16,050 [main][Loader.java:1527] : Result row: EntityKey[org.example.models.Author#4]
DEBUG 2022-09-08 17:56:16,050 [main][DelegatingBasicLogger.java:384] : Result set row: 4
DEBUG 2022-09-08 17:56:16,050 [main][Loader.java:1527] : Result row: EntityKey[org.example.models.Author#5]
DEBUG 2022-09-08 17:56:16,050 [main][TwoPhaseLoad.java:141] : Resolving associations for [org.example.models.Author#1]
DEBUG 2022-09-08 17:56:16,050 [main][TwoPhaseLoad.java:267] : Done materializing entity [org.example.models.Author#1]
DEBUG 2022-09-08 17:56:16,050 [main][TwoPhaseLoad.java:141] : Resolving associations for [org.example.models.Author#2]
DEBUG 2022-09-08 17:56:16,050 [main][TwoPhaseLoad.java:267] : Done materializing entity [org.example.models.Author#2]
DEBUG 2022-09-08 17:56:16,051 [main][TwoPhaseLoad.java:141] : Resolving associations for [org.example.models.Author#3]
DEBUG 2022-09-08 17:56:16,051 [main][TwoPhaseLoad.java:267] : Done materializing entity [org.example.models.Author#3]
DEBUG 2022-09-08 17:56:16,051 [main][TwoPhaseLoad.java:141] : Resolving associations for [org.example.models.Author#4]
DEBUG 2022-09-08 17:56:16,051 [main][TwoPhaseLoad.java:267] : Done materializing entity [org.example.models.Author#4]
DEBUG 2022-09-08 17:56:16,051 [main][TwoPhaseLoad.java:141] : Resolving associations for [org.example.models.Author#5]
DEBUG 2022-09-08 17:56:16,051 [main][TwoPhaseLoad.java:267] : Done materializing entity [org.example.models.Author#5]
DEBUG 2022-09-08 17:56:16,051 [main][LogicalConnectionManagedImpl.java:154] : Initiating JDBC connection release from afterTransaction
DEBUG 2022-09-08 17:56:16,053 [main][SqlStatementLogger.java:92] : select author0_.id as id1_0_0_, author0_.name as name2_0_0_, author0_.salary as salary3_0_0_ from Author author0_ where author0_.id=?
DEBUG 2022-09-08 17:56:16,056 [main][ResultSetProcessorImpl.java:120] : Starting ResultSet row #0
DEBUG 2022-09-08 17:56:16,056 [main][EntityReferenceInitializerImpl.java:126] : On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
DEBUG 2022-09-08 17:56:16,056 [main][TwoPhaseLoad.java:141] : Resolving associations for [org.example.models.Author#2]
DEBUG 2022-09-08 17:56:16,057 [main][TwoPhaseLoad.java:267] : Done materializing entity [org.example.models.Author#2]
DEBUG 2022-09-08 17:56:16,057 [main][ResourceRegistryStandardImpl.java:73] : HHH000387: ResultSet's statement was not registered
DEBUG 2022-09-08 17:56:16,057 [main][AbstractLoadPlanBasedEntityLoader.java:189] : Done entity load : org.example.models.Author#2
DEBUG 2022-09-08 17:56:16,057 [main][LogicalConnectionManagedImpl.java:154] : Initiating JDBC connection release from afterTransaction
DEBUG 2022-09-08 17:56:16,058 [main][QueryTranslatorImpl.java:278] : parse() - HQL: select a from org.example.models.Author a where a.salary between :minSalary and :maxSalary
DEBUG 2022-09-08 17:56:16,059 [main][QueryTranslatorImpl.java:296] : --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[IDENT] Node: 'org'
    |  |     |  |  |  \-[IDENT] Node: 'example'
    |  |     |  |  \-[IDENT] Node: 'models'
    |  |     |  \-[IDENT] Node: 'Author'
    |  |     \-[ALIAS] Node: 'a'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'a'
    \-[WHERE] Node: 'where'
       \-[BETWEEN] Node: 'between'
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'a'
          |  \-[IDENT] Node: 'salary'
          +-[COLON] Node: ':'
          |  \-[IDENT] Node: 'minSalary'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'maxSalary'

DEBUG 2022-09-08 17:56:16,059 [main][ErrorCounter.java:95] : throwQueryException() : no errors
DEBUG 2022-09-08 17:56:16,060 [main][HqlSqlBaseWalker.java:124] : select << begin [level=1, statement=select]
DEBUG 2022-09-08 17:56:16,060 [main][FromElement.java:148] : FromClause{level=1} : org.example.models.Author (a) -> author0_
DEBUG 2022-09-08 17:56:16,060 [main][FromReferenceNode.java:60] : Resolved : a -> author0_.id
DEBUG 2022-09-08 17:56:16,061 [main][FromReferenceNode.java:60] : Resolved : a -> author0_.id
DEBUG 2022-09-08 17:56:16,061 [main][DotNode.java:661] : getDataType() : salary -> org.hibernate.type.IntegerType@3bdc7c39
DEBUG 2022-09-08 17:56:16,062 [main][FromReferenceNode.java:60] : Resolved : a.salary -> author0_.salary
DEBUG 2022-09-08 17:56:16,062 [main][HqlSqlBaseWalker.java:128] : select : finishing up [level=1, statement=select]
DEBUG 2022-09-08 17:56:16,062 [main][HqlSqlWalker.java:725] : processQuery() :  ( SELECT ( {select clause} author0_.id ) ( FromClause{level=1} Author author0_ ) ( where ( between ( author0_.salary author0_.id salary ) ? ? ) ) )
DEBUG 2022-09-08 17:56:16,063 [main][JoinProcessor.java:169] : Using FROM fragment [Author author0_]
DEBUG 2022-09-08 17:56:16,063 [main][HqlSqlBaseWalker.java:132] : select >> end [level=1, statement=select]
DEBUG 2022-09-08 17:56:16,063 [main][QueryTranslatorImpl.java:265] : --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (Author)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'author0_.id as id1_0_' {alias=a, className=org.example.models.Author, tableAlias=author0_}
    |  \-[SQL_TOKEN] SqlFragment: 'author0_.name as name2_0_, author0_.salary as salary3_0_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[a], fromElementByTableAlias=[author0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'Author author0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=a,role=null,tableName=Author,tableAlias=author0_,origin=null,columns={,className=org.example.models.Author}}
    \-[WHERE] SqlNode: 'where'
       \-[BETWEEN] BetweenOperatorNode: 'between'
          +-[DOT] DotNode: 'author0_.salary' {propertyName=salary,dereferenceType=PRIMITIVE,getPropertyPath=salary,path=a.salary,tableAlias=author0_,className=org.example.models.Author,classAlias=a}
          |  +-[ALIAS_REF] IdentNode: 'author0_.id' {alias=a, className=org.example.models.Author, tableAlias=author0_}
          |  \-[IDENT] IdentNode: 'salary' {originalText=salary}
          +-[NAMED_PARAM] ParameterNode: '?' {name=minSalary, expectedType=org.hibernate.type.IntegerType@3bdc7c39}
          \-[NAMED_PARAM] ParameterNode: '?' {name=maxSalary, expectedType=org.hibernate.type.IntegerType@3bdc7c39}

DEBUG 2022-09-08 17:56:16,063 [main][ErrorCounter.java:95] : throwQueryException() : no errors
DEBUG 2022-09-08 17:56:16,064 [main][QueryTranslatorImpl.java:247] : HQL: select a from org.example.models.Author a where a.salary between :minSalary and :maxSalary
DEBUG 2022-09-08 17:56:16,064 [main][QueryTranslatorImpl.java:248] : SQL: select author0_.id as id1_0_, author0_.name as name2_0_, author0_.salary as salary3_0_ from Author author0_ where author0_.salary between ? and ?
DEBUG 2022-09-08 17:56:16,064 [main][ErrorCounter.java:95] : throwQueryException() : no errors
DEBUG 2022-09-08 17:56:16,065 [main][SqlStatementLogger.java:92] : select author0_.id as id1_0_, author0_.name as name2_0_, author0_.salary as salary3_0_ from Author author0_ where author0_.salary between ? and ?
DEBUG 2022-09-08 17:56:16,068 [main][DelegatingBasicLogger.java:384] : Result set row: 0
DEBUG 2022-09-08 17:56:16,068 [main][Loader.java:1527] : Result row: EntityKey[org.example.models.Author#3]
DEBUG 2022-09-08 17:56:16,068 [main][DelegatingBasicLogger.java:384] : Result set row: 1
DEBUG 2022-09-08 17:56:16,069 [main][Loader.java:1527] : Result row: EntityKey[org.example.models.Author#5]
DEBUG 2022-09-08 17:56:16,069 [main][TwoPhaseLoad.java:141] : Resolving associations for [org.example.models.Author#3]
DEBUG 2022-09-08 17:56:16,069 [main][TwoPhaseLoad.java:267] : Done materializing entity [org.example.models.Author#3]
DEBUG 2022-09-08 17:56:16,069 [main][TwoPhaseLoad.java:141] : Resolving associations for [org.example.models.Author#5]
DEBUG 2022-09-08 17:56:16,069 [main][TwoPhaseLoad.java:267] : Done materializing entity [org.example.models.Author#5]
DEBUG 2022-09-08 17:56:16,069 [main][LogicalConnectionManagedImpl.java:154] : Initiating JDBC connection release from afterTransaction
DEBUG 2022-09-08 17:56:16,070 [main][SqlStatementLogger.java:92] : select author0_.id as id1_0_0_, author0_.name as name2_0_0_, author0_.salary as salary3_0_0_ from Author author0_ where author0_.id=?
DEBUG 2022-09-08 17:56:16,071 [main][ResultSetProcessorImpl.java:120] : Starting ResultSet row #0
DEBUG 2022-09-08 17:56:16,072 [main][EntityReferenceInitializerImpl.java:126] : On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
DEBUG 2022-09-08 17:56:16,072 [main][TwoPhaseLoad.java:141] : Resolving associations for [org.example.models.Author#2]
DEBUG 2022-09-08 17:56:16,072 [main][TwoPhaseLoad.java:267] : Done materializing entity [org.example.models.Author#2]
DEBUG 2022-09-08 17:56:16,072 [main][ResourceRegistryStandardImpl.java:73] : HHH000387: ResultSet's statement was not registered
DEBUG 2022-09-08 17:56:16,072 [main][AbstractLoadPlanBasedEntityLoader.java:189] : Done entity load : org.example.models.Author#2
DEBUG 2022-09-08 17:56:16,072 [main][LogicalConnectionManagedImpl.java:154] : Initiating JDBC connection release from afterTransaction
DEBUG 2022-09-08 17:56:16,073 [main][TransactionImpl.java:55] : begin
DEBUG 2022-09-08 17:56:16,073 [main][TransactionImpl.java:66] : committing
DEBUG 2022-09-08 17:56:16,073 [main][AbstractFlushingEventListener.java:132] : Processing flush-time cascades
DEBUG 2022-09-08 17:56:16,073 [main][AbstractFlushingEventListener.java:174] : Dirty checking collections
DEBUG 2022-09-08 17:56:16,074 [main][AbstractFlushingEventListener.java:106] : Flushed: 0 insertions, 1 updates, 0 deletions to 1 objects
DEBUG 2022-09-08 17:56:16,074 [main][AbstractFlushingEventListener.java:113] : Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
DEBUG 2022-09-08 17:56:16,075 [main][EntityPrinter.java:102] : Listing entities:
DEBUG 2022-09-08 17:56:16,075 [main][EntityPrinter.java:109] : org.example.models.Author{name=Ihor Kosolapow, id=2, salary=4622}
DEBUG 2022-09-08 17:56:16,077 [main][SqlStatementLogger.java:92] : update Author set name=? where id=?
DEBUG 2022-09-08 17:56:16,079 [main][LogicalConnectionManagedImpl.java:154] : Initiating JDBC connection release from afterTransaction
DEBUG 2022-09-08 17:56:16,080 [main][LogicalConnectionManagedImpl.java:154] : Initiating JDBC connection release from afterTransaction
DEBUG 2022-09-08 17:56:16,080 [main][JdbcCoordinatorImpl.java:177] : HHH000420: Closing un-released batch
DEBUG 2022-09-08 17:56:16,081 [main][SqlStatementLogger.java:92] : select author0_.id as id1_0_0_, author0_.name as name2_0_0_, author0_.salary as salary3_0_0_ from Author author0_ where author0_.id=?
DEBUG 2022-09-08 17:56:16,082 [main][ResultSetProcessorImpl.java:120] : Starting ResultSet row #0
DEBUG 2022-09-08 17:56:16,082 [main][EntityReferenceInitializerImpl.java:126] : On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
DEBUG 2022-09-08 17:56:16,083 [main][TwoPhaseLoad.java:141] : Resolving associations for [org.example.models.Author#2]
DEBUG 2022-09-08 17:56:16,083 [main][TwoPhaseLoad.java:267] : Done materializing entity [org.example.models.Author#2]
DEBUG 2022-09-08 17:56:16,083 [main][ResourceRegistryStandardImpl.java:73] : HHH000387: ResultSet's statement was not registered
DEBUG 2022-09-08 17:56:16,083 [main][AbstractLoadPlanBasedEntityLoader.java:189] : Done entity load : org.example.models.Author#2
DEBUG 2022-09-08 17:56:16,084 [main][LogicalConnectionManagedImpl.java:154] : Initiating JDBC connection release from afterTransaction
WARN  2022-09-08 17:56:23,695 [main][Main.java:16] : TEST
DEBUG 2022-09-08 17:56:23,752 [main][CoreLogging.java:28] : Logging Provider: org.jboss.logging.Log4jLoggerProvider
DEBUG 2022-09-08 17:56:23,759 [main][IntegratorServiceImpl.java:46] : Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
DEBUG 2022-09-08 17:56:23,762 [main][IntegratorServiceImpl.java:46] : Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
DEBUG 2022-09-08 17:56:23,765 [main][IntegratorServiceImpl.java:46] : Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
INFO  2022-09-08 17:56:23,838 [main][Version.java:45] : HHH000412: Hibernate Core {5.2.2.Final}
INFO  2022-09-08 17:56:23,840 [main][Environment.java:213] : HHH000206: hibernate.properties not found
INFO  2022-09-08 17:56:23,841 [main][Environment.java:318] : HHH000021: Bytecode provider name : javassist
DEBUG 2022-09-08 17:56:23,864 [main][LocalXmlResourceResolver.java:57] : Interpreting public/system identifier : [null] - [http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd]
DEBUG 2022-09-08 17:56:23,865 [main][LocalXmlResourceResolver.java:85] : Recognized hibernate-configuration identifier; attempting to resolve on classpath under org/hibernate/
DEBUG 2022-09-08 17:56:23,874 [main][JaxbCfgProcessor.java:116] : cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
DEBUG 2022-09-08 17:56:24,090 [main][Configuration.java:724] : Building session factory using internal StandardServiceRegistryBuilder
DEBUG 2022-09-08 17:56:24,093 [main][ServiceBinding.java:68] : Overriding existing service binding [org.hibernate.secure.spi.JaccService]
DEBUG 2022-09-08 17:56:24,094 [main][Configuration.java:652] : Building session factory using provided StandardServiceRegistry
DEBUG 2022-09-08 17:56:24,102 [main][RegionFactoryInitiator.java:75] : Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
INFO  2022-09-08 17:56:24,108 [main][JavaReflectionManager.java:66] : HCANN000001: Hibernate Commons Annotations {5.0.1.Final}
DEBUG 2022-09-08 17:56:24,119 [main][BasicTypeRegistry.java:145] : Adding type registration boolean -> org.hibernate.type.BooleanType@6ebe9c8
DEBUG 2022-09-08 17:56:24,120 [main][BasicTypeRegistry.java:145] : Adding type registration boolean -> org.hibernate.type.BooleanType@6ebe9c8
DEBUG 2022-09-08 17:56:24,121 [main][BasicTypeRegistry.java:145] : Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@6ebe9c8
DEBUG 2022-09-08 17:56:24,124 [main][BasicTypeRegistry.java:145] : Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@e343e12
DEBUG 2022-09-08 17:56:24,128 [main][BasicTypeRegistry.java:145] : Adding type registration true_false -> org.hibernate.type.TrueFalseType@fc421c97
DEBUG 2022-09-08 17:56:24,129 [main][BasicTypeRegistry.java:145] : Adding type registration yes_no -> org.hibernate.type.YesNoType@45aa3bfd
DEBUG 2022-09-08 17:56:24,131 [main][BasicTypeRegistry.java:145] : Adding type registration byte -> org.hibernate.type.ByteType@95cfa631
DEBUG 2022-09-08 17:56:24,131 [main][BasicTypeRegistry.java:145] : Adding type registration byte -> org.hibernate.type.ByteType@95cfa631
DEBUG 2022-09-08 17:56:24,132 [main][BasicTypeRegistry.java:145] : Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@95cfa631
DEBUG 2022-09-08 17:56:24,133 [main][BasicTypeRegistry.java:145] : Adding type registration character -> org.hibernate.type.CharacterType@132f3940
DEBUG 2022-09-08 17:56:24,134 [main][BasicTypeRegistry.java:145] : Adding type registration char -> org.hibernate.type.CharacterType@132f3940
DEBUG 2022-09-08 17:56:24,135 [main][BasicTypeRegistry.java:145] : Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@132f3940
DEBUG 2022-09-08 17:56:24,136 [main][BasicTypeRegistry.java:145] : Adding type registration short -> org.hibernate.type.ShortType@6608b155
DEBUG 2022-09-08 17:56:24,136 [main][BasicTypeRegistry.java:145] : Adding type registration short -> org.hibernate.type.ShortType@6608b155
DEBUG 2022-09-08 17:56:24,137 [main][BasicTypeRegistry.java:145] : Adding type registration java.lang.Short -> org.hibernate.type.ShortType@6608b155
DEBUG 2022-09-08 17:56:24,138 [main][BasicTypeRegistry.java:145] : Adding type registration integer -> org.hibernate.type.IntegerType@5a415b06
DEBUG 2022-09-08 17:56:24,139 [main][BasicTypeRegistry.java:145] : Adding type registration int -> org.hibernate.type.IntegerType@5a415b06
DEBUG 2022-09-08 17:56:24,139 [main][BasicTypeRegistry.java:145] : Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@5a415b06
DEBUG 2022-09-08 17:56:24,141 [main][BasicTypeRegistry.java:145] : Adding type registration long -> org.hibernate.type.LongType@70f6c767
DEBUG 2022-09-08 17:56:24,141 [main][BasicTypeRegistry.java:145] : Adding type registration long -> org.hibernate.type.LongType@70f6c767
DEBUG 2022-09-08 17:56:24,142 [main][BasicTypeRegistry.java:145] : Adding type registration java.lang.Long -> org.hibernate.type.LongType@70f6c767
DEBUG 2022-09-08 17:56:24,143 [main][BasicTypeRegistry.java:145] : Adding type registration float -> org.hibernate.type.FloatType@be4bf3ec
DEBUG 2022-09-08 17:56:24,144 [main][BasicTypeRegistry.java:145] : Adding type registration float -> org.hibernate.type.FloatType@be4bf3ec
DEBUG 2022-09-08 17:56:24,145 [main][BasicTypeRegistry.java:145] : Adding type registration java.lang.Float -> org.hibernate.type.FloatType@be4bf3ec
DEBUG 2022-09-08 17:56:24,146 [main][BasicTypeRegistry.java:145] : Adding type registration double -> org.hibernate.type.DoubleType@b81d4de9
DEBUG 2022-09-08 17:56:24,146 [main][BasicTypeRegistry.java:145] : Adding type registration double -> org.hibernate.type.DoubleType@b81d4de9
DEBUG 2022-09-08 17:56:24,147 [main][BasicTypeRegistry.java:145] : Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@b81d4de9
DEBUG 2022-09-08 17:56:24,149 [main][BasicTypeRegistry.java:145] : Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@f0c3aac3
DEBUG 2022-09-08 17:56:24,149 [main][BasicTypeRegistry.java:145] : Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@f0c3aac3
DEBUG 2022-09-08 17:56:24,151 [main][BasicTypeRegistry.java:145] : Adding type registration big_integer -> org.hibernate.type.BigIntegerType@98d5b6de
DEBUG 2022-09-08 17:56:24,151 [main][BasicTypeRegistry.java:145] : Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@98d5b6de
DEBUG 2022-09-08 17:56:24,153 [main][BasicTypeRegistry.java:145] : Adding type registration string -> org.hibernate.type.StringType@62cf1ca1
DEBUG 2022-09-08 17:56:24,153 [main][BasicTypeRegistry.java:145] : Adding type registration java.lang.String -> org.hibernate.type.StringType@62cf1ca1
DEBUG 2022-09-08 17:56:24,154 [main][BasicTypeRegistry.java:145] : Adding type registration nstring -> org.hibernate.type.StringNVarcharType@7ea57236
DEBUG 2022-09-08 17:56:24,155 [main][BasicTypeRegistry.java:145] : Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@4e238032
DEBUG 2022-09-08 17:56:24,156 [main][BasicTypeRegistry.java:145] : Adding type registration url -> org.hibernate.type.UrlType@f1c0cd3a
DEBUG 2022-09-08 17:56:24,157 [main][BasicTypeRegistry.java:145] : Adding type registration java.net.URL -> org.hibernate.type.UrlType@f1c0cd3a
DEBUG 2022-09-08 17:56:24,158 [main][BasicTypeRegistry.java:145] : Adding type registration Duration -> org.hibernate.type.DurationType@7da6fa33
DEBUG 2022-09-08 17:56:24,159 [main][BasicTypeRegistry.java:145] : Adding type registration java.time.Duration -> org.hibernate.type.DurationType@7da6fa33
DEBUG 2022-09-08 17:56:24,167 [main][BasicTypeRegistry.java:145] : Adding type registration Instant -> org.hibernate.type.InstantType@cc0c1b38
DEBUG 2022-09-08 17:56:24,167 [main][BasicTypeRegistry.java:145] : Adding type registration java.time.Instant -> org.hibernate.type.InstantType@cc0c1b38
DEBUG 2022-09-08 17:56:24,168 [main][BasicTypeRegistry.java:145] : Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@2abe1234
DEBUG 2022-09-08 17:56:24,169 [main][BasicTypeRegistry.java:145] : Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@2abe1234
DEBUG 2022-09-08 17:56:24,170 [main][BasicTypeRegistry.java:145] : Adding type registration LocalDate -> org.hibernate.type.LocalDateType@39ecdbd0
DEBUG 2022-09-08 17:56:24,170 [main][BasicTypeRegistry.java:145] : Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@39ecdbd0
DEBUG 2022-09-08 17:56:24,171 [main][BasicTypeRegistry.java:145] : Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@bf631b78
DEBUG 2022-09-08 17:56:24,172 [main][BasicTypeRegistry.java:145] : Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@bf631b78
DEBUG 2022-09-08 17:56:24,173 [main][BasicTypeRegistry.java:145] : Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@91af0527
DEBUG 2022-09-08 17:56:24,173 [main][BasicTypeRegistry.java:145] : Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@91af0527
DEBUG 2022-09-08 17:56:24,174 [main][BasicTypeRegistry.java:145] : Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@dcdeb4c9
DEBUG 2022-09-08 17:56:24,174 [main][BasicTypeRegistry.java:145] : Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@dcdeb4c9
DEBUG 2022-09-08 17:56:24,175 [main][BasicTypeRegistry.java:145] : Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@ef81d93f
DEBUG 2022-09-08 17:56:24,176 [main][BasicTypeRegistry.java:145] : Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@ef81d93f
DEBUG 2022-09-08 17:56:24,177 [main][BasicTypeRegistry.java:145] : Adding type registration date -> org.hibernate.type.DateType@d0278b04
DEBUG 2022-09-08 17:56:24,177 [main][BasicTypeRegistry.java:145] : Adding type registration java.sql.Date -> org.hibernate.type.DateType@d0278b04
DEBUG 2022-09-08 17:56:24,178 [main][BasicTypeRegistry.java:145] : Adding type registration time -> org.hibernate.type.TimeType@a1ad54d6
DEBUG 2022-09-08 17:56:24,179 [main][BasicTypeRegistry.java:145] : Adding type registration java.sql.Time -> org.hibernate.type.TimeType@a1ad54d6
DEBUG 2022-09-08 17:56:24,179 [main][BasicTypeRegistry.java:145] : Adding type registration timestamp -> org.hibernate.type.TimestampType@ea7355c8
DEBUG 2022-09-08 17:56:24,180 [main][BasicTypeRegistry.java:145] : Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@ea7355c8
DEBUG 2022-09-08 17:56:24,180 [main][BasicTypeRegistry.java:145] : Adding type registration java.util.Date -> org.hibernate.type.TimestampType@ea7355c8
DEBUG 2022-09-08 17:56:24,181 [main][BasicTypeRegistry.java:145] : Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@6ad34791
DEBUG 2022-09-08 17:56:24,183 [main][BasicTypeRegistry.java:145] : Adding type registration calendar -> org.hibernate.type.CalendarType@745c096b
DEBUG 2022-09-08 17:56:24,183 [main][BasicTypeRegistry.java:145] : Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@745c096b
DEBUG 2022-09-08 17:56:24,183 [main][BasicTypeRegistry.java:145] : Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@745c096b
DEBUG 2022-09-08 17:56:24,184 [main][BasicTypeRegistry.java:145] : Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@7c8947aa
DEBUG 2022-09-08 17:56:24,184 [main][BasicTypeRegistry.java:145] : Adding type registration locale -> org.hibernate.type.LocaleType@adcc2692
DEBUG 2022-09-08 17:56:24,184 [main][BasicTypeRegistry.java:145] : Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@adcc2692
DEBUG 2022-09-08 17:56:24,185 [main][BasicTypeRegistry.java:145] : Adding type registration currency -> org.hibernate.type.CurrencyType@96b477c9
DEBUG 2022-09-08 17:56:24,185 [main][BasicTypeRegistry.java:145] : Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@96b477c9
DEBUG 2022-09-08 17:56:24,186 [main][BasicTypeRegistry.java:145] : Adding type registration timezone -> org.hibernate.type.TimeZoneType@81cef422
DEBUG 2022-09-08 17:56:24,187 [main][BasicTypeRegistry.java:145] : Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@81cef422
DEBUG 2022-09-08 17:56:24,187 [main][BasicTypeRegistry.java:145] : Adding type registration class -> org.hibernate.type.ClassType@f0287d6
DEBUG 2022-09-08 17:56:24,188 [main][BasicTypeRegistry.java:145] : Adding type registration java.lang.Class -> org.hibernate.type.ClassType@f0287d6
DEBUG 2022-09-08 17:56:24,188 [main][BasicTypeRegistry.java:145] : Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@1ee5df9b
DEBUG 2022-09-08 17:56:24,189 [main][BasicTypeRegistry.java:145] : Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@1ee5df9b
DEBUG 2022-09-08 17:56:24,189 [main][BasicTypeRegistry.java:145] : Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@f983883d
DEBUG 2022-09-08 17:56:24,190 [main][BasicTypeRegistry.java:145] : Adding type registration binary -> org.hibernate.type.BinaryType@9498581c
DEBUG 2022-09-08 17:56:24,190 [main][BasicTypeRegistry.java:145] : Adding type registration byte[] -> org.hibernate.type.BinaryType@9498581c
DEBUG 2022-09-08 17:56:24,190 [main][BasicTypeRegistry.java:145] : Adding type registration [B -> org.hibernate.type.BinaryType@9498581c
DEBUG 2022-09-08 17:56:24,191 [main][BasicTypeRegistry.java:145] : Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@a3bfaec1
DEBUG 2022-09-08 17:56:24,191 [main][BasicTypeRegistry.java:145] : Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@a3bfaec1
DEBUG 2022-09-08 17:56:24,191 [main][BasicTypeRegistry.java:145] : Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@a3bfaec1
DEBUG 2022-09-08 17:56:24,192 [main][BasicTypeRegistry.java:145] : Adding type registration row_version -> org.hibernate.type.RowVersionType@41460f19
DEBUG 2022-09-08 17:56:24,193 [main][BasicTypeRegistry.java:145] : Adding type registration image -> org.hibernate.type.ImageType@548c0672
DEBUG 2022-09-08 17:56:24,193 [main][BasicTypeRegistry.java:145] : Adding type registration characters -> org.hibernate.type.CharArrayType@b3cc7bb1
DEBUG 2022-09-08 17:56:24,193 [main][BasicTypeRegistry.java:145] : Adding type registration char[] -> org.hibernate.type.CharArrayType@b3cc7bb1
DEBUG 2022-09-08 17:56:24,194 [main][BasicTypeRegistry.java:145] : Adding type registration [C -> org.hibernate.type.CharArrayType@b3cc7bb1
DEBUG 2022-09-08 17:56:24,194 [main][BasicTypeRegistry.java:145] : Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@11ed19b7
DEBUG 2022-09-08 17:56:24,194 [main][BasicTypeRegistry.java:145] : Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@11ed19b7
DEBUG 2022-09-08 17:56:24,195 [main][BasicTypeRegistry.java:145] : Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@11ed19b7
DEBUG 2022-09-08 17:56:24,195 [main][BasicTypeRegistry.java:145] : Adding type registration text -> org.hibernate.type.TextType@b6f8fd2
DEBUG 2022-09-08 17:56:24,196 [main][BasicTypeRegistry.java:145] : Adding type registration ntext -> org.hibernate.type.NTextType@1ee09a95
DEBUG 2022-09-08 17:56:24,198 [main][BasicTypeRegistry.java:145] : Adding type registration blob -> org.hibernate.type.BlobType@77f60818
DEBUG 2022-09-08 17:56:24,198 [main][BasicTypeRegistry.java:145] : Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@77f60818
DEBUG 2022-09-08 17:56:24,199 [main][BasicTypeRegistry.java:145] : Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@d9881180
DEBUG 2022-09-08 17:56:24,202 [main][BasicTypeRegistry.java:145] : Adding type registration clob -> org.hibernate.type.ClobType@50f3248f
DEBUG 2022-09-08 17:56:24,202 [main][BasicTypeRegistry.java:145] : Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@50f3248f
DEBUG 2022-09-08 17:56:24,204 [main][BasicTypeRegistry.java:145] : Adding type registration nclob -> org.hibernate.type.NClobType@3ce57933
DEBUG 2022-09-08 17:56:24,204 [main][BasicTypeRegistry.java:145] : Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@3ce57933
DEBUG 2022-09-08 17:56:24,205 [main][BasicTypeRegistry.java:145] : Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@79c876dc
DEBUG 2022-09-08 17:56:24,205 [main][BasicTypeRegistry.java:145] : Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@fb42b97a
DEBUG 2022-09-08 17:56:24,206 [main][BasicTypeRegistry.java:145] : Adding type registration serializable -> org.hibernate.type.SerializableType@31225f50
DEBUG 2022-09-08 17:56:24,207 [main][BasicTypeRegistry.java:145] : Adding type registration object -> org.hibernate.type.ObjectType@74035863
DEBUG 2022-09-08 17:56:24,207 [main][BasicTypeRegistry.java:145] : Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@74035863
DEBUG 2022-09-08 17:56:24,208 [main][BasicTypeRegistry.java:145] : Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@cff75252
DEBUG 2022-09-08 17:56:24,208 [main][BasicTypeRegistry.java:145] : Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@a87d202b
DEBUG 2022-09-08 17:56:24,208 [main][BasicTypeRegistry.java:145] : Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@221c44b
DEBUG 2022-09-08 17:56:24,208 [main][BasicTypeRegistry.java:145] : Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@f130c2fd
DEBUG 2022-09-08 17:56:24,208 [main][BasicTypeRegistry.java:145] : Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@ae9a08dc
DEBUG 2022-09-08 17:56:24,209 [main][BasicTypeRegistry.java:145] : Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@1dbe1ec1
DEBUG 2022-09-08 17:56:24,209 [main][BasicTypeRegistry.java:145] : Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@b145b133
DEBUG 2022-09-08 17:56:24,209 [main][BasicTypeRegistry.java:145] : Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@2ac851ad
WARN  2022-09-08 17:56:24,214 [main][DriverManagerConnectionProviderImpl.java:70] : HHH10001002: Using Hibernate built-in connection pool (not for production use!)
INFO  2022-09-08 17:56:24,220 [main][DriverManagerConnectionProviderImpl.java:126] : HHH10001005: using driver [com.mysql.cj.jdbc.Driver] at URL [jdbc:mysql://localhost:3306/classicmodels?serverTimezone=UTC]
INFO  2022-09-08 17:56:24,221 [main][DriverManagerConnectionProviderImpl.java:132] : HHH10001001: Connection properties: {password=rootroot, user=root}
INFO  2022-09-08 17:56:24,221 [main][DriverManagerConnectionProviderImpl.java:140] : HHH10001003: Autocommit mode: false
DEBUG 2022-09-08 17:56:24,223 [main][DelegatingBasicLogger.java:384] : Initializing Connection pool with 1 Connections
INFO  2022-09-08 17:56:24,224 [main][PooledConnections.java:41] : HHH000115: Hibernate connection pool size: 5 (min=1)
DEBUG 2022-09-08 17:56:24,648 [main][JdbcEnvironmentInitiator.java:72] : Database ->
       name : MySQL
    version : 8.0.29
      major : 8
      minor : 0
DEBUG 2022-09-08 17:56:24,648 [main][JdbcEnvironmentInitiator.java:83] : Driver ->
       name : MySQL Connector/J
    version : mysql-connector-java-8.0.29 (Revision: dd61577595edad45c398af508cf91ad26fc4144f)
      major : 8
      minor : 0
DEBUG 2022-09-08 17:56:24,648 [main][DelegatingBasicLogger.java:389] : JDBC version : 4.2
INFO  2022-09-08 17:56:24,654 [main][Dialect.java:153] : HHH000400: Using dialect: org.hibernate.dialect.MySQLDialect
DEBUG 2022-09-08 17:56:24,689 [main][IdentifierHelperBuilder.java:117] : JDBC driver metadata reported database stores quoted identifiers in more than one case
DEBUG 2022-09-08 17:56:24,690 [main][IdentifierHelperBuilder.java:191] : IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [MIXED]; that will likely lead to problems in schema update and validation if using quoted identifiers
DEBUG 2022-09-08 17:56:24,710 [main][DefaultIdentifierGeneratorFactory.java:81] : Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
DEBUG 2022-09-08 17:56:24,710 [main][DefaultIdentifierGeneratorFactory.java:81] : Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
DEBUG 2022-09-08 17:56:24,711 [main][DefaultIdentifierGeneratorFactory.java:81] : Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
DEBUG 2022-09-08 17:56:24,711 [main][DefaultIdentifierGeneratorFactory.java:81] : Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
DEBUG 2022-09-08 17:56:24,711 [main][DefaultIdentifierGeneratorFactory.java:81] : Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
DEBUG 2022-09-08 17:56:24,712 [main][DefaultIdentifierGeneratorFactory.java:81] : Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
DEBUG 2022-09-08 17:56:24,712 [main][DefaultIdentifierGeneratorFactory.java:81] : Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
DEBUG 2022-09-08 17:56:24,713 [main][DefaultIdentifierGeneratorFactory.java:81] : Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
DEBUG 2022-09-08 17:56:24,713 [main][DefaultIdentifierGeneratorFactory.java:81] : Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
DEBUG 2022-09-08 17:56:24,713 [main][DefaultIdentifierGeneratorFactory.java:81] : Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
DEBUG 2022-09-08 17:56:24,714 [main][DefaultIdentifierGeneratorFactory.java:81] : Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
DEBUG 2022-09-08 17:56:24,714 [main][DefaultIdentifierGeneratorFactory.java:81] : Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
DEBUG 2022-09-08 17:56:24,714 [main][DefaultIdentifierGeneratorFactory.java:81] : Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
DEBUG 2022-09-08 17:56:24,716 [main][DefaultIdentifierGeneratorFactory.java:81] : Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
DEBUG 2022-09-08 17:56:24,731 [main][Namespace.java:47] : Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
DEBUG 2022-09-08 17:56:24,742 [main][AnnotationBinder.java:511] : Binding entity from annotated class: org.example.models.Author
DEBUG 2022-09-08 17:56:24,751 [main][Ejb3Column.java:213] : Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
DEBUG 2022-09-08 17:56:24,753 [main][EntityBinder.java:416] : Import with entity name Author
DEBUG 2022-09-08 17:56:24,755 [main][EntityBinder.java:692] : Bind entity org.example.models.Author on table Author
DEBUG 2022-09-08 17:56:24,767 [main][Ejb3Column.java:213] : Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Author), mappingColumn=id, insertable=true, updatable=true, unique=false}
DEBUG 2022-09-08 17:56:24,768 [main][PropertyBinder.java:174] : MetadataSourceProcessor property id with lazy=false
DEBUG 2022-09-08 17:56:24,769 [main][AbstractPropertyHolder.java:89] : Attempting to locate auto-apply AttributeConverter for property [org.example.models.Author:id]
DEBUG 2022-09-08 17:56:24,770 [main][SimpleValueBinder.java:398] : building SimpleValue for id
DEBUG 2022-09-08 17:56:24,771 [main][PropertyBinder.java:265] : Building property id
DEBUG 2022-09-08 17:56:24,773 [main][Ejb3Column.java:213] : Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Author), mappingColumn=name, insertable=true, updatable=true, unique=false}
DEBUG 2022-09-08 17:56:24,773 [main][PropertyBinder.java:174] : MetadataSourceProcessor property name with lazy=false
DEBUG 2022-09-08 17:56:24,773 [main][AbstractPropertyHolder.java:89] : Attempting to locate auto-apply AttributeConverter for property [org.example.models.Author:name]
DEBUG 2022-09-08 17:56:24,774 [main][SimpleValueBinder.java:398] : building SimpleValue for name
DEBUG 2022-09-08 17:56:24,774 [main][PropertyBinder.java:265] : Building property name
DEBUG 2022-09-08 17:56:24,774 [main][Ejb3Column.java:213] : Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Author), mappingColumn=salary, insertable=true, updatable=true, unique=false}
DEBUG 2022-09-08 17:56:24,774 [main][PropertyBinder.java:174] : MetadataSourceProcessor property salary with lazy=false
DEBUG 2022-09-08 17:56:24,774 [main][AbstractPropertyHolder.java:89] : Attempting to locate auto-apply AttributeConverter for property [org.example.models.Author:salary]
DEBUG 2022-09-08 17:56:24,774 [main][SimpleValueBinder.java:398] : building SimpleValue for salary
DEBUG 2022-09-08 17:56:24,774 [main][PropertyBinder.java:265] : Building property salary
DEBUG 2022-09-08 17:56:24,775 [main][AnnotationBinder.java:511] : Binding entity from annotated class: org.example.models.Book
DEBUG 2022-09-08 17:56:24,775 [main][Ejb3Column.java:213] : Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
DEBUG 2022-09-08 17:56:24,775 [main][EntityBinder.java:416] : Import with entity name Book
DEBUG 2022-09-08 17:56:24,775 [main][EntityBinder.java:692] : Bind entity org.example.models.Book on table Book
DEBUG 2022-09-08 17:56:24,776 [main][Ejb3Column.java:213] : Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Book), mappingColumn=id, insertable=true, updatable=true, unique=false}
DEBUG 2022-09-08 17:56:24,776 [main][PropertyBinder.java:174] : MetadataSourceProcessor property id with lazy=false
DEBUG 2022-09-08 17:56:24,776 [main][AbstractPropertyHolder.java:89] : Attempting to locate auto-apply AttributeConverter for property [org.example.models.Book:id]
DEBUG 2022-09-08 17:56:24,776 [main][SimpleValueBinder.java:398] : building SimpleValue for id
DEBUG 2022-09-08 17:56:24,776 [main][PropertyBinder.java:265] : Building property id
DEBUG 2022-09-08 17:56:24,777 [main][Ejb3Column.java:213] : Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Book), mappingColumn=author_id, insertable=true, updatable=true, unique=false}
DEBUG 2022-09-08 17:56:24,777 [main][PropertyBinder.java:174] : MetadataSourceProcessor property author_id with lazy=false
DEBUG 2022-09-08 17:56:24,777 [main][AbstractPropertyHolder.java:89] : Attempting to locate auto-apply AttributeConverter for property [org.example.models.Book:author_id]
DEBUG 2022-09-08 17:56:24,777 [main][SimpleValueBinder.java:398] : building SimpleValue for author_id
DEBUG 2022-09-08 17:56:24,777 [main][PropertyBinder.java:265] : Building property author_id
DEBUG 2022-09-08 17:56:24,777 [main][Ejb3Column.java:213] : Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Book), mappingColumn=name, insertable=true, updatable=true, unique=false}
DEBUG 2022-09-08 17:56:24,778 [main][PropertyBinder.java:174] : MetadataSourceProcessor property name with lazy=false
DEBUG 2022-09-08 17:56:24,778 [main][AbstractPropertyHolder.java:89] : Attempting to locate auto-apply AttributeConverter for property [org.example.models.Book:name]
DEBUG 2022-09-08 17:56:24,778 [main][SimpleValueBinder.java:398] : building SimpleValue for name
DEBUG 2022-09-08 17:56:24,778 [main][PropertyBinder.java:265] : Building property name
DEBUG 2022-09-08 17:56:24,779 [main][SimpleValueBinder.java:443] : Starting fillSimpleValue for id
DEBUG 2022-09-08 17:56:24,779 [main][SimpleValueBinder.java:443] : Starting fillSimpleValue for name
DEBUG 2022-09-08 17:56:24,779 [main][SimpleValueBinder.java:443] : Starting fillSimpleValue for salary
DEBUG 2022-09-08 17:56:24,779 [main][SimpleValueBinder.java:443] : Starting fillSimpleValue for id
DEBUG 2022-09-08 17:56:24,779 [main][SimpleValueBinder.java:443] : Starting fillSimpleValue for author_id
DEBUG 2022-09-08 17:56:24,779 [main][SimpleValueBinder.java:443] : Starting fillSimpleValue for name
DEBUG 2022-09-08 17:56:24,780 [main][PrimaryKey.java:35] : Forcing column [id] to be non-null as it is part of the primary key for table [author]
DEBUG 2022-09-08 17:56:24,781 [main][PrimaryKey.java:35] : Forcing column [id] to be non-null as it is part of the primary key for table [book]
DEBUG 2022-09-08 17:56:24,800 [main][SessionFactoryImpl.java:197] : Building session factory
DEBUG 2022-09-08 17:56:24,801 [main][Settings.java:69] : SessionFactory name : null
DEBUG 2022-09-08 17:56:24,801 [main][Settings.java:70] : Automatic flush during beforeCompletion(): enabled
DEBUG 2022-09-08 17:56:24,801 [main][Settings.java:71] : Automatic session close at end of transaction: disabled
DEBUG 2022-09-08 17:56:24,801 [main][Settings.java:73] : Statistics: disabled
DEBUG 2022-09-08 17:56:24,801 [main][Settings.java:75] : Deleted entity synthetic identifier rollback: disabled
DEBUG 2022-09-08 17:56:24,801 [main][Settings.java:76] : Default entity-mode: pojo
DEBUG 2022-09-08 17:56:24,801 [main][Settings.java:77] : Check Nullability in Core (should be disabled when Bean Validation is on): enabled
DEBUG 2022-09-08 17:56:24,802 [main][Settings.java:78] : Allow initialization of lazy state outside session : disabled
DEBUG 2022-09-08 17:56:24,802 [main][Settings.java:80] : Using BatchFetchStyle : LEGACY
DEBUG 2022-09-08 17:56:24,802 [main][Settings.java:81] : Default batch fetch size: -1
DEBUG 2022-09-08 17:56:24,802 [main][Settings.java:82] : Maximum outer join fetch depth: 2
DEBUG 2022-09-08 17:56:24,802 [main][Settings.java:83] : Default null ordering: NONE
DEBUG 2022-09-08 17:56:24,802 [main][Settings.java:84] : Order SQL updates by primary key: disabled
DEBUG 2022-09-08 17:56:24,802 [main][Settings.java:85] : Order SQL inserts for batching: disabled
DEBUG 2022-09-08 17:56:24,802 [main][Settings.java:87] : multi-tenancy strategy : NONE
DEBUG 2022-09-08 17:56:24,802 [main][Settings.java:89] : JTA Track by Thread: enabled
DEBUG 2022-09-08 17:56:24,802 [main][Settings.java:91] : Query language substitutions: {}
DEBUG 2022-09-08 17:56:24,802 [main][Settings.java:92] : JPA query language strict compliance: disabled
DEBUG 2022-09-08 17:56:24,803 [main][Settings.java:93] : Named query checking : enabled
DEBUG 2022-09-08 17:56:24,803 [main][Settings.java:95] : Second-level cache: enabled
DEBUG 2022-09-08 17:56:24,803 [main][Settings.java:96] : Second-level query cache: disabled
DEBUG 2022-09-08 17:56:24,803 [main][Settings.java:97] : Second-level query cache factory: org.hibernate.cache.internal.StandardQueryCacheFactory@25f30ad
DEBUG 2022-09-08 17:56:24,803 [main][Settings.java:98] : Second-level cache region prefix: null
DEBUG 2022-09-08 17:56:24,803 [main][Settings.java:99] : Optimize second-level cache for minimal puts: disabled
DEBUG 2022-09-08 17:56:24,803 [main][Settings.java:100] : Structured second-level cache entries: disabled
DEBUG 2022-09-08 17:56:24,803 [main][Settings.java:101] : Second-level cache direct-reference entries: disabled
DEBUG 2022-09-08 17:56:24,803 [main][Settings.java:102] : Automatic eviction of collection cache: disabled
DEBUG 2022-09-08 17:56:24,803 [main][Settings.java:104] : JDBC batch size: 15
DEBUG 2022-09-08 17:56:24,803 [main][Settings.java:105] : JDBC batch updates for versioned data: enabled
DEBUG 2022-09-08 17:56:24,803 [main][Settings.java:106] : Scrollable result sets: enabled
DEBUG 2022-09-08 17:56:24,804 [main][Settings.java:107] : Wrap result sets: disabled
DEBUG 2022-09-08 17:56:24,804 [main][Settings.java:108] : JDBC3 getGeneratedKeys(): enabled
DEBUG 2022-09-08 17:56:24,804 [main][Settings.java:109] : JDBC result set fetch size: null
DEBUG 2022-09-08 17:56:24,804 [main][Settings.java:110] : Connection release mode: AFTER_TRANSACTION
DEBUG 2022-09-08 17:56:24,804 [main][Settings.java:111] : Generate SQL with comments: disabled
DEBUG 2022-09-08 17:56:24,825 [main][SessionFactoryImpl.java:252] : Session factory constructed with filter configurations : {}
DEBUG 2022-09-08 17:56:24,826 [main][SessionFactoryImpl.java:253] : Instantiating session factory with properties: {awt.toolkit=sun.lwawt.macosx.LWCToolkit, java.specification.version=11, file.encoding.pkg=sun.io, jdk.extensions.version=11.0.15.0, sun.jnu.encoding=UTF-8, hibernate.dialect=org.hibernate.dialect.MySQLDialect, java.class.path=/Users/vdonets/IdeaProjects/testmaven/target/classes:/Users/vdonets/.m2/repository/org/hibernate/hibernate-core/5.2.2.Final/hibernate-core-5.2.2.Final.jar:/Users/vdonets/.m2/repository/org/jboss/logging/jboss-logging/3.3.0.Final/jboss-logging-3.3.0.Final.jar:/Users/vdonets/.m2/repository/org/hibernate/javax/persistence/hibernate-jpa-2.1-api/1.0.0.Final/hibernate-jpa-2.1-api-1.0.0.Final.jar:/Users/vdonets/.m2/repository/org/javassist/javassist/3.20.0-GA/javassist-3.20.0-GA.jar:/Users/vdonets/.m2/repository/antlr/antlr/2.7.7/antlr-2.7.7.jar:/Users/vdonets/.m2/repository/org/apache/geronimo/specs/geronimo-jta_1.1_spec/1.1.1/geronimo-jta_1.1_spec-1.1.1.jar:/Users/vdonets/.m2/repository/org/jboss/jandex/2.0.0.Final/jandex-2.0.0.Final.jar:/Users/vdonets/.m2/repository/com/fasterxml/classmate/1.3.0/classmate-1.3.0.jar:/Users/vdonets/.m2/repository/dom4j/dom4j/1.6.1/dom4j-1.6.1.jar:/Users/vdonets/.m2/repository/org/hibernate/common/hibernate-commons-annotations/5.0.1.Final/hibernate-commons-annotations-5.0.1.Final.jar:/Users/vdonets/.m2/repository/javax/enterprise/cdi-api/1.1/cdi-api-1.1.jar:/Users/vdonets/.m2/repository/javax/el/el-api/2.2/el-api-2.2.jar:/Users/vdonets/.m2/repository/org/jboss/spec/javax/interceptor/jboss-interceptors-api_1.1_spec/1.0.0.Beta1/jboss-interceptors-api_1.1_spec-1.0.0.Beta1.jar:/Users/vdonets/.m2/repository/javax/annotation/jsr250-api/1.0/jsr250-api-1.0.jar:/Users/vdonets/.m2/repository/javax/inject/javax.inject/1/javax.inject-1.jar:/Users/vdonets/.m2/repository/mysql/mysql-connector-java/8.0.29/mysql-connector-java-8.0.29.jar:/Users/vdonets/.m2/repository/com/google/protobuf/protobuf-java/3.19.4/protobuf-java-3.19.4.jar:/Users/vdonets/.m2/repository/jakarta/xml/bind/jakarta.xml.bind-api/2.3.2/jakarta.xml.bind-api-2.3.2.jar:/Users/vdonets/.m2/repository/jakarta/activation/jakarta.activation-api/1.2.1/jakarta.activation-api-1.2.1.jar:/Users/vdonets/.m2/repository/org/glassfish/jaxb/jaxb-runtime/2.3.2/jaxb-runtime-2.3.2.jar:/Users/vdonets/.m2/repository/org/glassfish/jaxb/txw2/2.3.2/txw2-2.3.2.jar:/Users/vdonets/.m2/repository/com/sun/istack/istack-commons-runtime/3.0.8/istack-commons-runtime-3.0.8.jar:/Users/vdonets/.m2/repository/org/jvnet/staxex/stax-ex/1.8.1/stax-ex-1.8.1.jar:/Users/vdonets/.m2/repository/com/sun/xml/fastinfoset/FastInfoset/1.2.16/FastInfoset-1.2.16.jar:/Users/vdonets/.m2/repository/log4j/log4j/1.2.14/log4j-1.2.14.jar:/Applications/IntelliJ IDEA.app/Contents/lib/idea_rt.jar:/Users/vdonets/Library/Caches/JetBrains/IntelliJIdea2022.1/captureAgent/debugger-agent.jar, java.vm.vendor=Eclipse OpenJ9, sun.arch.data.model=64, com.ibm.vm.bitmode=64, hbm2ddl.auto=create-drop, user.variant=, com.ibm.oti.vm.library.version=29, java.vendor.url=https://www.ibm.com/semeru-runtimes, user.timezone=Europe/Warsaw, java.vm.specification.version=11, os.name=Mac OS X, sun.java.launcher=SUN_STANDARD, user.country=US, sun.boot.library.path=/Users/vdonets/Library/Java/JavaVirtualMachines/semeru-11.0.15/Contents/Home/lib/default:/Users/vdonets/Library/Java/JavaVirtualMachines/semeru-11.0.15/Contents/Home/lib, sun.java.command=org.example.Main, sun.cpu.endian=little, user.home=/Users/vdonets, user.language=en, java.specification.vendor=Oracle Corporation, java.version.date=2022-04-19, java.home=/Users/vdonets/Library/Java/JavaVirtualMachines/semeru-11.0.15/Contents/Home, ibm.signalhandling.rs=false, jdk.extensions.name=Extensions for OpenJDK for Eclipse OpenJ9, file.separator=/, line.separator=
, java.specification.name=Java Platform API Specification, java.vm.specification.vendor=Oracle Corporation, intellij.debug.agent=true, java.compiler=j9jit29, com.ibm.util.extralibs.properties=, java.awt.graphicsenv=sun.awt.CGraphicsEnvironment, com.ibm.oti.configuration=scar, com.ibm.oti.shared.enabled=false, hibernate.hbm2ddl.auto=create-drop, com.ibm.oti.vm.bootstrap.library.path=/Users/vdonets/Library/Java/JavaVirtualMachines/semeru-11.0.15/Contents/Home/lib/default:/Users/vdonets/Library/Java/JavaVirtualMachines/semeru-11.0.15/Contents/Home/lib, com.ibm.cpu.endian=little, java.fullversion=11.0.15-ea+10
JRE 11 Mac OS X aarch64-64-Bit 20220422_36 (JIT enabled, AOT enabled)
OpenJ9   - 9a84ec34e
OMR      - ab24b6666
JCL      - b7b5b42ea6 based on jdk-11.0.15+10, java.runtime.version=11.0.15-ea+10, user.name=vdonets, path.separator=:, hibernate.connection.username=root, os.version=12.5, java.runtime.name=IBM Semeru Runtime Open Edition, hibernate.connection.url=jdbc:mysql://localhost:3306/classicmodels?serverTimezone=UTC, connection.pool_size=5, ibm.signalhandling.sigint=true, file.encoding=UTF-8, java.vm.name=Eclipse OpenJ9 VM, hibernate.show_sql=true, java.vendor.version=11.0.15.0, ibm.signalhandling.sigchain=true, show_sql=true, hibernate.connection.driver_class=com.mysql.cj.jdbc.Driver, java.vendor.url.bug=https://github.com/ibmruntimes/Semeru-Runtimes/issues, java.io.tmpdir=/var/folders/wv/6c3_66yd6kq3r7z477kwz4lr0000gn/T/, java.version=11.0.15-ea, jboss.modules.system.pkgs=com.intellij.rt, com.ibm.system.agent.path=/Users/vdonets/Library/Java/JavaVirtualMachines/semeru-11.0.15/Contents/Home/lib, user.dir=/Users/vdonets/IdeaProjects/testmaven, os.arch=aarch64, java.vm.specification.name=Java Virtual Machine Specification, java.awt.printerjob=sun.lwawt.macosx.CPrinterJob, hibernate.connection.password=****, os.encoding=UTF-8, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@6caf6d34, java.library.path=/Users/vdonets/Library/Java/JavaVirtualMachines/semeru-11.0.15/Contents/Home/lib/default:/Users/vdonets/Library/Java/JavaVirtualMachines/semeru-11.0.15/Contents/Home/lib:/usr/lib, java.vendor=IBM Corporation, java.vm.info=JRE 11 Mac OS X aarch64-64-Bit 20220422_36 (JIT enabled, AOT enabled)
OpenJ9   - 9a84ec34e
OMR      - ab24b6666
JCL      - b7b5b42ea6 based on jdk-11.0.15+10, java.vm.version=openj9-0.32.0, ibm.system.encoding=UTF-8, hibernate.bytecode.use_reflection_optimizer=false, com.ibm.jcl.checkClassPath=, sun.io.unicode.encoding=UnicodeLittle, hibernate.connection.pool_size=5, java.class.version=55.0}
DEBUG 2022-09-08 17:56:24,830 [main][JaccIntegrator.java:80] : Skipping JACC integration as it was not enabled
DEBUG 2022-09-08 17:56:24,831 [main][SessionFactoryImpl.java:292] : Instantiated session factory
DEBUG 2022-09-08 17:56:24,850 [main][ClassLoaderAccessImpl.java:55] : Not known whether passed class name [org.example.models.Book] is safe
DEBUG 2022-09-08 17:56:24,850 [main][ClassLoaderAccessImpl.java:57] : No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.models.Book
DEBUG 2022-09-08 17:56:24,855 [main][ClassLoaderAccessImpl.java:55] : Not known whether passed class name [org.example.models.Book] is safe
DEBUG 2022-09-08 17:56:24,856 [main][ClassLoaderAccessImpl.java:57] : No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.models.Book
DEBUG 2022-09-08 17:56:24,879 [main][ClassLoaderAccessImpl.java:55] : Not known whether passed class name [org.example.models.Author] is safe
DEBUG 2022-09-08 17:56:24,879 [main][ClassLoaderAccessImpl.java:57] : No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.models.Author
DEBUG 2022-09-08 17:56:24,879 [main][ClassLoaderAccessImpl.java:55] : Not known whether passed class name [org.example.models.Author] is safe
DEBUG 2022-09-08 17:56:24,880 [main][ClassLoaderAccessImpl.java:57] : No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.models.Author
DEBUG 2022-09-08 17:56:24,884 [main][AbstractEntityPersister.java:3529] : Static SQL for entity: org.example.models.Book
DEBUG 2022-09-08 17:56:24,884 [main][AbstractEntityPersister.java:3534] :  Version select: select id from Book where id =?
DEBUG 2022-09-08 17:56:24,884 [main][AbstractEntityPersister.java:3537] :  Snapshot select: select book_.id, book_.author_id as author_i2_1_, book_.name as name3_1_ from Book book_ where book_.id=?
DEBUG 2022-09-08 17:56:24,884 [main][DelegatingBasicLogger.java:394] :  Insert 0: insert into Book (author_id, name, id) values (?, ?, ?)
DEBUG 2022-09-08 17:56:24,885 [main][DelegatingBasicLogger.java:394] :  Update 0: update Book set author_id=?, name=? where id=?
DEBUG 2022-09-08 17:56:24,885 [main][DelegatingBasicLogger.java:394] :  Delete 0: delete from Book where id=?
DEBUG 2022-09-08 17:56:24,894 [main][QuerySpacesImpl.java:174] : Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5f7fa86d]
DEBUG 2022-09-08 17:56:24,895 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : author_id
DEBUG 2022-09-08 17:56:24,895 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : name
DEBUG 2022-09-08 17:56:24,895 [main][FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150] : Building LoadPlan...
DEBUG 2022-09-08 17:56:24,903 [main][LoadQueryJoinAndFetchProcessor.java:100] : processing queryspace <gen:0>
DEBUG 2022-09-08 17:56:24,910 [main][LoadPlanTreePrinter.java:55] : LoadPlan(entity=org.example.models.Book)
    - Returns
       - EntityReturnImpl(entity=org.example.models.Book, querySpaceUid=<gen:0>, path=org.example.models.Book)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=org.example.models.Book)
          - SQL table alias mapping - book0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

DEBUG 2022-09-08 17:56:24,912 [main][EntityLoader.java:115] : Static select for entity org.example.models.Book [NONE]: select book0_.id as id1_1_0_, book0_.author_id as author_i2_1_0_, book0_.name as name3_1_0_ from Book book0_ where book0_.id=?
DEBUG 2022-09-08 17:56:24,912 [main][QuerySpacesImpl.java:174] : Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@51c31bf1]
DEBUG 2022-09-08 17:56:24,912 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : author_id
DEBUG 2022-09-08 17:56:24,912 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : name
DEBUG 2022-09-08 17:56:24,912 [main][FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150] : Building LoadPlan...
DEBUG 2022-09-08 17:56:24,913 [main][LoadQueryJoinAndFetchProcessor.java:100] : processing queryspace <gen:0>
DEBUG 2022-09-08 17:56:24,913 [main][LoadPlanTreePrinter.java:55] : LoadPlan(entity=org.example.models.Book)
    - Returns
       - EntityReturnImpl(entity=org.example.models.Book, querySpaceUid=<gen:0>, path=org.example.models.Book)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=org.example.models.Book)
          - SQL table alias mapping - book0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

DEBUG 2022-09-08 17:56:24,913 [main][EntityLoader.java:115] : Static select for entity org.example.models.Book [READ]: select book0_.id as id1_1_0_, book0_.author_id as author_i2_1_0_, book0_.name as name3_1_0_ from Book book0_ where book0_.id=?
DEBUG 2022-09-08 17:56:24,913 [main][QuerySpacesImpl.java:174] : Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@9313176b]
DEBUG 2022-09-08 17:56:24,913 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : author_id
DEBUG 2022-09-08 17:56:24,914 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : name
DEBUG 2022-09-08 17:56:24,914 [main][FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150] : Building LoadPlan...
DEBUG 2022-09-08 17:56:24,914 [main][LoadQueryJoinAndFetchProcessor.java:100] : processing queryspace <gen:0>
DEBUG 2022-09-08 17:56:24,914 [main][LoadPlanTreePrinter.java:55] : LoadPlan(entity=org.example.models.Book)
    - Returns
       - EntityReturnImpl(entity=org.example.models.Book, querySpaceUid=<gen:0>, path=org.example.models.Book)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=org.example.models.Book)
          - SQL table alias mapping - book0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

DEBUG 2022-09-08 17:56:24,914 [main][EntityLoader.java:115] : Static select for entity org.example.models.Book [UPGRADE]: select book0_.id as id1_1_0_, book0_.author_id as author_i2_1_0_, book0_.name as name3_1_0_ from Book book0_ where book0_.id=? for update
DEBUG 2022-09-08 17:56:24,914 [main][QuerySpacesImpl.java:174] : Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@91700b0f]
DEBUG 2022-09-08 17:56:24,915 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : author_id
DEBUG 2022-09-08 17:56:24,915 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : name
DEBUG 2022-09-08 17:56:24,915 [main][FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150] : Building LoadPlan...
DEBUG 2022-09-08 17:56:24,915 [main][LoadQueryJoinAndFetchProcessor.java:100] : processing queryspace <gen:0>
DEBUG 2022-09-08 17:56:24,916 [main][LoadPlanTreePrinter.java:55] : LoadPlan(entity=org.example.models.Book)
    - Returns
       - EntityReturnImpl(entity=org.example.models.Book, querySpaceUid=<gen:0>, path=org.example.models.Book)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=org.example.models.Book)
          - SQL table alias mapping - book0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

DEBUG 2022-09-08 17:56:24,916 [main][EntityLoader.java:115] : Static select for entity org.example.models.Book [UPGRADE_NOWAIT]: select book0_.id as id1_1_0_, book0_.author_id as author_i2_1_0_, book0_.name as name3_1_0_ from Book book0_ where book0_.id=? for update
DEBUG 2022-09-08 17:56:24,916 [main][QuerySpacesImpl.java:174] : Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@d77ae95c]
DEBUG 2022-09-08 17:56:24,916 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : author_id
DEBUG 2022-09-08 17:56:24,916 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : name
DEBUG 2022-09-08 17:56:24,916 [main][FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150] : Building LoadPlan...
DEBUG 2022-09-08 17:56:24,916 [main][LoadQueryJoinAndFetchProcessor.java:100] : processing queryspace <gen:0>
DEBUG 2022-09-08 17:56:24,917 [main][LoadPlanTreePrinter.java:55] : LoadPlan(entity=org.example.models.Book)
    - Returns
       - EntityReturnImpl(entity=org.example.models.Book, querySpaceUid=<gen:0>, path=org.example.models.Book)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=org.example.models.Book)
          - SQL table alias mapping - book0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

DEBUG 2022-09-08 17:56:24,917 [main][EntityLoader.java:115] : Static select for entity org.example.models.Book [UPGRADE_SKIPLOCKED]: select book0_.id as id1_1_0_, book0_.author_id as author_i2_1_0_, book0_.name as name3_1_0_ from Book book0_ where book0_.id=? for update
DEBUG 2022-09-08 17:56:24,917 [main][QuerySpacesImpl.java:174] : Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@d5123598]
DEBUG 2022-09-08 17:56:24,917 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : author_id
DEBUG 2022-09-08 17:56:24,917 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : name
DEBUG 2022-09-08 17:56:24,917 [main][FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150] : Building LoadPlan...
DEBUG 2022-09-08 17:56:24,917 [main][LoadQueryJoinAndFetchProcessor.java:100] : processing queryspace <gen:0>
DEBUG 2022-09-08 17:56:24,919 [main][LoadPlanTreePrinter.java:55] : LoadPlan(entity=org.example.models.Book)
    - Returns
       - EntityReturnImpl(entity=org.example.models.Book, querySpaceUid=<gen:0>, path=org.example.models.Book)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=org.example.models.Book)
          - SQL table alias mapping - book0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

DEBUG 2022-09-08 17:56:24,919 [main][EntityLoader.java:115] : Static select for entity org.example.models.Book [FORCE]: select book0_.id as id1_1_0_, book0_.author_id as author_i2_1_0_, book0_.name as name3_1_0_ from Book book0_ where book0_.id=? for update
DEBUG 2022-09-08 17:56:24,919 [main][QuerySpacesImpl.java:174] : Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@9682af44]
DEBUG 2022-09-08 17:56:24,919 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : author_id
DEBUG 2022-09-08 17:56:24,919 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : name
DEBUG 2022-09-08 17:56:24,919 [main][FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150] : Building LoadPlan...
DEBUG 2022-09-08 17:56:24,920 [main][LoadQueryJoinAndFetchProcessor.java:100] : processing queryspace <gen:0>
DEBUG 2022-09-08 17:56:24,920 [main][LoadPlanTreePrinter.java:55] : LoadPlan(entity=org.example.models.Book)
    - Returns
       - EntityReturnImpl(entity=org.example.models.Book, querySpaceUid=<gen:0>, path=org.example.models.Book)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=org.example.models.Book)
          - SQL table alias mapping - book0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

DEBUG 2022-09-08 17:56:24,920 [main][EntityLoader.java:115] : Static select for entity org.example.models.Book [PESSIMISTIC_READ]: select book0_.id as id1_1_0_, book0_.author_id as author_i2_1_0_, book0_.name as name3_1_0_ from Book book0_ where book0_.id=? lock in share mode
DEBUG 2022-09-08 17:56:24,920 [main][QuerySpacesImpl.java:174] : Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2fad2732]
DEBUG 2022-09-08 17:56:24,920 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : author_id
DEBUG 2022-09-08 17:56:24,921 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : name
DEBUG 2022-09-08 17:56:24,921 [main][FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150] : Building LoadPlan...
DEBUG 2022-09-08 17:56:24,921 [main][LoadQueryJoinAndFetchProcessor.java:100] : processing queryspace <gen:0>
DEBUG 2022-09-08 17:56:24,921 [main][LoadPlanTreePrinter.java:55] : LoadPlan(entity=org.example.models.Book)
    - Returns
       - EntityReturnImpl(entity=org.example.models.Book, querySpaceUid=<gen:0>, path=org.example.models.Book)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=org.example.models.Book)
          - SQL table alias mapping - book0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

DEBUG 2022-09-08 17:56:24,921 [main][EntityLoader.java:115] : Static select for entity org.example.models.Book [PESSIMISTIC_WRITE]: select book0_.id as id1_1_0_, book0_.author_id as author_i2_1_0_, book0_.name as name3_1_0_ from Book book0_ where book0_.id=? for update
DEBUG 2022-09-08 17:56:24,921 [main][QuerySpacesImpl.java:174] : Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@e6bc822f]
DEBUG 2022-09-08 17:56:24,922 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : author_id
DEBUG 2022-09-08 17:56:24,922 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : name
DEBUG 2022-09-08 17:56:24,922 [main][FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150] : Building LoadPlan...
DEBUG 2022-09-08 17:56:24,922 [main][LoadQueryJoinAndFetchProcessor.java:100] : processing queryspace <gen:0>
DEBUG 2022-09-08 17:56:24,922 [main][LoadPlanTreePrinter.java:55] : LoadPlan(entity=org.example.models.Book)
    - Returns
       - EntityReturnImpl(entity=org.example.models.Book, querySpaceUid=<gen:0>, path=org.example.models.Book)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=org.example.models.Book)
          - SQL table alias mapping - book0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

DEBUG 2022-09-08 17:56:24,922 [main][EntityLoader.java:115] : Static select for entity org.example.models.Book [PESSIMISTIC_FORCE_INCREMENT]: select book0_.id as id1_1_0_, book0_.author_id as author_i2_1_0_, book0_.name as name3_1_0_ from Book book0_ where book0_.id=? for update
DEBUG 2022-09-08 17:56:24,922 [main][QuerySpacesImpl.java:174] : Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2a572f3b]
DEBUG 2022-09-08 17:56:24,923 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : author_id
DEBUG 2022-09-08 17:56:24,923 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : name
DEBUG 2022-09-08 17:56:24,923 [main][FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150] : Building LoadPlan...
DEBUG 2022-09-08 17:56:24,923 [main][LoadQueryJoinAndFetchProcessor.java:100] : processing queryspace <gen:0>
DEBUG 2022-09-08 17:56:24,923 [main][LoadPlanTreePrinter.java:55] : LoadPlan(entity=org.example.models.Book)
    - Returns
       - EntityReturnImpl(entity=org.example.models.Book, querySpaceUid=<gen:0>, path=org.example.models.Book)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=org.example.models.Book)
          - SQL table alias mapping - book0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

DEBUG 2022-09-08 17:56:24,924 [main][EntityLoader.java:115] : Static select for entity org.example.models.Book [OPTIMISTIC]: select book0_.id as id1_1_0_, book0_.author_id as author_i2_1_0_, book0_.name as name3_1_0_ from Book book0_ where book0_.id=?
DEBUG 2022-09-08 17:56:24,924 [main][QuerySpacesImpl.java:174] : Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@bf4c3309]
DEBUG 2022-09-08 17:56:24,924 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : author_id
DEBUG 2022-09-08 17:56:24,924 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : name
DEBUG 2022-09-08 17:56:24,924 [main][FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150] : Building LoadPlan...
DEBUG 2022-09-08 17:56:24,924 [main][LoadQueryJoinAndFetchProcessor.java:100] : processing queryspace <gen:0>
DEBUG 2022-09-08 17:56:24,925 [main][LoadPlanTreePrinter.java:55] : LoadPlan(entity=org.example.models.Book)
    - Returns
       - EntityReturnImpl(entity=org.example.models.Book, querySpaceUid=<gen:0>, path=org.example.models.Book)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=org.example.models.Book)
          - SQL table alias mapping - book0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

DEBUG 2022-09-08 17:56:24,925 [main][EntityLoader.java:115] : Static select for entity org.example.models.Book [OPTIMISTIC_FORCE_INCREMENT]: select book0_.id as id1_1_0_, book0_.author_id as author_i2_1_0_, book0_.name as name3_1_0_ from Book book0_ where book0_.id=?
DEBUG 2022-09-08 17:56:24,932 [main][CascadeEntityLoader.java:38] : Static select for action ACTION_MERGE on entity org.example.models.Book: select book0_.id as id1_1_0_, book0_.author_id as author_i2_1_0_, book0_.name as name3_1_0_ from Book book0_ where book0_.id=?
DEBUG 2022-09-08 17:56:24,933 [main][CascadeEntityLoader.java:38] : Static select for action ACTION_REFRESH on entity org.example.models.Book: select book0_.id as id1_1_0_, book0_.author_id as author_i2_1_0_, book0_.name as name3_1_0_ from Book book0_ where book0_.id=?
DEBUG 2022-09-08 17:56:24,934 [main][AbstractEntityPersister.java:3529] : Static SQL for entity: org.example.models.Author
DEBUG 2022-09-08 17:56:24,934 [main][AbstractEntityPersister.java:3534] :  Version select: select id from Author where id =?
DEBUG 2022-09-08 17:56:24,934 [main][AbstractEntityPersister.java:3537] :  Snapshot select: select author_.id, author_.name as name2_0_, author_.salary as salary3_0_ from Author author_ where author_.id=?
DEBUG 2022-09-08 17:56:24,934 [main][DelegatingBasicLogger.java:394] :  Insert 0: insert into Author (name, salary, id) values (?, ?, ?)
DEBUG 2022-09-08 17:56:24,934 [main][DelegatingBasicLogger.java:394] :  Update 0: update Author set name=?, salary=? where id=?
DEBUG 2022-09-08 17:56:24,934 [main][DelegatingBasicLogger.java:394] :  Delete 0: delete from Author where id=?
DEBUG 2022-09-08 17:56:24,934 [main][AbstractEntityPersister.java:3545] :  Identity insert: insert into Author (name, salary) values (?, ?)
DEBUG 2022-09-08 17:56:24,934 [main][QuerySpacesImpl.java:174] : Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@82a57e74]
DEBUG 2022-09-08 17:56:24,935 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : name
DEBUG 2022-09-08 17:56:24,935 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : salary
DEBUG 2022-09-08 17:56:24,935 [main][FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150] : Building LoadPlan...
DEBUG 2022-09-08 17:56:24,935 [main][LoadQueryJoinAndFetchProcessor.java:100] : processing queryspace <gen:0>
DEBUG 2022-09-08 17:56:24,935 [main][LoadPlanTreePrinter.java:55] : LoadPlan(entity=org.example.models.Author)
    - Returns
       - EntityReturnImpl(entity=org.example.models.Author, querySpaceUid=<gen:0>, path=org.example.models.Author)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=org.example.models.Author)
          - SQL table alias mapping - author0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

DEBUG 2022-09-08 17:56:24,936 [main][EntityLoader.java:115] : Static select for entity org.example.models.Author [NONE]: select author0_.id as id1_0_0_, author0_.name as name2_0_0_, author0_.salary as salary3_0_0_ from Author author0_ where author0_.id=?
DEBUG 2022-09-08 17:56:24,936 [main][QuerySpacesImpl.java:174] : Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@875d6fcd]
DEBUG 2022-09-08 17:56:24,936 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : name
DEBUG 2022-09-08 17:56:24,936 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : salary
DEBUG 2022-09-08 17:56:24,936 [main][FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150] : Building LoadPlan...
DEBUG 2022-09-08 17:56:24,937 [main][LoadQueryJoinAndFetchProcessor.java:100] : processing queryspace <gen:0>
DEBUG 2022-09-08 17:56:24,937 [main][LoadPlanTreePrinter.java:55] : LoadPlan(entity=org.example.models.Author)
    - Returns
       - EntityReturnImpl(entity=org.example.models.Author, querySpaceUid=<gen:0>, path=org.example.models.Author)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=org.example.models.Author)
          - SQL table alias mapping - author0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

DEBUG 2022-09-08 17:56:24,937 [main][EntityLoader.java:115] : Static select for entity org.example.models.Author [READ]: select author0_.id as id1_0_0_, author0_.name as name2_0_0_, author0_.salary as salary3_0_0_ from Author author0_ where author0_.id=?
DEBUG 2022-09-08 17:56:24,937 [main][QuerySpacesImpl.java:174] : Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3878c847]
DEBUG 2022-09-08 17:56:24,938 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : name
DEBUG 2022-09-08 17:56:24,938 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : salary
DEBUG 2022-09-08 17:56:24,938 [main][FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150] : Building LoadPlan...
DEBUG 2022-09-08 17:56:24,938 [main][LoadQueryJoinAndFetchProcessor.java:100] : processing queryspace <gen:0>
DEBUG 2022-09-08 17:56:24,938 [main][LoadPlanTreePrinter.java:55] : LoadPlan(entity=org.example.models.Author)
    - Returns
       - EntityReturnImpl(entity=org.example.models.Author, querySpaceUid=<gen:0>, path=org.example.models.Author)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=org.example.models.Author)
          - SQL table alias mapping - author0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

DEBUG 2022-09-08 17:56:24,938 [main][EntityLoader.java:115] : Static select for entity org.example.models.Author [UPGRADE]: select author0_.id as id1_0_0_, author0_.name as name2_0_0_, author0_.salary as salary3_0_0_ from Author author0_ where author0_.id=? for update
DEBUG 2022-09-08 17:56:24,938 [main][QuerySpacesImpl.java:174] : Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@82c0f6fa]
DEBUG 2022-09-08 17:56:24,947 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : name
DEBUG 2022-09-08 17:56:24,947 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : salary
DEBUG 2022-09-08 17:56:24,947 [main][FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150] : Building LoadPlan...
DEBUG 2022-09-08 17:56:24,947 [main][LoadQueryJoinAndFetchProcessor.java:100] : processing queryspace <gen:0>
DEBUG 2022-09-08 17:56:24,947 [main][LoadPlanTreePrinter.java:55] : LoadPlan(entity=org.example.models.Author)
    - Returns
       - EntityReturnImpl(entity=org.example.models.Author, querySpaceUid=<gen:0>, path=org.example.models.Author)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=org.example.models.Author)
          - SQL table alias mapping - author0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

DEBUG 2022-09-08 17:56:24,948 [main][EntityLoader.java:115] : Static select for entity org.example.models.Author [UPGRADE_NOWAIT]: select author0_.id as id1_0_0_, author0_.name as name2_0_0_, author0_.salary as salary3_0_0_ from Author author0_ where author0_.id=? for update
DEBUG 2022-09-08 17:56:24,948 [main][QuerySpacesImpl.java:174] : Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@bea8d6ad]
DEBUG 2022-09-08 17:56:24,948 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : name
DEBUG 2022-09-08 17:56:24,948 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : salary
DEBUG 2022-09-08 17:56:24,948 [main][FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150] : Building LoadPlan...
DEBUG 2022-09-08 17:56:24,949 [main][LoadQueryJoinAndFetchProcessor.java:100] : processing queryspace <gen:0>
DEBUG 2022-09-08 17:56:24,949 [main][LoadPlanTreePrinter.java:55] : LoadPlan(entity=org.example.models.Author)
    - Returns
       - EntityReturnImpl(entity=org.example.models.Author, querySpaceUid=<gen:0>, path=org.example.models.Author)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=org.example.models.Author)
          - SQL table alias mapping - author0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

DEBUG 2022-09-08 17:56:24,949 [main][EntityLoader.java:115] : Static select for entity org.example.models.Author [UPGRADE_SKIPLOCKED]: select author0_.id as id1_0_0_, author0_.name as name2_0_0_, author0_.salary as salary3_0_0_ from Author author0_ where author0_.id=? for update
DEBUG 2022-09-08 17:56:24,949 [main][QuerySpacesImpl.java:174] : Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3f5bb46d]
DEBUG 2022-09-08 17:56:24,949 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : name
DEBUG 2022-09-08 17:56:24,950 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : salary
DEBUG 2022-09-08 17:56:24,950 [main][FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150] : Building LoadPlan...
DEBUG 2022-09-08 17:56:24,950 [main][LoadQueryJoinAndFetchProcessor.java:100] : processing queryspace <gen:0>
DEBUG 2022-09-08 17:56:24,950 [main][LoadPlanTreePrinter.java:55] : LoadPlan(entity=org.example.models.Author)
    - Returns
       - EntityReturnImpl(entity=org.example.models.Author, querySpaceUid=<gen:0>, path=org.example.models.Author)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=org.example.models.Author)
          - SQL table alias mapping - author0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

DEBUG 2022-09-08 17:56:24,951 [main][EntityLoader.java:115] : Static select for entity org.example.models.Author [FORCE]: select author0_.id as id1_0_0_, author0_.name as name2_0_0_, author0_.salary as salary3_0_0_ from Author author0_ where author0_.id=? for update
DEBUG 2022-09-08 17:56:24,951 [main][QuerySpacesImpl.java:174] : Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3d31afb3]
DEBUG 2022-09-08 17:56:24,951 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : name
DEBUG 2022-09-08 17:56:24,951 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : salary
DEBUG 2022-09-08 17:56:24,952 [main][FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150] : Building LoadPlan...
DEBUG 2022-09-08 17:56:24,952 [main][LoadQueryJoinAndFetchProcessor.java:100] : processing queryspace <gen:0>
DEBUG 2022-09-08 17:56:24,952 [main][LoadPlanTreePrinter.java:55] : LoadPlan(entity=org.example.models.Author)
    - Returns
       - EntityReturnImpl(entity=org.example.models.Author, querySpaceUid=<gen:0>, path=org.example.models.Author)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=org.example.models.Author)
          - SQL table alias mapping - author0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

DEBUG 2022-09-08 17:56:24,953 [main][EntityLoader.java:115] : Static select for entity org.example.models.Author [PESSIMISTIC_READ]: select author0_.id as id1_0_0_, author0_.name as name2_0_0_, author0_.salary as salary3_0_0_ from Author author0_ where author0_.id=? lock in share mode
DEBUG 2022-09-08 17:56:24,953 [main][QuerySpacesImpl.java:174] : Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@dc1c5c33]
DEBUG 2022-09-08 17:56:24,953 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : name
DEBUG 2022-09-08 17:56:24,953 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : salary
DEBUG 2022-09-08 17:56:24,954 [main][FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150] : Building LoadPlan...
DEBUG 2022-09-08 17:56:24,954 [main][LoadQueryJoinAndFetchProcessor.java:100] : processing queryspace <gen:0>
DEBUG 2022-09-08 17:56:24,954 [main][LoadPlanTreePrinter.java:55] : LoadPlan(entity=org.example.models.Author)
    - Returns
       - EntityReturnImpl(entity=org.example.models.Author, querySpaceUid=<gen:0>, path=org.example.models.Author)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=org.example.models.Author)
          - SQL table alias mapping - author0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

DEBUG 2022-09-08 17:56:24,954 [main][EntityLoader.java:115] : Static select for entity org.example.models.Author [PESSIMISTIC_WRITE]: select author0_.id as id1_0_0_, author0_.name as name2_0_0_, author0_.salary as salary3_0_0_ from Author author0_ where author0_.id=? for update
DEBUG 2022-09-08 17:56:24,954 [main][QuerySpacesImpl.java:174] : Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@99b28bd8]
DEBUG 2022-09-08 17:56:24,954 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : name
DEBUG 2022-09-08 17:56:24,955 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : salary
DEBUG 2022-09-08 17:56:24,955 [main][FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150] : Building LoadPlan...
DEBUG 2022-09-08 17:56:24,955 [main][LoadQueryJoinAndFetchProcessor.java:100] : processing queryspace <gen:0>
DEBUG 2022-09-08 17:56:24,955 [main][LoadPlanTreePrinter.java:55] : LoadPlan(entity=org.example.models.Author)
    - Returns
       - EntityReturnImpl(entity=org.example.models.Author, querySpaceUid=<gen:0>, path=org.example.models.Author)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=org.example.models.Author)
          - SQL table alias mapping - author0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

DEBUG 2022-09-08 17:56:24,955 [main][EntityLoader.java:115] : Static select for entity org.example.models.Author [PESSIMISTIC_FORCE_INCREMENT]: select author0_.id as id1_0_0_, author0_.name as name2_0_0_, author0_.salary as salary3_0_0_ from Author author0_ where author0_.id=? for update
DEBUG 2022-09-08 17:56:24,955 [main][QuerySpacesImpl.java:174] : Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@b27b0af8]
DEBUG 2022-09-08 17:56:24,956 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : name
DEBUG 2022-09-08 17:56:24,956 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : salary
DEBUG 2022-09-08 17:56:24,956 [main][FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150] : Building LoadPlan...
DEBUG 2022-09-08 17:56:24,956 [main][LoadQueryJoinAndFetchProcessor.java:100] : processing queryspace <gen:0>
DEBUG 2022-09-08 17:56:24,957 [main][LoadPlanTreePrinter.java:55] : LoadPlan(entity=org.example.models.Author)
    - Returns
       - EntityReturnImpl(entity=org.example.models.Author, querySpaceUid=<gen:0>, path=org.example.models.Author)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=org.example.models.Author)
          - SQL table alias mapping - author0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

DEBUG 2022-09-08 17:56:24,958 [main][EntityLoader.java:115] : Static select for entity org.example.models.Author [OPTIMISTIC]: select author0_.id as id1_0_0_, author0_.name as name2_0_0_, author0_.salary as salary3_0_0_ from Author author0_ where author0_.id=?
DEBUG 2022-09-08 17:56:24,958 [main][QuerySpacesImpl.java:174] : Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2eb1a741]
DEBUG 2022-09-08 17:56:24,958 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : name
DEBUG 2022-09-08 17:56:24,958 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : salary
DEBUG 2022-09-08 17:56:24,958 [main][FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150] : Building LoadPlan...
DEBUG 2022-09-08 17:56:24,958 [main][LoadQueryJoinAndFetchProcessor.java:100] : processing queryspace <gen:0>
DEBUG 2022-09-08 17:56:24,959 [main][LoadPlanTreePrinter.java:55] : LoadPlan(entity=org.example.models.Author)
    - Returns
       - EntityReturnImpl(entity=org.example.models.Author, querySpaceUid=<gen:0>, path=org.example.models.Author)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=org.example.models.Author)
          - SQL table alias mapping - author0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

DEBUG 2022-09-08 17:56:24,959 [main][EntityLoader.java:115] : Static select for entity org.example.models.Author [OPTIMISTIC_FORCE_INCREMENT]: select author0_.id as id1_0_0_, author0_.name as name2_0_0_, author0_.salary as salary3_0_0_ from Author author0_ where author0_.id=?
DEBUG 2022-09-08 17:56:24,959 [main][CascadeEntityLoader.java:38] : Static select for action ACTION_MERGE on entity org.example.models.Author: select author0_.id as id1_0_0_, author0_.name as name2_0_0_, author0_.salary as salary3_0_0_ from Author author0_ where author0_.id=?
DEBUG 2022-09-08 17:56:24,959 [main][CascadeEntityLoader.java:38] : Static select for action ACTION_REFRESH on entity org.example.models.Author: select author0_.id as id1_0_0_, author0_.name as name2_0_0_, author0_.salary as salary3_0_0_ from Author author0_ where author0_.id=?
DEBUG 2022-09-08 17:56:24,972 [main][SqlStatementLogger.java:92] : drop table if exists Author
INFO  2022-09-08 17:56:24,973 [main][DdlTransactionIsolatorNonJtaImpl.java:48] : HHH10001501: Connection obtained from JdbcConnectionAccess [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess@3be1d272] for (non-JTA) DDL execution was not in auto-commit mode; the Connection 'local transaction' will be committed and the Connection will be set into auto-commit mode.
DEBUG 2022-09-08 17:56:24,979 [main][SqlStatementLogger.java:92] : drop table if exists Book
DEBUG 2022-09-08 17:56:24,987 [main][SqlStatementLogger.java:92] : drop table if exists hibernate_sequence
DEBUG 2022-09-08 17:56:24,995 [main][SqlStatementLogger.java:92] : create table Author (id bigint not null auto_increment, name varchar(255), salary integer, primary key (id))
INFO  2022-09-08 17:56:24,996 [main][DdlTransactionIsolatorNonJtaImpl.java:48] : HHH10001501: Connection obtained from JdbcConnectionAccess [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess@6d0f5714] for (non-JTA) DDL execution was not in auto-commit mode; the Connection 'local transaction' will be committed and the Connection will be set into auto-commit mode.
DEBUG 2022-09-08 17:56:25,008 [main][SqlStatementLogger.java:92] : create table Book (id bigint not null, author_id bigint not null, name varchar(255), primary key (id))
DEBUG 2022-09-08 17:56:25,012 [main][SqlStatementLogger.java:92] : create table hibernate_sequence (next_val bigint)
DEBUG 2022-09-08 17:56:25,016 [main][SqlStatementLogger.java:92] : insert into hibernate_sequence values ( 1 )
INFO  2022-09-08 17:56:25,018 [main][SchemaCreatorImpl.java:485] : HHH000476: Executing import script 'org.hibernate.tool.schema.internal.exec.ScriptSourceInputNonExistentImpl@6840041a'
DEBUG 2022-09-08 17:56:25,019 [main][JtaPlatformInitiator.java:42] : No JtaPlatform was specified, checking resolver
DEBUG 2022-09-08 17:56:25,020 [main][JtaPlatformResolverInitiator.java:33] : No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
DEBUG 2022-09-08 17:56:25,021 [main][StandardJtaPlatformResolver.java:101] : Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
DEBUG 2022-09-08 17:56:25,021 [main][NamedQueryRepository.java:151] : Checking 0 named HQL queries
DEBUG 2022-09-08 17:56:25,022 [main][NamedQueryRepository.java:167] : Checking 0 named SQL queries
DEBUG 2022-09-08 17:56:25,022 [main][SessionFactoryRegistry.java:52] : Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@6d30bcfc
DEBUG 2022-09-08 17:56:25,023 [main][SessionFactoryRegistry.java:74] : Registering SessionFactory: 80e3af4f-3021-44f7-8415-eb6011741435 (<unnamed>)
DEBUG 2022-09-08 17:56:25,023 [main][SessionFactoryRegistry.java:81] : Not binding SessionFactory to JNDI, no JNDI name configured
DEBUG 2022-09-08 17:56:25,047 [main][StatisticsInitiator.java:82] : Statistics initialized [enabled=false]
DEBUG 2022-09-08 17:56:25,050 [main][TransactionImpl.java:55] : begin
DEBUG 2022-09-08 17:56:25,057 [main][ActionQueue.java:272] : Executing identity-insert immediately
DEBUG 2022-09-08 17:56:25,058 [main][SqlStatementLogger.java:92] : insert into Author (name, salary) values (?, ?)
DEBUG 2022-09-08 17:56:25,069 [main][IdentifierGeneratorHelper.java:78] : Natively generated identity: 1
DEBUG 2022-09-08 17:56:25,069 [main][ResourceRegistryStandardImpl.java:104] : HHH000387: ResultSet's statement was not registered
DEBUG 2022-09-08 17:56:25,070 [main][TransactionImpl.java:66] : committing
DEBUG 2022-09-08 17:56:25,071 [main][AbstractFlushingEventListener.java:132] : Processing flush-time cascades
DEBUG 2022-09-08 17:56:25,071 [main][AbstractFlushingEventListener.java:174] : Dirty checking collections
DEBUG 2022-09-08 17:56:25,071 [main][AbstractFlushingEventListener.java:106] : Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
DEBUG 2022-09-08 17:56:25,072 [main][AbstractFlushingEventListener.java:113] : Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
DEBUG 2022-09-08 17:56:25,072 [main][EntityPrinter.java:102] : Listing entities:
DEBUG 2022-09-08 17:56:25,072 [main][EntityPrinter.java:109] : org.example.models.Author{name=David Baldacci, id=1, salary=90}
DEBUG 2022-09-08 17:56:25,074 [main][LogicalConnectionManagedImpl.java:154] : Initiating JDBC connection release from afterTransaction
DEBUG 2022-09-08 17:56:25,074 [main][LogicalConnectionManagedImpl.java:154] : Initiating JDBC connection release from afterTransaction
DEBUG 2022-09-08 17:56:25,089 [main][TransactionImpl.java:55] : begin
DEBUG 2022-09-08 17:56:25,090 [main][ActionQueue.java:272] : Executing identity-insert immediately
DEBUG 2022-09-08 17:56:25,091 [main][SqlStatementLogger.java:92] : insert into Author (name, salary) values (?, ?)
DEBUG 2022-09-08 17:56:25,092 [main][IdentifierGeneratorHelper.java:78] : Natively generated identity: 2
DEBUG 2022-09-08 17:56:25,092 [main][ResourceRegistryStandardImpl.java:104] : HHH000387: ResultSet's statement was not registered
DEBUG 2022-09-08 17:56:25,092 [main][TransactionImpl.java:66] : committing
DEBUG 2022-09-08 17:56:25,092 [main][AbstractFlushingEventListener.java:132] : Processing flush-time cascades
DEBUG 2022-09-08 17:56:25,092 [main][AbstractFlushingEventListener.java:174] : Dirty checking collections
DEBUG 2022-09-08 17:56:25,092 [main][AbstractFlushingEventListener.java:106] : Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
DEBUG 2022-09-08 17:56:25,092 [main][AbstractFlushingEventListener.java:113] : Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
DEBUG 2022-09-08 17:56:25,093 [main][EntityPrinter.java:102] : Listing entities:
DEBUG 2022-09-08 17:56:25,093 [main][EntityPrinter.java:109] : org.example.models.Author{name=Colleen Hoover, id=2, salary=1195}
DEBUG 2022-09-08 17:56:25,093 [main][LogicalConnectionManagedImpl.java:154] : Initiating JDBC connection release from afterTransaction
DEBUG 2022-09-08 17:56:25,094 [main][LogicalConnectionManagedImpl.java:154] : Initiating JDBC connection release from afterTransaction
DEBUG 2022-09-08 17:56:25,094 [main][TransactionImpl.java:55] : begin
DEBUG 2022-09-08 17:56:25,095 [main][ActionQueue.java:272] : Executing identity-insert immediately
DEBUG 2022-09-08 17:56:25,095 [main][SqlStatementLogger.java:92] : insert into Author (name, salary) values (?, ?)
DEBUG 2022-09-08 17:56:25,096 [main][IdentifierGeneratorHelper.java:78] : Natively generated identity: 3
DEBUG 2022-09-08 17:56:25,096 [main][ResourceRegistryStandardImpl.java:104] : HHH000387: ResultSet's statement was not registered
DEBUG 2022-09-08 17:56:25,097 [main][TransactionImpl.java:66] : committing
DEBUG 2022-09-08 17:56:25,097 [main][AbstractFlushingEventListener.java:132] : Processing flush-time cascades
DEBUG 2022-09-08 17:56:25,097 [main][AbstractFlushingEventListener.java:174] : Dirty checking collections
DEBUG 2022-09-08 17:56:25,097 [main][AbstractFlushingEventListener.java:106] : Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
DEBUG 2022-09-08 17:56:25,097 [main][AbstractFlushingEventListener.java:113] : Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
DEBUG 2022-09-08 17:56:25,097 [main][EntityPrinter.java:102] : Listing entities:
DEBUG 2022-09-08 17:56:25,097 [main][EntityPrinter.java:109] : org.example.models.Author{name=Stuart Woods, id=3, salary=541}
DEBUG 2022-09-08 17:56:25,098 [main][LogicalConnectionManagedImpl.java:154] : Initiating JDBC connection release from afterTransaction
DEBUG 2022-09-08 17:56:25,098 [main][LogicalConnectionManagedImpl.java:154] : Initiating JDBC connection release from afterTransaction
DEBUG 2022-09-08 17:56:25,099 [main][TransactionImpl.java:55] : begin
DEBUG 2022-09-08 17:56:25,099 [main][ActionQueue.java:272] : Executing identity-insert immediately
DEBUG 2022-09-08 17:56:25,099 [main][SqlStatementLogger.java:92] : insert into Author (name, salary) values (?, ?)
DEBUG 2022-09-08 17:56:25,101 [main][IdentifierGeneratorHelper.java:78] : Natively generated identity: 4
DEBUG 2022-09-08 17:56:25,102 [main][ResourceRegistryStandardImpl.java:104] : HHH000387: ResultSet's statement was not registered
DEBUG 2022-09-08 17:56:25,102 [main][TransactionImpl.java:66] : committing
DEBUG 2022-09-08 17:56:25,102 [main][AbstractFlushingEventListener.java:132] : Processing flush-time cascades
DEBUG 2022-09-08 17:56:25,102 [main][AbstractFlushingEventListener.java:174] : Dirty checking collections
DEBUG 2022-09-08 17:56:25,102 [main][AbstractFlushingEventListener.java:106] : Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
DEBUG 2022-09-08 17:56:25,102 [main][AbstractFlushingEventListener.java:113] : Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
DEBUG 2022-09-08 17:56:25,102 [main][EntityPrinter.java:102] : Listing entities:
DEBUG 2022-09-08 17:56:25,102 [main][EntityPrinter.java:109] : org.example.models.Author{name=Nora Roberts, id=4, salary=4091}
DEBUG 2022-09-08 17:56:25,103 [main][LogicalConnectionManagedImpl.java:154] : Initiating JDBC connection release from afterTransaction
DEBUG 2022-09-08 17:56:25,103 [main][LogicalConnectionManagedImpl.java:154] : Initiating JDBC connection release from afterTransaction
DEBUG 2022-09-08 17:56:25,105 [main][TransactionImpl.java:55] : begin
DEBUG 2022-09-08 17:56:25,106 [main][ActionQueue.java:272] : Executing identity-insert immediately
DEBUG 2022-09-08 17:56:25,107 [main][SqlStatementLogger.java:92] : insert into Author (name, salary) values (?, ?)
DEBUG 2022-09-08 17:56:25,107 [main][IdentifierGeneratorHelper.java:78] : Natively generated identity: 5
DEBUG 2022-09-08 17:56:25,108 [main][ResourceRegistryStandardImpl.java:104] : HHH000387: ResultSet's statement was not registered
DEBUG 2022-09-08 17:56:25,108 [main][TransactionImpl.java:66] : committing
DEBUG 2022-09-08 17:56:25,108 [main][AbstractFlushingEventListener.java:132] : Processing flush-time cascades
DEBUG 2022-09-08 17:56:25,108 [main][AbstractFlushingEventListener.java:174] : Dirty checking collections
DEBUG 2022-09-08 17:56:25,108 [main][AbstractFlushingEventListener.java:106] : Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
DEBUG 2022-09-08 17:56:25,108 [main][AbstractFlushingEventListener.java:113] : Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
DEBUG 2022-09-08 17:56:25,108 [main][EntityPrinter.java:102] : Listing entities:
DEBUG 2022-09-08 17:56:25,109 [main][EntityPrinter.java:109] : org.example.models.Author{name=Michael Connelly, id=5, salary=487}
DEBUG 2022-09-08 17:56:25,109 [main][LogicalConnectionManagedImpl.java:154] : Initiating JDBC connection release from afterTransaction
DEBUG 2022-09-08 17:56:25,110 [main][LogicalConnectionManagedImpl.java:154] : Initiating JDBC connection release from afterTransaction
DEBUG 2022-09-08 17:56:25,117 [main][CriteriaQueryImpl.java:307] : Rendered criteria query -> select generatedAlias0 from Author as generatedAlias0
DEBUG 2022-09-08 17:56:25,123 [main][QueryTranslatorFactoryInitiator.java:45] : QueryTranslatorFactory : org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory@deb8cf67
INFO  2022-09-08 17:56:25,123 [main][QueryTranslatorFactoryInitiator.java:47] : HHH000397: Using ASTQueryTranslatorFactory
DEBUG 2022-09-08 17:56:25,136 [main][QueryTranslatorImpl.java:278] : parse() - HQL: select generatedAlias0 from org.example.models.Author as generatedAlias0
DEBUG 2022-09-08 17:56:25,139 [main][QueryTranslatorImpl.java:296] : --- HQL AST ---
 \-[QUERY] Node: 'query'
    \-[SELECT_FROM] Node: 'SELECT_FROM'
       +-[FROM] Node: 'from'
       |  \-[RANGE] Node: 'RANGE'
       |     +-[DOT] Node: '.'
       |     |  +-[DOT] Node: '.'
       |     |  |  +-[DOT] Node: '.'
       |     |  |  |  +-[IDENT] Node: 'org'
       |     |  |  |  \-[IDENT] Node: 'example'
       |     |  |  \-[IDENT] Node: 'models'
       |     |  \-[IDENT] Node: 'Author'
       |     \-[ALIAS] Node: 'generatedAlias0'
       \-[SELECT] Node: 'select'
          \-[IDENT] Node: 'generatedAlias0'

DEBUG 2022-09-08 17:56:25,139 [main][ErrorCounter.java:95] : throwQueryException() : no errors
DEBUG 2022-09-08 17:56:25,147 [main][HqlSqlBaseWalker.java:124] : select << begin [level=1, statement=select]
DEBUG 2022-09-08 17:56:25,152 [main][FromElement.java:148] : FromClause{level=1} : org.example.models.Author (generatedAlias0) -> author0_
DEBUG 2022-09-08 17:56:25,152 [main][FromReferenceNode.java:60] : Resolved : generatedAlias0 -> author0_.id
DEBUG 2022-09-08 17:56:25,154 [main][HqlSqlBaseWalker.java:128] : select : finishing up [level=1, statement=select]
DEBUG 2022-09-08 17:56:25,154 [main][HqlSqlWalker.java:725] : processQuery() :  ( SELECT ( {select clause} author0_.id ) ( FromClause{level=1} Author author0_ ) )
DEBUG 2022-09-08 17:56:25,157 [main][JoinProcessor.java:169] : Using FROM fragment [Author author0_]
DEBUG 2022-09-08 17:56:25,157 [main][HqlSqlBaseWalker.java:132] : select >> end [level=1, statement=select]
DEBUG 2022-09-08 17:56:25,157 [main][QueryTranslatorImpl.java:265] : --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (Author)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'author0_.id as id1_0_' {alias=generatedAlias0, className=org.example.models.Author, tableAlias=author0_}
    |  \-[SQL_TOKEN] SqlFragment: 'author0_.name as name2_0_, author0_.salary as salary3_0_'
    \-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[author0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'Author author0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=Author,tableAlias=author0_,origin=null,columns={,className=org.example.models.Author}}

DEBUG 2022-09-08 17:56:25,158 [main][ErrorCounter.java:95] : throwQueryException() : no errors
DEBUG 2022-09-08 17:56:25,160 [main][QueryTranslatorImpl.java:247] : HQL: select generatedAlias0 from org.example.models.Author as generatedAlias0
DEBUG 2022-09-08 17:56:25,160 [main][QueryTranslatorImpl.java:248] : SQL: select author0_.id as id1_0_, author0_.name as name2_0_, author0_.salary as salary3_0_ from Author author0_
DEBUG 2022-09-08 17:56:25,160 [main][ErrorCounter.java:95] : throwQueryException() : no errors
DEBUG 2022-09-08 17:56:25,166 [main][SqlStatementLogger.java:92] : select author0_.id as id1_0_, author0_.name as name2_0_, author0_.salary as salary3_0_ from Author author0_
DEBUG 2022-09-08 17:56:25,167 [main][DelegatingBasicLogger.java:384] : Result set row: 0
DEBUG 2022-09-08 17:56:25,168 [main][Loader.java:1527] : Result row: EntityKey[org.example.models.Author#1]
DEBUG 2022-09-08 17:56:25,171 [main][DelegatingBasicLogger.java:384] : Result set row: 1
DEBUG 2022-09-08 17:56:25,171 [main][Loader.java:1527] : Result row: EntityKey[org.example.models.Author#2]
DEBUG 2022-09-08 17:56:25,171 [main][DelegatingBasicLogger.java:384] : Result set row: 2
DEBUG 2022-09-08 17:56:25,171 [main][Loader.java:1527] : Result row: EntityKey[org.example.models.Author#3]
DEBUG 2022-09-08 17:56:25,171 [main][DelegatingBasicLogger.java:384] : Result set row: 3
DEBUG 2022-09-08 17:56:25,171 [main][Loader.java:1527] : Result row: EntityKey[org.example.models.Author#4]
DEBUG 2022-09-08 17:56:25,172 [main][DelegatingBasicLogger.java:384] : Result set row: 4
DEBUG 2022-09-08 17:56:25,172 [main][Loader.java:1527] : Result row: EntityKey[org.example.models.Author#5]
DEBUG 2022-09-08 17:56:25,172 [main][TwoPhaseLoad.java:141] : Resolving associations for [org.example.models.Author#1]
DEBUG 2022-09-08 17:56:25,172 [main][TwoPhaseLoad.java:267] : Done materializing entity [org.example.models.Author#1]
DEBUG 2022-09-08 17:56:25,172 [main][TwoPhaseLoad.java:141] : Resolving associations for [org.example.models.Author#2]
DEBUG 2022-09-08 17:56:25,173 [main][TwoPhaseLoad.java:267] : Done materializing entity [org.example.models.Author#2]
DEBUG 2022-09-08 17:56:25,173 [main][TwoPhaseLoad.java:141] : Resolving associations for [org.example.models.Author#3]
DEBUG 2022-09-08 17:56:25,173 [main][TwoPhaseLoad.java:267] : Done materializing entity [org.example.models.Author#3]
DEBUG 2022-09-08 17:56:25,173 [main][TwoPhaseLoad.java:141] : Resolving associations for [org.example.models.Author#4]
DEBUG 2022-09-08 17:56:25,173 [main][TwoPhaseLoad.java:267] : Done materializing entity [org.example.models.Author#4]
DEBUG 2022-09-08 17:56:25,173 [main][TwoPhaseLoad.java:141] : Resolving associations for [org.example.models.Author#5]
DEBUG 2022-09-08 17:56:25,173 [main][TwoPhaseLoad.java:267] : Done materializing entity [org.example.models.Author#5]
DEBUG 2022-09-08 17:56:25,173 [main][LogicalConnectionManagedImpl.java:154] : Initiating JDBC connection release from afterTransaction
DEBUG 2022-09-08 17:56:25,181 [main][SqlStatementLogger.java:92] : SELECT * FROM Author
DEBUG 2022-09-08 17:56:25,182 [main][DelegatingBasicLogger.java:384] : Result set row: 0
DEBUG 2022-09-08 17:56:25,182 [main][Loader.java:1527] : Result row: EntityKey[org.example.models.Author#1]
DEBUG 2022-09-08 17:56:25,183 [main][DelegatingBasicLogger.java:384] : Result set row: 1
DEBUG 2022-09-08 17:56:25,183 [main][Loader.java:1527] : Result row: EntityKey[org.example.models.Author#2]
DEBUG 2022-09-08 17:56:25,183 [main][DelegatingBasicLogger.java:384] : Result set row: 2
DEBUG 2022-09-08 17:56:25,183 [main][Loader.java:1527] : Result row: EntityKey[org.example.models.Author#3]
DEBUG 2022-09-08 17:56:25,183 [main][DelegatingBasicLogger.java:384] : Result set row: 3
DEBUG 2022-09-08 17:56:25,183 [main][Loader.java:1527] : Result row: EntityKey[org.example.models.Author#4]
DEBUG 2022-09-08 17:56:25,183 [main][DelegatingBasicLogger.java:384] : Result set row: 4
DEBUG 2022-09-08 17:56:25,183 [main][Loader.java:1527] : Result row: EntityKey[org.example.models.Author#5]
DEBUG 2022-09-08 17:56:25,183 [main][TwoPhaseLoad.java:141] : Resolving associations for [org.example.models.Author#1]
DEBUG 2022-09-08 17:56:25,184 [main][TwoPhaseLoad.java:267] : Done materializing entity [org.example.models.Author#1]
DEBUG 2022-09-08 17:56:25,184 [main][TwoPhaseLoad.java:141] : Resolving associations for [org.example.models.Author#2]
DEBUG 2022-09-08 17:56:25,185 [main][TwoPhaseLoad.java:267] : Done materializing entity [org.example.models.Author#2]
DEBUG 2022-09-08 17:56:25,185 [main][TwoPhaseLoad.java:141] : Resolving associations for [org.example.models.Author#3]
DEBUG 2022-09-08 17:56:25,185 [main][TwoPhaseLoad.java:267] : Done materializing entity [org.example.models.Author#3]
DEBUG 2022-09-08 17:56:25,185 [main][TwoPhaseLoad.java:141] : Resolving associations for [org.example.models.Author#4]
DEBUG 2022-09-08 17:56:25,185 [main][TwoPhaseLoad.java:267] : Done materializing entity [org.example.models.Author#4]
DEBUG 2022-09-08 17:56:25,185 [main][TwoPhaseLoad.java:141] : Resolving associations for [org.example.models.Author#5]
DEBUG 2022-09-08 17:56:25,185 [main][TwoPhaseLoad.java:267] : Done materializing entity [org.example.models.Author#5]
DEBUG 2022-09-08 17:56:25,185 [main][LogicalConnectionManagedImpl.java:154] : Initiating JDBC connection release from afterTransaction
DEBUG 2022-09-08 17:56:25,187 [main][SqlStatementLogger.java:92] : select author0_.id as id1_0_0_, author0_.name as name2_0_0_, author0_.salary as salary3_0_0_ from Author author0_ where author0_.id=?
DEBUG 2022-09-08 17:56:25,190 [main][ResultSetProcessorImpl.java:120] : Starting ResultSet row #0
DEBUG 2022-09-08 17:56:25,190 [main][EntityReferenceInitializerImpl.java:126] : On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
DEBUG 2022-09-08 17:56:25,190 [main][TwoPhaseLoad.java:141] : Resolving associations for [org.example.models.Author#2]
DEBUG 2022-09-08 17:56:25,191 [main][TwoPhaseLoad.java:267] : Done materializing entity [org.example.models.Author#2]
DEBUG 2022-09-08 17:56:25,191 [main][ResourceRegistryStandardImpl.java:73] : HHH000387: ResultSet's statement was not registered
DEBUG 2022-09-08 17:56:25,191 [main][AbstractLoadPlanBasedEntityLoader.java:189] : Done entity load : org.example.models.Author#2
DEBUG 2022-09-08 17:56:25,191 [main][LogicalConnectionManagedImpl.java:154] : Initiating JDBC connection release from afterTransaction
DEBUG 2022-09-08 17:56:25,192 [main][QueryTranslatorImpl.java:278] : parse() - HQL: select a from org.example.models.Author a where a.salary between :minSalary and :maxSalary
DEBUG 2022-09-08 17:56:25,193 [main][QueryTranslatorImpl.java:296] : --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[IDENT] Node: 'org'
    |  |     |  |  |  \-[IDENT] Node: 'example'
    |  |     |  |  \-[IDENT] Node: 'models'
    |  |     |  \-[IDENT] Node: 'Author'
    |  |     \-[ALIAS] Node: 'a'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'a'
    \-[WHERE] Node: 'where'
       \-[BETWEEN] Node: 'between'
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'a'
          |  \-[IDENT] Node: 'salary'
          +-[COLON] Node: ':'
          |  \-[IDENT] Node: 'minSalary'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'maxSalary'

DEBUG 2022-09-08 17:56:25,193 [main][ErrorCounter.java:95] : throwQueryException() : no errors
DEBUG 2022-09-08 17:56:25,194 [main][HqlSqlBaseWalker.java:124] : select << begin [level=1, statement=select]
DEBUG 2022-09-08 17:56:25,194 [main][FromElement.java:148] : FromClause{level=1} : org.example.models.Author (a) -> author0_
DEBUG 2022-09-08 17:56:25,194 [main][FromReferenceNode.java:60] : Resolved : a -> author0_.id
DEBUG 2022-09-08 17:56:25,195 [main][FromReferenceNode.java:60] : Resolved : a -> author0_.id
DEBUG 2022-09-08 17:56:25,195 [main][DotNode.java:661] : getDataType() : salary -> org.hibernate.type.IntegerType@5a415b06
DEBUG 2022-09-08 17:56:25,196 [main][FromReferenceNode.java:60] : Resolved : a.salary -> author0_.salary
DEBUG 2022-09-08 17:56:25,196 [main][HqlSqlBaseWalker.java:128] : select : finishing up [level=1, statement=select]
DEBUG 2022-09-08 17:56:25,196 [main][HqlSqlWalker.java:725] : processQuery() :  ( SELECT ( {select clause} author0_.id ) ( FromClause{level=1} Author author0_ ) ( where ( between ( author0_.salary author0_.id salary ) ? ? ) ) )
DEBUG 2022-09-08 17:56:25,196 [main][JoinProcessor.java:169] : Using FROM fragment [Author author0_]
DEBUG 2022-09-08 17:56:25,197 [main][HqlSqlBaseWalker.java:132] : select >> end [level=1, statement=select]
DEBUG 2022-09-08 17:56:25,197 [main][QueryTranslatorImpl.java:265] : --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (Author)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'author0_.id as id1_0_' {alias=a, className=org.example.models.Author, tableAlias=author0_}
    |  \-[SQL_TOKEN] SqlFragment: 'author0_.name as name2_0_, author0_.salary as salary3_0_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[a], fromElementByTableAlias=[author0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'Author author0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=a,role=null,tableName=Author,tableAlias=author0_,origin=null,columns={,className=org.example.models.Author}}
    \-[WHERE] SqlNode: 'where'
       \-[BETWEEN] BetweenOperatorNode: 'between'
          +-[DOT] DotNode: 'author0_.salary' {propertyName=salary,dereferenceType=PRIMITIVE,getPropertyPath=salary,path=a.salary,tableAlias=author0_,className=org.example.models.Author,classAlias=a}
          |  +-[ALIAS_REF] IdentNode: 'author0_.id' {alias=a, className=org.example.models.Author, tableAlias=author0_}
          |  \-[IDENT] IdentNode: 'salary' {originalText=salary}
          +-[NAMED_PARAM] ParameterNode: '?' {name=minSalary, expectedType=org.hibernate.type.IntegerType@5a415b06}
          \-[NAMED_PARAM] ParameterNode: '?' {name=maxSalary, expectedType=org.hibernate.type.IntegerType@5a415b06}

DEBUG 2022-09-08 17:56:25,197 [main][ErrorCounter.java:95] : throwQueryException() : no errors
DEBUG 2022-09-08 17:56:25,197 [main][QueryTranslatorImpl.java:247] : HQL: select a from org.example.models.Author a where a.salary between :minSalary and :maxSalary
DEBUG 2022-09-08 17:56:25,198 [main][QueryTranslatorImpl.java:248] : SQL: select author0_.id as id1_0_, author0_.name as name2_0_, author0_.salary as salary3_0_ from Author author0_ where author0_.salary between ? and ?
DEBUG 2022-09-08 17:56:25,198 [main][ErrorCounter.java:95] : throwQueryException() : no errors
DEBUG 2022-09-08 17:56:25,199 [main][SqlStatementLogger.java:92] : select author0_.id as id1_0_, author0_.name as name2_0_, author0_.salary as salary3_0_ from Author author0_ where author0_.salary between ? and ?
DEBUG 2022-09-08 17:56:25,200 [main][LogicalConnectionManagedImpl.java:154] : Initiating JDBC connection release from afterTransaction
DEBUG 2022-09-08 17:56:25,201 [main][SqlStatementLogger.java:92] : select author0_.id as id1_0_0_, author0_.name as name2_0_0_, author0_.salary as salary3_0_0_ from Author author0_ where author0_.id=?
DEBUG 2022-09-08 17:56:25,202 [main][ResultSetProcessorImpl.java:120] : Starting ResultSet row #0
DEBUG 2022-09-08 17:56:25,202 [main][EntityReferenceInitializerImpl.java:126] : On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
DEBUG 2022-09-08 17:56:25,203 [main][TwoPhaseLoad.java:141] : Resolving associations for [org.example.models.Author#2]
DEBUG 2022-09-08 17:56:25,203 [main][TwoPhaseLoad.java:267] : Done materializing entity [org.example.models.Author#2]
DEBUG 2022-09-08 17:56:25,204 [main][ResourceRegistryStandardImpl.java:73] : HHH000387: ResultSet's statement was not registered
DEBUG 2022-09-08 17:56:25,204 [main][AbstractLoadPlanBasedEntityLoader.java:189] : Done entity load : org.example.models.Author#2
DEBUG 2022-09-08 17:56:25,204 [main][LogicalConnectionManagedImpl.java:154] : Initiating JDBC connection release from afterTransaction
DEBUG 2022-09-08 17:56:25,205 [main][TransactionImpl.java:55] : begin
DEBUG 2022-09-08 17:56:25,206 [main][TransactionImpl.java:66] : committing
DEBUG 2022-09-08 17:56:25,206 [main][AbstractFlushingEventListener.java:132] : Processing flush-time cascades
DEBUG 2022-09-08 17:56:25,206 [main][AbstractFlushingEventListener.java:174] : Dirty checking collections
DEBUG 2022-09-08 17:56:25,207 [main][AbstractFlushingEventListener.java:106] : Flushed: 0 insertions, 1 updates, 0 deletions to 1 objects
DEBUG 2022-09-08 17:56:25,207 [main][AbstractFlushingEventListener.java:113] : Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
DEBUG 2022-09-08 17:56:25,207 [main][EntityPrinter.java:102] : Listing entities:
DEBUG 2022-09-08 17:56:25,207 [main][EntityPrinter.java:109] : org.example.models.Author{name=Ihor Kosolapow, id=2, salary=1195}
DEBUG 2022-09-08 17:56:25,210 [main][SqlStatementLogger.java:92] : update Author set name=? where id=?
DEBUG 2022-09-08 17:56:25,211 [main][LogicalConnectionManagedImpl.java:154] : Initiating JDBC connection release from afterTransaction
DEBUG 2022-09-08 17:56:25,211 [main][LogicalConnectionManagedImpl.java:154] : Initiating JDBC connection release from afterTransaction
DEBUG 2022-09-08 17:56:25,212 [main][JdbcCoordinatorImpl.java:177] : HHH000420: Closing un-released batch
DEBUG 2022-09-08 17:56:25,212 [main][SqlStatementLogger.java:92] : select author0_.id as id1_0_0_, author0_.name as name2_0_0_, author0_.salary as salary3_0_0_ from Author author0_ where author0_.id=?
DEBUG 2022-09-08 17:56:25,214 [main][ResultSetProcessorImpl.java:120] : Starting ResultSet row #0
DEBUG 2022-09-08 17:56:25,214 [main][EntityReferenceInitializerImpl.java:126] : On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
DEBUG 2022-09-08 17:56:25,214 [main][TwoPhaseLoad.java:141] : Resolving associations for [org.example.models.Author#2]
DEBUG 2022-09-08 17:56:25,214 [main][TwoPhaseLoad.java:267] : Done materializing entity [org.example.models.Author#2]
DEBUG 2022-09-08 17:56:25,214 [main][ResourceRegistryStandardImpl.java:73] : HHH000387: ResultSet's statement was not registered
DEBUG 2022-09-08 17:56:25,214 [main][AbstractLoadPlanBasedEntityLoader.java:189] : Done entity load : org.example.models.Author#2
DEBUG 2022-09-08 17:56:25,214 [main][LogicalConnectionManagedImpl.java:154] : Initiating JDBC connection release from afterTransaction
DEBUG 2022-09-08 17:56:54,652 [pool-1-thread-1][PooledConnections.java:51] : Connection pool now considered primed; min-size will be maintained
WARN  2022-09-08 18:18:27,907 [main][Main.java:17] : TEST
DEBUG 2022-09-08 18:18:27,971 [main][CoreLogging.java:28] : Logging Provider: org.jboss.logging.Log4jLoggerProvider
DEBUG 2022-09-08 18:18:27,982 [main][IntegratorServiceImpl.java:46] : Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
DEBUG 2022-09-08 18:18:27,985 [main][IntegratorServiceImpl.java:46] : Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
DEBUG 2022-09-08 18:18:27,988 [main][IntegratorServiceImpl.java:46] : Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
INFO  2022-09-08 18:18:28,066 [main][Version.java:45] : HHH000412: Hibernate Core {5.2.2.Final}
INFO  2022-09-08 18:18:28,067 [main][Environment.java:213] : HHH000206: hibernate.properties not found
INFO  2022-09-08 18:18:28,069 [main][Environment.java:318] : HHH000021: Bytecode provider name : javassist
DEBUG 2022-09-08 18:18:28,092 [main][LocalXmlResourceResolver.java:57] : Interpreting public/system identifier : [null] - [http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd]
DEBUG 2022-09-08 18:18:28,093 [main][LocalXmlResourceResolver.java:85] : Recognized hibernate-configuration identifier; attempting to resolve on classpath under org/hibernate/
DEBUG 2022-09-08 18:18:28,100 [main][JaxbCfgProcessor.java:116] : cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
DEBUG 2022-09-08 18:18:28,360 [main][Configuration.java:724] : Building session factory using internal StandardServiceRegistryBuilder
DEBUG 2022-09-08 18:18:28,363 [main][ServiceBinding.java:68] : Overriding existing service binding [org.hibernate.secure.spi.JaccService]
DEBUG 2022-09-08 18:18:28,363 [main][Configuration.java:652] : Building session factory using provided StandardServiceRegistry
DEBUG 2022-09-08 18:18:28,374 [main][RegionFactoryInitiator.java:75] : Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
INFO  2022-09-08 18:18:28,380 [main][JavaReflectionManager.java:66] : HCANN000001: Hibernate Commons Annotations {5.0.1.Final}
DEBUG 2022-09-08 18:18:28,398 [main][BasicTypeRegistry.java:145] : Adding type registration boolean -> org.hibernate.type.BooleanType@2c6b6108
DEBUG 2022-09-08 18:18:28,399 [main][BasicTypeRegistry.java:145] : Adding type registration boolean -> org.hibernate.type.BooleanType@2c6b6108
DEBUG 2022-09-08 18:18:28,400 [main][BasicTypeRegistry.java:145] : Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@2c6b6108
DEBUG 2022-09-08 18:18:28,401 [main][BasicTypeRegistry.java:145] : Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@80174181
DEBUG 2022-09-08 18:18:28,402 [main][BasicTypeRegistry.java:145] : Adding type registration true_false -> org.hibernate.type.TrueFalseType@7738bf56
DEBUG 2022-09-08 18:18:28,403 [main][BasicTypeRegistry.java:145] : Adding type registration yes_no -> org.hibernate.type.YesNoType@1ebd79a5
DEBUG 2022-09-08 18:18:28,404 [main][BasicTypeRegistry.java:145] : Adding type registration byte -> org.hibernate.type.ByteType@b5a1ffbf
DEBUG 2022-09-08 18:18:28,405 [main][BasicTypeRegistry.java:145] : Adding type registration byte -> org.hibernate.type.ByteType@b5a1ffbf
DEBUG 2022-09-08 18:18:28,405 [main][BasicTypeRegistry.java:145] : Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@b5a1ffbf
DEBUG 2022-09-08 18:18:28,406 [main][BasicTypeRegistry.java:145] : Adding type registration character -> org.hibernate.type.CharacterType@a3811dea
DEBUG 2022-09-08 18:18:28,407 [main][BasicTypeRegistry.java:145] : Adding type registration char -> org.hibernate.type.CharacterType@a3811dea
DEBUG 2022-09-08 18:18:28,407 [main][BasicTypeRegistry.java:145] : Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@a3811dea
DEBUG 2022-09-08 18:18:28,409 [main][BasicTypeRegistry.java:145] : Adding type registration short -> org.hibernate.type.ShortType@904fe99e
DEBUG 2022-09-08 18:18:28,409 [main][BasicTypeRegistry.java:145] : Adding type registration short -> org.hibernate.type.ShortType@904fe99e
DEBUG 2022-09-08 18:18:28,410 [main][BasicTypeRegistry.java:145] : Adding type registration java.lang.Short -> org.hibernate.type.ShortType@904fe99e
DEBUG 2022-09-08 18:18:28,411 [main][BasicTypeRegistry.java:145] : Adding type registration integer -> org.hibernate.type.IntegerType@ed121553
DEBUG 2022-09-08 18:18:28,411 [main][BasicTypeRegistry.java:145] : Adding type registration int -> org.hibernate.type.IntegerType@ed121553
DEBUG 2022-09-08 18:18:28,412 [main][BasicTypeRegistry.java:145] : Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@ed121553
DEBUG 2022-09-08 18:18:28,414 [main][BasicTypeRegistry.java:145] : Adding type registration long -> org.hibernate.type.LongType@6392ab2e
DEBUG 2022-09-08 18:18:28,415 [main][BasicTypeRegistry.java:145] : Adding type registration long -> org.hibernate.type.LongType@6392ab2e
DEBUG 2022-09-08 18:18:28,416 [main][BasicTypeRegistry.java:145] : Adding type registration java.lang.Long -> org.hibernate.type.LongType@6392ab2e
DEBUG 2022-09-08 18:18:28,417 [main][BasicTypeRegistry.java:145] : Adding type registration float -> org.hibernate.type.FloatType@d3ab29d6
DEBUG 2022-09-08 18:18:28,418 [main][BasicTypeRegistry.java:145] : Adding type registration float -> org.hibernate.type.FloatType@d3ab29d6
DEBUG 2022-09-08 18:18:28,418 [main][BasicTypeRegistry.java:145] : Adding type registration java.lang.Float -> org.hibernate.type.FloatType@d3ab29d6
DEBUG 2022-09-08 18:18:28,420 [main][BasicTypeRegistry.java:145] : Adding type registration double -> org.hibernate.type.DoubleType@475ebcf5
DEBUG 2022-09-08 18:18:28,420 [main][BasicTypeRegistry.java:145] : Adding type registration double -> org.hibernate.type.DoubleType@475ebcf5
DEBUG 2022-09-08 18:18:28,421 [main][BasicTypeRegistry.java:145] : Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@475ebcf5
DEBUG 2022-09-08 18:18:28,422 [main][BasicTypeRegistry.java:145] : Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@ffdc2701
DEBUG 2022-09-08 18:18:28,422 [main][BasicTypeRegistry.java:145] : Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@ffdc2701
DEBUG 2022-09-08 18:18:28,423 [main][BasicTypeRegistry.java:145] : Adding type registration big_integer -> org.hibernate.type.BigIntegerType@8cdc19b6
DEBUG 2022-09-08 18:18:28,424 [main][BasicTypeRegistry.java:145] : Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@8cdc19b6
DEBUG 2022-09-08 18:18:28,425 [main][BasicTypeRegistry.java:145] : Adding type registration string -> org.hibernate.type.StringType@a9ddb513
DEBUG 2022-09-08 18:18:28,425 [main][BasicTypeRegistry.java:145] : Adding type registration java.lang.String -> org.hibernate.type.StringType@a9ddb513
DEBUG 2022-09-08 18:18:28,426 [main][BasicTypeRegistry.java:145] : Adding type registration nstring -> org.hibernate.type.StringNVarcharType@15c79ab3
DEBUG 2022-09-08 18:18:28,427 [main][BasicTypeRegistry.java:145] : Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@cc2480e4
DEBUG 2022-09-08 18:18:28,428 [main][BasicTypeRegistry.java:145] : Adding type registration url -> org.hibernate.type.UrlType@6d46f447
DEBUG 2022-09-08 18:18:28,428 [main][BasicTypeRegistry.java:145] : Adding type registration java.net.URL -> org.hibernate.type.UrlType@6d46f447
DEBUG 2022-09-08 18:18:28,429 [main][BasicTypeRegistry.java:145] : Adding type registration Duration -> org.hibernate.type.DurationType@7fc4b5dc
DEBUG 2022-09-08 18:18:28,430 [main][BasicTypeRegistry.java:145] : Adding type registration java.time.Duration -> org.hibernate.type.DurationType@7fc4b5dc
DEBUG 2022-09-08 18:18:28,437 [main][BasicTypeRegistry.java:145] : Adding type registration Instant -> org.hibernate.type.InstantType@7180c8c2
DEBUG 2022-09-08 18:18:28,437 [main][BasicTypeRegistry.java:145] : Adding type registration java.time.Instant -> org.hibernate.type.InstantType@7180c8c2
DEBUG 2022-09-08 18:18:28,439 [main][BasicTypeRegistry.java:145] : Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@6dfc914d
DEBUG 2022-09-08 18:18:28,440 [main][BasicTypeRegistry.java:145] : Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@6dfc914d
DEBUG 2022-09-08 18:18:28,443 [main][BasicTypeRegistry.java:145] : Adding type registration LocalDate -> org.hibernate.type.LocalDateType@efe4d34c
DEBUG 2022-09-08 18:18:28,443 [main][BasicTypeRegistry.java:145] : Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@efe4d34c
DEBUG 2022-09-08 18:18:28,445 [main][BasicTypeRegistry.java:145] : Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@8b4ea359
DEBUG 2022-09-08 18:18:28,446 [main][BasicTypeRegistry.java:145] : Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@8b4ea359
DEBUG 2022-09-08 18:18:28,447 [main][BasicTypeRegistry.java:145] : Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@ce9194ff
DEBUG 2022-09-08 18:18:28,448 [main][BasicTypeRegistry.java:145] : Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@ce9194ff
DEBUG 2022-09-08 18:18:28,449 [main][BasicTypeRegistry.java:145] : Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@a628aa3c
DEBUG 2022-09-08 18:18:28,450 [main][BasicTypeRegistry.java:145] : Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@a628aa3c
DEBUG 2022-09-08 18:18:28,451 [main][BasicTypeRegistry.java:145] : Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@e89460df
DEBUG 2022-09-08 18:18:28,451 [main][BasicTypeRegistry.java:145] : Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@e89460df
DEBUG 2022-09-08 18:18:28,453 [main][BasicTypeRegistry.java:145] : Adding type registration date -> org.hibernate.type.DateType@a4135fc3
DEBUG 2022-09-08 18:18:28,453 [main][BasicTypeRegistry.java:145] : Adding type registration java.sql.Date -> org.hibernate.type.DateType@a4135fc3
DEBUG 2022-09-08 18:18:28,454 [main][BasicTypeRegistry.java:145] : Adding type registration time -> org.hibernate.type.TimeType@30c430a
DEBUG 2022-09-08 18:18:28,454 [main][BasicTypeRegistry.java:145] : Adding type registration java.sql.Time -> org.hibernate.type.TimeType@30c430a
DEBUG 2022-09-08 18:18:28,455 [main][BasicTypeRegistry.java:145] : Adding type registration timestamp -> org.hibernate.type.TimestampType@707000f4
DEBUG 2022-09-08 18:18:28,455 [main][BasicTypeRegistry.java:145] : Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@707000f4
DEBUG 2022-09-08 18:18:28,456 [main][BasicTypeRegistry.java:145] : Adding type registration java.util.Date -> org.hibernate.type.TimestampType@707000f4
DEBUG 2022-09-08 18:18:28,457 [main][BasicTypeRegistry.java:145] : Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@646516c9
DEBUG 2022-09-08 18:18:28,458 [main][BasicTypeRegistry.java:145] : Adding type registration calendar -> org.hibernate.type.CalendarType@3ad14351
DEBUG 2022-09-08 18:18:28,459 [main][BasicTypeRegistry.java:145] : Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@3ad14351
DEBUG 2022-09-08 18:18:28,459 [main][BasicTypeRegistry.java:145] : Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@3ad14351
DEBUG 2022-09-08 18:18:28,460 [main][BasicTypeRegistry.java:145] : Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@91b305f5
DEBUG 2022-09-08 18:18:28,460 [main][BasicTypeRegistry.java:145] : Adding type registration locale -> org.hibernate.type.LocaleType@d9315095
DEBUG 2022-09-08 18:18:28,461 [main][BasicTypeRegistry.java:145] : Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@d9315095
DEBUG 2022-09-08 18:18:28,462 [main][BasicTypeRegistry.java:145] : Adding type registration currency -> org.hibernate.type.CurrencyType@b0d35993
DEBUG 2022-09-08 18:18:28,462 [main][BasicTypeRegistry.java:145] : Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@b0d35993
DEBUG 2022-09-08 18:18:28,464 [main][BasicTypeRegistry.java:145] : Adding type registration timezone -> org.hibernate.type.TimeZoneType@e0235e98
DEBUG 2022-09-08 18:18:28,464 [main][BasicTypeRegistry.java:145] : Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@e0235e98
DEBUG 2022-09-08 18:18:28,465 [main][BasicTypeRegistry.java:145] : Adding type registration class -> org.hibernate.type.ClassType@da1caefc
DEBUG 2022-09-08 18:18:28,467 [main][BasicTypeRegistry.java:145] : Adding type registration java.lang.Class -> org.hibernate.type.ClassType@da1caefc
DEBUG 2022-09-08 18:18:28,468 [main][BasicTypeRegistry.java:145] : Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@e7baf657
DEBUG 2022-09-08 18:18:28,468 [main][BasicTypeRegistry.java:145] : Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@e7baf657
DEBUG 2022-09-08 18:18:28,469 [main][BasicTypeRegistry.java:145] : Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@eaaee52e
DEBUG 2022-09-08 18:18:28,470 [main][BasicTypeRegistry.java:145] : Adding type registration binary -> org.hibernate.type.BinaryType@25fc008b
DEBUG 2022-09-08 18:18:28,470 [main][BasicTypeRegistry.java:145] : Adding type registration byte[] -> org.hibernate.type.BinaryType@25fc008b
DEBUG 2022-09-08 18:18:28,470 [main][BasicTypeRegistry.java:145] : Adding type registration [B -> org.hibernate.type.BinaryType@25fc008b
DEBUG 2022-09-08 18:18:28,472 [main][BasicTypeRegistry.java:145] : Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@93d06ca0
DEBUG 2022-09-08 18:18:28,472 [main][BasicTypeRegistry.java:145] : Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@93d06ca0
DEBUG 2022-09-08 18:18:28,472 [main][BasicTypeRegistry.java:145] : Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@93d06ca0
DEBUG 2022-09-08 18:18:28,473 [main][BasicTypeRegistry.java:145] : Adding type registration row_version -> org.hibernate.type.RowVersionType@d17bec80
DEBUG 2022-09-08 18:18:28,474 [main][BasicTypeRegistry.java:145] : Adding type registration image -> org.hibernate.type.ImageType@76258885
DEBUG 2022-09-08 18:18:28,475 [main][BasicTypeRegistry.java:145] : Adding type registration characters -> org.hibernate.type.CharArrayType@ca043a4e
DEBUG 2022-09-08 18:18:28,475 [main][BasicTypeRegistry.java:145] : Adding type registration char[] -> org.hibernate.type.CharArrayType@ca043a4e
DEBUG 2022-09-08 18:18:28,476 [main][BasicTypeRegistry.java:145] : Adding type registration [C -> org.hibernate.type.CharArrayType@ca043a4e
DEBUG 2022-09-08 18:18:28,476 [main][BasicTypeRegistry.java:145] : Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@673c776f
DEBUG 2022-09-08 18:18:28,477 [main][BasicTypeRegistry.java:145] : Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@673c776f
DEBUG 2022-09-08 18:18:28,477 [main][BasicTypeRegistry.java:145] : Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@673c776f
DEBUG 2022-09-08 18:18:28,478 [main][BasicTypeRegistry.java:145] : Adding type registration text -> org.hibernate.type.TextType@47a02cb3
DEBUG 2022-09-08 18:18:28,478 [main][BasicTypeRegistry.java:145] : Adding type registration ntext -> org.hibernate.type.NTextType@47081847
DEBUG 2022-09-08 18:18:28,481 [main][BasicTypeRegistry.java:145] : Adding type registration blob -> org.hibernate.type.BlobType@6a1a19a9
DEBUG 2022-09-08 18:18:28,481 [main][BasicTypeRegistry.java:145] : Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@6a1a19a9
DEBUG 2022-09-08 18:18:28,482 [main][BasicTypeRegistry.java:145] : Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@7126c58d
DEBUG 2022-09-08 18:18:28,486 [main][BasicTypeRegistry.java:145] : Adding type registration clob -> org.hibernate.type.ClobType@7f8b9e51
DEBUG 2022-09-08 18:18:28,486 [main][BasicTypeRegistry.java:145] : Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@7f8b9e51
DEBUG 2022-09-08 18:18:28,488 [main][BasicTypeRegistry.java:145] : Adding type registration nclob -> org.hibernate.type.NClobType@3ab818a9
DEBUG 2022-09-08 18:18:28,489 [main][BasicTypeRegistry.java:145] : Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@3ab818a9
DEBUG 2022-09-08 18:18:28,491 [main][BasicTypeRegistry.java:145] : Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@9643a48d
DEBUG 2022-09-08 18:18:28,491 [main][BasicTypeRegistry.java:145] : Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@780f30
DEBUG 2022-09-08 18:18:28,494 [main][BasicTypeRegistry.java:145] : Adding type registration serializable -> org.hibernate.type.SerializableType@a9b00bf9
DEBUG 2022-09-08 18:18:28,495 [main][BasicTypeRegistry.java:145] : Adding type registration object -> org.hibernate.type.ObjectType@2a5dde7f
DEBUG 2022-09-08 18:18:28,496 [main][BasicTypeRegistry.java:145] : Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@2a5dde7f
DEBUG 2022-09-08 18:18:28,496 [main][BasicTypeRegistry.java:145] : Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@7dce018c
DEBUG 2022-09-08 18:18:28,497 [main][BasicTypeRegistry.java:145] : Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@a2d71d1d
DEBUG 2022-09-08 18:18:28,498 [main][BasicTypeRegistry.java:145] : Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@39c28e62
DEBUG 2022-09-08 18:18:28,498 [main][BasicTypeRegistry.java:145] : Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@74658bdf
DEBUG 2022-09-08 18:18:28,498 [main][BasicTypeRegistry.java:145] : Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@bc1a7e22
DEBUG 2022-09-08 18:18:28,499 [main][BasicTypeRegistry.java:145] : Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@d25ac058
DEBUG 2022-09-08 18:18:28,499 [main][BasicTypeRegistry.java:145] : Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@a574f76e
DEBUG 2022-09-08 18:18:28,499 [main][BasicTypeRegistry.java:145] : Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@bda4458d
WARN  2022-09-08 18:18:28,506 [main][DriverManagerConnectionProviderImpl.java:70] : HHH10001002: Using Hibernate built-in connection pool (not for production use!)
INFO  2022-09-08 18:18:28,513 [main][DriverManagerConnectionProviderImpl.java:126] : HHH10001005: using driver [com.mysql.cj.jdbc.Driver] at URL [jdbc:mysql://localhost:3306/classicmodels?serverTimezone=UTC]
INFO  2022-09-08 18:18:28,514 [main][DriverManagerConnectionProviderImpl.java:132] : HHH10001001: Connection properties: {password=rootroot, user=root}
INFO  2022-09-08 18:18:28,514 [main][DriverManagerConnectionProviderImpl.java:140] : HHH10001003: Autocommit mode: false
DEBUG 2022-09-08 18:18:28,518 [main][DelegatingBasicLogger.java:384] : Initializing Connection pool with 1 Connections
INFO  2022-09-08 18:18:28,519 [main][PooledConnections.java:41] : HHH000115: Hibernate connection pool size: 5 (min=1)
DEBUG 2022-09-08 18:18:28,975 [main][JdbcEnvironmentInitiator.java:72] : Database ->
       name : MySQL
    version : 8.0.29
      major : 8
      minor : 0
DEBUG 2022-09-08 18:18:28,975 [main][JdbcEnvironmentInitiator.java:83] : Driver ->
       name : MySQL Connector/J
    version : mysql-connector-java-8.0.29 (Revision: dd61577595edad45c398af508cf91ad26fc4144f)
      major : 8
      minor : 0
DEBUG 2022-09-08 18:18:28,976 [main][DelegatingBasicLogger.java:389] : JDBC version : 4.2
INFO  2022-09-08 18:18:28,984 [main][Dialect.java:153] : HHH000400: Using dialect: org.hibernate.dialect.MySQLDialect
DEBUG 2022-09-08 18:18:29,024 [main][IdentifierHelperBuilder.java:117] : JDBC driver metadata reported database stores quoted identifiers in more than one case
DEBUG 2022-09-08 18:18:29,026 [main][IdentifierHelperBuilder.java:191] : IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [MIXED]; that will likely lead to problems in schema update and validation if using quoted identifiers
DEBUG 2022-09-08 18:18:29,046 [main][DefaultIdentifierGeneratorFactory.java:81] : Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
DEBUG 2022-09-08 18:18:29,047 [main][DefaultIdentifierGeneratorFactory.java:81] : Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
DEBUG 2022-09-08 18:18:29,048 [main][DefaultIdentifierGeneratorFactory.java:81] : Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
DEBUG 2022-09-08 18:18:29,048 [main][DefaultIdentifierGeneratorFactory.java:81] : Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
DEBUG 2022-09-08 18:18:29,048 [main][DefaultIdentifierGeneratorFactory.java:81] : Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
DEBUG 2022-09-08 18:18:29,049 [main][DefaultIdentifierGeneratorFactory.java:81] : Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
DEBUG 2022-09-08 18:18:29,049 [main][DefaultIdentifierGeneratorFactory.java:81] : Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
DEBUG 2022-09-08 18:18:29,050 [main][DefaultIdentifierGeneratorFactory.java:81] : Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
DEBUG 2022-09-08 18:18:29,051 [main][DefaultIdentifierGeneratorFactory.java:81] : Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
DEBUG 2022-09-08 18:18:29,051 [main][DefaultIdentifierGeneratorFactory.java:81] : Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
DEBUG 2022-09-08 18:18:29,051 [main][DefaultIdentifierGeneratorFactory.java:81] : Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
DEBUG 2022-09-08 18:18:29,052 [main][DefaultIdentifierGeneratorFactory.java:81] : Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
DEBUG 2022-09-08 18:18:29,052 [main][DefaultIdentifierGeneratorFactory.java:81] : Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
DEBUG 2022-09-08 18:18:29,052 [main][DefaultIdentifierGeneratorFactory.java:81] : Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
DEBUG 2022-09-08 18:18:29,067 [main][Namespace.java:47] : Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
DEBUG 2022-09-08 18:18:29,081 [main][AnnotationBinder.java:511] : Binding entity from annotated class: org.example.models.Author
DEBUG 2022-09-08 18:18:29,089 [main][Ejb3Column.java:213] : Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
DEBUG 2022-09-08 18:18:29,092 [main][EntityBinder.java:416] : Import with entity name Author
DEBUG 2022-09-08 18:18:29,094 [main][EntityBinder.java:692] : Bind entity org.example.models.Author on table Author
DEBUG 2022-09-08 18:18:29,106 [main][Ejb3Column.java:213] : Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Author), mappingColumn=id, insertable=true, updatable=true, unique=false}
DEBUG 2022-09-08 18:18:29,107 [main][PropertyBinder.java:174] : MetadataSourceProcessor property id with lazy=false
DEBUG 2022-09-08 18:18:29,108 [main][AbstractPropertyHolder.java:89] : Attempting to locate auto-apply AttributeConverter for property [org.example.models.Author:id]
DEBUG 2022-09-08 18:18:29,109 [main][SimpleValueBinder.java:398] : building SimpleValue for id
DEBUG 2022-09-08 18:18:29,110 [main][PropertyBinder.java:265] : Building property id
DEBUG 2022-09-08 18:18:29,112 [main][Ejb3Column.java:213] : Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Author), mappingColumn=name, insertable=true, updatable=true, unique=false}
DEBUG 2022-09-08 18:18:29,112 [main][PropertyBinder.java:174] : MetadataSourceProcessor property name with lazy=false
DEBUG 2022-09-08 18:18:29,112 [main][AbstractPropertyHolder.java:89] : Attempting to locate auto-apply AttributeConverter for property [org.example.models.Author:name]
DEBUG 2022-09-08 18:18:29,113 [main][SimpleValueBinder.java:398] : building SimpleValue for name
DEBUG 2022-09-08 18:18:29,113 [main][PropertyBinder.java:265] : Building property name
DEBUG 2022-09-08 18:18:29,113 [main][Ejb3Column.java:213] : Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Author), mappingColumn=salary, insertable=true, updatable=true, unique=false}
DEBUG 2022-09-08 18:18:29,113 [main][PropertyBinder.java:174] : MetadataSourceProcessor property salary with lazy=false
DEBUG 2022-09-08 18:18:29,113 [main][AbstractPropertyHolder.java:89] : Attempting to locate auto-apply AttributeConverter for property [org.example.models.Author:salary]
DEBUG 2022-09-08 18:18:29,113 [main][SimpleValueBinder.java:398] : building SimpleValue for salary
DEBUG 2022-09-08 18:18:29,114 [main][PropertyBinder.java:265] : Building property salary
DEBUG 2022-09-08 18:18:29,114 [main][AnnotationBinder.java:511] : Binding entity from annotated class: org.example.models.Book
DEBUG 2022-09-08 18:18:29,114 [main][Ejb3Column.java:213] : Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
DEBUG 2022-09-08 18:18:29,114 [main][EntityBinder.java:416] : Import with entity name Book
DEBUG 2022-09-08 18:18:29,115 [main][EntityBinder.java:692] : Bind entity org.example.models.Book on table Book
DEBUG 2022-09-08 18:18:29,115 [main][Ejb3Column.java:213] : Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Book), mappingColumn=id, insertable=true, updatable=true, unique=false}
DEBUG 2022-09-08 18:18:29,115 [main][PropertyBinder.java:174] : MetadataSourceProcessor property id with lazy=false
DEBUG 2022-09-08 18:18:29,115 [main][AbstractPropertyHolder.java:89] : Attempting to locate auto-apply AttributeConverter for property [org.example.models.Book:id]
DEBUG 2022-09-08 18:18:29,116 [main][SimpleValueBinder.java:398] : building SimpleValue for id
DEBUG 2022-09-08 18:18:29,116 [main][PropertyBinder.java:265] : Building property id
DEBUG 2022-09-08 18:18:29,116 [main][Ejb3Column.java:213] : Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Book), mappingColumn=author_id, insertable=true, updatable=true, unique=false}
DEBUG 2022-09-08 18:18:29,117 [main][PropertyBinder.java:174] : MetadataSourceProcessor property author_id with lazy=false
DEBUG 2022-09-08 18:18:29,117 [main][AbstractPropertyHolder.java:89] : Attempting to locate auto-apply AttributeConverter for property [org.example.models.Book:author_id]
DEBUG 2022-09-08 18:18:29,117 [main][SimpleValueBinder.java:398] : building SimpleValue for author_id
DEBUG 2022-09-08 18:18:29,118 [main][PropertyBinder.java:265] : Building property author_id
DEBUG 2022-09-08 18:18:29,118 [main][Ejb3Column.java:213] : Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Book), mappingColumn=name, insertable=true, updatable=true, unique=false}
DEBUG 2022-09-08 18:18:29,118 [main][PropertyBinder.java:174] : MetadataSourceProcessor property name with lazy=false
DEBUG 2022-09-08 18:18:29,118 [main][AbstractPropertyHolder.java:89] : Attempting to locate auto-apply AttributeConverter for property [org.example.models.Book:name]
DEBUG 2022-09-08 18:18:29,118 [main][SimpleValueBinder.java:398] : building SimpleValue for name
DEBUG 2022-09-08 18:18:29,118 [main][PropertyBinder.java:265] : Building property name
DEBUG 2022-09-08 18:18:29,119 [main][SimpleValueBinder.java:443] : Starting fillSimpleValue for id
DEBUG 2022-09-08 18:18:29,119 [main][SimpleValueBinder.java:443] : Starting fillSimpleValue for name
DEBUG 2022-09-08 18:18:29,119 [main][SimpleValueBinder.java:443] : Starting fillSimpleValue for salary
DEBUG 2022-09-08 18:18:29,119 [main][SimpleValueBinder.java:443] : Starting fillSimpleValue for id
DEBUG 2022-09-08 18:18:29,120 [main][SimpleValueBinder.java:443] : Starting fillSimpleValue for author_id
DEBUG 2022-09-08 18:18:29,120 [main][SimpleValueBinder.java:443] : Starting fillSimpleValue for name
DEBUG 2022-09-08 18:18:29,120 [main][PrimaryKey.java:35] : Forcing column [id] to be non-null as it is part of the primary key for table [author]
DEBUG 2022-09-08 18:18:29,121 [main][PrimaryKey.java:35] : Forcing column [id] to be non-null as it is part of the primary key for table [book]
DEBUG 2022-09-08 18:18:29,140 [main][SessionFactoryImpl.java:197] : Building session factory
DEBUG 2022-09-08 18:18:29,141 [main][Settings.java:69] : SessionFactory name : null
DEBUG 2022-09-08 18:18:29,141 [main][Settings.java:70] : Automatic flush during beforeCompletion(): enabled
DEBUG 2022-09-08 18:18:29,141 [main][Settings.java:71] : Automatic session close at end of transaction: disabled
DEBUG 2022-09-08 18:18:29,141 [main][Settings.java:73] : Statistics: disabled
DEBUG 2022-09-08 18:18:29,141 [main][Settings.java:75] : Deleted entity synthetic identifier rollback: disabled
DEBUG 2022-09-08 18:18:29,141 [main][Settings.java:76] : Default entity-mode: pojo
DEBUG 2022-09-08 18:18:29,141 [main][Settings.java:77] : Check Nullability in Core (should be disabled when Bean Validation is on): enabled
DEBUG 2022-09-08 18:18:29,141 [main][Settings.java:78] : Allow initialization of lazy state outside session : disabled
DEBUG 2022-09-08 18:18:29,142 [main][Settings.java:80] : Using BatchFetchStyle : LEGACY
DEBUG 2022-09-08 18:18:29,142 [main][Settings.java:81] : Default batch fetch size: -1
DEBUG 2022-09-08 18:18:29,142 [main][Settings.java:82] : Maximum outer join fetch depth: 2
DEBUG 2022-09-08 18:18:29,142 [main][Settings.java:83] : Default null ordering: NONE
DEBUG 2022-09-08 18:18:29,142 [main][Settings.java:84] : Order SQL updates by primary key: disabled
DEBUG 2022-09-08 18:18:29,142 [main][Settings.java:85] : Order SQL inserts for batching: disabled
DEBUG 2022-09-08 18:18:29,142 [main][Settings.java:87] : multi-tenancy strategy : NONE
DEBUG 2022-09-08 18:18:29,143 [main][Settings.java:89] : JTA Track by Thread: enabled
DEBUG 2022-09-08 18:18:29,143 [main][Settings.java:91] : Query language substitutions: {}
DEBUG 2022-09-08 18:18:29,143 [main][Settings.java:92] : JPA query language strict compliance: disabled
DEBUG 2022-09-08 18:18:29,143 [main][Settings.java:93] : Named query checking : enabled
DEBUG 2022-09-08 18:18:29,143 [main][Settings.java:95] : Second-level cache: enabled
DEBUG 2022-09-08 18:18:29,143 [main][Settings.java:96] : Second-level query cache: disabled
DEBUG 2022-09-08 18:18:29,143 [main][Settings.java:97] : Second-level query cache factory: org.hibernate.cache.internal.StandardQueryCacheFactory@3f851f60
DEBUG 2022-09-08 18:18:29,143 [main][Settings.java:98] : Second-level cache region prefix: null
DEBUG 2022-09-08 18:18:29,143 [main][Settings.java:99] : Optimize second-level cache for minimal puts: disabled
DEBUG 2022-09-08 18:18:29,143 [main][Settings.java:100] : Structured second-level cache entries: disabled
DEBUG 2022-09-08 18:18:29,144 [main][Settings.java:101] : Second-level cache direct-reference entries: disabled
DEBUG 2022-09-08 18:18:29,144 [main][Settings.java:102] : Automatic eviction of collection cache: disabled
DEBUG 2022-09-08 18:18:29,144 [main][Settings.java:104] : JDBC batch size: 15
DEBUG 2022-09-08 18:18:29,144 [main][Settings.java:105] : JDBC batch updates for versioned data: enabled
DEBUG 2022-09-08 18:18:29,144 [main][Settings.java:106] : Scrollable result sets: enabled
DEBUG 2022-09-08 18:18:29,144 [main][Settings.java:107] : Wrap result sets: disabled
DEBUG 2022-09-08 18:18:29,144 [main][Settings.java:108] : JDBC3 getGeneratedKeys(): enabled
DEBUG 2022-09-08 18:18:29,144 [main][Settings.java:109] : JDBC result set fetch size: null
DEBUG 2022-09-08 18:18:29,144 [main][Settings.java:110] : Connection release mode: AFTER_TRANSACTION
DEBUG 2022-09-08 18:18:29,144 [main][Settings.java:111] : Generate SQL with comments: disabled
DEBUG 2022-09-08 18:18:29,167 [main][SessionFactoryImpl.java:252] : Session factory constructed with filter configurations : {}
DEBUG 2022-09-08 18:18:29,167 [main][SessionFactoryImpl.java:253] : Instantiating session factory with properties: {awt.toolkit=sun.lwawt.macosx.LWCToolkit, java.specification.version=11, file.encoding.pkg=sun.io, jdk.extensions.version=11.0.15.0, sun.jnu.encoding=UTF-8, hibernate.dialect=org.hibernate.dialect.MySQLDialect, java.class.path=/Users/vdonets/IdeaProjects/testmaven/target/classes:/Users/vdonets/.m2/repository/org/hibernate/hibernate-core/5.2.2.Final/hibernate-core-5.2.2.Final.jar:/Users/vdonets/.m2/repository/org/jboss/logging/jboss-logging/3.3.0.Final/jboss-logging-3.3.0.Final.jar:/Users/vdonets/.m2/repository/org/hibernate/javax/persistence/hibernate-jpa-2.1-api/1.0.0.Final/hibernate-jpa-2.1-api-1.0.0.Final.jar:/Users/vdonets/.m2/repository/org/javassist/javassist/3.20.0-GA/javassist-3.20.0-GA.jar:/Users/vdonets/.m2/repository/antlr/antlr/2.7.7/antlr-2.7.7.jar:/Users/vdonets/.m2/repository/org/apache/geronimo/specs/geronimo-jta_1.1_spec/1.1.1/geronimo-jta_1.1_spec-1.1.1.jar:/Users/vdonets/.m2/repository/org/jboss/jandex/2.0.0.Final/jandex-2.0.0.Final.jar:/Users/vdonets/.m2/repository/com/fasterxml/classmate/1.3.0/classmate-1.3.0.jar:/Users/vdonets/.m2/repository/dom4j/dom4j/1.6.1/dom4j-1.6.1.jar:/Users/vdonets/.m2/repository/org/hibernate/common/hibernate-commons-annotations/5.0.1.Final/hibernate-commons-annotations-5.0.1.Final.jar:/Users/vdonets/.m2/repository/javax/enterprise/cdi-api/1.1/cdi-api-1.1.jar:/Users/vdonets/.m2/repository/javax/el/el-api/2.2/el-api-2.2.jar:/Users/vdonets/.m2/repository/org/jboss/spec/javax/interceptor/jboss-interceptors-api_1.1_spec/1.0.0.Beta1/jboss-interceptors-api_1.1_spec-1.0.0.Beta1.jar:/Users/vdonets/.m2/repository/javax/annotation/jsr250-api/1.0/jsr250-api-1.0.jar:/Users/vdonets/.m2/repository/javax/inject/javax.inject/1/javax.inject-1.jar:/Users/vdonets/.m2/repository/mysql/mysql-connector-java/8.0.29/mysql-connector-java-8.0.29.jar:/Users/vdonets/.m2/repository/com/google/protobuf/protobuf-java/3.19.4/protobuf-java-3.19.4.jar:/Users/vdonets/.m2/repository/jakarta/xml/bind/jakarta.xml.bind-api/2.3.2/jakarta.xml.bind-api-2.3.2.jar:/Users/vdonets/.m2/repository/jakarta/activation/jakarta.activation-api/1.2.1/jakarta.activation-api-1.2.1.jar:/Users/vdonets/.m2/repository/org/glassfish/jaxb/jaxb-runtime/2.3.2/jaxb-runtime-2.3.2.jar:/Users/vdonets/.m2/repository/org/glassfish/jaxb/txw2/2.3.2/txw2-2.3.2.jar:/Users/vdonets/.m2/repository/com/sun/istack/istack-commons-runtime/3.0.8/istack-commons-runtime-3.0.8.jar:/Users/vdonets/.m2/repository/org/jvnet/staxex/stax-ex/1.8.1/stax-ex-1.8.1.jar:/Users/vdonets/.m2/repository/com/sun/xml/fastinfoset/FastInfoset/1.2.16/FastInfoset-1.2.16.jar:/Users/vdonets/.m2/repository/log4j/log4j/1.2.14/log4j-1.2.14.jar:/Applications/IntelliJ IDEA.app/Contents/lib/idea_rt.jar:/Users/vdonets/Library/Caches/JetBrains/IntelliJIdea2022.1/captureAgent/debugger-agent.jar, java.vm.vendor=Eclipse OpenJ9, sun.arch.data.model=64, com.ibm.vm.bitmode=64, hbm2ddl.auto=create-drop, user.variant=, com.ibm.oti.vm.library.version=29, java.vendor.url=https://www.ibm.com/semeru-runtimes, user.timezone=Europe/Warsaw, java.vm.specification.version=11, os.name=Mac OS X, sun.java.launcher=SUN_STANDARD, user.country=US, sun.boot.library.path=/Users/vdonets/Library/Java/JavaVirtualMachines/semeru-11.0.15/Contents/Home/lib/default:/Users/vdonets/Library/Java/JavaVirtualMachines/semeru-11.0.15/Contents/Home/lib, sun.java.command=org.example.Main, sun.cpu.endian=little, user.home=/Users/vdonets, user.language=en, java.specification.vendor=Oracle Corporation, java.version.date=2022-04-19, java.home=/Users/vdonets/Library/Java/JavaVirtualMachines/semeru-11.0.15/Contents/Home, ibm.signalhandling.rs=false, jdk.extensions.name=Extensions for OpenJDK for Eclipse OpenJ9, file.separator=/, line.separator=
, java.specification.name=Java Platform API Specification, java.vm.specification.vendor=Oracle Corporation, intellij.debug.agent=true, java.compiler=j9jit29, com.ibm.util.extralibs.properties=, java.awt.graphicsenv=sun.awt.CGraphicsEnvironment, com.ibm.oti.configuration=scar, com.ibm.oti.shared.enabled=false, hibernate.hbm2ddl.auto=create-drop, com.ibm.oti.vm.bootstrap.library.path=/Users/vdonets/Library/Java/JavaVirtualMachines/semeru-11.0.15/Contents/Home/lib/default:/Users/vdonets/Library/Java/JavaVirtualMachines/semeru-11.0.15/Contents/Home/lib, com.ibm.cpu.endian=little, java.fullversion=11.0.15-ea+10
JRE 11 Mac OS X aarch64-64-Bit 20220422_36 (JIT enabled, AOT enabled)
OpenJ9   - 9a84ec34e
OMR      - ab24b6666
JCL      - b7b5b42ea6 based on jdk-11.0.15+10, java.runtime.version=11.0.15-ea+10, user.name=vdonets, path.separator=:, hibernate.connection.username=root, os.version=12.5, java.runtime.name=IBM Semeru Runtime Open Edition, hibernate.connection.url=jdbc:mysql://localhost:3306/classicmodels?serverTimezone=UTC, connection.pool_size=5, ibm.signalhandling.sigint=true, file.encoding=UTF-8, java.vm.name=Eclipse OpenJ9 VM, hibernate.show_sql=true, java.vendor.version=11.0.15.0, ibm.signalhandling.sigchain=true, show_sql=true, hibernate.connection.driver_class=com.mysql.cj.jdbc.Driver, java.vendor.url.bug=https://github.com/ibmruntimes/Semeru-Runtimes/issues, java.io.tmpdir=/var/folders/wv/6c3_66yd6kq3r7z477kwz4lr0000gn/T/, java.version=11.0.15-ea, jboss.modules.system.pkgs=com.intellij.rt, com.ibm.system.agent.path=/Users/vdonets/Library/Java/JavaVirtualMachines/semeru-11.0.15/Contents/Home/lib, user.dir=/Users/vdonets/IdeaProjects/testmaven, os.arch=aarch64, java.vm.specification.name=Java Virtual Machine Specification, java.awt.printerjob=sun.lwawt.macosx.CPrinterJob, hibernate.connection.password=****, os.encoding=UTF-8, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@1495b017, java.library.path=/Users/vdonets/Library/Java/JavaVirtualMachines/semeru-11.0.15/Contents/Home/lib/default:/Users/vdonets/Library/Java/JavaVirtualMachines/semeru-11.0.15/Contents/Home/lib:/usr/lib, java.vendor=IBM Corporation, java.vm.info=JRE 11 Mac OS X aarch64-64-Bit 20220422_36 (JIT enabled, AOT enabled)
OpenJ9   - 9a84ec34e
OMR      - ab24b6666
JCL      - b7b5b42ea6 based on jdk-11.0.15+10, java.vm.version=openj9-0.32.0, ibm.system.encoding=UTF-8, hibernate.bytecode.use_reflection_optimizer=false, com.ibm.jcl.checkClassPath=, sun.io.unicode.encoding=UnicodeLittle, hibernate.connection.pool_size=5, java.class.version=55.0}
DEBUG 2022-09-08 18:18:29,171 [main][JaccIntegrator.java:80] : Skipping JACC integration as it was not enabled
DEBUG 2022-09-08 18:18:29,172 [main][SessionFactoryImpl.java:292] : Instantiated session factory
DEBUG 2022-09-08 18:18:29,194 [main][ClassLoaderAccessImpl.java:55] : Not known whether passed class name [org.example.models.Book] is safe
DEBUG 2022-09-08 18:18:29,197 [main][ClassLoaderAccessImpl.java:57] : No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.models.Book
DEBUG 2022-09-08 18:18:29,202 [main][ClassLoaderAccessImpl.java:55] : Not known whether passed class name [org.example.models.Book] is safe
DEBUG 2022-09-08 18:18:29,202 [main][ClassLoaderAccessImpl.java:57] : No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.models.Book
DEBUG 2022-09-08 18:18:29,225 [main][ClassLoaderAccessImpl.java:55] : Not known whether passed class name [org.example.models.Author] is safe
DEBUG 2022-09-08 18:18:29,225 [main][ClassLoaderAccessImpl.java:57] : No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.models.Author
DEBUG 2022-09-08 18:18:29,226 [main][ClassLoaderAccessImpl.java:55] : Not known whether passed class name [org.example.models.Author] is safe
DEBUG 2022-09-08 18:18:29,226 [main][ClassLoaderAccessImpl.java:57] : No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.models.Author
DEBUG 2022-09-08 18:18:29,229 [main][AbstractEntityPersister.java:3529] : Static SQL for entity: org.example.models.Book
DEBUG 2022-09-08 18:18:29,229 [main][AbstractEntityPersister.java:3534] :  Version select: select id from Book where id =?
DEBUG 2022-09-08 18:18:29,230 [main][AbstractEntityPersister.java:3537] :  Snapshot select: select book_.id, book_.author_id as author_i2_1_, book_.name as name3_1_ from Book book_ where book_.id=?
DEBUG 2022-09-08 18:18:29,230 [main][DelegatingBasicLogger.java:394] :  Insert 0: insert into Book (author_id, name, id) values (?, ?, ?)
DEBUG 2022-09-08 18:18:29,230 [main][DelegatingBasicLogger.java:394] :  Update 0: update Book set author_id=?, name=? where id=?
DEBUG 2022-09-08 18:18:29,231 [main][DelegatingBasicLogger.java:394] :  Delete 0: delete from Book where id=?
DEBUG 2022-09-08 18:18:29,237 [main][QuerySpacesImpl.java:174] : Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7c527a56]
DEBUG 2022-09-08 18:18:29,238 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : author_id
DEBUG 2022-09-08 18:18:29,238 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : name
DEBUG 2022-09-08 18:18:29,238 [main][FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150] : Building LoadPlan...
DEBUG 2022-09-08 18:18:29,244 [main][LoadQueryJoinAndFetchProcessor.java:100] : processing queryspace <gen:0>
DEBUG 2022-09-08 18:18:29,246 [main][LoadPlanTreePrinter.java:55] : LoadPlan(entity=org.example.models.Book)
    - Returns
       - EntityReturnImpl(entity=org.example.models.Book, querySpaceUid=<gen:0>, path=org.example.models.Book)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=org.example.models.Book)
          - SQL table alias mapping - book0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

DEBUG 2022-09-08 18:18:29,247 [main][EntityLoader.java:115] : Static select for entity org.example.models.Book [NONE]: select book0_.id as id1_1_0_, book0_.author_id as author_i2_1_0_, book0_.name as name3_1_0_ from Book book0_ where book0_.id=?
DEBUG 2022-09-08 18:18:29,247 [main][QuerySpacesImpl.java:174] : Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@658396bf]
DEBUG 2022-09-08 18:18:29,247 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : author_id
DEBUG 2022-09-08 18:18:29,248 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : name
DEBUG 2022-09-08 18:18:29,248 [main][FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150] : Building LoadPlan...
DEBUG 2022-09-08 18:18:29,248 [main][LoadQueryJoinAndFetchProcessor.java:100] : processing queryspace <gen:0>
DEBUG 2022-09-08 18:18:29,248 [main][LoadPlanTreePrinter.java:55] : LoadPlan(entity=org.example.models.Book)
    - Returns
       - EntityReturnImpl(entity=org.example.models.Book, querySpaceUid=<gen:0>, path=org.example.models.Book)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=org.example.models.Book)
          - SQL table alias mapping - book0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

DEBUG 2022-09-08 18:18:29,248 [main][EntityLoader.java:115] : Static select for entity org.example.models.Book [READ]: select book0_.id as id1_1_0_, book0_.author_id as author_i2_1_0_, book0_.name as name3_1_0_ from Book book0_ where book0_.id=?
DEBUG 2022-09-08 18:18:29,248 [main][QuerySpacesImpl.java:174] : Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2cd4e315]
DEBUG 2022-09-08 18:18:29,249 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : author_id
DEBUG 2022-09-08 18:18:29,249 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : name
DEBUG 2022-09-08 18:18:29,249 [main][FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150] : Building LoadPlan...
DEBUG 2022-09-08 18:18:29,249 [main][LoadQueryJoinAndFetchProcessor.java:100] : processing queryspace <gen:0>
DEBUG 2022-09-08 18:18:29,249 [main][LoadPlanTreePrinter.java:55] : LoadPlan(entity=org.example.models.Book)
    - Returns
       - EntityReturnImpl(entity=org.example.models.Book, querySpaceUid=<gen:0>, path=org.example.models.Book)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=org.example.models.Book)
          - SQL table alias mapping - book0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

DEBUG 2022-09-08 18:18:29,249 [main][EntityLoader.java:115] : Static select for entity org.example.models.Book [UPGRADE]: select book0_.id as id1_1_0_, book0_.author_id as author_i2_1_0_, book0_.name as name3_1_0_ from Book book0_ where book0_.id=? for update
DEBUG 2022-09-08 18:18:29,249 [main][QuerySpacesImpl.java:174] : Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4342bedc]
DEBUG 2022-09-08 18:18:29,250 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : author_id
DEBUG 2022-09-08 18:18:29,250 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : name
DEBUG 2022-09-08 18:18:29,250 [main][FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150] : Building LoadPlan...
DEBUG 2022-09-08 18:18:29,250 [main][LoadQueryJoinAndFetchProcessor.java:100] : processing queryspace <gen:0>
DEBUG 2022-09-08 18:18:29,250 [main][LoadPlanTreePrinter.java:55] : LoadPlan(entity=org.example.models.Book)
    - Returns
       - EntityReturnImpl(entity=org.example.models.Book, querySpaceUid=<gen:0>, path=org.example.models.Book)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=org.example.models.Book)
          - SQL table alias mapping - book0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

DEBUG 2022-09-08 18:18:29,250 [main][EntityLoader.java:115] : Static select for entity org.example.models.Book [UPGRADE_NOWAIT]: select book0_.id as id1_1_0_, book0_.author_id as author_i2_1_0_, book0_.name as name3_1_0_ from Book book0_ where book0_.id=? for update
DEBUG 2022-09-08 18:18:29,251 [main][QuerySpacesImpl.java:174] : Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4fd63689]
DEBUG 2022-09-08 18:18:29,251 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : author_id
DEBUG 2022-09-08 18:18:29,251 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : name
DEBUG 2022-09-08 18:18:29,251 [main][FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150] : Building LoadPlan...
DEBUG 2022-09-08 18:18:29,251 [main][LoadQueryJoinAndFetchProcessor.java:100] : processing queryspace <gen:0>
DEBUG 2022-09-08 18:18:29,251 [main][LoadPlanTreePrinter.java:55] : LoadPlan(entity=org.example.models.Book)
    - Returns
       - EntityReturnImpl(entity=org.example.models.Book, querySpaceUid=<gen:0>, path=org.example.models.Book)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=org.example.models.Book)
          - SQL table alias mapping - book0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

DEBUG 2022-09-08 18:18:29,252 [main][EntityLoader.java:115] : Static select for entity org.example.models.Book [UPGRADE_SKIPLOCKED]: select book0_.id as id1_1_0_, book0_.author_id as author_i2_1_0_, book0_.name as name3_1_0_ from Book book0_ where book0_.id=? for update
DEBUG 2022-09-08 18:18:29,252 [main][QuerySpacesImpl.java:174] : Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@601f1d0e]
DEBUG 2022-09-08 18:18:29,252 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : author_id
DEBUG 2022-09-08 18:18:29,252 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : name
DEBUG 2022-09-08 18:18:29,252 [main][FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150] : Building LoadPlan...
DEBUG 2022-09-08 18:18:29,253 [main][LoadQueryJoinAndFetchProcessor.java:100] : processing queryspace <gen:0>
DEBUG 2022-09-08 18:18:29,253 [main][LoadPlanTreePrinter.java:55] : LoadPlan(entity=org.example.models.Book)
    - Returns
       - EntityReturnImpl(entity=org.example.models.Book, querySpaceUid=<gen:0>, path=org.example.models.Book)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=org.example.models.Book)
          - SQL table alias mapping - book0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

DEBUG 2022-09-08 18:18:29,253 [main][EntityLoader.java:115] : Static select for entity org.example.models.Book [FORCE]: select book0_.id as id1_1_0_, book0_.author_id as author_i2_1_0_, book0_.name as name3_1_0_ from Book book0_ where book0_.id=? for update
DEBUG 2022-09-08 18:18:29,254 [main][QuerySpacesImpl.java:174] : Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@96c549e1]
DEBUG 2022-09-08 18:18:29,254 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : author_id
DEBUG 2022-09-08 18:18:29,254 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : name
DEBUG 2022-09-08 18:18:29,254 [main][FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150] : Building LoadPlan...
DEBUG 2022-09-08 18:18:29,254 [main][LoadQueryJoinAndFetchProcessor.java:100] : processing queryspace <gen:0>
DEBUG 2022-09-08 18:18:29,254 [main][LoadPlanTreePrinter.java:55] : LoadPlan(entity=org.example.models.Book)
    - Returns
       - EntityReturnImpl(entity=org.example.models.Book, querySpaceUid=<gen:0>, path=org.example.models.Book)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=org.example.models.Book)
          - SQL table alias mapping - book0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

DEBUG 2022-09-08 18:18:29,254 [main][EntityLoader.java:115] : Static select for entity org.example.models.Book [PESSIMISTIC_READ]: select book0_.id as id1_1_0_, book0_.author_id as author_i2_1_0_, book0_.name as name3_1_0_ from Book book0_ where book0_.id=? lock in share mode
DEBUG 2022-09-08 18:18:29,255 [main][QuerySpacesImpl.java:174] : Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@166c7d74]
DEBUG 2022-09-08 18:18:29,255 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : author_id
DEBUG 2022-09-08 18:18:29,255 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : name
DEBUG 2022-09-08 18:18:29,255 [main][FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150] : Building LoadPlan...
DEBUG 2022-09-08 18:18:29,255 [main][LoadQueryJoinAndFetchProcessor.java:100] : processing queryspace <gen:0>
DEBUG 2022-09-08 18:18:29,255 [main][LoadPlanTreePrinter.java:55] : LoadPlan(entity=org.example.models.Book)
    - Returns
       - EntityReturnImpl(entity=org.example.models.Book, querySpaceUid=<gen:0>, path=org.example.models.Book)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=org.example.models.Book)
          - SQL table alias mapping - book0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

DEBUG 2022-09-08 18:18:29,255 [main][EntityLoader.java:115] : Static select for entity org.example.models.Book [PESSIMISTIC_WRITE]: select book0_.id as id1_1_0_, book0_.author_id as author_i2_1_0_, book0_.name as name3_1_0_ from Book book0_ where book0_.id=? for update
DEBUG 2022-09-08 18:18:29,256 [main][QuerySpacesImpl.java:174] : Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@649d1a77]
DEBUG 2022-09-08 18:18:29,256 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : author_id
DEBUG 2022-09-08 18:18:29,256 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : name
DEBUG 2022-09-08 18:18:29,256 [main][FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150] : Building LoadPlan...
DEBUG 2022-09-08 18:18:29,256 [main][LoadQueryJoinAndFetchProcessor.java:100] : processing queryspace <gen:0>
DEBUG 2022-09-08 18:18:29,256 [main][LoadPlanTreePrinter.java:55] : LoadPlan(entity=org.example.models.Book)
    - Returns
       - EntityReturnImpl(entity=org.example.models.Book, querySpaceUid=<gen:0>, path=org.example.models.Book)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=org.example.models.Book)
          - SQL table alias mapping - book0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

DEBUG 2022-09-08 18:18:29,256 [main][EntityLoader.java:115] : Static select for entity org.example.models.Book [PESSIMISTIC_FORCE_INCREMENT]: select book0_.id as id1_1_0_, book0_.author_id as author_i2_1_0_, book0_.name as name3_1_0_ from Book book0_ where book0_.id=? for update
DEBUG 2022-09-08 18:18:29,256 [main][QuerySpacesImpl.java:174] : Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@af4e0864]
DEBUG 2022-09-08 18:18:29,257 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : author_id
DEBUG 2022-09-08 18:18:29,257 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : name
DEBUG 2022-09-08 18:18:29,257 [main][FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150] : Building LoadPlan...
DEBUG 2022-09-08 18:18:29,257 [main][LoadQueryJoinAndFetchProcessor.java:100] : processing queryspace <gen:0>
DEBUG 2022-09-08 18:18:29,257 [main][LoadPlanTreePrinter.java:55] : LoadPlan(entity=org.example.models.Book)
    - Returns
       - EntityReturnImpl(entity=org.example.models.Book, querySpaceUid=<gen:0>, path=org.example.models.Book)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=org.example.models.Book)
          - SQL table alias mapping - book0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

DEBUG 2022-09-08 18:18:29,257 [main][EntityLoader.java:115] : Static select for entity org.example.models.Book [OPTIMISTIC]: select book0_.id as id1_1_0_, book0_.author_id as author_i2_1_0_, book0_.name as name3_1_0_ from Book book0_ where book0_.id=?
DEBUG 2022-09-08 18:18:29,257 [main][QuerySpacesImpl.java:174] : Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@71ab982c]
DEBUG 2022-09-08 18:18:29,258 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : author_id
DEBUG 2022-09-08 18:18:29,258 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : name
DEBUG 2022-09-08 18:18:29,258 [main][FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150] : Building LoadPlan...
DEBUG 2022-09-08 18:18:29,258 [main][LoadQueryJoinAndFetchProcessor.java:100] : processing queryspace <gen:0>
DEBUG 2022-09-08 18:18:29,258 [main][LoadPlanTreePrinter.java:55] : LoadPlan(entity=org.example.models.Book)
    - Returns
       - EntityReturnImpl(entity=org.example.models.Book, querySpaceUid=<gen:0>, path=org.example.models.Book)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=org.example.models.Book)
          - SQL table alias mapping - book0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

DEBUG 2022-09-08 18:18:29,258 [main][EntityLoader.java:115] : Static select for entity org.example.models.Book [OPTIMISTIC_FORCE_INCREMENT]: select book0_.id as id1_1_0_, book0_.author_id as author_i2_1_0_, book0_.name as name3_1_0_ from Book book0_ where book0_.id=?
DEBUG 2022-09-08 18:18:29,265 [main][CascadeEntityLoader.java:38] : Static select for action ACTION_MERGE on entity org.example.models.Book: select book0_.id as id1_1_0_, book0_.author_id as author_i2_1_0_, book0_.name as name3_1_0_ from Book book0_ where book0_.id=?
DEBUG 2022-09-08 18:18:29,265 [main][CascadeEntityLoader.java:38] : Static select for action ACTION_REFRESH on entity org.example.models.Book: select book0_.id as id1_1_0_, book0_.author_id as author_i2_1_0_, book0_.name as name3_1_0_ from Book book0_ where book0_.id=?
DEBUG 2022-09-08 18:18:29,267 [main][AbstractEntityPersister.java:3529] : Static SQL for entity: org.example.models.Author
DEBUG 2022-09-08 18:18:29,268 [main][AbstractEntityPersister.java:3534] :  Version select: select id from Author where id =?
DEBUG 2022-09-08 18:18:29,268 [main][AbstractEntityPersister.java:3537] :  Snapshot select: select author_.id, author_.name as name2_0_, author_.salary as salary3_0_ from Author author_ where author_.id=?
DEBUG 2022-09-08 18:18:29,268 [main][DelegatingBasicLogger.java:394] :  Insert 0: insert into Author (name, salary, id) values (?, ?, ?)
DEBUG 2022-09-08 18:18:29,268 [main][DelegatingBasicLogger.java:394] :  Update 0: update Author set name=?, salary=? where id=?
DEBUG 2022-09-08 18:18:29,268 [main][DelegatingBasicLogger.java:394] :  Delete 0: delete from Author where id=?
DEBUG 2022-09-08 18:18:29,268 [main][AbstractEntityPersister.java:3545] :  Identity insert: insert into Author (name, salary) values (?, ?)
DEBUG 2022-09-08 18:18:29,268 [main][QuerySpacesImpl.java:174] : Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1fcf12d8]
DEBUG 2022-09-08 18:18:29,268 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : name
DEBUG 2022-09-08 18:18:29,268 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : salary
DEBUG 2022-09-08 18:18:29,269 [main][FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150] : Building LoadPlan...
DEBUG 2022-09-08 18:18:29,269 [main][LoadQueryJoinAndFetchProcessor.java:100] : processing queryspace <gen:0>
DEBUG 2022-09-08 18:18:29,269 [main][LoadPlanTreePrinter.java:55] : LoadPlan(entity=org.example.models.Author)
    - Returns
       - EntityReturnImpl(entity=org.example.models.Author, querySpaceUid=<gen:0>, path=org.example.models.Author)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=org.example.models.Author)
          - SQL table alias mapping - author0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

DEBUG 2022-09-08 18:18:29,269 [main][EntityLoader.java:115] : Static select for entity org.example.models.Author [NONE]: select author0_.id as id1_0_0_, author0_.name as name2_0_0_, author0_.salary as salary3_0_0_ from Author author0_ where author0_.id=?
DEBUG 2022-09-08 18:18:29,269 [main][QuerySpacesImpl.java:174] : Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7db474fa]
DEBUG 2022-09-08 18:18:29,269 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : name
DEBUG 2022-09-08 18:18:29,270 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : salary
DEBUG 2022-09-08 18:18:29,270 [main][FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150] : Building LoadPlan...
DEBUG 2022-09-08 18:18:29,270 [main][LoadQueryJoinAndFetchProcessor.java:100] : processing queryspace <gen:0>
DEBUG 2022-09-08 18:18:29,270 [main][LoadPlanTreePrinter.java:55] : LoadPlan(entity=org.example.models.Author)
    - Returns
       - EntityReturnImpl(entity=org.example.models.Author, querySpaceUid=<gen:0>, path=org.example.models.Author)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=org.example.models.Author)
          - SQL table alias mapping - author0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

DEBUG 2022-09-08 18:18:29,270 [main][EntityLoader.java:115] : Static select for entity org.example.models.Author [READ]: select author0_.id as id1_0_0_, author0_.name as name2_0_0_, author0_.salary as salary3_0_0_ from Author author0_ where author0_.id=?
DEBUG 2022-09-08 18:18:29,271 [main][QuerySpacesImpl.java:174] : Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6a3a3008]
DEBUG 2022-09-08 18:18:29,271 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : name
DEBUG 2022-09-08 18:18:29,271 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : salary
DEBUG 2022-09-08 18:18:29,271 [main][FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150] : Building LoadPlan...
DEBUG 2022-09-08 18:18:29,271 [main][LoadQueryJoinAndFetchProcessor.java:100] : processing queryspace <gen:0>
DEBUG 2022-09-08 18:18:29,272 [main][LoadPlanTreePrinter.java:55] : LoadPlan(entity=org.example.models.Author)
    - Returns
       - EntityReturnImpl(entity=org.example.models.Author, querySpaceUid=<gen:0>, path=org.example.models.Author)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=org.example.models.Author)
          - SQL table alias mapping - author0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

DEBUG 2022-09-08 18:18:29,272 [main][EntityLoader.java:115] : Static select for entity org.example.models.Author [UPGRADE]: select author0_.id as id1_0_0_, author0_.name as name2_0_0_, author0_.salary as salary3_0_0_ from Author author0_ where author0_.id=? for update
DEBUG 2022-09-08 18:18:29,272 [main][QuerySpacesImpl.java:174] : Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@aefec422]
DEBUG 2022-09-08 18:18:29,272 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : name
DEBUG 2022-09-08 18:18:29,272 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : salary
DEBUG 2022-09-08 18:18:29,272 [main][FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150] : Building LoadPlan...
DEBUG 2022-09-08 18:18:29,272 [main][LoadQueryJoinAndFetchProcessor.java:100] : processing queryspace <gen:0>
DEBUG 2022-09-08 18:18:29,273 [main][LoadPlanTreePrinter.java:55] : LoadPlan(entity=org.example.models.Author)
    - Returns
       - EntityReturnImpl(entity=org.example.models.Author, querySpaceUid=<gen:0>, path=org.example.models.Author)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=org.example.models.Author)
          - SQL table alias mapping - author0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

DEBUG 2022-09-08 18:18:29,273 [main][EntityLoader.java:115] : Static select for entity org.example.models.Author [UPGRADE_NOWAIT]: select author0_.id as id1_0_0_, author0_.name as name2_0_0_, author0_.salary as salary3_0_0_ from Author author0_ where author0_.id=? for update
DEBUG 2022-09-08 18:18:29,273 [main][QuerySpacesImpl.java:174] : Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@42b875d7]
DEBUG 2022-09-08 18:18:29,274 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : name
DEBUG 2022-09-08 18:18:29,274 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : salary
DEBUG 2022-09-08 18:18:29,274 [main][FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150] : Building LoadPlan...
DEBUG 2022-09-08 18:18:29,275 [main][LoadQueryJoinAndFetchProcessor.java:100] : processing queryspace <gen:0>
DEBUG 2022-09-08 18:18:29,275 [main][LoadPlanTreePrinter.java:55] : LoadPlan(entity=org.example.models.Author)
    - Returns
       - EntityReturnImpl(entity=org.example.models.Author, querySpaceUid=<gen:0>, path=org.example.models.Author)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=org.example.models.Author)
          - SQL table alias mapping - author0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

DEBUG 2022-09-08 18:18:29,275 [main][EntityLoader.java:115] : Static select for entity org.example.models.Author [UPGRADE_SKIPLOCKED]: select author0_.id as id1_0_0_, author0_.name as name2_0_0_, author0_.salary as salary3_0_0_ from Author author0_ where author0_.id=? for update
DEBUG 2022-09-08 18:18:29,275 [main][QuerySpacesImpl.java:174] : Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@f48f43c0]
DEBUG 2022-09-08 18:18:29,275 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : name
DEBUG 2022-09-08 18:18:29,275 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : salary
DEBUG 2022-09-08 18:18:29,276 [main][FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150] : Building LoadPlan...
DEBUG 2022-09-08 18:18:29,276 [main][LoadQueryJoinAndFetchProcessor.java:100] : processing queryspace <gen:0>
DEBUG 2022-09-08 18:18:29,276 [main][LoadPlanTreePrinter.java:55] : LoadPlan(entity=org.example.models.Author)
    - Returns
       - EntityReturnImpl(entity=org.example.models.Author, querySpaceUid=<gen:0>, path=org.example.models.Author)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=org.example.models.Author)
          - SQL table alias mapping - author0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

DEBUG 2022-09-08 18:18:29,276 [main][EntityLoader.java:115] : Static select for entity org.example.models.Author [FORCE]: select author0_.id as id1_0_0_, author0_.name as name2_0_0_, author0_.salary as salary3_0_0_ from Author author0_ where author0_.id=? for update
DEBUG 2022-09-08 18:18:29,276 [main][QuerySpacesImpl.java:174] : Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2ca5332d]
DEBUG 2022-09-08 18:18:29,276 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : name
DEBUG 2022-09-08 18:18:29,276 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : salary
DEBUG 2022-09-08 18:18:29,277 [main][FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150] : Building LoadPlan...
DEBUG 2022-09-08 18:18:29,277 [main][LoadQueryJoinAndFetchProcessor.java:100] : processing queryspace <gen:0>
DEBUG 2022-09-08 18:18:29,277 [main][LoadPlanTreePrinter.java:55] : LoadPlan(entity=org.example.models.Author)
    - Returns
       - EntityReturnImpl(entity=org.example.models.Author, querySpaceUid=<gen:0>, path=org.example.models.Author)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=org.example.models.Author)
          - SQL table alias mapping - author0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

DEBUG 2022-09-08 18:18:29,277 [main][EntityLoader.java:115] : Static select for entity org.example.models.Author [PESSIMISTIC_READ]: select author0_.id as id1_0_0_, author0_.name as name2_0_0_, author0_.salary as salary3_0_0_ from Author author0_ where author0_.id=? lock in share mode
DEBUG 2022-09-08 18:18:29,277 [main][QuerySpacesImpl.java:174] : Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@e7a38074]
DEBUG 2022-09-08 18:18:29,278 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : name
DEBUG 2022-09-08 18:18:29,278 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : salary
DEBUG 2022-09-08 18:18:29,278 [main][FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150] : Building LoadPlan...
DEBUG 2022-09-08 18:18:29,278 [main][LoadQueryJoinAndFetchProcessor.java:100] : processing queryspace <gen:0>
DEBUG 2022-09-08 18:18:29,278 [main][LoadPlanTreePrinter.java:55] : LoadPlan(entity=org.example.models.Author)
    - Returns
       - EntityReturnImpl(entity=org.example.models.Author, querySpaceUid=<gen:0>, path=org.example.models.Author)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=org.example.models.Author)
          - SQL table alias mapping - author0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

DEBUG 2022-09-08 18:18:29,278 [main][EntityLoader.java:115] : Static select for entity org.example.models.Author [PESSIMISTIC_WRITE]: select author0_.id as id1_0_0_, author0_.name as name2_0_0_, author0_.salary as salary3_0_0_ from Author author0_ where author0_.id=? for update
DEBUG 2022-09-08 18:18:29,279 [main][QuerySpacesImpl.java:174] : Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@86040807]
DEBUG 2022-09-08 18:18:29,279 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : name
DEBUG 2022-09-08 18:18:29,279 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : salary
DEBUG 2022-09-08 18:18:29,279 [main][FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150] : Building LoadPlan...
DEBUG 2022-09-08 18:18:29,279 [main][LoadQueryJoinAndFetchProcessor.java:100] : processing queryspace <gen:0>
DEBUG 2022-09-08 18:18:29,279 [main][LoadPlanTreePrinter.java:55] : LoadPlan(entity=org.example.models.Author)
    - Returns
       - EntityReturnImpl(entity=org.example.models.Author, querySpaceUid=<gen:0>, path=org.example.models.Author)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=org.example.models.Author)
          - SQL table alias mapping - author0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

DEBUG 2022-09-08 18:18:29,279 [main][EntityLoader.java:115] : Static select for entity org.example.models.Author [PESSIMISTIC_FORCE_INCREMENT]: select author0_.id as id1_0_0_, author0_.name as name2_0_0_, author0_.salary as salary3_0_0_ from Author author0_ where author0_.id=? for update
DEBUG 2022-09-08 18:18:29,280 [main][QuerySpacesImpl.java:174] : Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@87489e92]
DEBUG 2022-09-08 18:18:29,280 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : name
DEBUG 2022-09-08 18:18:29,280 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : salary
DEBUG 2022-09-08 18:18:29,280 [main][FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150] : Building LoadPlan...
DEBUG 2022-09-08 18:18:29,280 [main][LoadQueryJoinAndFetchProcessor.java:100] : processing queryspace <gen:0>
DEBUG 2022-09-08 18:18:29,280 [main][LoadPlanTreePrinter.java:55] : LoadPlan(entity=org.example.models.Author)
    - Returns
       - EntityReturnImpl(entity=org.example.models.Author, querySpaceUid=<gen:0>, path=org.example.models.Author)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=org.example.models.Author)
          - SQL table alias mapping - author0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

DEBUG 2022-09-08 18:18:29,280 [main][EntityLoader.java:115] : Static select for entity org.example.models.Author [OPTIMISTIC]: select author0_.id as id1_0_0_, author0_.name as name2_0_0_, author0_.salary as salary3_0_0_ from Author author0_ where author0_.id=?
DEBUG 2022-09-08 18:18:29,281 [main][QuerySpacesImpl.java:174] : Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@99440a4]
DEBUG 2022-09-08 18:18:29,281 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : name
DEBUG 2022-09-08 18:18:29,281 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : salary
DEBUG 2022-09-08 18:18:29,281 [main][FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150] : Building LoadPlan...
DEBUG 2022-09-08 18:18:29,281 [main][LoadQueryJoinAndFetchProcessor.java:100] : processing queryspace <gen:0>
DEBUG 2022-09-08 18:18:29,281 [main][LoadPlanTreePrinter.java:55] : LoadPlan(entity=org.example.models.Author)
    - Returns
       - EntityReturnImpl(entity=org.example.models.Author, querySpaceUid=<gen:0>, path=org.example.models.Author)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=org.example.models.Author)
          - SQL table alias mapping - author0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

DEBUG 2022-09-08 18:18:29,281 [main][EntityLoader.java:115] : Static select for entity org.example.models.Author [OPTIMISTIC_FORCE_INCREMENT]: select author0_.id as id1_0_0_, author0_.name as name2_0_0_, author0_.salary as salary3_0_0_ from Author author0_ where author0_.id=?
DEBUG 2022-09-08 18:18:29,282 [main][CascadeEntityLoader.java:38] : Static select for action ACTION_MERGE on entity org.example.models.Author: select author0_.id as id1_0_0_, author0_.name as name2_0_0_, author0_.salary as salary3_0_0_ from Author author0_ where author0_.id=?
DEBUG 2022-09-08 18:18:29,282 [main][CascadeEntityLoader.java:38] : Static select for action ACTION_REFRESH on entity org.example.models.Author: select author0_.id as id1_0_0_, author0_.name as name2_0_0_, author0_.salary as salary3_0_0_ from Author author0_ where author0_.id=?
DEBUG 2022-09-08 18:18:29,296 [main][SqlStatementLogger.java:92] : drop table if exists Author
INFO  2022-09-08 18:18:29,297 [main][DdlTransactionIsolatorNonJtaImpl.java:48] : HHH10001501: Connection obtained from JdbcConnectionAccess [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess@21b2422f] for (non-JTA) DDL execution was not in auto-commit mode; the Connection 'local transaction' will be committed and the Connection will be set into auto-commit mode.
DEBUG 2022-09-08 18:18:29,304 [main][SqlStatementLogger.java:92] : drop table if exists Book
DEBUG 2022-09-08 18:18:29,310 [main][SqlStatementLogger.java:92] : drop table if exists hibernate_sequence
DEBUG 2022-09-08 18:18:29,316 [main][SqlStatementLogger.java:92] : create table Author (id bigint not null auto_increment, name varchar(255), salary integer, primary key (id))
INFO  2022-09-08 18:18:29,316 [main][DdlTransactionIsolatorNonJtaImpl.java:48] : HHH10001501: Connection obtained from JdbcConnectionAccess [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess@92fab764] for (non-JTA) DDL execution was not in auto-commit mode; the Connection 'local transaction' will be committed and the Connection will be set into auto-commit mode.
DEBUG 2022-09-08 18:18:29,325 [main][SqlStatementLogger.java:92] : create table Book (id bigint not null, author_id bigint not null, name varchar(255), primary key (id))
DEBUG 2022-09-08 18:18:29,331 [main][SqlStatementLogger.java:92] : create table hibernate_sequence (next_val bigint)
DEBUG 2022-09-08 18:18:29,334 [main][SqlStatementLogger.java:92] : insert into hibernate_sequence values ( 1 )
INFO  2022-09-08 18:18:29,337 [main][SchemaCreatorImpl.java:485] : HHH000476: Executing import script 'org.hibernate.tool.schema.internal.exec.ScriptSourceInputNonExistentImpl@7274771e'
DEBUG 2022-09-08 18:18:29,338 [main][JtaPlatformInitiator.java:42] : No JtaPlatform was specified, checking resolver
DEBUG 2022-09-08 18:18:29,338 [main][JtaPlatformResolverInitiator.java:33] : No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
DEBUG 2022-09-08 18:18:29,340 [main][StandardJtaPlatformResolver.java:101] : Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
DEBUG 2022-09-08 18:18:29,341 [main][NamedQueryRepository.java:151] : Checking 0 named HQL queries
DEBUG 2022-09-08 18:18:29,341 [main][NamedQueryRepository.java:167] : Checking 0 named SQL queries
DEBUG 2022-09-08 18:18:29,342 [main][SessionFactoryRegistry.java:52] : Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@2f7885c8
DEBUG 2022-09-08 18:18:29,343 [main][SessionFactoryRegistry.java:74] : Registering SessionFactory: d2e25af0-35ee-4e20-b3dc-a1703d7f56a1 (<unnamed>)
DEBUG 2022-09-08 18:18:29,343 [main][SessionFactoryRegistry.java:81] : Not binding SessionFactory to JNDI, no JNDI name configured
DEBUG 2022-09-08 18:18:29,367 [main][StatisticsInitiator.java:82] : Statistics initialized [enabled=false]
DEBUG 2022-09-08 18:18:29,370 [main][TransactionImpl.java:55] : begin
DEBUG 2022-09-08 18:18:29,375 [main][ActionQueue.java:272] : Executing identity-insert immediately
DEBUG 2022-09-08 18:18:29,376 [main][SqlStatementLogger.java:92] : insert into Author (name, salary) values (?, ?)
DEBUG 2022-09-08 18:18:29,385 [main][IdentifierGeneratorHelper.java:78] : Natively generated identity: 1
DEBUG 2022-09-08 18:18:29,386 [main][ResourceRegistryStandardImpl.java:104] : HHH000387: ResultSet's statement was not registered
DEBUG 2022-09-08 18:18:29,387 [main][TransactionImpl.java:66] : committing
DEBUG 2022-09-08 18:18:29,387 [main][AbstractFlushingEventListener.java:132] : Processing flush-time cascades
DEBUG 2022-09-08 18:18:29,387 [main][AbstractFlushingEventListener.java:174] : Dirty checking collections
DEBUG 2022-09-08 18:18:29,388 [main][AbstractFlushingEventListener.java:106] : Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
DEBUG 2022-09-08 18:18:29,388 [main][AbstractFlushingEventListener.java:113] : Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
DEBUG 2022-09-08 18:18:29,389 [main][EntityPrinter.java:102] : Listing entities:
DEBUG 2022-09-08 18:18:29,389 [main][EntityPrinter.java:109] : org.example.models.Author{name=David Baldacci, id=1, salary=4396}
DEBUG 2022-09-08 18:18:29,390 [main][LogicalConnectionManagedImpl.java:154] : Initiating JDBC connection release from afterTransaction
DEBUG 2022-09-08 18:18:29,392 [main][LogicalConnectionManagedImpl.java:154] : Initiating JDBC connection release from afterTransaction
DEBUG 2022-09-08 18:18:29,406 [main][TransactionImpl.java:55] : begin
DEBUG 2022-09-08 18:18:29,407 [main][ActionQueue.java:272] : Executing identity-insert immediately
DEBUG 2022-09-08 18:18:29,407 [main][SqlStatementLogger.java:92] : insert into Author (name, salary) values (?, ?)
DEBUG 2022-09-08 18:18:29,409 [main][IdentifierGeneratorHelper.java:78] : Natively generated identity: 2
DEBUG 2022-09-08 18:18:29,409 [main][ResourceRegistryStandardImpl.java:104] : HHH000387: ResultSet's statement was not registered
DEBUG 2022-09-08 18:18:29,410 [main][TransactionImpl.java:66] : committing
DEBUG 2022-09-08 18:18:29,410 [main][AbstractFlushingEventListener.java:132] : Processing flush-time cascades
DEBUG 2022-09-08 18:18:29,410 [main][AbstractFlushingEventListener.java:174] : Dirty checking collections
DEBUG 2022-09-08 18:18:29,410 [main][AbstractFlushingEventListener.java:106] : Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
DEBUG 2022-09-08 18:18:29,410 [main][AbstractFlushingEventListener.java:113] : Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
DEBUG 2022-09-08 18:18:29,410 [main][EntityPrinter.java:102] : Listing entities:
DEBUG 2022-09-08 18:18:29,410 [main][EntityPrinter.java:109] : org.example.models.Author{name=Colleen Hoover, id=2, salary=4656}
DEBUG 2022-09-08 18:18:29,411 [main][LogicalConnectionManagedImpl.java:154] : Initiating JDBC connection release from afterTransaction
DEBUG 2022-09-08 18:18:29,412 [main][LogicalConnectionManagedImpl.java:154] : Initiating JDBC connection release from afterTransaction
DEBUG 2022-09-08 18:18:29,412 [main][TransactionImpl.java:55] : begin
DEBUG 2022-09-08 18:18:29,413 [main][ActionQueue.java:272] : Executing identity-insert immediately
DEBUG 2022-09-08 18:18:29,413 [main][SqlStatementLogger.java:92] : insert into Author (name, salary) values (?, ?)
DEBUG 2022-09-08 18:18:29,417 [main][IdentifierGeneratorHelper.java:78] : Natively generated identity: 3
DEBUG 2022-09-08 18:18:29,417 [main][ResourceRegistryStandardImpl.java:104] : HHH000387: ResultSet's statement was not registered
DEBUG 2022-09-08 18:18:29,419 [main][TransactionImpl.java:66] : committing
DEBUG 2022-09-08 18:18:29,419 [main][AbstractFlushingEventListener.java:132] : Processing flush-time cascades
DEBUG 2022-09-08 18:18:29,419 [main][AbstractFlushingEventListener.java:174] : Dirty checking collections
DEBUG 2022-09-08 18:18:29,419 [main][AbstractFlushingEventListener.java:106] : Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
DEBUG 2022-09-08 18:18:29,419 [main][AbstractFlushingEventListener.java:113] : Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
DEBUG 2022-09-08 18:18:29,419 [main][EntityPrinter.java:102] : Listing entities:
DEBUG 2022-09-08 18:18:29,420 [main][EntityPrinter.java:109] : org.example.models.Author{name=Stuart Woods, id=3, salary=3283}
DEBUG 2022-09-08 18:18:29,420 [main][LogicalConnectionManagedImpl.java:154] : Initiating JDBC connection release from afterTransaction
DEBUG 2022-09-08 18:18:29,421 [main][LogicalConnectionManagedImpl.java:154] : Initiating JDBC connection release from afterTransaction
DEBUG 2022-09-08 18:18:29,421 [main][TransactionImpl.java:55] : begin
DEBUG 2022-09-08 18:18:29,422 [main][ActionQueue.java:272] : Executing identity-insert immediately
DEBUG 2022-09-08 18:18:29,423 [main][SqlStatementLogger.java:92] : insert into Author (name, salary) values (?, ?)
DEBUG 2022-09-08 18:18:29,425 [main][IdentifierGeneratorHelper.java:78] : Natively generated identity: 4
DEBUG 2022-09-08 18:18:29,425 [main][ResourceRegistryStandardImpl.java:104] : HHH000387: ResultSet's statement was not registered
DEBUG 2022-09-08 18:18:29,425 [main][TransactionImpl.java:66] : committing
DEBUG 2022-09-08 18:18:29,425 [main][AbstractFlushingEventListener.java:132] : Processing flush-time cascades
DEBUG 2022-09-08 18:18:29,425 [main][AbstractFlushingEventListener.java:174] : Dirty checking collections
DEBUG 2022-09-08 18:18:29,425 [main][AbstractFlushingEventListener.java:106] : Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
DEBUG 2022-09-08 18:18:29,426 [main][AbstractFlushingEventListener.java:113] : Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
DEBUG 2022-09-08 18:18:29,426 [main][EntityPrinter.java:102] : Listing entities:
DEBUG 2022-09-08 18:18:29,426 [main][EntityPrinter.java:109] : org.example.models.Author{name=Nora Roberts, id=4, salary=174}
DEBUG 2022-09-08 18:18:29,427 [main][LogicalConnectionManagedImpl.java:154] : Initiating JDBC connection release from afterTransaction
DEBUG 2022-09-08 18:18:29,427 [main][LogicalConnectionManagedImpl.java:154] : Initiating JDBC connection release from afterTransaction
DEBUG 2022-09-08 18:18:29,428 [main][TransactionImpl.java:55] : begin
DEBUG 2022-09-08 18:18:29,428 [main][ActionQueue.java:272] : Executing identity-insert immediately
DEBUG 2022-09-08 18:18:29,428 [main][SqlStatementLogger.java:92] : insert into Author (name, salary) values (?, ?)
DEBUG 2022-09-08 18:18:29,430 [main][IdentifierGeneratorHelper.java:78] : Natively generated identity: 5
DEBUG 2022-09-08 18:18:29,430 [main][ResourceRegistryStandardImpl.java:104] : HHH000387: ResultSet's statement was not registered
DEBUG 2022-09-08 18:18:29,431 [main][TransactionImpl.java:66] : committing
DEBUG 2022-09-08 18:18:29,431 [main][AbstractFlushingEventListener.java:132] : Processing flush-time cascades
DEBUG 2022-09-08 18:18:29,431 [main][AbstractFlushingEventListener.java:174] : Dirty checking collections
DEBUG 2022-09-08 18:18:29,431 [main][AbstractFlushingEventListener.java:106] : Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
DEBUG 2022-09-08 18:18:29,431 [main][AbstractFlushingEventListener.java:113] : Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
DEBUG 2022-09-08 18:18:29,431 [main][EntityPrinter.java:102] : Listing entities:
DEBUG 2022-09-08 18:18:29,431 [main][EntityPrinter.java:109] : org.example.models.Author{name=Michael Connelly, id=5, salary=1305}
DEBUG 2022-09-08 18:18:29,432 [main][LogicalConnectionManagedImpl.java:154] : Initiating JDBC connection release from afterTransaction
DEBUG 2022-09-08 18:18:29,433 [main][LogicalConnectionManagedImpl.java:154] : Initiating JDBC connection release from afterTransaction
DEBUG 2022-09-08 18:18:29,442 [main][CriteriaQueryImpl.java:307] : Rendered criteria query -> select generatedAlias0 from Author as generatedAlias0
DEBUG 2022-09-08 18:18:29,448 [main][QueryTranslatorFactoryInitiator.java:45] : QueryTranslatorFactory : org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory@8d188b50
INFO  2022-09-08 18:18:29,448 [main][QueryTranslatorFactoryInitiator.java:47] : HHH000397: Using ASTQueryTranslatorFactory
DEBUG 2022-09-08 18:18:29,462 [main][QueryTranslatorImpl.java:278] : parse() - HQL: select generatedAlias0 from org.example.models.Author as generatedAlias0
DEBUG 2022-09-08 18:18:29,465 [main][QueryTranslatorImpl.java:296] : --- HQL AST ---
 \-[QUERY] Node: 'query'
    \-[SELECT_FROM] Node: 'SELECT_FROM'
       +-[FROM] Node: 'from'
       |  \-[RANGE] Node: 'RANGE'
       |     +-[DOT] Node: '.'
       |     |  +-[DOT] Node: '.'
       |     |  |  +-[DOT] Node: '.'
       |     |  |  |  +-[IDENT] Node: 'org'
       |     |  |  |  \-[IDENT] Node: 'example'
       |     |  |  \-[IDENT] Node: 'models'
       |     |  \-[IDENT] Node: 'Author'
       |     \-[ALIAS] Node: 'generatedAlias0'
       \-[SELECT] Node: 'select'
          \-[IDENT] Node: 'generatedAlias0'

DEBUG 2022-09-08 18:18:29,465 [main][ErrorCounter.java:95] : throwQueryException() : no errors
DEBUG 2022-09-08 18:18:29,474 [main][HqlSqlBaseWalker.java:124] : select << begin [level=1, statement=select]
DEBUG 2022-09-08 18:18:29,478 [main][FromElement.java:148] : FromClause{level=1} : org.example.models.Author (generatedAlias0) -> author0_
DEBUG 2022-09-08 18:18:29,479 [main][FromReferenceNode.java:60] : Resolved : generatedAlias0 -> author0_.id
DEBUG 2022-09-08 18:18:29,480 [main][HqlSqlBaseWalker.java:128] : select : finishing up [level=1, statement=select]
DEBUG 2022-09-08 18:18:29,480 [main][HqlSqlWalker.java:725] : processQuery() :  ( SELECT ( {select clause} author0_.id ) ( FromClause{level=1} Author author0_ ) )
DEBUG 2022-09-08 18:18:29,484 [main][JoinProcessor.java:169] : Using FROM fragment [Author author0_]
DEBUG 2022-09-08 18:18:29,484 [main][HqlSqlBaseWalker.java:132] : select >> end [level=1, statement=select]
DEBUG 2022-09-08 18:18:29,484 [main][QueryTranslatorImpl.java:265] : --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (Author)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'author0_.id as id1_0_' {alias=generatedAlias0, className=org.example.models.Author, tableAlias=author0_}
    |  \-[SQL_TOKEN] SqlFragment: 'author0_.name as name2_0_, author0_.salary as salary3_0_'
    \-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[author0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'Author author0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=Author,tableAlias=author0_,origin=null,columns={,className=org.example.models.Author}}

DEBUG 2022-09-08 18:18:29,484 [main][ErrorCounter.java:95] : throwQueryException() : no errors
DEBUG 2022-09-08 18:18:29,487 [main][QueryTranslatorImpl.java:247] : HQL: select generatedAlias0 from org.example.models.Author as generatedAlias0
DEBUG 2022-09-08 18:18:29,487 [main][QueryTranslatorImpl.java:248] : SQL: select author0_.id as id1_0_, author0_.name as name2_0_, author0_.salary as salary3_0_ from Author author0_
DEBUG 2022-09-08 18:18:29,487 [main][ErrorCounter.java:95] : throwQueryException() : no errors
DEBUG 2022-09-08 18:18:29,492 [main][SqlStatementLogger.java:92] : select author0_.id as id1_0_, author0_.name as name2_0_, author0_.salary as salary3_0_ from Author author0_
DEBUG 2022-09-08 18:18:29,494 [main][DelegatingBasicLogger.java:384] : Result set row: 0
DEBUG 2022-09-08 18:18:29,495 [main][Loader.java:1527] : Result row: EntityKey[org.example.models.Author#1]
DEBUG 2022-09-08 18:18:29,498 [main][DelegatingBasicLogger.java:384] : Result set row: 1
DEBUG 2022-09-08 18:18:29,498 [main][Loader.java:1527] : Result row: EntityKey[org.example.models.Author#2]
DEBUG 2022-09-08 18:18:29,498 [main][DelegatingBasicLogger.java:384] : Result set row: 2
DEBUG 2022-09-08 18:18:29,499 [main][Loader.java:1527] : Result row: EntityKey[org.example.models.Author#3]
DEBUG 2022-09-08 18:18:29,499 [main][DelegatingBasicLogger.java:384] : Result set row: 3
DEBUG 2022-09-08 18:18:29,499 [main][Loader.java:1527] : Result row: EntityKey[org.example.models.Author#4]
DEBUG 2022-09-08 18:18:29,499 [main][DelegatingBasicLogger.java:384] : Result set row: 4
DEBUG 2022-09-08 18:18:29,499 [main][Loader.java:1527] : Result row: EntityKey[org.example.models.Author#5]
DEBUG 2022-09-08 18:18:29,500 [main][TwoPhaseLoad.java:141] : Resolving associations for [org.example.models.Author#1]
DEBUG 2022-09-08 18:18:29,500 [main][TwoPhaseLoad.java:267] : Done materializing entity [org.example.models.Author#1]
DEBUG 2022-09-08 18:18:29,500 [main][TwoPhaseLoad.java:141] : Resolving associations for [org.example.models.Author#2]
DEBUG 2022-09-08 18:18:29,500 [main][TwoPhaseLoad.java:267] : Done materializing entity [org.example.models.Author#2]
DEBUG 2022-09-08 18:18:29,500 [main][TwoPhaseLoad.java:141] : Resolving associations for [org.example.models.Author#3]
DEBUG 2022-09-08 18:18:29,500 [main][TwoPhaseLoad.java:267] : Done materializing entity [org.example.models.Author#3]
DEBUG 2022-09-08 18:18:29,500 [main][TwoPhaseLoad.java:141] : Resolving associations for [org.example.models.Author#4]
DEBUG 2022-09-08 18:18:29,501 [main][TwoPhaseLoad.java:267] : Done materializing entity [org.example.models.Author#4]
DEBUG 2022-09-08 18:18:29,501 [main][TwoPhaseLoad.java:141] : Resolving associations for [org.example.models.Author#5]
DEBUG 2022-09-08 18:18:29,501 [main][TwoPhaseLoad.java:267] : Done materializing entity [org.example.models.Author#5]
DEBUG 2022-09-08 18:18:29,501 [main][LogicalConnectionManagedImpl.java:154] : Initiating JDBC connection release from afterTransaction
DEBUG 2022-09-08 18:18:29,509 [main][SqlStatementLogger.java:92] : SELECT * FROM Author
DEBUG 2022-09-08 18:18:29,511 [main][DelegatingBasicLogger.java:384] : Result set row: 0
DEBUG 2022-09-08 18:18:29,511 [main][Loader.java:1527] : Result row: EntityKey[org.example.models.Author#1]
DEBUG 2022-09-08 18:18:29,511 [main][DelegatingBasicLogger.java:384] : Result set row: 1
DEBUG 2022-09-08 18:18:29,512 [main][Loader.java:1527] : Result row: EntityKey[org.example.models.Author#2]
DEBUG 2022-09-08 18:18:29,512 [main][DelegatingBasicLogger.java:384] : Result set row: 2
DEBUG 2022-09-08 18:18:29,512 [main][Loader.java:1527] : Result row: EntityKey[org.example.models.Author#3]
DEBUG 2022-09-08 18:18:29,512 [main][DelegatingBasicLogger.java:384] : Result set row: 3
DEBUG 2022-09-08 18:18:29,512 [main][Loader.java:1527] : Result row: EntityKey[org.example.models.Author#4]
DEBUG 2022-09-08 18:18:29,512 [main][DelegatingBasicLogger.java:384] : Result set row: 4
DEBUG 2022-09-08 18:18:29,512 [main][Loader.java:1527] : Result row: EntityKey[org.example.models.Author#5]
DEBUG 2022-09-08 18:18:29,512 [main][TwoPhaseLoad.java:141] : Resolving associations for [org.example.models.Author#1]
DEBUG 2022-09-08 18:18:29,512 [main][TwoPhaseLoad.java:267] : Done materializing entity [org.example.models.Author#1]
DEBUG 2022-09-08 18:18:29,513 [main][TwoPhaseLoad.java:141] : Resolving associations for [org.example.models.Author#2]
DEBUG 2022-09-08 18:18:29,513 [main][TwoPhaseLoad.java:267] : Done materializing entity [org.example.models.Author#2]
DEBUG 2022-09-08 18:18:29,514 [main][TwoPhaseLoad.java:141] : Resolving associations for [org.example.models.Author#3]
DEBUG 2022-09-08 18:18:29,514 [main][TwoPhaseLoad.java:267] : Done materializing entity [org.example.models.Author#3]
DEBUG 2022-09-08 18:18:29,514 [main][TwoPhaseLoad.java:141] : Resolving associations for [org.example.models.Author#4]
DEBUG 2022-09-08 18:18:29,514 [main][TwoPhaseLoad.java:267] : Done materializing entity [org.example.models.Author#4]
DEBUG 2022-09-08 18:18:29,514 [main][TwoPhaseLoad.java:141] : Resolving associations for [org.example.models.Author#5]
DEBUG 2022-09-08 18:18:29,514 [main][TwoPhaseLoad.java:267] : Done materializing entity [org.example.models.Author#5]
DEBUG 2022-09-08 18:18:29,514 [main][LogicalConnectionManagedImpl.java:154] : Initiating JDBC connection release from afterTransaction
DEBUG 2022-09-08 18:18:29,516 [main][SqlStatementLogger.java:92] : select author0_.id as id1_0_0_, author0_.name as name2_0_0_, author0_.salary as salary3_0_0_ from Author author0_ where author0_.id=?
DEBUG 2022-09-08 18:18:29,519 [main][ResultSetProcessorImpl.java:120] : Starting ResultSet row #0
DEBUG 2022-09-08 18:18:29,519 [main][EntityReferenceInitializerImpl.java:126] : On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
DEBUG 2022-09-08 18:18:29,519 [main][TwoPhaseLoad.java:141] : Resolving associations for [org.example.models.Author#2]
DEBUG 2022-09-08 18:18:29,519 [main][TwoPhaseLoad.java:267] : Done materializing entity [org.example.models.Author#2]
DEBUG 2022-09-08 18:18:29,519 [main][ResourceRegistryStandardImpl.java:73] : HHH000387: ResultSet's statement was not registered
DEBUG 2022-09-08 18:18:29,520 [main][AbstractLoadPlanBasedEntityLoader.java:189] : Done entity load : org.example.models.Author#2
DEBUG 2022-09-08 18:18:29,520 [main][LogicalConnectionManagedImpl.java:154] : Initiating JDBC connection release from afterTransaction
DEBUG 2022-09-08 18:18:29,521 [main][QueryTranslatorImpl.java:278] : parse() - HQL: select a from org.example.models.Author a where a.salary between :minSalary and :maxSalary
DEBUG 2022-09-08 18:18:29,522 [main][QueryTranslatorImpl.java:296] : --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[IDENT] Node: 'org'
    |  |     |  |  |  \-[IDENT] Node: 'example'
    |  |     |  |  \-[IDENT] Node: 'models'
    |  |     |  \-[IDENT] Node: 'Author'
    |  |     \-[ALIAS] Node: 'a'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'a'
    \-[WHERE] Node: 'where'
       \-[BETWEEN] Node: 'between'
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'a'
          |  \-[IDENT] Node: 'salary'
          +-[COLON] Node: ':'
          |  \-[IDENT] Node: 'minSalary'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'maxSalary'

DEBUG 2022-09-08 18:18:29,522 [main][ErrorCounter.java:95] : throwQueryException() : no errors
DEBUG 2022-09-08 18:18:29,522 [main][HqlSqlBaseWalker.java:124] : select << begin [level=1, statement=select]
DEBUG 2022-09-08 18:18:29,523 [main][FromElement.java:148] : FromClause{level=1} : org.example.models.Author (a) -> author0_
DEBUG 2022-09-08 18:18:29,523 [main][FromReferenceNode.java:60] : Resolved : a -> author0_.id
DEBUG 2022-09-08 18:18:29,523 [main][FromReferenceNode.java:60] : Resolved : a -> author0_.id
DEBUG 2022-09-08 18:18:29,524 [main][DotNode.java:661] : getDataType() : salary -> org.hibernate.type.IntegerType@ed121553
DEBUG 2022-09-08 18:18:29,524 [main][FromReferenceNode.java:60] : Resolved : a.salary -> author0_.salary
DEBUG 2022-09-08 18:18:29,524 [main][HqlSqlBaseWalker.java:128] : select : finishing up [level=1, statement=select]
DEBUG 2022-09-08 18:18:29,525 [main][HqlSqlWalker.java:725] : processQuery() :  ( SELECT ( {select clause} author0_.id ) ( FromClause{level=1} Author author0_ ) ( where ( between ( author0_.salary author0_.id salary ) ? ? ) ) )
DEBUG 2022-09-08 18:18:29,525 [main][JoinProcessor.java:169] : Using FROM fragment [Author author0_]
DEBUG 2022-09-08 18:18:29,525 [main][HqlSqlBaseWalker.java:132] : select >> end [level=1, statement=select]
DEBUG 2022-09-08 18:18:29,525 [main][QueryTranslatorImpl.java:265] : --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (Author)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'author0_.id as id1_0_' {alias=a, className=org.example.models.Author, tableAlias=author0_}
    |  \-[SQL_TOKEN] SqlFragment: 'author0_.name as name2_0_, author0_.salary as salary3_0_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[a], fromElementByTableAlias=[author0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'Author author0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=a,role=null,tableName=Author,tableAlias=author0_,origin=null,columns={,className=org.example.models.Author}}
    \-[WHERE] SqlNode: 'where'
       \-[BETWEEN] BetweenOperatorNode: 'between'
          +-[DOT] DotNode: 'author0_.salary' {propertyName=salary,dereferenceType=PRIMITIVE,getPropertyPath=salary,path=a.salary,tableAlias=author0_,className=org.example.models.Author,classAlias=a}
          |  +-[ALIAS_REF] IdentNode: 'author0_.id' {alias=a, className=org.example.models.Author, tableAlias=author0_}
          |  \-[IDENT] IdentNode: 'salary' {originalText=salary}
          +-[NAMED_PARAM] ParameterNode: '?' {name=minSalary, expectedType=org.hibernate.type.IntegerType@ed121553}
          \-[NAMED_PARAM] ParameterNode: '?' {name=maxSalary, expectedType=org.hibernate.type.IntegerType@ed121553}

DEBUG 2022-09-08 18:18:29,525 [main][ErrorCounter.java:95] : throwQueryException() : no errors
DEBUG 2022-09-08 18:18:29,526 [main][QueryTranslatorImpl.java:247] : HQL: select a from org.example.models.Author a where a.salary between :minSalary and :maxSalary
DEBUG 2022-09-08 18:18:29,526 [main][QueryTranslatorImpl.java:248] : SQL: select author0_.id as id1_0_, author0_.name as name2_0_, author0_.salary as salary3_0_ from Author author0_ where author0_.salary between ? and ?
DEBUG 2022-09-08 18:18:29,526 [main][ErrorCounter.java:95] : throwQueryException() : no errors
DEBUG 2022-09-08 18:18:29,528 [main][SqlStatementLogger.java:92] : select author0_.id as id1_0_, author0_.name as name2_0_, author0_.salary as salary3_0_ from Author author0_ where author0_.salary between ? and ?
DEBUG 2022-09-08 18:18:29,529 [main][DelegatingBasicLogger.java:384] : Result set row: 0
DEBUG 2022-09-08 18:18:29,529 [main][Loader.java:1527] : Result row: EntityKey[org.example.models.Author#3]
DEBUG 2022-09-08 18:18:29,530 [main][TwoPhaseLoad.java:141] : Resolving associations for [org.example.models.Author#3]
DEBUG 2022-09-08 18:18:29,530 [main][TwoPhaseLoad.java:267] : Done materializing entity [org.example.models.Author#3]
DEBUG 2022-09-08 18:18:29,530 [main][LogicalConnectionManagedImpl.java:154] : Initiating JDBC connection release from afterTransaction
DEBUG 2022-09-08 18:18:29,531 [main][SqlStatementLogger.java:92] : select author0_.id as id1_0_0_, author0_.name as name2_0_0_, author0_.salary as salary3_0_0_ from Author author0_ where author0_.id=?
DEBUG 2022-09-08 18:18:29,533 [main][ResultSetProcessorImpl.java:120] : Starting ResultSet row #0
DEBUG 2022-09-08 18:18:29,533 [main][EntityReferenceInitializerImpl.java:126] : On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
DEBUG 2022-09-08 18:18:29,534 [main][TwoPhaseLoad.java:141] : Resolving associations for [org.example.models.Author#2]
DEBUG 2022-09-08 18:18:29,535 [main][TwoPhaseLoad.java:267] : Done materializing entity [org.example.models.Author#2]
DEBUG 2022-09-08 18:18:29,535 [main][ResourceRegistryStandardImpl.java:73] : HHH000387: ResultSet's statement was not registered
DEBUG 2022-09-08 18:18:29,535 [main][AbstractLoadPlanBasedEntityLoader.java:189] : Done entity load : org.example.models.Author#2
DEBUG 2022-09-08 18:18:29,535 [main][LogicalConnectionManagedImpl.java:154] : Initiating JDBC connection release from afterTransaction
DEBUG 2022-09-08 18:18:29,535 [main][TransactionImpl.java:55] : begin
DEBUG 2022-09-08 18:18:29,536 [main][TransactionImpl.java:66] : committing
DEBUG 2022-09-08 18:18:29,536 [main][AbstractFlushingEventListener.java:132] : Processing flush-time cascades
DEBUG 2022-09-08 18:18:29,536 [main][AbstractFlushingEventListener.java:174] : Dirty checking collections
DEBUG 2022-09-08 18:18:29,537 [main][AbstractFlushingEventListener.java:106] : Flushed: 0 insertions, 1 updates, 0 deletions to 1 objects
DEBUG 2022-09-08 18:18:29,537 [main][AbstractFlushingEventListener.java:113] : Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
DEBUG 2022-09-08 18:18:29,537 [main][EntityPrinter.java:102] : Listing entities:
DEBUG 2022-09-08 18:18:29,537 [main][EntityPrinter.java:109] : org.example.models.Author{name=Ihor Kosolapow, id=2, salary=4656}
DEBUG 2022-09-08 18:18:29,540 [main][SqlStatementLogger.java:92] : update Author set name=? where id=?
DEBUG 2022-09-08 18:18:29,542 [main][LogicalConnectionManagedImpl.java:154] : Initiating JDBC connection release from afterTransaction
DEBUG 2022-09-08 18:18:29,543 [main][LogicalConnectionManagedImpl.java:154] : Initiating JDBC connection release from afterTransaction
DEBUG 2022-09-08 18:18:29,543 [main][JdbcCoordinatorImpl.java:177] : HHH000420: Closing un-released batch
DEBUG 2022-09-08 18:18:29,544 [main][SqlStatementLogger.java:92] : select author0_.id as id1_0_0_, author0_.name as name2_0_0_, author0_.salary as salary3_0_0_ from Author author0_ where author0_.id=?
DEBUG 2022-09-08 18:18:29,545 [main][ResultSetProcessorImpl.java:120] : Starting ResultSet row #0
DEBUG 2022-09-08 18:18:29,545 [main][EntityReferenceInitializerImpl.java:126] : On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
DEBUG 2022-09-08 18:18:29,545 [main][TwoPhaseLoad.java:141] : Resolving associations for [org.example.models.Author#2]
DEBUG 2022-09-08 18:18:29,545 [main][TwoPhaseLoad.java:267] : Done materializing entity [org.example.models.Author#2]
DEBUG 2022-09-08 18:18:29,545 [main][ResourceRegistryStandardImpl.java:73] : HHH000387: ResultSet's statement was not registered
DEBUG 2022-09-08 18:18:29,546 [main][AbstractLoadPlanBasedEntityLoader.java:189] : Done entity load : org.example.models.Author#2
DEBUG 2022-09-08 18:18:29,546 [main][LogicalConnectionManagedImpl.java:154] : Initiating JDBC connection release from afterTransaction
DEBUG 2022-09-08 18:18:58,976 [pool-1-thread-1][PooledConnections.java:51] : Connection pool now considered primed; min-size will be maintained
WARN  2022-09-08 18:36:13,117 [main][Main.java:17] : TEST
DEBUG 2022-09-08 18:36:13,173 [main][CoreLogging.java:28] : Logging Provider: org.jboss.logging.Log4jLoggerProvider
DEBUG 2022-09-08 18:36:13,185 [main][IntegratorServiceImpl.java:46] : Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
DEBUG 2022-09-08 18:36:13,188 [main][IntegratorServiceImpl.java:46] : Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
DEBUG 2022-09-08 18:36:13,192 [main][IntegratorServiceImpl.java:46] : Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
INFO  2022-09-08 18:36:13,275 [main][Version.java:45] : HHH000412: Hibernate Core {5.2.2.Final}
INFO  2022-09-08 18:36:13,278 [main][Environment.java:213] : HHH000206: hibernate.properties not found
INFO  2022-09-08 18:36:13,280 [main][Environment.java:318] : HHH000021: Bytecode provider name : javassist
DEBUG 2022-09-08 18:36:13,307 [main][LocalXmlResourceResolver.java:57] : Interpreting public/system identifier : [null] - [http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd]
DEBUG 2022-09-08 18:36:13,309 [main][LocalXmlResourceResolver.java:85] : Recognized hibernate-configuration identifier; attempting to resolve on classpath under org/hibernate/
DEBUG 2022-09-08 18:36:13,317 [main][JaxbCfgProcessor.java:116] : cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
DEBUG 2022-09-08 18:36:13,569 [main][Configuration.java:724] : Building session factory using internal StandardServiceRegistryBuilder
DEBUG 2022-09-08 18:36:13,573 [main][ServiceBinding.java:68] : Overriding existing service binding [org.hibernate.secure.spi.JaccService]
DEBUG 2022-09-08 18:36:13,574 [main][Configuration.java:652] : Building session factory using provided StandardServiceRegistry
DEBUG 2022-09-08 18:36:13,583 [main][RegionFactoryInitiator.java:75] : Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
INFO  2022-09-08 18:36:13,588 [main][JavaReflectionManager.java:66] : HCANN000001: Hibernate Commons Annotations {5.0.1.Final}
DEBUG 2022-09-08 18:36:13,602 [main][BasicTypeRegistry.java:145] : Adding type registration boolean -> org.hibernate.type.BooleanType@8455919d
DEBUG 2022-09-08 18:36:13,604 [main][BasicTypeRegistry.java:145] : Adding type registration boolean -> org.hibernate.type.BooleanType@8455919d
DEBUG 2022-09-08 18:36:13,604 [main][BasicTypeRegistry.java:145] : Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@8455919d
DEBUG 2022-09-08 18:36:13,606 [main][BasicTypeRegistry.java:145] : Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@86a6e94e
DEBUG 2022-09-08 18:36:13,607 [main][BasicTypeRegistry.java:145] : Adding type registration true_false -> org.hibernate.type.TrueFalseType@e1e6fd0e
DEBUG 2022-09-08 18:36:13,607 [main][BasicTypeRegistry.java:145] : Adding type registration yes_no -> org.hibernate.type.YesNoType@cf2c3634
DEBUG 2022-09-08 18:36:13,608 [main][BasicTypeRegistry.java:145] : Adding type registration byte -> org.hibernate.type.ByteType@df7ad262
DEBUG 2022-09-08 18:36:13,609 [main][BasicTypeRegistry.java:145] : Adding type registration byte -> org.hibernate.type.ByteType@df7ad262
DEBUG 2022-09-08 18:36:13,609 [main][BasicTypeRegistry.java:145] : Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@df7ad262
DEBUG 2022-09-08 18:36:13,610 [main][BasicTypeRegistry.java:145] : Adding type registration character -> org.hibernate.type.CharacterType@2fddd253
DEBUG 2022-09-08 18:36:13,611 [main][BasicTypeRegistry.java:145] : Adding type registration char -> org.hibernate.type.CharacterType@2fddd253
DEBUG 2022-09-08 18:36:13,611 [main][BasicTypeRegistry.java:145] : Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@2fddd253
DEBUG 2022-09-08 18:36:13,613 [main][BasicTypeRegistry.java:145] : Adding type registration short -> org.hibernate.type.ShortType@9a2f415e
DEBUG 2022-09-08 18:36:13,613 [main][BasicTypeRegistry.java:145] : Adding type registration short -> org.hibernate.type.ShortType@9a2f415e
DEBUG 2022-09-08 18:36:13,614 [main][BasicTypeRegistry.java:145] : Adding type registration java.lang.Short -> org.hibernate.type.ShortType@9a2f415e
DEBUG 2022-09-08 18:36:13,615 [main][BasicTypeRegistry.java:145] : Adding type registration integer -> org.hibernate.type.IntegerType@41443238
DEBUG 2022-09-08 18:36:13,615 [main][BasicTypeRegistry.java:145] : Adding type registration int -> org.hibernate.type.IntegerType@41443238
DEBUG 2022-09-08 18:36:13,616 [main][BasicTypeRegistry.java:145] : Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@41443238
DEBUG 2022-09-08 18:36:13,617 [main][BasicTypeRegistry.java:145] : Adding type registration long -> org.hibernate.type.LongType@4944009
DEBUG 2022-09-08 18:36:13,618 [main][BasicTypeRegistry.java:145] : Adding type registration long -> org.hibernate.type.LongType@4944009
DEBUG 2022-09-08 18:36:13,618 [main][BasicTypeRegistry.java:145] : Adding type registration java.lang.Long -> org.hibernate.type.LongType@4944009
DEBUG 2022-09-08 18:36:13,619 [main][BasicTypeRegistry.java:145] : Adding type registration float -> org.hibernate.type.FloatType@c7c3207f
DEBUG 2022-09-08 18:36:13,620 [main][BasicTypeRegistry.java:145] : Adding type registration float -> org.hibernate.type.FloatType@c7c3207f
DEBUG 2022-09-08 18:36:13,620 [main][BasicTypeRegistry.java:145] : Adding type registration java.lang.Float -> org.hibernate.type.FloatType@c7c3207f
DEBUG 2022-09-08 18:36:13,621 [main][BasicTypeRegistry.java:145] : Adding type registration double -> org.hibernate.type.DoubleType@b34744b1
DEBUG 2022-09-08 18:36:13,622 [main][BasicTypeRegistry.java:145] : Adding type registration double -> org.hibernate.type.DoubleType@b34744b1
DEBUG 2022-09-08 18:36:13,623 [main][BasicTypeRegistry.java:145] : Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@b34744b1
DEBUG 2022-09-08 18:36:13,625 [main][BasicTypeRegistry.java:145] : Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@9517f0f5
DEBUG 2022-09-08 18:36:13,626 [main][BasicTypeRegistry.java:145] : Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@9517f0f5
DEBUG 2022-09-08 18:36:13,629 [main][BasicTypeRegistry.java:145] : Adding type registration big_integer -> org.hibernate.type.BigIntegerType@516a0cb
DEBUG 2022-09-08 18:36:13,629 [main][BasicTypeRegistry.java:145] : Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@516a0cb
DEBUG 2022-09-08 18:36:13,630 [main][BasicTypeRegistry.java:145] : Adding type registration string -> org.hibernate.type.StringType@97d7ccf0
DEBUG 2022-09-08 18:36:13,631 [main][BasicTypeRegistry.java:145] : Adding type registration java.lang.String -> org.hibernate.type.StringType@97d7ccf0
DEBUG 2022-09-08 18:36:13,632 [main][BasicTypeRegistry.java:145] : Adding type registration nstring -> org.hibernate.type.StringNVarcharType@9b4c51e5
DEBUG 2022-09-08 18:36:13,633 [main][BasicTypeRegistry.java:145] : Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@6d7e7e39
DEBUG 2022-09-08 18:36:13,633 [main][BasicTypeRegistry.java:145] : Adding type registration url -> org.hibernate.type.UrlType@9f412cd
DEBUG 2022-09-08 18:36:13,634 [main][BasicTypeRegistry.java:145] : Adding type registration java.net.URL -> org.hibernate.type.UrlType@9f412cd
DEBUG 2022-09-08 18:36:13,634 [main][BasicTypeRegistry.java:145] : Adding type registration Duration -> org.hibernate.type.DurationType@a4a224bb
DEBUG 2022-09-08 18:36:13,635 [main][BasicTypeRegistry.java:145] : Adding type registration java.time.Duration -> org.hibernate.type.DurationType@a4a224bb
DEBUG 2022-09-08 18:36:13,641 [main][BasicTypeRegistry.java:145] : Adding type registration Instant -> org.hibernate.type.InstantType@2b17f563
DEBUG 2022-09-08 18:36:13,641 [main][BasicTypeRegistry.java:145] : Adding type registration java.time.Instant -> org.hibernate.type.InstantType@2b17f563
DEBUG 2022-09-08 18:36:13,642 [main][BasicTypeRegistry.java:145] : Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@a312bd81
DEBUG 2022-09-08 18:36:13,643 [main][BasicTypeRegistry.java:145] : Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@a312bd81
DEBUG 2022-09-08 18:36:13,644 [main][BasicTypeRegistry.java:145] : Adding type registration LocalDate -> org.hibernate.type.LocalDateType@c731b5f5
DEBUG 2022-09-08 18:36:13,644 [main][BasicTypeRegistry.java:145] : Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@c731b5f5
DEBUG 2022-09-08 18:36:13,645 [main][BasicTypeRegistry.java:145] : Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@13588033
DEBUG 2022-09-08 18:36:13,646 [main][BasicTypeRegistry.java:145] : Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@13588033
DEBUG 2022-09-08 18:36:13,647 [main][BasicTypeRegistry.java:145] : Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@483938c4
DEBUG 2022-09-08 18:36:13,647 [main][BasicTypeRegistry.java:145] : Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@483938c4
DEBUG 2022-09-08 18:36:13,648 [main][BasicTypeRegistry.java:145] : Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@c52b9786
DEBUG 2022-09-08 18:36:13,648 [main][BasicTypeRegistry.java:145] : Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@c52b9786
DEBUG 2022-09-08 18:36:13,650 [main][BasicTypeRegistry.java:145] : Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@c85acee5
DEBUG 2022-09-08 18:36:13,651 [main][BasicTypeRegistry.java:145] : Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@c85acee5
DEBUG 2022-09-08 18:36:13,652 [main][BasicTypeRegistry.java:145] : Adding type registration date -> org.hibernate.type.DateType@fbdd8e57
DEBUG 2022-09-08 18:36:13,652 [main][BasicTypeRegistry.java:145] : Adding type registration java.sql.Date -> org.hibernate.type.DateType@fbdd8e57
DEBUG 2022-09-08 18:36:13,653 [main][BasicTypeRegistry.java:145] : Adding type registration time -> org.hibernate.type.TimeType@599d85eb
DEBUG 2022-09-08 18:36:13,653 [main][BasicTypeRegistry.java:145] : Adding type registration java.sql.Time -> org.hibernate.type.TimeType@599d85eb
DEBUG 2022-09-08 18:36:13,654 [main][BasicTypeRegistry.java:145] : Adding type registration timestamp -> org.hibernate.type.TimestampType@d2e8046f
DEBUG 2022-09-08 18:36:13,654 [main][BasicTypeRegistry.java:145] : Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@d2e8046f
DEBUG 2022-09-08 18:36:13,654 [main][BasicTypeRegistry.java:145] : Adding type registration java.util.Date -> org.hibernate.type.TimestampType@d2e8046f
DEBUG 2022-09-08 18:36:13,656 [main][BasicTypeRegistry.java:145] : Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@9334c632
DEBUG 2022-09-08 18:36:13,656 [main][BasicTypeRegistry.java:145] : Adding type registration calendar -> org.hibernate.type.CalendarType@df87fda5
DEBUG 2022-09-08 18:36:13,657 [main][BasicTypeRegistry.java:145] : Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@df87fda5
DEBUG 2022-09-08 18:36:13,657 [main][BasicTypeRegistry.java:145] : Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@df87fda5
DEBUG 2022-09-08 18:36:13,657 [main][BasicTypeRegistry.java:145] : Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@f39c0b45
DEBUG 2022-09-08 18:36:13,658 [main][BasicTypeRegistry.java:145] : Adding type registration locale -> org.hibernate.type.LocaleType@e7dc740c
DEBUG 2022-09-08 18:36:13,658 [main][BasicTypeRegistry.java:145] : Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@e7dc740c
DEBUG 2022-09-08 18:36:13,659 [main][BasicTypeRegistry.java:145] : Adding type registration currency -> org.hibernate.type.CurrencyType@2060849a
DEBUG 2022-09-08 18:36:13,659 [main][BasicTypeRegistry.java:145] : Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@2060849a
DEBUG 2022-09-08 18:36:13,660 [main][BasicTypeRegistry.java:145] : Adding type registration timezone -> org.hibernate.type.TimeZoneType@432c1445
DEBUG 2022-09-08 18:36:13,660 [main][BasicTypeRegistry.java:145] : Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@432c1445
DEBUG 2022-09-08 18:36:13,660 [main][BasicTypeRegistry.java:145] : Adding type registration class -> org.hibernate.type.ClassType@891771c9
DEBUG 2022-09-08 18:36:13,661 [main][BasicTypeRegistry.java:145] : Adding type registration java.lang.Class -> org.hibernate.type.ClassType@891771c9
DEBUG 2022-09-08 18:36:13,661 [main][BasicTypeRegistry.java:145] : Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@c1c1b25f
DEBUG 2022-09-08 18:36:13,662 [main][BasicTypeRegistry.java:145] : Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@c1c1b25f
DEBUG 2022-09-08 18:36:13,662 [main][BasicTypeRegistry.java:145] : Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@61092b41
DEBUG 2022-09-08 18:36:13,663 [main][BasicTypeRegistry.java:145] : Adding type registration binary -> org.hibernate.type.BinaryType@1b1f118d
DEBUG 2022-09-08 18:36:13,663 [main][BasicTypeRegistry.java:145] : Adding type registration byte[] -> org.hibernate.type.BinaryType@1b1f118d
DEBUG 2022-09-08 18:36:13,663 [main][BasicTypeRegistry.java:145] : Adding type registration [B -> org.hibernate.type.BinaryType@1b1f118d
DEBUG 2022-09-08 18:36:13,665 [main][BasicTypeRegistry.java:145] : Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@640a6d3b
DEBUG 2022-09-08 18:36:13,665 [main][BasicTypeRegistry.java:145] : Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@640a6d3b
DEBUG 2022-09-08 18:36:13,665 [main][BasicTypeRegistry.java:145] : Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@640a6d3b
DEBUG 2022-09-08 18:36:13,666 [main][BasicTypeRegistry.java:145] : Adding type registration row_version -> org.hibernate.type.RowVersionType@c420ed78
DEBUG 2022-09-08 18:36:13,666 [main][BasicTypeRegistry.java:145] : Adding type registration image -> org.hibernate.type.ImageType@b5cd7f03
DEBUG 2022-09-08 18:36:13,667 [main][BasicTypeRegistry.java:145] : Adding type registration characters -> org.hibernate.type.CharArrayType@819f22a1
DEBUG 2022-09-08 18:36:13,667 [main][BasicTypeRegistry.java:145] : Adding type registration char[] -> org.hibernate.type.CharArrayType@819f22a1
DEBUG 2022-09-08 18:36:13,667 [main][BasicTypeRegistry.java:145] : Adding type registration [C -> org.hibernate.type.CharArrayType@819f22a1
DEBUG 2022-09-08 18:36:13,668 [main][BasicTypeRegistry.java:145] : Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@ede6b742
DEBUG 2022-09-08 18:36:13,668 [main][BasicTypeRegistry.java:145] : Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@ede6b742
DEBUG 2022-09-08 18:36:13,668 [main][BasicTypeRegistry.java:145] : Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@ede6b742
DEBUG 2022-09-08 18:36:13,669 [main][BasicTypeRegistry.java:145] : Adding type registration text -> org.hibernate.type.TextType@2b9211b7
DEBUG 2022-09-08 18:36:13,669 [main][BasicTypeRegistry.java:145] : Adding type registration ntext -> org.hibernate.type.NTextType@b7144486
DEBUG 2022-09-08 18:36:13,671 [main][BasicTypeRegistry.java:145] : Adding type registration blob -> org.hibernate.type.BlobType@28cbd42
DEBUG 2022-09-08 18:36:13,671 [main][BasicTypeRegistry.java:145] : Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@28cbd42
DEBUG 2022-09-08 18:36:13,671 [main][BasicTypeRegistry.java:145] : Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@2791c175
DEBUG 2022-09-08 18:36:13,673 [main][BasicTypeRegistry.java:145] : Adding type registration clob -> org.hibernate.type.ClobType@29c441c0
DEBUG 2022-09-08 18:36:13,673 [main][BasicTypeRegistry.java:145] : Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@29c441c0
DEBUG 2022-09-08 18:36:13,675 [main][BasicTypeRegistry.java:145] : Adding type registration nclob -> org.hibernate.type.NClobType@3e97bdd6
DEBUG 2022-09-08 18:36:13,675 [main][BasicTypeRegistry.java:145] : Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@3e97bdd6
DEBUG 2022-09-08 18:36:13,676 [main][BasicTypeRegistry.java:145] : Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@3475f45d
DEBUG 2022-09-08 18:36:13,676 [main][BasicTypeRegistry.java:145] : Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@b30b5d74
DEBUG 2022-09-08 18:36:13,677 [main][BasicTypeRegistry.java:145] : Adding type registration serializable -> org.hibernate.type.SerializableType@b490a7df
DEBUG 2022-09-08 18:36:13,679 [main][BasicTypeRegistry.java:145] : Adding type registration object -> org.hibernate.type.ObjectType@acf23e2c
DEBUG 2022-09-08 18:36:13,680 [main][BasicTypeRegistry.java:145] : Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@acf23e2c
DEBUG 2022-09-08 18:36:13,680 [main][BasicTypeRegistry.java:145] : Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@4590c2d8
DEBUG 2022-09-08 18:36:13,680 [main][BasicTypeRegistry.java:145] : Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@aff383e3
DEBUG 2022-09-08 18:36:13,680 [main][BasicTypeRegistry.java:145] : Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@2f0ab38
DEBUG 2022-09-08 18:36:13,681 [main][BasicTypeRegistry.java:145] : Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@20436838
DEBUG 2022-09-08 18:36:13,681 [main][BasicTypeRegistry.java:145] : Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@ea3eb3fc
DEBUG 2022-09-08 18:36:13,681 [main][BasicTypeRegistry.java:145] : Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@8e043c4e
DEBUG 2022-09-08 18:36:13,681 [main][BasicTypeRegistry.java:145] : Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@828baf1e
DEBUG 2022-09-08 18:36:13,681 [main][BasicTypeRegistry.java:145] : Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@374732f9
WARN  2022-09-08 18:36:13,687 [main][DriverManagerConnectionProviderImpl.java:70] : HHH10001002: Using Hibernate built-in connection pool (not for production use!)
INFO  2022-09-08 18:36:13,692 [main][DriverManagerConnectionProviderImpl.java:126] : HHH10001005: using driver [com.mysql.cj.jdbc.Driver] at URL [jdbc:mysql://localhost:3306/classicmodels?serverTimezone=UTC]
INFO  2022-09-08 18:36:13,693 [main][DriverManagerConnectionProviderImpl.java:132] : HHH10001001: Connection properties: {password=rootroot, user=root}
INFO  2022-09-08 18:36:13,693 [main][DriverManagerConnectionProviderImpl.java:140] : HHH10001003: Autocommit mode: false
DEBUG 2022-09-08 18:36:13,696 [main][DelegatingBasicLogger.java:384] : Initializing Connection pool with 1 Connections
INFO  2022-09-08 18:36:13,696 [main][PooledConnections.java:41] : HHH000115: Hibernate connection pool size: 5 (min=1)
DEBUG 2022-09-08 18:36:14,092 [main][JdbcEnvironmentInitiator.java:72] : Database ->
       name : MySQL
    version : 8.0.29
      major : 8
      minor : 0
DEBUG 2022-09-08 18:36:14,093 [main][JdbcEnvironmentInitiator.java:83] : Driver ->
       name : MySQL Connector/J
    version : mysql-connector-java-8.0.29 (Revision: dd61577595edad45c398af508cf91ad26fc4144f)
      major : 8
      minor : 0
DEBUG 2022-09-08 18:36:14,093 [main][DelegatingBasicLogger.java:389] : JDBC version : 4.2
INFO  2022-09-08 18:36:14,099 [main][Dialect.java:153] : HHH000400: Using dialect: org.hibernate.dialect.MySQLDialect
DEBUG 2022-09-08 18:36:14,134 [main][IdentifierHelperBuilder.java:117] : JDBC driver metadata reported database stores quoted identifiers in more than one case
DEBUG 2022-09-08 18:36:14,135 [main][IdentifierHelperBuilder.java:191] : IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [MIXED]; that will likely lead to problems in schema update and validation if using quoted identifiers
DEBUG 2022-09-08 18:36:14,153 [main][DefaultIdentifierGeneratorFactory.java:81] : Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
DEBUG 2022-09-08 18:36:14,153 [main][DefaultIdentifierGeneratorFactory.java:81] : Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
DEBUG 2022-09-08 18:36:14,154 [main][DefaultIdentifierGeneratorFactory.java:81] : Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
DEBUG 2022-09-08 18:36:14,154 [main][DefaultIdentifierGeneratorFactory.java:81] : Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
DEBUG 2022-09-08 18:36:14,154 [main][DefaultIdentifierGeneratorFactory.java:81] : Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
DEBUG 2022-09-08 18:36:14,155 [main][DefaultIdentifierGeneratorFactory.java:81] : Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
DEBUG 2022-09-08 18:36:14,156 [main][DefaultIdentifierGeneratorFactory.java:81] : Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
DEBUG 2022-09-08 18:36:14,156 [main][DefaultIdentifierGeneratorFactory.java:81] : Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
DEBUG 2022-09-08 18:36:14,157 [main][DefaultIdentifierGeneratorFactory.java:81] : Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
DEBUG 2022-09-08 18:36:14,157 [main][DefaultIdentifierGeneratorFactory.java:81] : Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
DEBUG 2022-09-08 18:36:14,158 [main][DefaultIdentifierGeneratorFactory.java:81] : Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
DEBUG 2022-09-08 18:36:14,158 [main][DefaultIdentifierGeneratorFactory.java:81] : Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
DEBUG 2022-09-08 18:36:14,158 [main][DefaultIdentifierGeneratorFactory.java:81] : Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
DEBUG 2022-09-08 18:36:14,158 [main][DefaultIdentifierGeneratorFactory.java:81] : Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
DEBUG 2022-09-08 18:36:14,175 [main][Namespace.java:47] : Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
DEBUG 2022-09-08 18:36:14,187 [main][AnnotationBinder.java:511] : Binding entity from annotated class: org.example.models.Author
DEBUG 2022-09-08 18:36:14,195 [main][Ejb3Column.java:213] : Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
DEBUG 2022-09-08 18:36:14,197 [main][EntityBinder.java:416] : Import with entity name Author
DEBUG 2022-09-08 18:36:14,201 [main][EntityBinder.java:692] : Bind entity org.example.models.Author on table Author
DEBUG 2022-09-08 18:36:14,211 [main][Ejb3Column.java:213] : Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Author), mappingColumn=id, insertable=true, updatable=true, unique=false}
DEBUG 2022-09-08 18:36:14,213 [main][PropertyBinder.java:174] : MetadataSourceProcessor property id with lazy=false
DEBUG 2022-09-08 18:36:14,213 [main][AbstractPropertyHolder.java:89] : Attempting to locate auto-apply AttributeConverter for property [org.example.models.Author:id]
DEBUG 2022-09-08 18:36:14,214 [main][SimpleValueBinder.java:398] : building SimpleValue for id
DEBUG 2022-09-08 18:36:14,215 [main][PropertyBinder.java:265] : Building property id
DEBUG 2022-09-08 18:36:14,218 [main][Ejb3Column.java:213] : Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Author), mappingColumn=name, insertable=true, updatable=true, unique=false}
DEBUG 2022-09-08 18:36:14,219 [main][PropertyBinder.java:174] : MetadataSourceProcessor property name with lazy=false
DEBUG 2022-09-08 18:36:14,219 [main][AbstractPropertyHolder.java:89] : Attempting to locate auto-apply AttributeConverter for property [org.example.models.Author:name]
DEBUG 2022-09-08 18:36:14,219 [main][SimpleValueBinder.java:398] : building SimpleValue for name
DEBUG 2022-09-08 18:36:14,219 [main][PropertyBinder.java:265] : Building property name
DEBUG 2022-09-08 18:36:14,219 [main][Ejb3Column.java:213] : Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Author), mappingColumn=salary, insertable=true, updatable=true, unique=false}
DEBUG 2022-09-08 18:36:14,220 [main][PropertyBinder.java:174] : MetadataSourceProcessor property salary with lazy=false
DEBUG 2022-09-08 18:36:14,220 [main][AbstractPropertyHolder.java:89] : Attempting to locate auto-apply AttributeConverter for property [org.example.models.Author:salary]
DEBUG 2022-09-08 18:36:14,220 [main][SimpleValueBinder.java:398] : building SimpleValue for salary
DEBUG 2022-09-08 18:36:14,220 [main][PropertyBinder.java:265] : Building property salary
DEBUG 2022-09-08 18:36:14,220 [main][AnnotationBinder.java:511] : Binding entity from annotated class: org.example.models.Book
DEBUG 2022-09-08 18:36:14,221 [main][Ejb3Column.java:213] : Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
DEBUG 2022-09-08 18:36:14,221 [main][EntityBinder.java:416] : Import with entity name Book
DEBUG 2022-09-08 18:36:14,221 [main][EntityBinder.java:692] : Bind entity org.example.models.Book on table Book
DEBUG 2022-09-08 18:36:14,221 [main][Ejb3Column.java:213] : Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Book), mappingColumn=id, insertable=true, updatable=true, unique=false}
DEBUG 2022-09-08 18:36:14,222 [main][PropertyBinder.java:174] : MetadataSourceProcessor property id with lazy=false
DEBUG 2022-09-08 18:36:14,222 [main][AbstractPropertyHolder.java:89] : Attempting to locate auto-apply AttributeConverter for property [org.example.models.Book:id]
DEBUG 2022-09-08 18:36:14,222 [main][SimpleValueBinder.java:398] : building SimpleValue for id
DEBUG 2022-09-08 18:36:14,222 [main][PropertyBinder.java:265] : Building property id
DEBUG 2022-09-08 18:36:14,222 [main][Ejb3Column.java:213] : Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Book), mappingColumn=author_id, insertable=true, updatable=true, unique=false}
DEBUG 2022-09-08 18:36:14,222 [main][PropertyBinder.java:174] : MetadataSourceProcessor property author_id with lazy=false
DEBUG 2022-09-08 18:36:14,222 [main][AbstractPropertyHolder.java:89] : Attempting to locate auto-apply AttributeConverter for property [org.example.models.Book:author_id]
DEBUG 2022-09-08 18:36:14,223 [main][SimpleValueBinder.java:398] : building SimpleValue for author_id
DEBUG 2022-09-08 18:36:14,223 [main][PropertyBinder.java:265] : Building property author_id
DEBUG 2022-09-08 18:36:14,223 [main][Ejb3Column.java:213] : Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Book), mappingColumn=name, insertable=true, updatable=true, unique=false}
DEBUG 2022-09-08 18:36:14,223 [main][PropertyBinder.java:174] : MetadataSourceProcessor property name with lazy=false
DEBUG 2022-09-08 18:36:14,223 [main][AbstractPropertyHolder.java:89] : Attempting to locate auto-apply AttributeConverter for property [org.example.models.Book:name]
DEBUG 2022-09-08 18:36:14,223 [main][SimpleValueBinder.java:398] : building SimpleValue for name
DEBUG 2022-09-08 18:36:14,223 [main][PropertyBinder.java:265] : Building property name
DEBUG 2022-09-08 18:36:14,224 [main][SimpleValueBinder.java:443] : Starting fillSimpleValue for id
DEBUG 2022-09-08 18:36:14,224 [main][SimpleValueBinder.java:443] : Starting fillSimpleValue for name
DEBUG 2022-09-08 18:36:14,224 [main][SimpleValueBinder.java:443] : Starting fillSimpleValue for salary
DEBUG 2022-09-08 18:36:14,224 [main][SimpleValueBinder.java:443] : Starting fillSimpleValue for id
DEBUG 2022-09-08 18:36:14,224 [main][SimpleValueBinder.java:443] : Starting fillSimpleValue for author_id
DEBUG 2022-09-08 18:36:14,225 [main][SimpleValueBinder.java:443] : Starting fillSimpleValue for name
DEBUG 2022-09-08 18:36:14,225 [main][PrimaryKey.java:35] : Forcing column [id] to be non-null as it is part of the primary key for table [author]
DEBUG 2022-09-08 18:36:14,225 [main][PrimaryKey.java:35] : Forcing column [id] to be non-null as it is part of the primary key for table [book]
DEBUG 2022-09-08 18:36:14,244 [main][SessionFactoryImpl.java:197] : Building session factory
DEBUG 2022-09-08 18:36:14,244 [main][Settings.java:69] : SessionFactory name : null
DEBUG 2022-09-08 18:36:14,244 [main][Settings.java:70] : Automatic flush during beforeCompletion(): enabled
DEBUG 2022-09-08 18:36:14,245 [main][Settings.java:71] : Automatic session close at end of transaction: disabled
DEBUG 2022-09-08 18:36:14,245 [main][Settings.java:73] : Statistics: disabled
DEBUG 2022-09-08 18:36:14,245 [main][Settings.java:75] : Deleted entity synthetic identifier rollback: disabled
DEBUG 2022-09-08 18:36:14,245 [main][Settings.java:76] : Default entity-mode: pojo
DEBUG 2022-09-08 18:36:14,245 [main][Settings.java:77] : Check Nullability in Core (should be disabled when Bean Validation is on): enabled
DEBUG 2022-09-08 18:36:14,245 [main][Settings.java:78] : Allow initialization of lazy state outside session : disabled
DEBUG 2022-09-08 18:36:14,245 [main][Settings.java:80] : Using BatchFetchStyle : LEGACY
DEBUG 2022-09-08 18:36:14,245 [main][Settings.java:81] : Default batch fetch size: -1
DEBUG 2022-09-08 18:36:14,245 [main][Settings.java:82] : Maximum outer join fetch depth: 2
DEBUG 2022-09-08 18:36:14,246 [main][Settings.java:83] : Default null ordering: NONE
DEBUG 2022-09-08 18:36:14,246 [main][Settings.java:84] : Order SQL updates by primary key: disabled
DEBUG 2022-09-08 18:36:14,246 [main][Settings.java:85] : Order SQL inserts for batching: disabled
DEBUG 2022-09-08 18:36:14,246 [main][Settings.java:87] : multi-tenancy strategy : NONE
DEBUG 2022-09-08 18:36:14,246 [main][Settings.java:89] : JTA Track by Thread: enabled
DEBUG 2022-09-08 18:36:14,246 [main][Settings.java:91] : Query language substitutions: {}
DEBUG 2022-09-08 18:36:14,246 [main][Settings.java:92] : JPA query language strict compliance: disabled
DEBUG 2022-09-08 18:36:14,246 [main][Settings.java:93] : Named query checking : enabled
DEBUG 2022-09-08 18:36:14,246 [main][Settings.java:95] : Second-level cache: enabled
DEBUG 2022-09-08 18:36:14,246 [main][Settings.java:96] : Second-level query cache: disabled
DEBUG 2022-09-08 18:36:14,247 [main][Settings.java:97] : Second-level query cache factory: org.hibernate.cache.internal.StandardQueryCacheFactory@79fc5ded
DEBUG 2022-09-08 18:36:14,247 [main][Settings.java:98] : Second-level cache region prefix: null
DEBUG 2022-09-08 18:36:14,247 [main][Settings.java:99] : Optimize second-level cache for minimal puts: disabled
DEBUG 2022-09-08 18:36:14,247 [main][Settings.java:100] : Structured second-level cache entries: disabled
DEBUG 2022-09-08 18:36:14,247 [main][Settings.java:101] : Second-level cache direct-reference entries: disabled
DEBUG 2022-09-08 18:36:14,247 [main][Settings.java:102] : Automatic eviction of collection cache: disabled
DEBUG 2022-09-08 18:36:14,247 [main][Settings.java:104] : JDBC batch size: 15
DEBUG 2022-09-08 18:36:14,247 [main][Settings.java:105] : JDBC batch updates for versioned data: enabled
DEBUG 2022-09-08 18:36:14,247 [main][Settings.java:106] : Scrollable result sets: enabled
DEBUG 2022-09-08 18:36:14,247 [main][Settings.java:107] : Wrap result sets: disabled
DEBUG 2022-09-08 18:36:14,248 [main][Settings.java:108] : JDBC3 getGeneratedKeys(): enabled
DEBUG 2022-09-08 18:36:14,248 [main][Settings.java:109] : JDBC result set fetch size: null
DEBUG 2022-09-08 18:36:14,248 [main][Settings.java:110] : Connection release mode: AFTER_TRANSACTION
DEBUG 2022-09-08 18:36:14,248 [main][Settings.java:111] : Generate SQL with comments: disabled
DEBUG 2022-09-08 18:36:14,269 [main][SessionFactoryImpl.java:252] : Session factory constructed with filter configurations : {}
DEBUG 2022-09-08 18:36:14,269 [main][SessionFactoryImpl.java:253] : Instantiating session factory with properties: {awt.toolkit=sun.lwawt.macosx.LWCToolkit, java.specification.version=11, file.encoding.pkg=sun.io, jdk.extensions.version=11.0.15.0, sun.jnu.encoding=UTF-8, hibernate.dialect=org.hibernate.dialect.MySQLDialect, java.class.path=/Users/vdonets/IdeaProjects/testmaven/target/classes:/Users/vdonets/.m2/repository/org/hibernate/hibernate-core/5.2.2.Final/hibernate-core-5.2.2.Final.jar:/Users/vdonets/.m2/repository/org/jboss/logging/jboss-logging/3.3.0.Final/jboss-logging-3.3.0.Final.jar:/Users/vdonets/.m2/repository/org/hibernate/javax/persistence/hibernate-jpa-2.1-api/1.0.0.Final/hibernate-jpa-2.1-api-1.0.0.Final.jar:/Users/vdonets/.m2/repository/org/javassist/javassist/3.20.0-GA/javassist-3.20.0-GA.jar:/Users/vdonets/.m2/repository/antlr/antlr/2.7.7/antlr-2.7.7.jar:/Users/vdonets/.m2/repository/org/apache/geronimo/specs/geronimo-jta_1.1_spec/1.1.1/geronimo-jta_1.1_spec-1.1.1.jar:/Users/vdonets/.m2/repository/org/jboss/jandex/2.0.0.Final/jandex-2.0.0.Final.jar:/Users/vdonets/.m2/repository/com/fasterxml/classmate/1.3.0/classmate-1.3.0.jar:/Users/vdonets/.m2/repository/dom4j/dom4j/1.6.1/dom4j-1.6.1.jar:/Users/vdonets/.m2/repository/org/hibernate/common/hibernate-commons-annotations/5.0.1.Final/hibernate-commons-annotations-5.0.1.Final.jar:/Users/vdonets/.m2/repository/javax/enterprise/cdi-api/1.1/cdi-api-1.1.jar:/Users/vdonets/.m2/repository/javax/el/el-api/2.2/el-api-2.2.jar:/Users/vdonets/.m2/repository/org/jboss/spec/javax/interceptor/jboss-interceptors-api_1.1_spec/1.0.0.Beta1/jboss-interceptors-api_1.1_spec-1.0.0.Beta1.jar:/Users/vdonets/.m2/repository/javax/annotation/jsr250-api/1.0/jsr250-api-1.0.jar:/Users/vdonets/.m2/repository/javax/inject/javax.inject/1/javax.inject-1.jar:/Users/vdonets/.m2/repository/mysql/mysql-connector-java/8.0.29/mysql-connector-java-8.0.29.jar:/Users/vdonets/.m2/repository/com/google/protobuf/protobuf-java/3.19.4/protobuf-java-3.19.4.jar:/Users/vdonets/.m2/repository/jakarta/xml/bind/jakarta.xml.bind-api/2.3.2/jakarta.xml.bind-api-2.3.2.jar:/Users/vdonets/.m2/repository/jakarta/activation/jakarta.activation-api/1.2.1/jakarta.activation-api-1.2.1.jar:/Users/vdonets/.m2/repository/org/glassfish/jaxb/jaxb-runtime/2.3.2/jaxb-runtime-2.3.2.jar:/Users/vdonets/.m2/repository/org/glassfish/jaxb/txw2/2.3.2/txw2-2.3.2.jar:/Users/vdonets/.m2/repository/com/sun/istack/istack-commons-runtime/3.0.8/istack-commons-runtime-3.0.8.jar:/Users/vdonets/.m2/repository/org/jvnet/staxex/stax-ex/1.8.1/stax-ex-1.8.1.jar:/Users/vdonets/.m2/repository/com/sun/xml/fastinfoset/FastInfoset/1.2.16/FastInfoset-1.2.16.jar:/Users/vdonets/.m2/repository/log4j/log4j/1.2.14/log4j-1.2.14.jar:/Applications/IntelliJ IDEA.app/Contents/lib/idea_rt.jar:/Users/vdonets/Library/Caches/JetBrains/IntelliJIdea2022.1/captureAgent/debugger-agent.jar, java.vm.vendor=Eclipse OpenJ9, sun.arch.data.model=64, com.ibm.vm.bitmode=64, hbm2ddl.auto=create-drop, user.variant=, com.ibm.oti.vm.library.version=29, java.vendor.url=https://www.ibm.com/semeru-runtimes, user.timezone=Europe/Warsaw, java.vm.specification.version=11, os.name=Mac OS X, sun.java.launcher=SUN_STANDARD, user.country=US, sun.boot.library.path=/Users/vdonets/Library/Java/JavaVirtualMachines/semeru-11.0.15/Contents/Home/lib/default:/Users/vdonets/Library/Java/JavaVirtualMachines/semeru-11.0.15/Contents/Home/lib, sun.java.command=org.example.Main, sun.cpu.endian=little, user.home=/Users/vdonets, user.language=en, java.specification.vendor=Oracle Corporation, java.version.date=2022-04-19, java.home=/Users/vdonets/Library/Java/JavaVirtualMachines/semeru-11.0.15/Contents/Home, ibm.signalhandling.rs=false, jdk.extensions.name=Extensions for OpenJDK for Eclipse OpenJ9, file.separator=/, line.separator=
, java.specification.name=Java Platform API Specification, java.vm.specification.vendor=Oracle Corporation, intellij.debug.agent=true, java.compiler=j9jit29, com.ibm.util.extralibs.properties=, java.awt.graphicsenv=sun.awt.CGraphicsEnvironment, com.ibm.oti.configuration=scar, com.ibm.oti.shared.enabled=false, hibernate.hbm2ddl.auto=create-drop, com.ibm.oti.vm.bootstrap.library.path=/Users/vdonets/Library/Java/JavaVirtualMachines/semeru-11.0.15/Contents/Home/lib/default:/Users/vdonets/Library/Java/JavaVirtualMachines/semeru-11.0.15/Contents/Home/lib, com.ibm.cpu.endian=little, java.fullversion=11.0.15-ea+10
JRE 11 Mac OS X aarch64-64-Bit 20220422_36 (JIT enabled, AOT enabled)
OpenJ9   - 9a84ec34e
OMR      - ab24b6666
JCL      - b7b5b42ea6 based on jdk-11.0.15+10, java.runtime.version=11.0.15-ea+10, user.name=vdonets, path.separator=:, hibernate.connection.username=root, os.version=12.5, java.runtime.name=IBM Semeru Runtime Open Edition, hibernate.connection.url=jdbc:mysql://localhost:3306/classicmodels?serverTimezone=UTC, connection.pool_size=5, ibm.signalhandling.sigint=true, file.encoding=UTF-8, java.vm.name=Eclipse OpenJ9 VM, hibernate.show_sql=true, java.vendor.version=11.0.15.0, ibm.signalhandling.sigchain=true, show_sql=true, hibernate.connection.driver_class=com.mysql.cj.jdbc.Driver, java.vendor.url.bug=https://github.com/ibmruntimes/Semeru-Runtimes/issues, java.io.tmpdir=/var/folders/wv/6c3_66yd6kq3r7z477kwz4lr0000gn/T/, java.version=11.0.15-ea, jboss.modules.system.pkgs=com.intellij.rt, com.ibm.system.agent.path=/Users/vdonets/Library/Java/JavaVirtualMachines/semeru-11.0.15/Contents/Home/lib, user.dir=/Users/vdonets/IdeaProjects/testmaven, os.arch=aarch64, java.vm.specification.name=Java Virtual Machine Specification, java.awt.printerjob=sun.lwawt.macosx.CPrinterJob, hibernate.connection.password=****, os.encoding=UTF-8, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@873cb333, java.library.path=/Users/vdonets/Library/Java/JavaVirtualMachines/semeru-11.0.15/Contents/Home/lib/default:/Users/vdonets/Library/Java/JavaVirtualMachines/semeru-11.0.15/Contents/Home/lib:/usr/lib, java.vendor=IBM Corporation, java.vm.info=JRE 11 Mac OS X aarch64-64-Bit 20220422_36 (JIT enabled, AOT enabled)
OpenJ9   - 9a84ec34e
OMR      - ab24b6666
JCL      - b7b5b42ea6 based on jdk-11.0.15+10, java.vm.version=openj9-0.32.0, ibm.system.encoding=UTF-8, hibernate.bytecode.use_reflection_optimizer=false, com.ibm.jcl.checkClassPath=, sun.io.unicode.encoding=UnicodeLittle, hibernate.connection.pool_size=5, java.class.version=55.0}
DEBUG 2022-09-08 18:36:14,274 [main][JaccIntegrator.java:80] : Skipping JACC integration as it was not enabled
DEBUG 2022-09-08 18:36:14,275 [main][SessionFactoryImpl.java:292] : Instantiated session factory
DEBUG 2022-09-08 18:36:14,295 [main][ClassLoaderAccessImpl.java:55] : Not known whether passed class name [org.example.models.Book] is safe
DEBUG 2022-09-08 18:36:14,295 [main][ClassLoaderAccessImpl.java:57] : No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.models.Book
DEBUG 2022-09-08 18:36:14,300 [main][ClassLoaderAccessImpl.java:55] : Not known whether passed class name [org.example.models.Book] is safe
DEBUG 2022-09-08 18:36:14,301 [main][ClassLoaderAccessImpl.java:57] : No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.models.Book
DEBUG 2022-09-08 18:36:14,333 [main][ClassLoaderAccessImpl.java:55] : Not known whether passed class name [org.example.models.Author] is safe
DEBUG 2022-09-08 18:36:14,333 [main][ClassLoaderAccessImpl.java:57] : No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.models.Author
DEBUG 2022-09-08 18:36:14,333 [main][ClassLoaderAccessImpl.java:55] : Not known whether passed class name [org.example.models.Author] is safe
DEBUG 2022-09-08 18:36:14,334 [main][ClassLoaderAccessImpl.java:57] : No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.models.Author
DEBUG 2022-09-08 18:36:14,338 [main][AbstractEntityPersister.java:3529] : Static SQL for entity: org.example.models.Book
DEBUG 2022-09-08 18:36:14,338 [main][AbstractEntityPersister.java:3534] :  Version select: select id from Book where id =?
DEBUG 2022-09-08 18:36:14,338 [main][AbstractEntityPersister.java:3537] :  Snapshot select: select book_.id, book_.author_id as author_i2_1_, book_.name as name3_1_ from Book book_ where book_.id=?
DEBUG 2022-09-08 18:36:14,338 [main][DelegatingBasicLogger.java:394] :  Insert 0: insert into Book (author_id, name, id) values (?, ?, ?)
DEBUG 2022-09-08 18:36:14,338 [main][DelegatingBasicLogger.java:394] :  Update 0: update Book set author_id=?, name=? where id=?
DEBUG 2022-09-08 18:36:14,339 [main][DelegatingBasicLogger.java:394] :  Delete 0: delete from Book where id=?
DEBUG 2022-09-08 18:36:14,350 [main][QuerySpacesImpl.java:174] : Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7b51ebff]
DEBUG 2022-09-08 18:36:14,350 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : author_id
DEBUG 2022-09-08 18:36:14,351 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : name
DEBUG 2022-09-08 18:36:14,351 [main][FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150] : Building LoadPlan...
DEBUG 2022-09-08 18:36:14,355 [main][LoadQueryJoinAndFetchProcessor.java:100] : processing queryspace <gen:0>
DEBUG 2022-09-08 18:36:14,357 [main][LoadPlanTreePrinter.java:55] : LoadPlan(entity=org.example.models.Book)
    - Returns
       - EntityReturnImpl(entity=org.example.models.Book, querySpaceUid=<gen:0>, path=org.example.models.Book)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=org.example.models.Book)
          - SQL table alias mapping - book0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

DEBUG 2022-09-08 18:36:14,360 [main][EntityLoader.java:115] : Static select for entity org.example.models.Book [NONE]: select book0_.id as id1_1_0_, book0_.author_id as author_i2_1_0_, book0_.name as name3_1_0_ from Book book0_ where book0_.id=?
DEBUG 2022-09-08 18:36:14,360 [main][QuerySpacesImpl.java:174] : Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@c137b45f]
DEBUG 2022-09-08 18:36:14,360 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : author_id
DEBUG 2022-09-08 18:36:14,361 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : name
DEBUG 2022-09-08 18:36:14,361 [main][FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150] : Building LoadPlan...
DEBUG 2022-09-08 18:36:14,361 [main][LoadQueryJoinAndFetchProcessor.java:100] : processing queryspace <gen:0>
DEBUG 2022-09-08 18:36:14,361 [main][LoadPlanTreePrinter.java:55] : LoadPlan(entity=org.example.models.Book)
    - Returns
       - EntityReturnImpl(entity=org.example.models.Book, querySpaceUid=<gen:0>, path=org.example.models.Book)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=org.example.models.Book)
          - SQL table alias mapping - book0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

DEBUG 2022-09-08 18:36:14,361 [main][EntityLoader.java:115] : Static select for entity org.example.models.Book [READ]: select book0_.id as id1_1_0_, book0_.author_id as author_i2_1_0_, book0_.name as name3_1_0_ from Book book0_ where book0_.id=?
DEBUG 2022-09-08 18:36:14,362 [main][QuerySpacesImpl.java:174] : Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@d5facb9b]
DEBUG 2022-09-08 18:36:14,362 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : author_id
DEBUG 2022-09-08 18:36:14,362 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : name
DEBUG 2022-09-08 18:36:14,362 [main][FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150] : Building LoadPlan...
DEBUG 2022-09-08 18:36:14,362 [main][LoadQueryJoinAndFetchProcessor.java:100] : processing queryspace <gen:0>
DEBUG 2022-09-08 18:36:14,363 [main][LoadPlanTreePrinter.java:55] : LoadPlan(entity=org.example.models.Book)
    - Returns
       - EntityReturnImpl(entity=org.example.models.Book, querySpaceUid=<gen:0>, path=org.example.models.Book)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=org.example.models.Book)
          - SQL table alias mapping - book0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

DEBUG 2022-09-08 18:36:14,363 [main][EntityLoader.java:115] : Static select for entity org.example.models.Book [UPGRADE]: select book0_.id as id1_1_0_, book0_.author_id as author_i2_1_0_, book0_.name as name3_1_0_ from Book book0_ where book0_.id=? for update
DEBUG 2022-09-08 18:36:14,363 [main][QuerySpacesImpl.java:174] : Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@27dec8a8]
DEBUG 2022-09-08 18:36:14,363 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : author_id
DEBUG 2022-09-08 18:36:14,363 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : name
DEBUG 2022-09-08 18:36:14,364 [main][FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150] : Building LoadPlan...
DEBUG 2022-09-08 18:36:14,364 [main][LoadQueryJoinAndFetchProcessor.java:100] : processing queryspace <gen:0>
DEBUG 2022-09-08 18:36:14,364 [main][LoadPlanTreePrinter.java:55] : LoadPlan(entity=org.example.models.Book)
    - Returns
       - EntityReturnImpl(entity=org.example.models.Book, querySpaceUid=<gen:0>, path=org.example.models.Book)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=org.example.models.Book)
          - SQL table alias mapping - book0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

DEBUG 2022-09-08 18:36:14,364 [main][EntityLoader.java:115] : Static select for entity org.example.models.Book [UPGRADE_NOWAIT]: select book0_.id as id1_1_0_, book0_.author_id as author_i2_1_0_, book0_.name as name3_1_0_ from Book book0_ where book0_.id=? for update
DEBUG 2022-09-08 18:36:14,364 [main][QuerySpacesImpl.java:174] : Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@d5e62e66]
DEBUG 2022-09-08 18:36:14,365 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : author_id
DEBUG 2022-09-08 18:36:14,365 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : name
DEBUG 2022-09-08 18:36:14,365 [main][FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150] : Building LoadPlan...
DEBUG 2022-09-08 18:36:14,366 [main][LoadQueryJoinAndFetchProcessor.java:100] : processing queryspace <gen:0>
DEBUG 2022-09-08 18:36:14,366 [main][LoadPlanTreePrinter.java:55] : LoadPlan(entity=org.example.models.Book)
    - Returns
       - EntityReturnImpl(entity=org.example.models.Book, querySpaceUid=<gen:0>, path=org.example.models.Book)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=org.example.models.Book)
          - SQL table alias mapping - book0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

DEBUG 2022-09-08 18:36:14,366 [main][EntityLoader.java:115] : Static select for entity org.example.models.Book [UPGRADE_SKIPLOCKED]: select book0_.id as id1_1_0_, book0_.author_id as author_i2_1_0_, book0_.name as name3_1_0_ from Book book0_ where book0_.id=? for update
DEBUG 2022-09-08 18:36:14,367 [main][QuerySpacesImpl.java:174] : Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6f8deb43]
DEBUG 2022-09-08 18:36:14,367 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : author_id
DEBUG 2022-09-08 18:36:14,367 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : name
DEBUG 2022-09-08 18:36:14,367 [main][FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150] : Building LoadPlan...
DEBUG 2022-09-08 18:36:14,368 [main][LoadQueryJoinAndFetchProcessor.java:100] : processing queryspace <gen:0>
DEBUG 2022-09-08 18:36:14,368 [main][LoadPlanTreePrinter.java:55] : LoadPlan(entity=org.example.models.Book)
    - Returns
       - EntityReturnImpl(entity=org.example.models.Book, querySpaceUid=<gen:0>, path=org.example.models.Book)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=org.example.models.Book)
          - SQL table alias mapping - book0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

DEBUG 2022-09-08 18:36:14,369 [main][EntityLoader.java:115] : Static select for entity org.example.models.Book [FORCE]: select book0_.id as id1_1_0_, book0_.author_id as author_i2_1_0_, book0_.name as name3_1_0_ from Book book0_ where book0_.id=? for update
DEBUG 2022-09-08 18:36:14,369 [main][QuerySpacesImpl.java:174] : Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@889d989c]
DEBUG 2022-09-08 18:36:14,370 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : author_id
DEBUG 2022-09-08 18:36:14,370 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : name
DEBUG 2022-09-08 18:36:14,370 [main][FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150] : Building LoadPlan...
DEBUG 2022-09-08 18:36:14,370 [main][LoadQueryJoinAndFetchProcessor.java:100] : processing queryspace <gen:0>
DEBUG 2022-09-08 18:36:14,371 [main][LoadPlanTreePrinter.java:55] : LoadPlan(entity=org.example.models.Book)
    - Returns
       - EntityReturnImpl(entity=org.example.models.Book, querySpaceUid=<gen:0>, path=org.example.models.Book)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=org.example.models.Book)
          - SQL table alias mapping - book0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

DEBUG 2022-09-08 18:36:14,371 [main][EntityLoader.java:115] : Static select for entity org.example.models.Book [PESSIMISTIC_READ]: select book0_.id as id1_1_0_, book0_.author_id as author_i2_1_0_, book0_.name as name3_1_0_ from Book book0_ where book0_.id=? lock in share mode
DEBUG 2022-09-08 18:36:14,371 [main][QuerySpacesImpl.java:174] : Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@a5e29a72]
DEBUG 2022-09-08 18:36:14,371 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : author_id
DEBUG 2022-09-08 18:36:14,372 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : name
DEBUG 2022-09-08 18:36:14,372 [main][FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150] : Building LoadPlan...
DEBUG 2022-09-08 18:36:14,372 [main][LoadQueryJoinAndFetchProcessor.java:100] : processing queryspace <gen:0>
DEBUG 2022-09-08 18:36:14,372 [main][LoadPlanTreePrinter.java:55] : LoadPlan(entity=org.example.models.Book)
    - Returns
       - EntityReturnImpl(entity=org.example.models.Book, querySpaceUid=<gen:0>, path=org.example.models.Book)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=org.example.models.Book)
          - SQL table alias mapping - book0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

DEBUG 2022-09-08 18:36:14,373 [main][EntityLoader.java:115] : Static select for entity org.example.models.Book [PESSIMISTIC_WRITE]: select book0_.id as id1_1_0_, book0_.author_id as author_i2_1_0_, book0_.name as name3_1_0_ from Book book0_ where book0_.id=? for update
DEBUG 2022-09-08 18:36:14,373 [main][QuerySpacesImpl.java:174] : Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@d90a3c18]
DEBUG 2022-09-08 18:36:14,373 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : author_id
DEBUG 2022-09-08 18:36:14,373 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : name
DEBUG 2022-09-08 18:36:14,373 [main][FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150] : Building LoadPlan...
DEBUG 2022-09-08 18:36:14,374 [main][LoadQueryJoinAndFetchProcessor.java:100] : processing queryspace <gen:0>
DEBUG 2022-09-08 18:36:14,374 [main][LoadPlanTreePrinter.java:55] : LoadPlan(entity=org.example.models.Book)
    - Returns
       - EntityReturnImpl(entity=org.example.models.Book, querySpaceUid=<gen:0>, path=org.example.models.Book)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=org.example.models.Book)
          - SQL table alias mapping - book0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

DEBUG 2022-09-08 18:36:14,374 [main][EntityLoader.java:115] : Static select for entity org.example.models.Book [PESSIMISTIC_FORCE_INCREMENT]: select book0_.id as id1_1_0_, book0_.author_id as author_i2_1_0_, book0_.name as name3_1_0_ from Book book0_ where book0_.id=? for update
DEBUG 2022-09-08 18:36:14,374 [main][QuerySpacesImpl.java:174] : Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@90696cc8]
DEBUG 2022-09-08 18:36:14,374 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : author_id
DEBUG 2022-09-08 18:36:14,375 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : name
DEBUG 2022-09-08 18:36:14,375 [main][FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150] : Building LoadPlan...
DEBUG 2022-09-08 18:36:14,375 [main][LoadQueryJoinAndFetchProcessor.java:100] : processing queryspace <gen:0>
DEBUG 2022-09-08 18:36:14,376 [main][LoadPlanTreePrinter.java:55] : LoadPlan(entity=org.example.models.Book)
    - Returns
       - EntityReturnImpl(entity=org.example.models.Book, querySpaceUid=<gen:0>, path=org.example.models.Book)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=org.example.models.Book)
          - SQL table alias mapping - book0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

DEBUG 2022-09-08 18:36:14,376 [main][EntityLoader.java:115] : Static select for entity org.example.models.Book [OPTIMISTIC]: select book0_.id as id1_1_0_, book0_.author_id as author_i2_1_0_, book0_.name as name3_1_0_ from Book book0_ where book0_.id=?
DEBUG 2022-09-08 18:36:14,376 [main][QuerySpacesImpl.java:174] : Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@cb7962d6]
DEBUG 2022-09-08 18:36:14,376 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : author_id
DEBUG 2022-09-08 18:36:14,376 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : name
DEBUG 2022-09-08 18:36:14,376 [main][FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150] : Building LoadPlan...
DEBUG 2022-09-08 18:36:14,377 [main][LoadQueryJoinAndFetchProcessor.java:100] : processing queryspace <gen:0>
DEBUG 2022-09-08 18:36:14,377 [main][LoadPlanTreePrinter.java:55] : LoadPlan(entity=org.example.models.Book)
    - Returns
       - EntityReturnImpl(entity=org.example.models.Book, querySpaceUid=<gen:0>, path=org.example.models.Book)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=org.example.models.Book)
          - SQL table alias mapping - book0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

DEBUG 2022-09-08 18:36:14,377 [main][EntityLoader.java:115] : Static select for entity org.example.models.Book [OPTIMISTIC_FORCE_INCREMENT]: select book0_.id as id1_1_0_, book0_.author_id as author_i2_1_0_, book0_.name as name3_1_0_ from Book book0_ where book0_.id=?
DEBUG 2022-09-08 18:36:14,386 [main][CascadeEntityLoader.java:38] : Static select for action ACTION_MERGE on entity org.example.models.Book: select book0_.id as id1_1_0_, book0_.author_id as author_i2_1_0_, book0_.name as name3_1_0_ from Book book0_ where book0_.id=?
DEBUG 2022-09-08 18:36:14,387 [main][CascadeEntityLoader.java:38] : Static select for action ACTION_REFRESH on entity org.example.models.Book: select book0_.id as id1_1_0_, book0_.author_id as author_i2_1_0_, book0_.name as name3_1_0_ from Book book0_ where book0_.id=?
DEBUG 2022-09-08 18:36:14,388 [main][AbstractEntityPersister.java:3529] : Static SQL for entity: org.example.models.Author
DEBUG 2022-09-08 18:36:14,388 [main][AbstractEntityPersister.java:3534] :  Version select: select id from Author where id =?
DEBUG 2022-09-08 18:36:14,389 [main][AbstractEntityPersister.java:3537] :  Snapshot select: select author_.id, author_.name as name2_0_, author_.salary as salary3_0_ from Author author_ where author_.id=?
DEBUG 2022-09-08 18:36:14,389 [main][DelegatingBasicLogger.java:394] :  Insert 0: insert into Author (name, salary, id) values (?, ?, ?)
DEBUG 2022-09-08 18:36:14,389 [main][DelegatingBasicLogger.java:394] :  Update 0: update Author set name=?, salary=? where id=?
DEBUG 2022-09-08 18:36:14,389 [main][DelegatingBasicLogger.java:394] :  Delete 0: delete from Author where id=?
DEBUG 2022-09-08 18:36:14,389 [main][AbstractEntityPersister.java:3545] :  Identity insert: insert into Author (name, salary) values (?, ?)
DEBUG 2022-09-08 18:36:14,389 [main][QuerySpacesImpl.java:174] : Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@d383a99c]
DEBUG 2022-09-08 18:36:14,390 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : name
DEBUG 2022-09-08 18:36:14,390 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : salary
DEBUG 2022-09-08 18:36:14,390 [main][FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150] : Building LoadPlan...
DEBUG 2022-09-08 18:36:14,390 [main][LoadQueryJoinAndFetchProcessor.java:100] : processing queryspace <gen:0>
DEBUG 2022-09-08 18:36:14,391 [main][LoadPlanTreePrinter.java:55] : LoadPlan(entity=org.example.models.Author)
    - Returns
       - EntityReturnImpl(entity=org.example.models.Author, querySpaceUid=<gen:0>, path=org.example.models.Author)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=org.example.models.Author)
          - SQL table alias mapping - author0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

DEBUG 2022-09-08 18:36:14,391 [main][EntityLoader.java:115] : Static select for entity org.example.models.Author [NONE]: select author0_.id as id1_0_0_, author0_.name as name2_0_0_, author0_.salary as salary3_0_0_ from Author author0_ where author0_.id=?
DEBUG 2022-09-08 18:36:14,391 [main][QuerySpacesImpl.java:174] : Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@ac9e32db]
DEBUG 2022-09-08 18:36:14,392 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : name
DEBUG 2022-09-08 18:36:14,392 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : salary
DEBUG 2022-09-08 18:36:14,392 [main][FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150] : Building LoadPlan...
DEBUG 2022-09-08 18:36:14,392 [main][LoadQueryJoinAndFetchProcessor.java:100] : processing queryspace <gen:0>
DEBUG 2022-09-08 18:36:14,393 [main][LoadPlanTreePrinter.java:55] : LoadPlan(entity=org.example.models.Author)
    - Returns
       - EntityReturnImpl(entity=org.example.models.Author, querySpaceUid=<gen:0>, path=org.example.models.Author)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=org.example.models.Author)
          - SQL table alias mapping - author0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

DEBUG 2022-09-08 18:36:14,393 [main][EntityLoader.java:115] : Static select for entity org.example.models.Author [READ]: select author0_.id as id1_0_0_, author0_.name as name2_0_0_, author0_.salary as salary3_0_0_ from Author author0_ where author0_.id=?
DEBUG 2022-09-08 18:36:14,393 [main][QuerySpacesImpl.java:174] : Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@8d289fb8]
DEBUG 2022-09-08 18:36:14,393 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : name
DEBUG 2022-09-08 18:36:14,393 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : salary
DEBUG 2022-09-08 18:36:14,393 [main][FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150] : Building LoadPlan...
DEBUG 2022-09-08 18:36:14,394 [main][LoadQueryJoinAndFetchProcessor.java:100] : processing queryspace <gen:0>
DEBUG 2022-09-08 18:36:14,394 [main][LoadPlanTreePrinter.java:55] : LoadPlan(entity=org.example.models.Author)
    - Returns
       - EntityReturnImpl(entity=org.example.models.Author, querySpaceUid=<gen:0>, path=org.example.models.Author)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=org.example.models.Author)
          - SQL table alias mapping - author0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

DEBUG 2022-09-08 18:36:14,394 [main][EntityLoader.java:115] : Static select for entity org.example.models.Author [UPGRADE]: select author0_.id as id1_0_0_, author0_.name as name2_0_0_, author0_.salary as salary3_0_0_ from Author author0_ where author0_.id=? for update
DEBUG 2022-09-08 18:36:14,395 [main][QuerySpacesImpl.java:174] : Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@d36d583a]
DEBUG 2022-09-08 18:36:14,395 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : name
DEBUG 2022-09-08 18:36:14,396 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : salary
DEBUG 2022-09-08 18:36:14,396 [main][FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150] : Building LoadPlan...
DEBUG 2022-09-08 18:36:14,396 [main][LoadQueryJoinAndFetchProcessor.java:100] : processing queryspace <gen:0>
DEBUG 2022-09-08 18:36:14,397 [main][LoadPlanTreePrinter.java:55] : LoadPlan(entity=org.example.models.Author)
    - Returns
       - EntityReturnImpl(entity=org.example.models.Author, querySpaceUid=<gen:0>, path=org.example.models.Author)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=org.example.models.Author)
          - SQL table alias mapping - author0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

DEBUG 2022-09-08 18:36:14,397 [main][EntityLoader.java:115] : Static select for entity org.example.models.Author [UPGRADE_NOWAIT]: select author0_.id as id1_0_0_, author0_.name as name2_0_0_, author0_.salary as salary3_0_0_ from Author author0_ where author0_.id=? for update
DEBUG 2022-09-08 18:36:14,397 [main][QuerySpacesImpl.java:174] : Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@14223c16]
DEBUG 2022-09-08 18:36:14,398 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : name
DEBUG 2022-09-08 18:36:14,398 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : salary
DEBUG 2022-09-08 18:36:14,398 [main][FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150] : Building LoadPlan...
DEBUG 2022-09-08 18:36:14,398 [main][LoadQueryJoinAndFetchProcessor.java:100] : processing queryspace <gen:0>
DEBUG 2022-09-08 18:36:14,399 [main][LoadPlanTreePrinter.java:55] : LoadPlan(entity=org.example.models.Author)
    - Returns
       - EntityReturnImpl(entity=org.example.models.Author, querySpaceUid=<gen:0>, path=org.example.models.Author)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=org.example.models.Author)
          - SQL table alias mapping - author0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

DEBUG 2022-09-08 18:36:14,399 [main][EntityLoader.java:115] : Static select for entity org.example.models.Author [UPGRADE_SKIPLOCKED]: select author0_.id as id1_0_0_, author0_.name as name2_0_0_, author0_.salary as salary3_0_0_ from Author author0_ where author0_.id=? for update
DEBUG 2022-09-08 18:36:14,399 [main][QuerySpacesImpl.java:174] : Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@449bbe6f]
DEBUG 2022-09-08 18:36:14,399 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : name
DEBUG 2022-09-08 18:36:14,400 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : salary
DEBUG 2022-09-08 18:36:14,400 [main][FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150] : Building LoadPlan...
DEBUG 2022-09-08 18:36:14,400 [main][LoadQueryJoinAndFetchProcessor.java:100] : processing queryspace <gen:0>
DEBUG 2022-09-08 18:36:14,400 [main][LoadPlanTreePrinter.java:55] : LoadPlan(entity=org.example.models.Author)
    - Returns
       - EntityReturnImpl(entity=org.example.models.Author, querySpaceUid=<gen:0>, path=org.example.models.Author)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=org.example.models.Author)
          - SQL table alias mapping - author0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

DEBUG 2022-09-08 18:36:14,400 [main][EntityLoader.java:115] : Static select for entity org.example.models.Author [FORCE]: select author0_.id as id1_0_0_, author0_.name as name2_0_0_, author0_.salary as salary3_0_0_ from Author author0_ where author0_.id=? for update
DEBUG 2022-09-08 18:36:14,401 [main][QuerySpacesImpl.java:174] : Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@adb6ba1d]
DEBUG 2022-09-08 18:36:14,401 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : name
DEBUG 2022-09-08 18:36:14,401 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : salary
DEBUG 2022-09-08 18:36:14,401 [main][FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150] : Building LoadPlan...
DEBUG 2022-09-08 18:36:14,401 [main][LoadQueryJoinAndFetchProcessor.java:100] : processing queryspace <gen:0>
DEBUG 2022-09-08 18:36:14,402 [main][LoadPlanTreePrinter.java:55] : LoadPlan(entity=org.example.models.Author)
    - Returns
       - EntityReturnImpl(entity=org.example.models.Author, querySpaceUid=<gen:0>, path=org.example.models.Author)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=org.example.models.Author)
          - SQL table alias mapping - author0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

DEBUG 2022-09-08 18:36:14,402 [main][EntityLoader.java:115] : Static select for entity org.example.models.Author [PESSIMISTIC_READ]: select author0_.id as id1_0_0_, author0_.name as name2_0_0_, author0_.salary as salary3_0_0_ from Author author0_ where author0_.id=? lock in share mode
DEBUG 2022-09-08 18:36:14,402 [main][QuerySpacesImpl.java:174] : Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@663aca09]
DEBUG 2022-09-08 18:36:14,402 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : name
DEBUG 2022-09-08 18:36:14,402 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : salary
DEBUG 2022-09-08 18:36:14,403 [main][FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150] : Building LoadPlan...
DEBUG 2022-09-08 18:36:14,403 [main][LoadQueryJoinAndFetchProcessor.java:100] : processing queryspace <gen:0>
DEBUG 2022-09-08 18:36:14,403 [main][LoadPlanTreePrinter.java:55] : LoadPlan(entity=org.example.models.Author)
    - Returns
       - EntityReturnImpl(entity=org.example.models.Author, querySpaceUid=<gen:0>, path=org.example.models.Author)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=org.example.models.Author)
          - SQL table alias mapping - author0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

DEBUG 2022-09-08 18:36:14,404 [main][EntityLoader.java:115] : Static select for entity org.example.models.Author [PESSIMISTIC_WRITE]: select author0_.id as id1_0_0_, author0_.name as name2_0_0_, author0_.salary as salary3_0_0_ from Author author0_ where author0_.id=? for update
DEBUG 2022-09-08 18:36:14,404 [main][QuerySpacesImpl.java:174] : Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@d7c61e15]
DEBUG 2022-09-08 18:36:14,404 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : name
DEBUG 2022-09-08 18:36:14,404 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : salary
DEBUG 2022-09-08 18:36:14,404 [main][FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150] : Building LoadPlan...
DEBUG 2022-09-08 18:36:14,405 [main][LoadQueryJoinAndFetchProcessor.java:100] : processing queryspace <gen:0>
DEBUG 2022-09-08 18:36:14,405 [main][LoadPlanTreePrinter.java:55] : LoadPlan(entity=org.example.models.Author)
    - Returns
       - EntityReturnImpl(entity=org.example.models.Author, querySpaceUid=<gen:0>, path=org.example.models.Author)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=org.example.models.Author)
          - SQL table alias mapping - author0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

DEBUG 2022-09-08 18:36:14,405 [main][EntityLoader.java:115] : Static select for entity org.example.models.Author [PESSIMISTIC_FORCE_INCREMENT]: select author0_.id as id1_0_0_, author0_.name as name2_0_0_, author0_.salary as salary3_0_0_ from Author author0_ where author0_.id=? for update
DEBUG 2022-09-08 18:36:14,405 [main][QuerySpacesImpl.java:174] : Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@abbb0df0]
DEBUG 2022-09-08 18:36:14,405 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : name
DEBUG 2022-09-08 18:36:14,406 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : salary
DEBUG 2022-09-08 18:36:14,406 [main][FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150] : Building LoadPlan...
DEBUG 2022-09-08 18:36:14,406 [main][LoadQueryJoinAndFetchProcessor.java:100] : processing queryspace <gen:0>
DEBUG 2022-09-08 18:36:14,407 [main][LoadPlanTreePrinter.java:55] : LoadPlan(entity=org.example.models.Author)
    - Returns
       - EntityReturnImpl(entity=org.example.models.Author, querySpaceUid=<gen:0>, path=org.example.models.Author)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=org.example.models.Author)
          - SQL table alias mapping - author0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

DEBUG 2022-09-08 18:36:14,407 [main][EntityLoader.java:115] : Static select for entity org.example.models.Author [OPTIMISTIC]: select author0_.id as id1_0_0_, author0_.name as name2_0_0_, author0_.salary as salary3_0_0_ from Author author0_ where author0_.id=?
DEBUG 2022-09-08 18:36:14,407 [main][QuerySpacesImpl.java:174] : Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@50beea99]
DEBUG 2022-09-08 18:36:14,407 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : name
DEBUG 2022-09-08 18:36:14,408 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : salary
DEBUG 2022-09-08 18:36:14,408 [main][FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150] : Building LoadPlan...
DEBUG 2022-09-08 18:36:14,408 [main][LoadQueryJoinAndFetchProcessor.java:100] : processing queryspace <gen:0>
DEBUG 2022-09-08 18:36:14,408 [main][LoadPlanTreePrinter.java:55] : LoadPlan(entity=org.example.models.Author)
    - Returns
       - EntityReturnImpl(entity=org.example.models.Author, querySpaceUid=<gen:0>, path=org.example.models.Author)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=org.example.models.Author)
          - SQL table alias mapping - author0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

DEBUG 2022-09-08 18:36:14,408 [main][EntityLoader.java:115] : Static select for entity org.example.models.Author [OPTIMISTIC_FORCE_INCREMENT]: select author0_.id as id1_0_0_, author0_.name as name2_0_0_, author0_.salary as salary3_0_0_ from Author author0_ where author0_.id=?
DEBUG 2022-09-08 18:36:14,409 [main][CascadeEntityLoader.java:38] : Static select for action ACTION_MERGE on entity org.example.models.Author: select author0_.id as id1_0_0_, author0_.name as name2_0_0_, author0_.salary as salary3_0_0_ from Author author0_ where author0_.id=?
DEBUG 2022-09-08 18:36:14,409 [main][CascadeEntityLoader.java:38] : Static select for action ACTION_REFRESH on entity org.example.models.Author: select author0_.id as id1_0_0_, author0_.name as name2_0_0_, author0_.salary as salary3_0_0_ from Author author0_ where author0_.id=?
DEBUG 2022-09-08 18:36:14,423 [main][SqlStatementLogger.java:92] : drop table if exists Author
INFO  2022-09-08 18:36:14,424 [main][DdlTransactionIsolatorNonJtaImpl.java:48] : HHH10001501: Connection obtained from JdbcConnectionAccess [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess@3c8ad78e] for (non-JTA) DDL execution was not in auto-commit mode; the Connection 'local transaction' will be committed and the Connection will be set into auto-commit mode.
DEBUG 2022-09-08 18:36:14,433 [main][SqlStatementLogger.java:92] : drop table if exists Book
DEBUG 2022-09-08 18:36:14,438 [main][SqlStatementLogger.java:92] : drop table if exists hibernate_sequence
DEBUG 2022-09-08 18:36:14,445 [main][SqlStatementLogger.java:92] : create table Author (id bigint not null auto_increment, name varchar(255), salary integer, primary key (id))
INFO  2022-09-08 18:36:14,446 [main][DdlTransactionIsolatorNonJtaImpl.java:48] : HHH10001501: Connection obtained from JdbcConnectionAccess [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess@551d0cad] for (non-JTA) DDL execution was not in auto-commit mode; the Connection 'local transaction' will be committed and the Connection will be set into auto-commit mode.
DEBUG 2022-09-08 18:36:14,454 [main][SqlStatementLogger.java:92] : create table Book (id bigint not null, author_id bigint not null, name varchar(255), primary key (id))
DEBUG 2022-09-08 18:36:14,464 [main][SqlStatementLogger.java:92] : create table hibernate_sequence (next_val bigint)
DEBUG 2022-09-08 18:36:14,468 [main][SqlStatementLogger.java:92] : insert into hibernate_sequence values ( 1 )
INFO  2022-09-08 18:36:14,470 [main][SchemaCreatorImpl.java:485] : HHH000476: Executing import script 'org.hibernate.tool.schema.internal.exec.ScriptSourceInputNonExistentImpl@599c33d8'
DEBUG 2022-09-08 18:36:14,471 [main][JtaPlatformInitiator.java:42] : No JtaPlatform was specified, checking resolver
DEBUG 2022-09-08 18:36:14,472 [main][JtaPlatformResolverInitiator.java:33] : No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
DEBUG 2022-09-08 18:36:14,473 [main][StandardJtaPlatformResolver.java:101] : Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
DEBUG 2022-09-08 18:36:14,473 [main][NamedQueryRepository.java:151] : Checking 0 named HQL queries
DEBUG 2022-09-08 18:36:14,473 [main][NamedQueryRepository.java:167] : Checking 0 named SQL queries
DEBUG 2022-09-08 18:36:14,474 [main][SessionFactoryRegistry.java:52] : Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@4c2c88cf
DEBUG 2022-09-08 18:36:14,475 [main][SessionFactoryRegistry.java:74] : Registering SessionFactory: c69fa393-502f-46b4-b0d5-a5670d69d663 (<unnamed>)
DEBUG 2022-09-08 18:36:14,475 [main][SessionFactoryRegistry.java:81] : Not binding SessionFactory to JNDI, no JNDI name configured
DEBUG 2022-09-08 18:36:14,499 [main][StatisticsInitiator.java:82] : Statistics initialized [enabled=false]
DEBUG 2022-09-08 18:36:14,502 [main][TransactionImpl.java:55] : begin
DEBUG 2022-09-08 18:36:14,507 [main][ActionQueue.java:272] : Executing identity-insert immediately
DEBUG 2022-09-08 18:36:14,508 [main][SqlStatementLogger.java:92] : insert into Author (name, salary) values (?, ?)
DEBUG 2022-09-08 18:36:14,516 [main][IdentifierGeneratorHelper.java:78] : Natively generated identity: 1
DEBUG 2022-09-08 18:36:14,516 [main][ResourceRegistryStandardImpl.java:104] : HHH000387: ResultSet's statement was not registered
DEBUG 2022-09-08 18:36:14,517 [main][TransactionImpl.java:66] : committing
DEBUG 2022-09-08 18:36:14,517 [main][AbstractFlushingEventListener.java:132] : Processing flush-time cascades
DEBUG 2022-09-08 18:36:14,518 [main][AbstractFlushingEventListener.java:174] : Dirty checking collections
DEBUG 2022-09-08 18:36:14,518 [main][AbstractFlushingEventListener.java:106] : Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
DEBUG 2022-09-08 18:36:14,520 [main][AbstractFlushingEventListener.java:113] : Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
DEBUG 2022-09-08 18:36:14,520 [main][EntityPrinter.java:102] : Listing entities:
DEBUG 2022-09-08 18:36:14,520 [main][EntityPrinter.java:109] : org.example.models.Author{name=David Baldacci, id=1, salary=3521}
DEBUG 2022-09-08 18:36:14,522 [main][LogicalConnectionManagedImpl.java:154] : Initiating JDBC connection release from afterTransaction
DEBUG 2022-09-08 18:36:14,522 [main][LogicalConnectionManagedImpl.java:154] : Initiating JDBC connection release from afterTransaction
DEBUG 2022-09-08 18:36:14,537 [main][TransactionImpl.java:55] : begin
DEBUG 2022-09-08 18:36:14,538 [main][ActionQueue.java:272] : Executing identity-insert immediately
DEBUG 2022-09-08 18:36:14,539 [main][SqlStatementLogger.java:92] : insert into Author (name, salary) values (?, ?)
DEBUG 2022-09-08 18:36:14,541 [main][IdentifierGeneratorHelper.java:78] : Natively generated identity: 2
DEBUG 2022-09-08 18:36:14,542 [main][ResourceRegistryStandardImpl.java:104] : HHH000387: ResultSet's statement was not registered
DEBUG 2022-09-08 18:36:14,542 [main][TransactionImpl.java:66] : committing
DEBUG 2022-09-08 18:36:14,542 [main][AbstractFlushingEventListener.java:132] : Processing flush-time cascades
DEBUG 2022-09-08 18:36:14,542 [main][AbstractFlushingEventListener.java:174] : Dirty checking collections
DEBUG 2022-09-08 18:36:14,542 [main][AbstractFlushingEventListener.java:106] : Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
DEBUG 2022-09-08 18:36:14,542 [main][AbstractFlushingEventListener.java:113] : Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
DEBUG 2022-09-08 18:36:14,543 [main][EntityPrinter.java:102] : Listing entities:
DEBUG 2022-09-08 18:36:14,543 [main][EntityPrinter.java:109] : org.example.models.Author{name=Colleen Hoover, id=2, salary=4409}
DEBUG 2022-09-08 18:36:14,544 [main][LogicalConnectionManagedImpl.java:154] : Initiating JDBC connection release from afterTransaction
DEBUG 2022-09-08 18:36:14,544 [main][LogicalConnectionManagedImpl.java:154] : Initiating JDBC connection release from afterTransaction
DEBUG 2022-09-08 18:36:14,545 [main][TransactionImpl.java:55] : begin
DEBUG 2022-09-08 18:36:14,545 [main][ActionQueue.java:272] : Executing identity-insert immediately
DEBUG 2022-09-08 18:36:14,546 [main][SqlStatementLogger.java:92] : insert into Author (name, salary) values (?, ?)
DEBUG 2022-09-08 18:36:14,547 [main][IdentifierGeneratorHelper.java:78] : Natively generated identity: 3
DEBUG 2022-09-08 18:36:14,547 [main][ResourceRegistryStandardImpl.java:104] : HHH000387: ResultSet's statement was not registered
DEBUG 2022-09-08 18:36:14,547 [main][TransactionImpl.java:66] : committing
DEBUG 2022-09-08 18:36:14,547 [main][AbstractFlushingEventListener.java:132] : Processing flush-time cascades
DEBUG 2022-09-08 18:36:14,547 [main][AbstractFlushingEventListener.java:174] : Dirty checking collections
DEBUG 2022-09-08 18:36:14,547 [main][AbstractFlushingEventListener.java:106] : Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
DEBUG 2022-09-08 18:36:14,547 [main][AbstractFlushingEventListener.java:113] : Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
DEBUG 2022-09-08 18:36:14,548 [main][EntityPrinter.java:102] : Listing entities:
DEBUG 2022-09-08 18:36:14,548 [main][EntityPrinter.java:109] : org.example.models.Author{name=Stuart Woods, id=3, salary=4909}
DEBUG 2022-09-08 18:36:14,549 [main][LogicalConnectionManagedImpl.java:154] : Initiating JDBC connection release from afterTransaction
DEBUG 2022-09-08 18:36:14,550 [main][LogicalConnectionManagedImpl.java:154] : Initiating JDBC connection release from afterTransaction
DEBUG 2022-09-08 18:36:14,551 [main][TransactionImpl.java:55] : begin
DEBUG 2022-09-08 18:36:14,552 [main][ActionQueue.java:272] : Executing identity-insert immediately
DEBUG 2022-09-08 18:36:14,552 [main][SqlStatementLogger.java:92] : insert into Author (name, salary) values (?, ?)
DEBUG 2022-09-08 18:36:14,553 [main][IdentifierGeneratorHelper.java:78] : Natively generated identity: 4
DEBUG 2022-09-08 18:36:14,553 [main][ResourceRegistryStandardImpl.java:104] : HHH000387: ResultSet's statement was not registered
DEBUG 2022-09-08 18:36:14,553 [main][TransactionImpl.java:66] : committing
DEBUG 2022-09-08 18:36:14,553 [main][AbstractFlushingEventListener.java:132] : Processing flush-time cascades
DEBUG 2022-09-08 18:36:14,553 [main][AbstractFlushingEventListener.java:174] : Dirty checking collections
DEBUG 2022-09-08 18:36:14,554 [main][AbstractFlushingEventListener.java:106] : Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
DEBUG 2022-09-08 18:36:14,554 [main][AbstractFlushingEventListener.java:113] : Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
DEBUG 2022-09-08 18:36:14,554 [main][EntityPrinter.java:102] : Listing entities:
DEBUG 2022-09-08 18:36:14,554 [main][EntityPrinter.java:109] : org.example.models.Author{name=Nora Roberts, id=4, salary=1205}
DEBUG 2022-09-08 18:36:14,555 [main][LogicalConnectionManagedImpl.java:154] : Initiating JDBC connection release from afterTransaction
DEBUG 2022-09-08 18:36:14,555 [main][LogicalConnectionManagedImpl.java:154] : Initiating JDBC connection release from afterTransaction
DEBUG 2022-09-08 18:36:14,556 [main][TransactionImpl.java:55] : begin
DEBUG 2022-09-08 18:36:14,557 [main][ActionQueue.java:272] : Executing identity-insert immediately
DEBUG 2022-09-08 18:36:14,557 [main][SqlStatementLogger.java:92] : insert into Author (name, salary) values (?, ?)
DEBUG 2022-09-08 18:36:14,558 [main][IdentifierGeneratorHelper.java:78] : Natively generated identity: 5
DEBUG 2022-09-08 18:36:14,558 [main][ResourceRegistryStandardImpl.java:104] : HHH000387: ResultSet's statement was not registered
DEBUG 2022-09-08 18:36:14,558 [main][TransactionImpl.java:66] : committing
DEBUG 2022-09-08 18:36:14,558 [main][AbstractFlushingEventListener.java:132] : Processing flush-time cascades
DEBUG 2022-09-08 18:36:14,558 [main][AbstractFlushingEventListener.java:174] : Dirty checking collections
DEBUG 2022-09-08 18:36:14,558 [main][AbstractFlushingEventListener.java:106] : Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
DEBUG 2022-09-08 18:36:14,559 [main][AbstractFlushingEventListener.java:113] : Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
DEBUG 2022-09-08 18:36:14,559 [main][EntityPrinter.java:102] : Listing entities:
DEBUG 2022-09-08 18:36:14,559 [main][EntityPrinter.java:109] : org.example.models.Author{name=Michael Connelly, id=5, salary=829}
DEBUG 2022-09-08 18:36:14,559 [main][LogicalConnectionManagedImpl.java:154] : Initiating JDBC connection release from afterTransaction
DEBUG 2022-09-08 18:36:14,560 [main][LogicalConnectionManagedImpl.java:154] : Initiating JDBC connection release from afterTransaction
DEBUG 2022-09-08 18:36:14,568 [main][CriteriaQueryImpl.java:307] : Rendered criteria query -> select generatedAlias0 from Author as generatedAlias0
DEBUG 2022-09-08 18:36:14,573 [main][QueryTranslatorFactoryInitiator.java:45] : QueryTranslatorFactory : org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory@649f6bfc
INFO  2022-09-08 18:36:14,574 [main][QueryTranslatorFactoryInitiator.java:47] : HHH000397: Using ASTQueryTranslatorFactory
DEBUG 2022-09-08 18:36:14,590 [main][QueryTranslatorImpl.java:278] : parse() - HQL: select generatedAlias0 from org.example.models.Author as generatedAlias0
DEBUG 2022-09-08 18:36:14,593 [main][QueryTranslatorImpl.java:296] : --- HQL AST ---
 \-[QUERY] Node: 'query'
    \-[SELECT_FROM] Node: 'SELECT_FROM'
       +-[FROM] Node: 'from'
       |  \-[RANGE] Node: 'RANGE'
       |     +-[DOT] Node: '.'
       |     |  +-[DOT] Node: '.'
       |     |  |  +-[DOT] Node: '.'
       |     |  |  |  +-[IDENT] Node: 'org'
       |     |  |  |  \-[IDENT] Node: 'example'
       |     |  |  \-[IDENT] Node: 'models'
       |     |  \-[IDENT] Node: 'Author'
       |     \-[ALIAS] Node: 'generatedAlias0'
       \-[SELECT] Node: 'select'
          \-[IDENT] Node: 'generatedAlias0'

DEBUG 2022-09-08 18:36:14,593 [main][ErrorCounter.java:95] : throwQueryException() : no errors
DEBUG 2022-09-08 18:36:14,601 [main][HqlSqlBaseWalker.java:124] : select << begin [level=1, statement=select]
DEBUG 2022-09-08 18:36:14,608 [main][FromElement.java:148] : FromClause{level=1} : org.example.models.Author (generatedAlias0) -> author0_
DEBUG 2022-09-08 18:36:14,608 [main][FromReferenceNode.java:60] : Resolved : generatedAlias0 -> author0_.id
DEBUG 2022-09-08 18:36:14,609 [main][HqlSqlBaseWalker.java:128] : select : finishing up [level=1, statement=select]
DEBUG 2022-09-08 18:36:14,609 [main][HqlSqlWalker.java:725] : processQuery() :  ( SELECT ( {select clause} author0_.id ) ( FromClause{level=1} Author author0_ ) )
DEBUG 2022-09-08 18:36:14,612 [main][JoinProcessor.java:169] : Using FROM fragment [Author author0_]
DEBUG 2022-09-08 18:36:14,612 [main][HqlSqlBaseWalker.java:132] : select >> end [level=1, statement=select]
DEBUG 2022-09-08 18:36:14,612 [main][QueryTranslatorImpl.java:265] : --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (Author)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'author0_.id as id1_0_' {alias=generatedAlias0, className=org.example.models.Author, tableAlias=author0_}
    |  \-[SQL_TOKEN] SqlFragment: 'author0_.name as name2_0_, author0_.salary as salary3_0_'
    \-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[author0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'Author author0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=Author,tableAlias=author0_,origin=null,columns={,className=org.example.models.Author}}

DEBUG 2022-09-08 18:36:14,612 [main][ErrorCounter.java:95] : throwQueryException() : no errors
DEBUG 2022-09-08 18:36:14,615 [main][QueryTranslatorImpl.java:247] : HQL: select generatedAlias0 from org.example.models.Author as generatedAlias0
DEBUG 2022-09-08 18:36:14,615 [main][QueryTranslatorImpl.java:248] : SQL: select author0_.id as id1_0_, author0_.name as name2_0_, author0_.salary as salary3_0_ from Author author0_
DEBUG 2022-09-08 18:36:14,615 [main][ErrorCounter.java:95] : throwQueryException() : no errors
DEBUG 2022-09-08 18:36:14,621 [main][SqlStatementLogger.java:92] : select author0_.id as id1_0_, author0_.name as name2_0_, author0_.salary as salary3_0_ from Author author0_
DEBUG 2022-09-08 18:36:14,623 [main][DelegatingBasicLogger.java:384] : Result set row: 0
DEBUG 2022-09-08 18:36:14,624 [main][Loader.java:1527] : Result row: EntityKey[org.example.models.Author#1]
DEBUG 2022-09-08 18:36:14,625 [main][DelegatingBasicLogger.java:384] : Result set row: 1
DEBUG 2022-09-08 18:36:14,625 [main][Loader.java:1527] : Result row: EntityKey[org.example.models.Author#2]
DEBUG 2022-09-08 18:36:14,625 [main][DelegatingBasicLogger.java:384] : Result set row: 2
DEBUG 2022-09-08 18:36:14,625 [main][Loader.java:1527] : Result row: EntityKey[org.example.models.Author#3]
DEBUG 2022-09-08 18:36:14,626 [main][DelegatingBasicLogger.java:384] : Result set row: 3
DEBUG 2022-09-08 18:36:14,626 [main][Loader.java:1527] : Result row: EntityKey[org.example.models.Author#4]
DEBUG 2022-09-08 18:36:14,626 [main][DelegatingBasicLogger.java:384] : Result set row: 4
DEBUG 2022-09-08 18:36:14,626 [main][Loader.java:1527] : Result row: EntityKey[org.example.models.Author#5]
DEBUG 2022-09-08 18:36:14,626 [main][TwoPhaseLoad.java:141] : Resolving associations for [org.example.models.Author#1]
DEBUG 2022-09-08 18:36:14,627 [main][TwoPhaseLoad.java:267] : Done materializing entity [org.example.models.Author#1]
DEBUG 2022-09-08 18:36:14,627 [main][TwoPhaseLoad.java:141] : Resolving associations for [org.example.models.Author#2]
DEBUG 2022-09-08 18:36:14,627 [main][TwoPhaseLoad.java:267] : Done materializing entity [org.example.models.Author#2]
DEBUG 2022-09-08 18:36:14,627 [main][TwoPhaseLoad.java:141] : Resolving associations for [org.example.models.Author#3]
DEBUG 2022-09-08 18:36:14,627 [main][TwoPhaseLoad.java:267] : Done materializing entity [org.example.models.Author#3]
DEBUG 2022-09-08 18:36:14,627 [main][TwoPhaseLoad.java:141] : Resolving associations for [org.example.models.Author#4]
DEBUG 2022-09-08 18:36:14,627 [main][TwoPhaseLoad.java:267] : Done materializing entity [org.example.models.Author#4]
DEBUG 2022-09-08 18:36:14,627 [main][TwoPhaseLoad.java:141] : Resolving associations for [org.example.models.Author#5]
DEBUG 2022-09-08 18:36:14,627 [main][TwoPhaseLoad.java:267] : Done materializing entity [org.example.models.Author#5]
DEBUG 2022-09-08 18:36:14,628 [main][LogicalConnectionManagedImpl.java:154] : Initiating JDBC connection release from afterTransaction
DEBUG 2022-09-08 18:36:14,637 [main][SqlStatementLogger.java:92] : SELECT * FROM Author
DEBUG 2022-09-08 18:36:14,638 [main][DelegatingBasicLogger.java:384] : Result set row: 0
DEBUG 2022-09-08 18:36:14,638 [main][Loader.java:1527] : Result row: EntityKey[org.example.models.Author#1]
DEBUG 2022-09-08 18:36:14,639 [main][DelegatingBasicLogger.java:384] : Result set row: 1
DEBUG 2022-09-08 18:36:14,639 [main][Loader.java:1527] : Result row: EntityKey[org.example.models.Author#2]
DEBUG 2022-09-08 18:36:14,639 [main][DelegatingBasicLogger.java:384] : Result set row: 2
DEBUG 2022-09-08 18:36:14,639 [main][Loader.java:1527] : Result row: EntityKey[org.example.models.Author#3]
DEBUG 2022-09-08 18:36:14,639 [main][DelegatingBasicLogger.java:384] : Result set row: 3
DEBUG 2022-09-08 18:36:14,639 [main][Loader.java:1527] : Result row: EntityKey[org.example.models.Author#4]
DEBUG 2022-09-08 18:36:14,639 [main][DelegatingBasicLogger.java:384] : Result set row: 4
DEBUG 2022-09-08 18:36:14,639 [main][Loader.java:1527] : Result row: EntityKey[org.example.models.Author#5]
DEBUG 2022-09-08 18:36:14,639 [main][TwoPhaseLoad.java:141] : Resolving associations for [org.example.models.Author#1]
DEBUG 2022-09-08 18:36:14,639 [main][TwoPhaseLoad.java:267] : Done materializing entity [org.example.models.Author#1]
DEBUG 2022-09-08 18:36:14,640 [main][TwoPhaseLoad.java:141] : Resolving associations for [org.example.models.Author#2]
DEBUG 2022-09-08 18:36:14,640 [main][TwoPhaseLoad.java:267] : Done materializing entity [org.example.models.Author#2]
DEBUG 2022-09-08 18:36:14,640 [main][TwoPhaseLoad.java:141] : Resolving associations for [org.example.models.Author#3]
DEBUG 2022-09-08 18:36:14,640 [main][TwoPhaseLoad.java:267] : Done materializing entity [org.example.models.Author#3]
DEBUG 2022-09-08 18:36:14,640 [main][TwoPhaseLoad.java:141] : Resolving associations for [org.example.models.Author#4]
DEBUG 2022-09-08 18:36:14,640 [main][TwoPhaseLoad.java:267] : Done materializing entity [org.example.models.Author#4]
DEBUG 2022-09-08 18:36:14,640 [main][TwoPhaseLoad.java:141] : Resolving associations for [org.example.models.Author#5]
DEBUG 2022-09-08 18:36:14,640 [main][TwoPhaseLoad.java:267] : Done materializing entity [org.example.models.Author#5]
DEBUG 2022-09-08 18:36:14,640 [main][LogicalConnectionManagedImpl.java:154] : Initiating JDBC connection release from afterTransaction
DEBUG 2022-09-08 18:36:14,642 [main][SqlStatementLogger.java:92] : select author0_.id as id1_0_0_, author0_.name as name2_0_0_, author0_.salary as salary3_0_0_ from Author author0_ where author0_.id=?
DEBUG 2022-09-08 18:36:14,644 [main][ResultSetProcessorImpl.java:120] : Starting ResultSet row #0
DEBUG 2022-09-08 18:36:14,645 [main][EntityReferenceInitializerImpl.java:126] : On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
DEBUG 2022-09-08 18:36:14,645 [main][TwoPhaseLoad.java:141] : Resolving associations for [org.example.models.Author#2]
DEBUG 2022-09-08 18:36:14,645 [main][TwoPhaseLoad.java:267] : Done materializing entity [org.example.models.Author#2]
DEBUG 2022-09-08 18:36:14,645 [main][ResourceRegistryStandardImpl.java:73] : HHH000387: ResultSet's statement was not registered
DEBUG 2022-09-08 18:36:14,645 [main][AbstractLoadPlanBasedEntityLoader.java:189] : Done entity load : org.example.models.Author#2
DEBUG 2022-09-08 18:36:14,645 [main][LogicalConnectionManagedImpl.java:154] : Initiating JDBC connection release from afterTransaction
DEBUG 2022-09-08 18:36:14,646 [main][QueryTranslatorImpl.java:278] : parse() - HQL: select a from org.example.models.Author a where a.salary between :minSalary and :maxSalary
DEBUG 2022-09-08 18:36:14,648 [main][QueryTranslatorImpl.java:296] : --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[IDENT] Node: 'org'
    |  |     |  |  |  \-[IDENT] Node: 'example'
    |  |     |  |  \-[IDENT] Node: 'models'
    |  |     |  \-[IDENT] Node: 'Author'
    |  |     \-[ALIAS] Node: 'a'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'a'
    \-[WHERE] Node: 'where'
       \-[BETWEEN] Node: 'between'
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'a'
          |  \-[IDENT] Node: 'salary'
          +-[COLON] Node: ':'
          |  \-[IDENT] Node: 'minSalary'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'maxSalary'

DEBUG 2022-09-08 18:36:14,648 [main][ErrorCounter.java:95] : throwQueryException() : no errors
DEBUG 2022-09-08 18:36:14,648 [main][HqlSqlBaseWalker.java:124] : select << begin [level=1, statement=select]
DEBUG 2022-09-08 18:36:14,648 [main][FromElement.java:148] : FromClause{level=1} : org.example.models.Author (a) -> author0_
DEBUG 2022-09-08 18:36:14,648 [main][FromReferenceNode.java:60] : Resolved : a -> author0_.id
DEBUG 2022-09-08 18:36:14,649 [main][FromReferenceNode.java:60] : Resolved : a -> author0_.id
DEBUG 2022-09-08 18:36:14,650 [main][DotNode.java:661] : getDataType() : salary -> org.hibernate.type.IntegerType@41443238
DEBUG 2022-09-08 18:36:14,651 [main][FromReferenceNode.java:60] : Resolved : a.salary -> author0_.salary
DEBUG 2022-09-08 18:36:14,651 [main][HqlSqlBaseWalker.java:128] : select : finishing up [level=1, statement=select]
DEBUG 2022-09-08 18:36:14,651 [main][HqlSqlWalker.java:725] : processQuery() :  ( SELECT ( {select clause} author0_.id ) ( FromClause{level=1} Author author0_ ) ( where ( between ( author0_.salary author0_.id salary ) ? ? ) ) )
DEBUG 2022-09-08 18:36:14,651 [main][JoinProcessor.java:169] : Using FROM fragment [Author author0_]
DEBUG 2022-09-08 18:36:14,651 [main][HqlSqlBaseWalker.java:132] : select >> end [level=1, statement=select]
DEBUG 2022-09-08 18:36:14,652 [main][QueryTranslatorImpl.java:265] : --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (Author)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'author0_.id as id1_0_' {alias=a, className=org.example.models.Author, tableAlias=author0_}
    |  \-[SQL_TOKEN] SqlFragment: 'author0_.name as name2_0_, author0_.salary as salary3_0_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[a], fromElementByTableAlias=[author0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'Author author0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=a,role=null,tableName=Author,tableAlias=author0_,origin=null,columns={,className=org.example.models.Author}}
    \-[WHERE] SqlNode: 'where'
       \-[BETWEEN] BetweenOperatorNode: 'between'
          +-[DOT] DotNode: 'author0_.salary' {propertyName=salary,dereferenceType=PRIMITIVE,getPropertyPath=salary,path=a.salary,tableAlias=author0_,className=org.example.models.Author,classAlias=a}
          |  +-[ALIAS_REF] IdentNode: 'author0_.id' {alias=a, className=org.example.models.Author, tableAlias=author0_}
          |  \-[IDENT] IdentNode: 'salary' {originalText=salary}
          +-[NAMED_PARAM] ParameterNode: '?' {name=minSalary, expectedType=org.hibernate.type.IntegerType@41443238}
          \-[NAMED_PARAM] ParameterNode: '?' {name=maxSalary, expectedType=org.hibernate.type.IntegerType@41443238}

DEBUG 2022-09-08 18:36:14,652 [main][ErrorCounter.java:95] : throwQueryException() : no errors
DEBUG 2022-09-08 18:36:14,652 [main][QueryTranslatorImpl.java:247] : HQL: select a from org.example.models.Author a where a.salary between :minSalary and :maxSalary
DEBUG 2022-09-08 18:36:14,652 [main][QueryTranslatorImpl.java:248] : SQL: select author0_.id as id1_0_, author0_.name as name2_0_, author0_.salary as salary3_0_ from Author author0_ where author0_.salary between ? and ?
DEBUG 2022-09-08 18:36:14,653 [main][ErrorCounter.java:95] : throwQueryException() : no errors
DEBUG 2022-09-08 18:36:14,654 [main][SqlStatementLogger.java:92] : select author0_.id as id1_0_, author0_.name as name2_0_, author0_.salary as salary3_0_ from Author author0_ where author0_.salary between ? and ?
DEBUG 2022-09-08 18:36:14,655 [main][DelegatingBasicLogger.java:384] : Result set row: 0
DEBUG 2022-09-08 18:36:14,656 [main][Loader.java:1527] : Result row: EntityKey[org.example.models.Author#1]
DEBUG 2022-09-08 18:36:14,656 [main][TwoPhaseLoad.java:141] : Resolving associations for [org.example.models.Author#1]
DEBUG 2022-09-08 18:36:14,656 [main][TwoPhaseLoad.java:267] : Done materializing entity [org.example.models.Author#1]
DEBUG 2022-09-08 18:36:14,656 [main][LogicalConnectionManagedImpl.java:154] : Initiating JDBC connection release from afterTransaction
DEBUG 2022-09-08 18:36:14,657 [main][SqlStatementLogger.java:92] : select author0_.id as id1_0_0_, author0_.name as name2_0_0_, author0_.salary as salary3_0_0_ from Author author0_ where author0_.id=?
DEBUG 2022-09-08 18:36:14,658 [main][ResultSetProcessorImpl.java:120] : Starting ResultSet row #0
DEBUG 2022-09-08 18:36:14,658 [main][EntityReferenceInitializerImpl.java:126] : On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
DEBUG 2022-09-08 18:36:14,659 [main][TwoPhaseLoad.java:141] : Resolving associations for [org.example.models.Author#2]
DEBUG 2022-09-08 18:36:14,659 [main][TwoPhaseLoad.java:267] : Done materializing entity [org.example.models.Author#2]
DEBUG 2022-09-08 18:36:14,659 [main][ResourceRegistryStandardImpl.java:73] : HHH000387: ResultSet's statement was not registered
DEBUG 2022-09-08 18:36:14,659 [main][AbstractLoadPlanBasedEntityLoader.java:189] : Done entity load : org.example.models.Author#2
DEBUG 2022-09-08 18:36:14,659 [main][LogicalConnectionManagedImpl.java:154] : Initiating JDBC connection release from afterTransaction
DEBUG 2022-09-08 18:36:14,661 [main][TransactionImpl.java:55] : begin
DEBUG 2022-09-08 18:36:14,661 [main][TransactionImpl.java:66] : committing
DEBUG 2022-09-08 18:36:14,661 [main][AbstractFlushingEventListener.java:132] : Processing flush-time cascades
DEBUG 2022-09-08 18:36:14,661 [main][AbstractFlushingEventListener.java:174] : Dirty checking collections
DEBUG 2022-09-08 18:36:14,662 [main][AbstractFlushingEventListener.java:106] : Flushed: 0 insertions, 1 updates, 0 deletions to 1 objects
DEBUG 2022-09-08 18:36:14,662 [main][AbstractFlushingEventListener.java:113] : Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
DEBUG 2022-09-08 18:36:14,662 [main][EntityPrinter.java:102] : Listing entities:
DEBUG 2022-09-08 18:36:14,662 [main][EntityPrinter.java:109] : org.example.models.Author{name=Ihor Kosolapow, id=2, salary=4409}
DEBUG 2022-09-08 18:36:14,665 [main][SqlStatementLogger.java:92] : update Author set name=? where id=?
DEBUG 2022-09-08 18:36:14,667 [main][LogicalConnectionManagedImpl.java:154] : Initiating JDBC connection release from afterTransaction
DEBUG 2022-09-08 18:36:14,668 [main][LogicalConnectionManagedImpl.java:154] : Initiating JDBC connection release from afterTransaction
DEBUG 2022-09-08 18:36:14,669 [main][JdbcCoordinatorImpl.java:177] : HHH000420: Closing un-released batch
DEBUG 2022-09-08 18:36:14,670 [main][SqlStatementLogger.java:92] : select author0_.id as id1_0_0_, author0_.name as name2_0_0_, author0_.salary as salary3_0_0_ from Author author0_ where author0_.id=?
DEBUG 2022-09-08 18:36:14,671 [main][ResultSetProcessorImpl.java:120] : Starting ResultSet row #0
DEBUG 2022-09-08 18:36:14,672 [main][EntityReferenceInitializerImpl.java:126] : On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
DEBUG 2022-09-08 18:36:14,672 [main][TwoPhaseLoad.java:141] : Resolving associations for [org.example.models.Author#2]
DEBUG 2022-09-08 18:36:14,673 [main][TwoPhaseLoad.java:267] : Done materializing entity [org.example.models.Author#2]
DEBUG 2022-09-08 18:36:14,673 [main][ResourceRegistryStandardImpl.java:73] : HHH000387: ResultSet's statement was not registered
DEBUG 2022-09-08 18:36:14,673 [main][AbstractLoadPlanBasedEntityLoader.java:189] : Done entity load : org.example.models.Author#2
DEBUG 2022-09-08 18:36:14,673 [main][LogicalConnectionManagedImpl.java:154] : Initiating JDBC connection release from afterTransaction
DEBUG 2022-09-08 18:36:14,676 [main][CriteriaQueryImpl.java:307] : Rendered criteria query -> select avg(generatedAlias0.salary) from Author as generatedAlias0
DEBUG 2022-09-08 18:36:14,677 [main][QueryTranslatorImpl.java:278] : parse() - HQL: select avg(generatedAlias0.salary) from org.example.models.Author as generatedAlias0
DEBUG 2022-09-08 18:36:14,678 [main][QueryTranslatorImpl.java:296] : --- HQL AST ---
 \-[QUERY] Node: 'query'
    \-[SELECT_FROM] Node: 'SELECT_FROM'
       +-[FROM] Node: 'from'
       |  \-[RANGE] Node: 'RANGE'
       |     +-[DOT] Node: '.'
       |     |  +-[DOT] Node: '.'
       |     |  |  +-[DOT] Node: '.'
       |     |  |  |  +-[IDENT] Node: 'org'
       |     |  |  |  \-[IDENT] Node: 'example'
       |     |  |  \-[IDENT] Node: 'models'
       |     |  \-[IDENT] Node: 'Author'
       |     \-[ALIAS] Node: 'generatedAlias0'
       \-[SELECT] Node: 'select'
          \-[AGGREGATE] Node: 'avg'
             \-[DOT] Node: '.'
                +-[IDENT] Node: 'generatedAlias0'
                \-[IDENT] Node: 'salary'

DEBUG 2022-09-08 18:36:14,678 [main][ErrorCounter.java:95] : throwQueryException() : no errors
DEBUG 2022-09-08 18:36:14,678 [main][HqlSqlBaseWalker.java:124] : select << begin [level=1, statement=select]
DEBUG 2022-09-08 18:36:14,679 [main][FromElement.java:148] : FromClause{level=1} : org.example.models.Author (generatedAlias0) -> author0_
DEBUG 2022-09-08 18:36:14,679 [main][FromReferenceNode.java:60] : Resolved : generatedAlias0 -> author0_.id
DEBUG 2022-09-08 18:36:14,679 [main][DotNode.java:661] : getDataType() : salary -> org.hibernate.type.IntegerType@41443238
DEBUG 2022-09-08 18:36:14,680 [main][FromReferenceNode.java:60] : Resolved : generatedAlias0.salary -> author0_.salary
DEBUG 2022-09-08 18:36:14,680 [main][HqlSqlBaseWalker.java:128] : select : finishing up [level=1, statement=select]
DEBUG 2022-09-08 18:36:14,680 [main][HqlSqlWalker.java:725] : processQuery() :  ( SELECT ( {select clause} ( avg ( author0_.salary author0_.id salary ) ) ) ( FromClause{level=1} Author author0_ ) )
DEBUG 2022-09-08 18:36:14,680 [main][JoinProcessor.java:169] : Using FROM fragment [Author author0_]
DEBUG 2022-09-08 18:36:14,680 [main][HqlSqlBaseWalker.java:132] : select >> end [level=1, statement=select]
DEBUG 2022-09-08 18:36:14,681 [main][QueryTranslatorImpl.java:265] : --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (Author)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[AGGREGATE] AggregateNode: 'avg'
    |  |  \-[DOT] DotNode: 'author0_.salary' {propertyName=salary,dereferenceType=PRIMITIVE,getPropertyPath=salary,path=generatedAlias0.salary,tableAlias=author0_,className=org.example.models.Author,classAlias=generatedAlias0}
    |  |     +-[ALIAS_REF] IdentNode: 'author0_.id' {alias=generatedAlias0, className=org.example.models.Author, tableAlias=author0_}
    |  |     \-[IDENT] IdentNode: 'salary' {originalText=salary}
    |  \-[SELECT_COLUMNS] SqlNode: ' as col_0_0_'
    \-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[author0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'Author author0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=Author,tableAlias=author0_,origin=null,columns={,className=org.example.models.Author}}

DEBUG 2022-09-08 18:36:14,681 [main][ErrorCounter.java:95] : throwQueryException() : no errors
DEBUG 2022-09-08 18:36:14,682 [main][QueryTranslatorImpl.java:247] : HQL: select avg(generatedAlias0.salary) from org.example.models.Author as generatedAlias0
DEBUG 2022-09-08 18:36:14,682 [main][QueryTranslatorImpl.java:248] : SQL: select avg(author0_.salary) as col_0_0_ from Author author0_
DEBUG 2022-09-08 18:36:14,682 [main][ErrorCounter.java:95] : throwQueryException() : no errors
DEBUG 2022-09-08 18:36:14,682 [main][SqlStatementLogger.java:92] : select avg(author0_.salary) as col_0_0_ from Author author0_
DEBUG 2022-09-08 18:36:14,685 [main][DelegatingBasicLogger.java:384] : Result set row: 0
DEBUG 2022-09-08 18:36:14,685 [main][Loader.java:1527] : Result row: 
DEBUG 2022-09-08 18:36:14,686 [main][LogicalConnectionManagedImpl.java:154] : Initiating JDBC connection release from afterTransaction
DEBUG 2022-09-08 18:36:44,095 [pool-1-thread-1][PooledConnections.java:51] : Connection pool now considered primed; min-size will be maintained
WARN  2022-09-08 18:41:49,818 [main][Main.java:17] : TEST
DEBUG 2022-09-08 18:41:49,869 [main][CoreLogging.java:28] : Logging Provider: org.jboss.logging.Log4jLoggerProvider
DEBUG 2022-09-08 18:41:49,876 [main][IntegratorServiceImpl.java:46] : Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
DEBUG 2022-09-08 18:41:49,877 [main][IntegratorServiceImpl.java:46] : Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
DEBUG 2022-09-08 18:41:49,881 [main][IntegratorServiceImpl.java:46] : Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
INFO  2022-09-08 18:41:49,955 [main][Version.java:45] : HHH000412: Hibernate Core {5.2.2.Final}
INFO  2022-09-08 18:41:49,957 [main][Environment.java:213] : HHH000206: hibernate.properties not found
INFO  2022-09-08 18:41:49,958 [main][Environment.java:318] : HHH000021: Bytecode provider name : javassist
DEBUG 2022-09-08 18:41:49,982 [main][LocalXmlResourceResolver.java:57] : Interpreting public/system identifier : [null] - [http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd]
DEBUG 2022-09-08 18:41:49,982 [main][LocalXmlResourceResolver.java:85] : Recognized hibernate-configuration identifier; attempting to resolve on classpath under org/hibernate/
DEBUG 2022-09-08 18:41:49,994 [main][JaxbCfgProcessor.java:116] : cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
DEBUG 2022-09-08 18:41:50,221 [main][Configuration.java:724] : Building session factory using internal StandardServiceRegistryBuilder
DEBUG 2022-09-08 18:41:50,225 [main][ServiceBinding.java:68] : Overriding existing service binding [org.hibernate.secure.spi.JaccService]
DEBUG 2022-09-08 18:41:50,226 [main][Configuration.java:652] : Building session factory using provided StandardServiceRegistry
DEBUG 2022-09-08 18:41:50,238 [main][RegionFactoryInitiator.java:75] : Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
INFO  2022-09-08 18:41:50,246 [main][JavaReflectionManager.java:66] : HCANN000001: Hibernate Commons Annotations {5.0.1.Final}
DEBUG 2022-09-08 18:41:50,260 [main][BasicTypeRegistry.java:145] : Adding type registration boolean -> org.hibernate.type.BooleanType@d267382d
DEBUG 2022-09-08 18:41:50,261 [main][BasicTypeRegistry.java:145] : Adding type registration boolean -> org.hibernate.type.BooleanType@d267382d
DEBUG 2022-09-08 18:41:50,262 [main][BasicTypeRegistry.java:145] : Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@d267382d
DEBUG 2022-09-08 18:41:50,265 [main][BasicTypeRegistry.java:145] : Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@112610f5
DEBUG 2022-09-08 18:41:50,266 [main][BasicTypeRegistry.java:145] : Adding type registration true_false -> org.hibernate.type.TrueFalseType@dde8d690
DEBUG 2022-09-08 18:41:50,267 [main][BasicTypeRegistry.java:145] : Adding type registration yes_no -> org.hibernate.type.YesNoType@f0918b08
DEBUG 2022-09-08 18:41:50,269 [main][BasicTypeRegistry.java:145] : Adding type registration byte -> org.hibernate.type.ByteType@1fb7eb4d
DEBUG 2022-09-08 18:41:50,269 [main][BasicTypeRegistry.java:145] : Adding type registration byte -> org.hibernate.type.ByteType@1fb7eb4d
DEBUG 2022-09-08 18:41:50,270 [main][BasicTypeRegistry.java:145] : Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@1fb7eb4d
DEBUG 2022-09-08 18:41:50,271 [main][BasicTypeRegistry.java:145] : Adding type registration character -> org.hibernate.type.CharacterType@515f5dd
DEBUG 2022-09-08 18:41:50,271 [main][BasicTypeRegistry.java:145] : Adding type registration char -> org.hibernate.type.CharacterType@515f5dd
DEBUG 2022-09-08 18:41:50,272 [main][BasicTypeRegistry.java:145] : Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@515f5dd
DEBUG 2022-09-08 18:41:50,273 [main][BasicTypeRegistry.java:145] : Adding type registration short -> org.hibernate.type.ShortType@5e5f1764
DEBUG 2022-09-08 18:41:50,273 [main][BasicTypeRegistry.java:145] : Adding type registration short -> org.hibernate.type.ShortType@5e5f1764
DEBUG 2022-09-08 18:41:50,273 [main][BasicTypeRegistry.java:145] : Adding type registration java.lang.Short -> org.hibernate.type.ShortType@5e5f1764
DEBUG 2022-09-08 18:41:50,278 [main][BasicTypeRegistry.java:145] : Adding type registration integer -> org.hibernate.type.IntegerType@5af6cc21
DEBUG 2022-09-08 18:41:50,279 [main][BasicTypeRegistry.java:145] : Adding type registration int -> org.hibernate.type.IntegerType@5af6cc21
DEBUG 2022-09-08 18:41:50,279 [main][BasicTypeRegistry.java:145] : Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@5af6cc21
DEBUG 2022-09-08 18:41:50,280 [main][BasicTypeRegistry.java:145] : Adding type registration long -> org.hibernate.type.LongType@5a544efd
DEBUG 2022-09-08 18:41:50,280 [main][BasicTypeRegistry.java:145] : Adding type registration long -> org.hibernate.type.LongType@5a544efd
DEBUG 2022-09-08 18:41:50,281 [main][BasicTypeRegistry.java:145] : Adding type registration java.lang.Long -> org.hibernate.type.LongType@5a544efd
DEBUG 2022-09-08 18:41:50,281 [main][BasicTypeRegistry.java:145] : Adding type registration float -> org.hibernate.type.FloatType@ffc8fdfc
DEBUG 2022-09-08 18:41:50,282 [main][BasicTypeRegistry.java:145] : Adding type registration float -> org.hibernate.type.FloatType@ffc8fdfc
DEBUG 2022-09-08 18:41:50,282 [main][BasicTypeRegistry.java:145] : Adding type registration java.lang.Float -> org.hibernate.type.FloatType@ffc8fdfc
DEBUG 2022-09-08 18:41:50,283 [main][BasicTypeRegistry.java:145] : Adding type registration double -> org.hibernate.type.DoubleType@f70776e8
DEBUG 2022-09-08 18:41:50,283 [main][BasicTypeRegistry.java:145] : Adding type registration double -> org.hibernate.type.DoubleType@f70776e8
DEBUG 2022-09-08 18:41:50,284 [main][BasicTypeRegistry.java:145] : Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@f70776e8
DEBUG 2022-09-08 18:41:50,285 [main][BasicTypeRegistry.java:145] : Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@ebb43922
DEBUG 2022-09-08 18:41:50,285 [main][BasicTypeRegistry.java:145] : Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@ebb43922
DEBUG 2022-09-08 18:41:50,286 [main][BasicTypeRegistry.java:145] : Adding type registration big_integer -> org.hibernate.type.BigIntegerType@fe73680f
DEBUG 2022-09-08 18:41:50,287 [main][BasicTypeRegistry.java:145] : Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@fe73680f
DEBUG 2022-09-08 18:41:50,288 [main][BasicTypeRegistry.java:145] : Adding type registration string -> org.hibernate.type.StringType@295ebc3b
DEBUG 2022-09-08 18:41:50,288 [main][BasicTypeRegistry.java:145] : Adding type registration java.lang.String -> org.hibernate.type.StringType@295ebc3b
DEBUG 2022-09-08 18:41:50,289 [main][BasicTypeRegistry.java:145] : Adding type registration nstring -> org.hibernate.type.StringNVarcharType@e87ef3f6
DEBUG 2022-09-08 18:41:50,290 [main][BasicTypeRegistry.java:145] : Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@ae4ead8e
DEBUG 2022-09-08 18:41:50,291 [main][BasicTypeRegistry.java:145] : Adding type registration url -> org.hibernate.type.UrlType@ae409fcd
DEBUG 2022-09-08 18:41:50,291 [main][BasicTypeRegistry.java:145] : Adding type registration java.net.URL -> org.hibernate.type.UrlType@ae409fcd
DEBUG 2022-09-08 18:41:50,293 [main][BasicTypeRegistry.java:145] : Adding type registration Duration -> org.hibernate.type.DurationType@71a75d96
DEBUG 2022-09-08 18:41:50,294 [main][BasicTypeRegistry.java:145] : Adding type registration java.time.Duration -> org.hibernate.type.DurationType@71a75d96
DEBUG 2022-09-08 18:41:50,301 [main][BasicTypeRegistry.java:145] : Adding type registration Instant -> org.hibernate.type.InstantType@5e799df4
DEBUG 2022-09-08 18:41:50,302 [main][BasicTypeRegistry.java:145] : Adding type registration java.time.Instant -> org.hibernate.type.InstantType@5e799df4
DEBUG 2022-09-08 18:41:50,303 [main][BasicTypeRegistry.java:145] : Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@1137fe52
DEBUG 2022-09-08 18:41:50,303 [main][BasicTypeRegistry.java:145] : Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@1137fe52
DEBUG 2022-09-08 18:41:50,305 [main][BasicTypeRegistry.java:145] : Adding type registration LocalDate -> org.hibernate.type.LocalDateType@92840e09
DEBUG 2022-09-08 18:41:50,305 [main][BasicTypeRegistry.java:145] : Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@92840e09
DEBUG 2022-09-08 18:41:50,306 [main][BasicTypeRegistry.java:145] : Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@467195d7
DEBUG 2022-09-08 18:41:50,307 [main][BasicTypeRegistry.java:145] : Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@467195d7
DEBUG 2022-09-08 18:41:50,308 [main][BasicTypeRegistry.java:145] : Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@566be430
DEBUG 2022-09-08 18:41:50,308 [main][BasicTypeRegistry.java:145] : Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@566be430
DEBUG 2022-09-08 18:41:50,309 [main][BasicTypeRegistry.java:145] : Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@de09b842
DEBUG 2022-09-08 18:41:50,309 [main][BasicTypeRegistry.java:145] : Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@de09b842
DEBUG 2022-09-08 18:41:50,311 [main][BasicTypeRegistry.java:145] : Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@da76b1ba
DEBUG 2022-09-08 18:41:50,311 [main][BasicTypeRegistry.java:145] : Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@da76b1ba
DEBUG 2022-09-08 18:41:50,313 [main][BasicTypeRegistry.java:145] : Adding type registration date -> org.hibernate.type.DateType@d9374919
DEBUG 2022-09-08 18:41:50,313 [main][BasicTypeRegistry.java:145] : Adding type registration java.sql.Date -> org.hibernate.type.DateType@d9374919
DEBUG 2022-09-08 18:41:50,314 [main][BasicTypeRegistry.java:145] : Adding type registration time -> org.hibernate.type.TimeType@49f16c82
DEBUG 2022-09-08 18:41:50,314 [main][BasicTypeRegistry.java:145] : Adding type registration java.sql.Time -> org.hibernate.type.TimeType@49f16c82
DEBUG 2022-09-08 18:41:50,315 [main][BasicTypeRegistry.java:145] : Adding type registration timestamp -> org.hibernate.type.TimestampType@609b7f30
DEBUG 2022-09-08 18:41:50,315 [main][BasicTypeRegistry.java:145] : Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@609b7f30
DEBUG 2022-09-08 18:41:50,315 [main][BasicTypeRegistry.java:145] : Adding type registration java.util.Date -> org.hibernate.type.TimestampType@609b7f30
DEBUG 2022-09-08 18:41:50,316 [main][BasicTypeRegistry.java:145] : Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@dda02f19
DEBUG 2022-09-08 18:41:50,317 [main][BasicTypeRegistry.java:145] : Adding type registration calendar -> org.hibernate.type.CalendarType@8e368ef0
DEBUG 2022-09-08 18:41:50,317 [main][BasicTypeRegistry.java:145] : Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@8e368ef0
DEBUG 2022-09-08 18:41:50,318 [main][BasicTypeRegistry.java:145] : Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@8e368ef0
DEBUG 2022-09-08 18:41:50,319 [main][BasicTypeRegistry.java:145] : Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@b63d7a99
DEBUG 2022-09-08 18:41:50,320 [main][BasicTypeRegistry.java:145] : Adding type registration locale -> org.hibernate.type.LocaleType@998c66e4
DEBUG 2022-09-08 18:41:50,320 [main][BasicTypeRegistry.java:145] : Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@998c66e4
DEBUG 2022-09-08 18:41:50,321 [main][BasicTypeRegistry.java:145] : Adding type registration currency -> org.hibernate.type.CurrencyType@b1b088aa
DEBUG 2022-09-08 18:41:50,321 [main][BasicTypeRegistry.java:145] : Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@b1b088aa
DEBUG 2022-09-08 18:41:50,322 [main][BasicTypeRegistry.java:145] : Adding type registration timezone -> org.hibernate.type.TimeZoneType@fe802e0
DEBUG 2022-09-08 18:41:50,322 [main][BasicTypeRegistry.java:145] : Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@fe802e0
DEBUG 2022-09-08 18:41:50,323 [main][BasicTypeRegistry.java:145] : Adding type registration class -> org.hibernate.type.ClassType@374321cc
DEBUG 2022-09-08 18:41:50,323 [main][BasicTypeRegistry.java:145] : Adding type registration java.lang.Class -> org.hibernate.type.ClassType@374321cc
DEBUG 2022-09-08 18:41:50,324 [main][BasicTypeRegistry.java:145] : Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@76a0fd8f
DEBUG 2022-09-08 18:41:50,324 [main][BasicTypeRegistry.java:145] : Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@76a0fd8f
DEBUG 2022-09-08 18:41:50,324 [main][BasicTypeRegistry.java:145] : Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@c606bcf5
DEBUG 2022-09-08 18:41:50,325 [main][BasicTypeRegistry.java:145] : Adding type registration binary -> org.hibernate.type.BinaryType@ccf03e47
DEBUG 2022-09-08 18:41:50,326 [main][BasicTypeRegistry.java:145] : Adding type registration byte[] -> org.hibernate.type.BinaryType@ccf03e47
DEBUG 2022-09-08 18:41:50,326 [main][BasicTypeRegistry.java:145] : Adding type registration [B -> org.hibernate.type.BinaryType@ccf03e47
DEBUG 2022-09-08 18:41:50,326 [main][BasicTypeRegistry.java:145] : Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@f2842de6
DEBUG 2022-09-08 18:41:50,327 [main][BasicTypeRegistry.java:145] : Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@f2842de6
DEBUG 2022-09-08 18:41:50,327 [main][BasicTypeRegistry.java:145] : Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@f2842de6
DEBUG 2022-09-08 18:41:50,328 [main][BasicTypeRegistry.java:145] : Adding type registration row_version -> org.hibernate.type.RowVersionType@42756534
DEBUG 2022-09-08 18:41:50,329 [main][BasicTypeRegistry.java:145] : Adding type registration image -> org.hibernate.type.ImageType@4f1c8c59
DEBUG 2022-09-08 18:41:50,329 [main][BasicTypeRegistry.java:145] : Adding type registration characters -> org.hibernate.type.CharArrayType@c30573fc
DEBUG 2022-09-08 18:41:50,330 [main][BasicTypeRegistry.java:145] : Adding type registration char[] -> org.hibernate.type.CharArrayType@c30573fc
DEBUG 2022-09-08 18:41:50,330 [main][BasicTypeRegistry.java:145] : Adding type registration [C -> org.hibernate.type.CharArrayType@c30573fc
DEBUG 2022-09-08 18:41:50,330 [main][BasicTypeRegistry.java:145] : Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@8da2741d
DEBUG 2022-09-08 18:41:50,331 [main][BasicTypeRegistry.java:145] : Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@8da2741d
DEBUG 2022-09-08 18:41:50,331 [main][BasicTypeRegistry.java:145] : Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@8da2741d
DEBUG 2022-09-08 18:41:50,331 [main][BasicTypeRegistry.java:145] : Adding type registration text -> org.hibernate.type.TextType@b4005dc1
DEBUG 2022-09-08 18:41:50,332 [main][BasicTypeRegistry.java:145] : Adding type registration ntext -> org.hibernate.type.NTextType@46eac777
DEBUG 2022-09-08 18:41:50,334 [main][BasicTypeRegistry.java:145] : Adding type registration blob -> org.hibernate.type.BlobType@1653c852
DEBUG 2022-09-08 18:41:50,334 [main][BasicTypeRegistry.java:145] : Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@1653c852
DEBUG 2022-09-08 18:41:50,335 [main][BasicTypeRegistry.java:145] : Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@59737e15
DEBUG 2022-09-08 18:41:50,337 [main][BasicTypeRegistry.java:145] : Adding type registration clob -> org.hibernate.type.ClobType@de656843
DEBUG 2022-09-08 18:41:50,337 [main][BasicTypeRegistry.java:145] : Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@de656843
DEBUG 2022-09-08 18:41:50,339 [main][BasicTypeRegistry.java:145] : Adding type registration nclob -> org.hibernate.type.NClobType@14dbbb31
DEBUG 2022-09-08 18:41:50,340 [main][BasicTypeRegistry.java:145] : Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@14dbbb31
DEBUG 2022-09-08 18:41:50,340 [main][BasicTypeRegistry.java:145] : Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@457f6604
DEBUG 2022-09-08 18:41:50,340 [main][BasicTypeRegistry.java:145] : Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@d93580dc
DEBUG 2022-09-08 18:41:50,341 [main][BasicTypeRegistry.java:145] : Adding type registration serializable -> org.hibernate.type.SerializableType@31e9c944
DEBUG 2022-09-08 18:41:50,343 [main][BasicTypeRegistry.java:145] : Adding type registration object -> org.hibernate.type.ObjectType@70f8f1e4
DEBUG 2022-09-08 18:41:50,343 [main][BasicTypeRegistry.java:145] : Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@70f8f1e4
DEBUG 2022-09-08 18:41:50,344 [main][BasicTypeRegistry.java:145] : Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@f16fdad
DEBUG 2022-09-08 18:41:50,344 [main][BasicTypeRegistry.java:145] : Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@ab48de40
DEBUG 2022-09-08 18:41:50,344 [main][BasicTypeRegistry.java:145] : Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@eea9cd3d
DEBUG 2022-09-08 18:41:50,344 [main][BasicTypeRegistry.java:145] : Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@7150fb00
DEBUG 2022-09-08 18:41:50,344 [main][BasicTypeRegistry.java:145] : Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@fc052fae
DEBUG 2022-09-08 18:41:50,345 [main][BasicTypeRegistry.java:145] : Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@3b1b6d14
DEBUG 2022-09-08 18:41:50,345 [main][BasicTypeRegistry.java:145] : Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@2cb19f91
DEBUG 2022-09-08 18:41:50,345 [main][BasicTypeRegistry.java:145] : Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@c45c5504
WARN  2022-09-08 18:41:50,351 [main][DriverManagerConnectionProviderImpl.java:70] : HHH10001002: Using Hibernate built-in connection pool (not for production use!)
INFO  2022-09-08 18:41:50,356 [main][DriverManagerConnectionProviderImpl.java:126] : HHH10001005: using driver [com.mysql.cj.jdbc.Driver] at URL [jdbc:mysql://localhost:3306/classicmodels?serverTimezone=UTC]
INFO  2022-09-08 18:41:50,356 [main][DriverManagerConnectionProviderImpl.java:132] : HHH10001001: Connection properties: {password=rootroot, user=root}
INFO  2022-09-08 18:41:50,356 [main][DriverManagerConnectionProviderImpl.java:140] : HHH10001003: Autocommit mode: false
DEBUG 2022-09-08 18:41:50,359 [main][DelegatingBasicLogger.java:384] : Initializing Connection pool with 1 Connections
INFO  2022-09-08 18:41:50,360 [main][PooledConnections.java:41] : HHH000115: Hibernate connection pool size: 5 (min=1)
DEBUG 2022-09-08 18:41:50,786 [main][JdbcEnvironmentInitiator.java:72] : Database ->
       name : MySQL
    version : 8.0.29
      major : 8
      minor : 0
DEBUG 2022-09-08 18:41:50,787 [main][JdbcEnvironmentInitiator.java:83] : Driver ->
       name : MySQL Connector/J
    version : mysql-connector-java-8.0.29 (Revision: dd61577595edad45c398af508cf91ad26fc4144f)
      major : 8
      minor : 0
DEBUG 2022-09-08 18:41:50,787 [main][DelegatingBasicLogger.java:389] : JDBC version : 4.2
INFO  2022-09-08 18:41:50,792 [main][Dialect.java:153] : HHH000400: Using dialect: org.hibernate.dialect.MySQLDialect
DEBUG 2022-09-08 18:41:50,828 [main][IdentifierHelperBuilder.java:117] : JDBC driver metadata reported database stores quoted identifiers in more than one case
DEBUG 2022-09-08 18:41:50,830 [main][IdentifierHelperBuilder.java:191] : IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [MIXED]; that will likely lead to problems in schema update and validation if using quoted identifiers
DEBUG 2022-09-08 18:41:50,849 [main][DefaultIdentifierGeneratorFactory.java:81] : Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
DEBUG 2022-09-08 18:41:50,849 [main][DefaultIdentifierGeneratorFactory.java:81] : Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
DEBUG 2022-09-08 18:41:50,849 [main][DefaultIdentifierGeneratorFactory.java:81] : Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
DEBUG 2022-09-08 18:41:50,850 [main][DefaultIdentifierGeneratorFactory.java:81] : Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
DEBUG 2022-09-08 18:41:50,850 [main][DefaultIdentifierGeneratorFactory.java:81] : Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
DEBUG 2022-09-08 18:41:50,850 [main][DefaultIdentifierGeneratorFactory.java:81] : Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
DEBUG 2022-09-08 18:41:50,851 [main][DefaultIdentifierGeneratorFactory.java:81] : Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
DEBUG 2022-09-08 18:41:50,851 [main][DefaultIdentifierGeneratorFactory.java:81] : Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
DEBUG 2022-09-08 18:41:50,852 [main][DefaultIdentifierGeneratorFactory.java:81] : Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
DEBUG 2022-09-08 18:41:50,852 [main][DefaultIdentifierGeneratorFactory.java:81] : Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
DEBUG 2022-09-08 18:41:50,853 [main][DefaultIdentifierGeneratorFactory.java:81] : Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
DEBUG 2022-09-08 18:41:50,854 [main][DefaultIdentifierGeneratorFactory.java:81] : Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
DEBUG 2022-09-08 18:41:50,854 [main][DefaultIdentifierGeneratorFactory.java:81] : Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
DEBUG 2022-09-08 18:41:50,855 [main][DefaultIdentifierGeneratorFactory.java:81] : Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
DEBUG 2022-09-08 18:41:50,868 [main][Namespace.java:47] : Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
DEBUG 2022-09-08 18:41:50,880 [main][AnnotationBinder.java:511] : Binding entity from annotated class: org.example.models.Author
DEBUG 2022-09-08 18:41:50,890 [main][Ejb3Column.java:213] : Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
DEBUG 2022-09-08 18:41:50,892 [main][EntityBinder.java:416] : Import with entity name Author
DEBUG 2022-09-08 18:41:50,895 [main][EntityBinder.java:692] : Bind entity org.example.models.Author on table Author
DEBUG 2022-09-08 18:41:50,907 [main][Ejb3Column.java:213] : Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Author), mappingColumn=id, insertable=true, updatable=true, unique=false}
DEBUG 2022-09-08 18:41:50,910 [main][PropertyBinder.java:174] : MetadataSourceProcessor property id with lazy=false
DEBUG 2022-09-08 18:41:50,911 [main][AbstractPropertyHolder.java:89] : Attempting to locate auto-apply AttributeConverter for property [org.example.models.Author:id]
DEBUG 2022-09-08 18:41:50,911 [main][SimpleValueBinder.java:398] : building SimpleValue for id
DEBUG 2022-09-08 18:41:50,912 [main][PropertyBinder.java:265] : Building property id
DEBUG 2022-09-08 18:41:50,915 [main][Ejb3Column.java:213] : Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Author), mappingColumn=name, insertable=true, updatable=true, unique=false}
DEBUG 2022-09-08 18:41:50,915 [main][PropertyBinder.java:174] : MetadataSourceProcessor property name with lazy=false
DEBUG 2022-09-08 18:41:50,915 [main][AbstractPropertyHolder.java:89] : Attempting to locate auto-apply AttributeConverter for property [org.example.models.Author:name]
DEBUG 2022-09-08 18:41:50,915 [main][SimpleValueBinder.java:398] : building SimpleValue for name
DEBUG 2022-09-08 18:41:50,915 [main][PropertyBinder.java:265] : Building property name
DEBUG 2022-09-08 18:41:50,916 [main][Ejb3Column.java:213] : Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Author), mappingColumn=salary, insertable=true, updatable=true, unique=false}
DEBUG 2022-09-08 18:41:50,916 [main][PropertyBinder.java:174] : MetadataSourceProcessor property salary with lazy=false
DEBUG 2022-09-08 18:41:50,916 [main][AbstractPropertyHolder.java:89] : Attempting to locate auto-apply AttributeConverter for property [org.example.models.Author:salary]
DEBUG 2022-09-08 18:41:50,916 [main][SimpleValueBinder.java:398] : building SimpleValue for salary
DEBUG 2022-09-08 18:41:50,916 [main][PropertyBinder.java:265] : Building property salary
DEBUG 2022-09-08 18:41:50,917 [main][AnnotationBinder.java:511] : Binding entity from annotated class: org.example.models.Book
DEBUG 2022-09-08 18:41:50,917 [main][Ejb3Column.java:213] : Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
DEBUG 2022-09-08 18:41:50,917 [main][EntityBinder.java:416] : Import with entity name Book
DEBUG 2022-09-08 18:41:50,918 [main][EntityBinder.java:692] : Bind entity org.example.models.Book on table Book
DEBUG 2022-09-08 18:41:50,918 [main][Ejb3Column.java:213] : Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Book), mappingColumn=id, insertable=true, updatable=true, unique=false}
DEBUG 2022-09-08 18:41:50,918 [main][PropertyBinder.java:174] : MetadataSourceProcessor property id with lazy=false
DEBUG 2022-09-08 18:41:50,918 [main][AbstractPropertyHolder.java:89] : Attempting to locate auto-apply AttributeConverter for property [org.example.models.Book:id]
DEBUG 2022-09-08 18:41:50,919 [main][SimpleValueBinder.java:398] : building SimpleValue for id
DEBUG 2022-09-08 18:41:50,919 [main][PropertyBinder.java:265] : Building property id
DEBUG 2022-09-08 18:41:50,919 [main][Ejb3Column.java:213] : Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Book), mappingColumn=author_id, insertable=true, updatable=true, unique=false}
DEBUG 2022-09-08 18:41:50,919 [main][PropertyBinder.java:174] : MetadataSourceProcessor property author_id with lazy=false
DEBUG 2022-09-08 18:41:50,919 [main][AbstractPropertyHolder.java:89] : Attempting to locate auto-apply AttributeConverter for property [org.example.models.Book:author_id]
DEBUG 2022-09-08 18:41:50,920 [main][SimpleValueBinder.java:398] : building SimpleValue for author_id
DEBUG 2022-09-08 18:41:50,920 [main][PropertyBinder.java:265] : Building property author_id
DEBUG 2022-09-08 18:41:50,920 [main][Ejb3Column.java:213] : Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Book), mappingColumn=name, insertable=true, updatable=true, unique=false}
DEBUG 2022-09-08 18:41:50,920 [main][PropertyBinder.java:174] : MetadataSourceProcessor property name with lazy=false
DEBUG 2022-09-08 18:41:50,920 [main][AbstractPropertyHolder.java:89] : Attempting to locate auto-apply AttributeConverter for property [org.example.models.Book:name]
DEBUG 2022-09-08 18:41:50,921 [main][SimpleValueBinder.java:398] : building SimpleValue for name
DEBUG 2022-09-08 18:41:50,921 [main][PropertyBinder.java:265] : Building property name
DEBUG 2022-09-08 18:41:50,922 [main][SimpleValueBinder.java:443] : Starting fillSimpleValue for id
DEBUG 2022-09-08 18:41:50,922 [main][SimpleValueBinder.java:443] : Starting fillSimpleValue for name
DEBUG 2022-09-08 18:41:50,922 [main][SimpleValueBinder.java:443] : Starting fillSimpleValue for salary
DEBUG 2022-09-08 18:41:50,922 [main][SimpleValueBinder.java:443] : Starting fillSimpleValue for id
DEBUG 2022-09-08 18:41:50,922 [main][SimpleValueBinder.java:443] : Starting fillSimpleValue for author_id
DEBUG 2022-09-08 18:41:50,923 [main][SimpleValueBinder.java:443] : Starting fillSimpleValue for name
DEBUG 2022-09-08 18:41:50,923 [main][PrimaryKey.java:35] : Forcing column [id] to be non-null as it is part of the primary key for table [author]
DEBUG 2022-09-08 18:41:50,924 [main][PrimaryKey.java:35] : Forcing column [id] to be non-null as it is part of the primary key for table [book]
DEBUG 2022-09-08 18:41:50,944 [main][SessionFactoryImpl.java:197] : Building session factory
DEBUG 2022-09-08 18:41:50,945 [main][Settings.java:69] : SessionFactory name : null
DEBUG 2022-09-08 18:41:50,946 [main][Settings.java:70] : Automatic flush during beforeCompletion(): enabled
DEBUG 2022-09-08 18:41:50,946 [main][Settings.java:71] : Automatic session close at end of transaction: disabled
DEBUG 2022-09-08 18:41:50,946 [main][Settings.java:73] : Statistics: disabled
DEBUG 2022-09-08 18:41:50,946 [main][Settings.java:75] : Deleted entity synthetic identifier rollback: disabled
DEBUG 2022-09-08 18:41:50,946 [main][Settings.java:76] : Default entity-mode: pojo
DEBUG 2022-09-08 18:41:50,947 [main][Settings.java:77] : Check Nullability in Core (should be disabled when Bean Validation is on): enabled
DEBUG 2022-09-08 18:41:50,947 [main][Settings.java:78] : Allow initialization of lazy state outside session : disabled
DEBUG 2022-09-08 18:41:50,947 [main][Settings.java:80] : Using BatchFetchStyle : LEGACY
DEBUG 2022-09-08 18:41:50,948 [main][Settings.java:81] : Default batch fetch size: -1
DEBUG 2022-09-08 18:41:50,948 [main][Settings.java:82] : Maximum outer join fetch depth: 2
DEBUG 2022-09-08 18:41:50,948 [main][Settings.java:83] : Default null ordering: NONE
DEBUG 2022-09-08 18:41:50,948 [main][Settings.java:84] : Order SQL updates by primary key: disabled
DEBUG 2022-09-08 18:41:50,948 [main][Settings.java:85] : Order SQL inserts for batching: disabled
DEBUG 2022-09-08 18:41:50,948 [main][Settings.java:87] : multi-tenancy strategy : NONE
DEBUG 2022-09-08 18:41:50,948 [main][Settings.java:89] : JTA Track by Thread: enabled
DEBUG 2022-09-08 18:41:50,948 [main][Settings.java:91] : Query language substitutions: {}
DEBUG 2022-09-08 18:41:50,948 [main][Settings.java:92] : JPA query language strict compliance: disabled
DEBUG 2022-09-08 18:41:50,948 [main][Settings.java:93] : Named query checking : enabled
DEBUG 2022-09-08 18:41:50,949 [main][Settings.java:95] : Second-level cache: enabled
DEBUG 2022-09-08 18:41:50,949 [main][Settings.java:96] : Second-level query cache: disabled
DEBUG 2022-09-08 18:41:50,949 [main][Settings.java:97] : Second-level query cache factory: org.hibernate.cache.internal.StandardQueryCacheFactory@56e5a6b7
DEBUG 2022-09-08 18:41:50,949 [main][Settings.java:98] : Second-level cache region prefix: null
DEBUG 2022-09-08 18:41:50,949 [main][Settings.java:99] : Optimize second-level cache for minimal puts: disabled
DEBUG 2022-09-08 18:41:50,949 [main][Settings.java:100] : Structured second-level cache entries: disabled
DEBUG 2022-09-08 18:41:50,949 [main][Settings.java:101] : Second-level cache direct-reference entries: disabled
DEBUG 2022-09-08 18:41:50,949 [main][Settings.java:102] : Automatic eviction of collection cache: disabled
DEBUG 2022-09-08 18:41:50,949 [main][Settings.java:104] : JDBC batch size: 15
DEBUG 2022-09-08 18:41:50,950 [main][Settings.java:105] : JDBC batch updates for versioned data: enabled
DEBUG 2022-09-08 18:41:50,950 [main][Settings.java:106] : Scrollable result sets: enabled
DEBUG 2022-09-08 18:41:50,950 [main][Settings.java:107] : Wrap result sets: disabled
DEBUG 2022-09-08 18:41:50,950 [main][Settings.java:108] : JDBC3 getGeneratedKeys(): enabled
DEBUG 2022-09-08 18:41:50,950 [main][Settings.java:109] : JDBC result set fetch size: null
DEBUG 2022-09-08 18:41:50,950 [main][Settings.java:110] : Connection release mode: AFTER_TRANSACTION
DEBUG 2022-09-08 18:41:50,950 [main][Settings.java:111] : Generate SQL with comments: disabled
DEBUG 2022-09-08 18:41:50,974 [main][SessionFactoryImpl.java:252] : Session factory constructed with filter configurations : {}
DEBUG 2022-09-08 18:41:50,974 [main][SessionFactoryImpl.java:253] : Instantiating session factory with properties: {awt.toolkit=sun.lwawt.macosx.LWCToolkit, java.specification.version=11, file.encoding.pkg=sun.io, jdk.extensions.version=11.0.15.0, sun.jnu.encoding=UTF-8, hibernate.dialect=org.hibernate.dialect.MySQLDialect, java.class.path=/Users/vdonets/IdeaProjects/testmaven/target/classes:/Users/vdonets/.m2/repository/org/hibernate/hibernate-core/5.2.2.Final/hibernate-core-5.2.2.Final.jar:/Users/vdonets/.m2/repository/org/jboss/logging/jboss-logging/3.3.0.Final/jboss-logging-3.3.0.Final.jar:/Users/vdonets/.m2/repository/org/hibernate/javax/persistence/hibernate-jpa-2.1-api/1.0.0.Final/hibernate-jpa-2.1-api-1.0.0.Final.jar:/Users/vdonets/.m2/repository/org/javassist/javassist/3.20.0-GA/javassist-3.20.0-GA.jar:/Users/vdonets/.m2/repository/antlr/antlr/2.7.7/antlr-2.7.7.jar:/Users/vdonets/.m2/repository/org/apache/geronimo/specs/geronimo-jta_1.1_spec/1.1.1/geronimo-jta_1.1_spec-1.1.1.jar:/Users/vdonets/.m2/repository/org/jboss/jandex/2.0.0.Final/jandex-2.0.0.Final.jar:/Users/vdonets/.m2/repository/com/fasterxml/classmate/1.3.0/classmate-1.3.0.jar:/Users/vdonets/.m2/repository/dom4j/dom4j/1.6.1/dom4j-1.6.1.jar:/Users/vdonets/.m2/repository/org/hibernate/common/hibernate-commons-annotations/5.0.1.Final/hibernate-commons-annotations-5.0.1.Final.jar:/Users/vdonets/.m2/repository/javax/enterprise/cdi-api/1.1/cdi-api-1.1.jar:/Users/vdonets/.m2/repository/javax/el/el-api/2.2/el-api-2.2.jar:/Users/vdonets/.m2/repository/org/jboss/spec/javax/interceptor/jboss-interceptors-api_1.1_spec/1.0.0.Beta1/jboss-interceptors-api_1.1_spec-1.0.0.Beta1.jar:/Users/vdonets/.m2/repository/javax/annotation/jsr250-api/1.0/jsr250-api-1.0.jar:/Users/vdonets/.m2/repository/javax/inject/javax.inject/1/javax.inject-1.jar:/Users/vdonets/.m2/repository/mysql/mysql-connector-java/8.0.29/mysql-connector-java-8.0.29.jar:/Users/vdonets/.m2/repository/com/google/protobuf/protobuf-java/3.19.4/protobuf-java-3.19.4.jar:/Users/vdonets/.m2/repository/jakarta/xml/bind/jakarta.xml.bind-api/2.3.2/jakarta.xml.bind-api-2.3.2.jar:/Users/vdonets/.m2/repository/jakarta/activation/jakarta.activation-api/1.2.1/jakarta.activation-api-1.2.1.jar:/Users/vdonets/.m2/repository/org/glassfish/jaxb/jaxb-runtime/2.3.2/jaxb-runtime-2.3.2.jar:/Users/vdonets/.m2/repository/org/glassfish/jaxb/txw2/2.3.2/txw2-2.3.2.jar:/Users/vdonets/.m2/repository/com/sun/istack/istack-commons-runtime/3.0.8/istack-commons-runtime-3.0.8.jar:/Users/vdonets/.m2/repository/org/jvnet/staxex/stax-ex/1.8.1/stax-ex-1.8.1.jar:/Users/vdonets/.m2/repository/com/sun/xml/fastinfoset/FastInfoset/1.2.16/FastInfoset-1.2.16.jar:/Users/vdonets/.m2/repository/log4j/log4j/1.2.14/log4j-1.2.14.jar:/Applications/IntelliJ IDEA.app/Contents/lib/idea_rt.jar:/Users/vdonets/Library/Caches/JetBrains/IntelliJIdea2022.1/captureAgent/debugger-agent.jar, java.vm.vendor=Eclipse OpenJ9, sun.arch.data.model=64, com.ibm.vm.bitmode=64, hbm2ddl.auto=create-drop, user.variant=, com.ibm.oti.vm.library.version=29, java.vendor.url=https://www.ibm.com/semeru-runtimes, user.timezone=Europe/Warsaw, java.vm.specification.version=11, os.name=Mac OS X, sun.java.launcher=SUN_STANDARD, user.country=US, sun.boot.library.path=/Users/vdonets/Library/Java/JavaVirtualMachines/semeru-11.0.15/Contents/Home/lib/default:/Users/vdonets/Library/Java/JavaVirtualMachines/semeru-11.0.15/Contents/Home/lib, sun.java.command=org.example.Main, sun.cpu.endian=little, user.home=/Users/vdonets, user.language=en, java.specification.vendor=Oracle Corporation, java.version.date=2022-04-19, java.home=/Users/vdonets/Library/Java/JavaVirtualMachines/semeru-11.0.15/Contents/Home, ibm.signalhandling.rs=false, jdk.extensions.name=Extensions for OpenJDK for Eclipse OpenJ9, file.separator=/, line.separator=
, java.specification.name=Java Platform API Specification, java.vm.specification.vendor=Oracle Corporation, intellij.debug.agent=true, java.compiler=j9jit29, com.ibm.util.extralibs.properties=, java.awt.graphicsenv=sun.awt.CGraphicsEnvironment, com.ibm.oti.configuration=scar, com.ibm.oti.shared.enabled=false, hibernate.hbm2ddl.auto=create-drop, com.ibm.oti.vm.bootstrap.library.path=/Users/vdonets/Library/Java/JavaVirtualMachines/semeru-11.0.15/Contents/Home/lib/default:/Users/vdonets/Library/Java/JavaVirtualMachines/semeru-11.0.15/Contents/Home/lib, com.ibm.cpu.endian=little, java.fullversion=11.0.15-ea+10
JRE 11 Mac OS X aarch64-64-Bit 20220422_36 (JIT enabled, AOT enabled)
OpenJ9   - 9a84ec34e
OMR      - ab24b6666
JCL      - b7b5b42ea6 based on jdk-11.0.15+10, java.runtime.version=11.0.15-ea+10, user.name=vdonets, path.separator=:, hibernate.connection.username=root, os.version=12.5, java.runtime.name=IBM Semeru Runtime Open Edition, hibernate.connection.url=jdbc:mysql://localhost:3306/classicmodels?serverTimezone=UTC, connection.pool_size=5, ibm.signalhandling.sigint=true, file.encoding=UTF-8, java.vm.name=Eclipse OpenJ9 VM, hibernate.show_sql=true, java.vendor.version=11.0.15.0, ibm.signalhandling.sigchain=true, show_sql=true, hibernate.connection.driver_class=com.mysql.cj.jdbc.Driver, java.vendor.url.bug=https://github.com/ibmruntimes/Semeru-Runtimes/issues, java.io.tmpdir=/var/folders/wv/6c3_66yd6kq3r7z477kwz4lr0000gn/T/, java.version=11.0.15-ea, jboss.modules.system.pkgs=com.intellij.rt, com.ibm.system.agent.path=/Users/vdonets/Library/Java/JavaVirtualMachines/semeru-11.0.15/Contents/Home/lib, user.dir=/Users/vdonets/IdeaProjects/testmaven, os.arch=aarch64, java.vm.specification.name=Java Virtual Machine Specification, java.awt.printerjob=sun.lwawt.macosx.CPrinterJob, hibernate.connection.password=****, os.encoding=UTF-8, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@a5af04be, java.library.path=/Users/vdonets/Library/Java/JavaVirtualMachines/semeru-11.0.15/Contents/Home/lib/default:/Users/vdonets/Library/Java/JavaVirtualMachines/semeru-11.0.15/Contents/Home/lib:/usr/lib, java.vendor=IBM Corporation, java.vm.info=JRE 11 Mac OS X aarch64-64-Bit 20220422_36 (JIT enabled, AOT enabled)
OpenJ9   - 9a84ec34e
OMR      - ab24b6666
JCL      - b7b5b42ea6 based on jdk-11.0.15+10, java.vm.version=openj9-0.32.0, ibm.system.encoding=UTF-8, hibernate.bytecode.use_reflection_optimizer=false, com.ibm.jcl.checkClassPath=, sun.io.unicode.encoding=UnicodeLittle, hibernate.connection.pool_size=5, java.class.version=55.0}
DEBUG 2022-09-08 18:41:50,980 [main][JaccIntegrator.java:80] : Skipping JACC integration as it was not enabled
DEBUG 2022-09-08 18:41:50,981 [main][SessionFactoryImpl.java:292] : Instantiated session factory
DEBUG 2022-09-08 18:41:50,999 [main][ClassLoaderAccessImpl.java:55] : Not known whether passed class name [org.example.models.Book] is safe
DEBUG 2022-09-08 18:41:50,999 [main][ClassLoaderAccessImpl.java:57] : No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.models.Book
DEBUG 2022-09-08 18:41:51,005 [main][ClassLoaderAccessImpl.java:55] : Not known whether passed class name [org.example.models.Book] is safe
DEBUG 2022-09-08 18:41:51,005 [main][ClassLoaderAccessImpl.java:57] : No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.models.Book
DEBUG 2022-09-08 18:41:51,029 [main][ClassLoaderAccessImpl.java:55] : Not known whether passed class name [org.example.models.Author] is safe
DEBUG 2022-09-08 18:41:51,029 [main][ClassLoaderAccessImpl.java:57] : No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.models.Author
DEBUG 2022-09-08 18:41:51,029 [main][ClassLoaderAccessImpl.java:55] : Not known whether passed class name [org.example.models.Author] is safe
DEBUG 2022-09-08 18:41:51,029 [main][ClassLoaderAccessImpl.java:57] : No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.models.Author
DEBUG 2022-09-08 18:41:51,034 [main][AbstractEntityPersister.java:3529] : Static SQL for entity: org.example.models.Book
DEBUG 2022-09-08 18:41:51,034 [main][AbstractEntityPersister.java:3534] :  Version select: select id from Book where id =?
DEBUG 2022-09-08 18:41:51,034 [main][AbstractEntityPersister.java:3537] :  Snapshot select: select book_.id, book_.author_id as author_i2_1_, book_.name as name3_1_ from Book book_ where book_.id=?
DEBUG 2022-09-08 18:41:51,035 [main][DelegatingBasicLogger.java:394] :  Insert 0: insert into Book (author_id, name, id) values (?, ?, ?)
DEBUG 2022-09-08 18:41:51,035 [main][DelegatingBasicLogger.java:394] :  Update 0: update Book set author_id=?, name=? where id=?
DEBUG 2022-09-08 18:41:51,036 [main][DelegatingBasicLogger.java:394] :  Delete 0: delete from Book where id=?
DEBUG 2022-09-08 18:41:51,044 [main][QuerySpacesImpl.java:174] : Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@32ef4c41]
DEBUG 2022-09-08 18:41:51,045 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : author_id
DEBUG 2022-09-08 18:41:51,045 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : name
DEBUG 2022-09-08 18:41:51,045 [main][FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150] : Building LoadPlan...
DEBUG 2022-09-08 18:41:51,049 [main][LoadQueryJoinAndFetchProcessor.java:100] : processing queryspace <gen:0>
DEBUG 2022-09-08 18:41:51,052 [main][LoadPlanTreePrinter.java:55] : LoadPlan(entity=org.example.models.Book)
    - Returns
       - EntityReturnImpl(entity=org.example.models.Book, querySpaceUid=<gen:0>, path=org.example.models.Book)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=org.example.models.Book)
          - SQL table alias mapping - book0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

DEBUG 2022-09-08 18:41:51,053 [main][EntityLoader.java:115] : Static select for entity org.example.models.Book [NONE]: select book0_.id as id1_1_0_, book0_.author_id as author_i2_1_0_, book0_.name as name3_1_0_ from Book book0_ where book0_.id=?
DEBUG 2022-09-08 18:41:51,053 [main][QuerySpacesImpl.java:174] : Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@f8c13358]
DEBUG 2022-09-08 18:41:51,053 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : author_id
DEBUG 2022-09-08 18:41:51,053 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : name
DEBUG 2022-09-08 18:41:51,053 [main][FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150] : Building LoadPlan...
DEBUG 2022-09-08 18:41:51,054 [main][LoadQueryJoinAndFetchProcessor.java:100] : processing queryspace <gen:0>
DEBUG 2022-09-08 18:41:51,054 [main][LoadPlanTreePrinter.java:55] : LoadPlan(entity=org.example.models.Book)
    - Returns
       - EntityReturnImpl(entity=org.example.models.Book, querySpaceUid=<gen:0>, path=org.example.models.Book)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=org.example.models.Book)
          - SQL table alias mapping - book0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

DEBUG 2022-09-08 18:41:51,054 [main][EntityLoader.java:115] : Static select for entity org.example.models.Book [READ]: select book0_.id as id1_1_0_, book0_.author_id as author_i2_1_0_, book0_.name as name3_1_0_ from Book book0_ where book0_.id=?
DEBUG 2022-09-08 18:41:51,055 [main][QuerySpacesImpl.java:174] : Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@cb169872]
DEBUG 2022-09-08 18:41:51,055 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : author_id
DEBUG 2022-09-08 18:41:51,055 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : name
DEBUG 2022-09-08 18:41:51,055 [main][FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150] : Building LoadPlan...
DEBUG 2022-09-08 18:41:51,055 [main][LoadQueryJoinAndFetchProcessor.java:100] : processing queryspace <gen:0>
DEBUG 2022-09-08 18:41:51,056 [main][LoadPlanTreePrinter.java:55] : LoadPlan(entity=org.example.models.Book)
    - Returns
       - EntityReturnImpl(entity=org.example.models.Book, querySpaceUid=<gen:0>, path=org.example.models.Book)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=org.example.models.Book)
          - SQL table alias mapping - book0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

DEBUG 2022-09-08 18:41:51,056 [main][EntityLoader.java:115] : Static select for entity org.example.models.Book [UPGRADE]: select book0_.id as id1_1_0_, book0_.author_id as author_i2_1_0_, book0_.name as name3_1_0_ from Book book0_ where book0_.id=? for update
DEBUG 2022-09-08 18:41:51,056 [main][QuerySpacesImpl.java:174] : Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@bc309572]
DEBUG 2022-09-08 18:41:51,056 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : author_id
DEBUG 2022-09-08 18:41:51,056 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : name
DEBUG 2022-09-08 18:41:51,056 [main][FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150] : Building LoadPlan...
DEBUG 2022-09-08 18:41:51,057 [main][LoadQueryJoinAndFetchProcessor.java:100] : processing queryspace <gen:0>
DEBUG 2022-09-08 18:41:51,057 [main][LoadPlanTreePrinter.java:55] : LoadPlan(entity=org.example.models.Book)
    - Returns
       - EntityReturnImpl(entity=org.example.models.Book, querySpaceUid=<gen:0>, path=org.example.models.Book)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=org.example.models.Book)
          - SQL table alias mapping - book0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

DEBUG 2022-09-08 18:41:51,057 [main][EntityLoader.java:115] : Static select for entity org.example.models.Book [UPGRADE_NOWAIT]: select book0_.id as id1_1_0_, book0_.author_id as author_i2_1_0_, book0_.name as name3_1_0_ from Book book0_ where book0_.id=? for update
DEBUG 2022-09-08 18:41:51,057 [main][QuerySpacesImpl.java:174] : Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@27c8bcfa]
DEBUG 2022-09-08 18:41:51,057 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : author_id
DEBUG 2022-09-08 18:41:51,058 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : name
DEBUG 2022-09-08 18:41:51,058 [main][FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150] : Building LoadPlan...
DEBUG 2022-09-08 18:41:51,058 [main][LoadQueryJoinAndFetchProcessor.java:100] : processing queryspace <gen:0>
DEBUG 2022-09-08 18:41:51,058 [main][LoadPlanTreePrinter.java:55] : LoadPlan(entity=org.example.models.Book)
    - Returns
       - EntityReturnImpl(entity=org.example.models.Book, querySpaceUid=<gen:0>, path=org.example.models.Book)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=org.example.models.Book)
          - SQL table alias mapping - book0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

DEBUG 2022-09-08 18:41:51,059 [main][EntityLoader.java:115] : Static select for entity org.example.models.Book [UPGRADE_SKIPLOCKED]: select book0_.id as id1_1_0_, book0_.author_id as author_i2_1_0_, book0_.name as name3_1_0_ from Book book0_ where book0_.id=? for update
DEBUG 2022-09-08 18:41:51,059 [main][QuerySpacesImpl.java:174] : Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1a55fab6]
DEBUG 2022-09-08 18:41:51,059 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : author_id
DEBUG 2022-09-08 18:41:51,059 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : name
DEBUG 2022-09-08 18:41:51,059 [main][FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150] : Building LoadPlan...
DEBUG 2022-09-08 18:41:51,060 [main][LoadQueryJoinAndFetchProcessor.java:100] : processing queryspace <gen:0>
DEBUG 2022-09-08 18:41:51,060 [main][LoadPlanTreePrinter.java:55] : LoadPlan(entity=org.example.models.Book)
    - Returns
       - EntityReturnImpl(entity=org.example.models.Book, querySpaceUid=<gen:0>, path=org.example.models.Book)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=org.example.models.Book)
          - SQL table alias mapping - book0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

DEBUG 2022-09-08 18:41:51,060 [main][EntityLoader.java:115] : Static select for entity org.example.models.Book [FORCE]: select book0_.id as id1_1_0_, book0_.author_id as author_i2_1_0_, book0_.name as name3_1_0_ from Book book0_ where book0_.id=? for update
DEBUG 2022-09-08 18:41:51,060 [main][QuerySpacesImpl.java:174] : Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@45ed96fa]
DEBUG 2022-09-08 18:41:51,060 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : author_id
DEBUG 2022-09-08 18:41:51,060 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : name
DEBUG 2022-09-08 18:41:51,062 [main][FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150] : Building LoadPlan...
DEBUG 2022-09-08 18:41:51,062 [main][LoadQueryJoinAndFetchProcessor.java:100] : processing queryspace <gen:0>
DEBUG 2022-09-08 18:41:51,062 [main][LoadPlanTreePrinter.java:55] : LoadPlan(entity=org.example.models.Book)
    - Returns
       - EntityReturnImpl(entity=org.example.models.Book, querySpaceUid=<gen:0>, path=org.example.models.Book)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=org.example.models.Book)
          - SQL table alias mapping - book0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

DEBUG 2022-09-08 18:41:51,063 [main][EntityLoader.java:115] : Static select for entity org.example.models.Book [PESSIMISTIC_READ]: select book0_.id as id1_1_0_, book0_.author_id as author_i2_1_0_, book0_.name as name3_1_0_ from Book book0_ where book0_.id=? lock in share mode
DEBUG 2022-09-08 18:41:51,063 [main][QuerySpacesImpl.java:174] : Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@f7fd73f1]
DEBUG 2022-09-08 18:41:51,063 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : author_id
DEBUG 2022-09-08 18:41:51,063 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : name
DEBUG 2022-09-08 18:41:51,063 [main][FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150] : Building LoadPlan...
DEBUG 2022-09-08 18:41:51,063 [main][LoadQueryJoinAndFetchProcessor.java:100] : processing queryspace <gen:0>
DEBUG 2022-09-08 18:41:51,064 [main][LoadPlanTreePrinter.java:55] : LoadPlan(entity=org.example.models.Book)
    - Returns
       - EntityReturnImpl(entity=org.example.models.Book, querySpaceUid=<gen:0>, path=org.example.models.Book)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=org.example.models.Book)
          - SQL table alias mapping - book0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

DEBUG 2022-09-08 18:41:51,064 [main][EntityLoader.java:115] : Static select for entity org.example.models.Book [PESSIMISTIC_WRITE]: select book0_.id as id1_1_0_, book0_.author_id as author_i2_1_0_, book0_.name as name3_1_0_ from Book book0_ where book0_.id=? for update
DEBUG 2022-09-08 18:41:51,064 [main][QuerySpacesImpl.java:174] : Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@9c4f413]
DEBUG 2022-09-08 18:41:51,064 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : author_id
DEBUG 2022-09-08 18:41:51,065 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : name
DEBUG 2022-09-08 18:41:51,065 [main][FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150] : Building LoadPlan...
DEBUG 2022-09-08 18:41:51,065 [main][LoadQueryJoinAndFetchProcessor.java:100] : processing queryspace <gen:0>
DEBUG 2022-09-08 18:41:51,065 [main][LoadPlanTreePrinter.java:55] : LoadPlan(entity=org.example.models.Book)
    - Returns
       - EntityReturnImpl(entity=org.example.models.Book, querySpaceUid=<gen:0>, path=org.example.models.Book)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=org.example.models.Book)
          - SQL table alias mapping - book0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

DEBUG 2022-09-08 18:41:51,065 [main][EntityLoader.java:115] : Static select for entity org.example.models.Book [PESSIMISTIC_FORCE_INCREMENT]: select book0_.id as id1_1_0_, book0_.author_id as author_i2_1_0_, book0_.name as name3_1_0_ from Book book0_ where book0_.id=? for update
DEBUG 2022-09-08 18:41:51,065 [main][QuerySpacesImpl.java:174] : Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@e2a65db2]
DEBUG 2022-09-08 18:41:51,066 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : author_id
DEBUG 2022-09-08 18:41:51,066 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : name
DEBUG 2022-09-08 18:41:51,066 [main][FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150] : Building LoadPlan...
DEBUG 2022-09-08 18:41:51,066 [main][LoadQueryJoinAndFetchProcessor.java:100] : processing queryspace <gen:0>
DEBUG 2022-09-08 18:41:51,066 [main][LoadPlanTreePrinter.java:55] : LoadPlan(entity=org.example.models.Book)
    - Returns
       - EntityReturnImpl(entity=org.example.models.Book, querySpaceUid=<gen:0>, path=org.example.models.Book)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=org.example.models.Book)
          - SQL table alias mapping - book0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

DEBUG 2022-09-08 18:41:51,067 [main][EntityLoader.java:115] : Static select for entity org.example.models.Book [OPTIMISTIC]: select book0_.id as id1_1_0_, book0_.author_id as author_i2_1_0_, book0_.name as name3_1_0_ from Book book0_ where book0_.id=?
DEBUG 2022-09-08 18:41:51,067 [main][QuerySpacesImpl.java:174] : Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@8138dd75]
DEBUG 2022-09-08 18:41:51,067 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : author_id
DEBUG 2022-09-08 18:41:51,067 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : name
DEBUG 2022-09-08 18:41:51,067 [main][FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150] : Building LoadPlan...
DEBUG 2022-09-08 18:41:51,067 [main][LoadQueryJoinAndFetchProcessor.java:100] : processing queryspace <gen:0>
DEBUG 2022-09-08 18:41:51,068 [main][LoadPlanTreePrinter.java:55] : LoadPlan(entity=org.example.models.Book)
    - Returns
       - EntityReturnImpl(entity=org.example.models.Book, querySpaceUid=<gen:0>, path=org.example.models.Book)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=org.example.models.Book)
          - SQL table alias mapping - book0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

DEBUG 2022-09-08 18:41:51,068 [main][EntityLoader.java:115] : Static select for entity org.example.models.Book [OPTIMISTIC_FORCE_INCREMENT]: select book0_.id as id1_1_0_, book0_.author_id as author_i2_1_0_, book0_.name as name3_1_0_ from Book book0_ where book0_.id=?
DEBUG 2022-09-08 18:41:51,076 [main][CascadeEntityLoader.java:38] : Static select for action ACTION_MERGE on entity org.example.models.Book: select book0_.id as id1_1_0_, book0_.author_id as author_i2_1_0_, book0_.name as name3_1_0_ from Book book0_ where book0_.id=?
DEBUG 2022-09-08 18:41:51,076 [main][CascadeEntityLoader.java:38] : Static select for action ACTION_REFRESH on entity org.example.models.Book: select book0_.id as id1_1_0_, book0_.author_id as author_i2_1_0_, book0_.name as name3_1_0_ from Book book0_ where book0_.id=?
DEBUG 2022-09-08 18:41:51,077 [main][AbstractEntityPersister.java:3529] : Static SQL for entity: org.example.models.Author
DEBUG 2022-09-08 18:41:51,077 [main][AbstractEntityPersister.java:3534] :  Version select: select id from Author where id =?
DEBUG 2022-09-08 18:41:51,077 [main][AbstractEntityPersister.java:3537] :  Snapshot select: select author_.id, author_.name as name2_0_, author_.salary as salary3_0_ from Author author_ where author_.id=?
DEBUG 2022-09-08 18:41:51,077 [main][DelegatingBasicLogger.java:394] :  Insert 0: insert into Author (name, salary, id) values (?, ?, ?)
DEBUG 2022-09-08 18:41:51,077 [main][DelegatingBasicLogger.java:394] :  Update 0: update Author set name=?, salary=? where id=?
DEBUG 2022-09-08 18:41:51,078 [main][DelegatingBasicLogger.java:394] :  Delete 0: delete from Author where id=?
DEBUG 2022-09-08 18:41:51,078 [main][AbstractEntityPersister.java:3545] :  Identity insert: insert into Author (name, salary) values (?, ?)
DEBUG 2022-09-08 18:41:51,078 [main][QuerySpacesImpl.java:174] : Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@94705338]
DEBUG 2022-09-08 18:41:51,078 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : name
DEBUG 2022-09-08 18:41:51,078 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : salary
DEBUG 2022-09-08 18:41:51,078 [main][FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150] : Building LoadPlan...
DEBUG 2022-09-08 18:41:51,079 [main][LoadQueryJoinAndFetchProcessor.java:100] : processing queryspace <gen:0>
DEBUG 2022-09-08 18:41:51,079 [main][LoadPlanTreePrinter.java:55] : LoadPlan(entity=org.example.models.Author)
    - Returns
       - EntityReturnImpl(entity=org.example.models.Author, querySpaceUid=<gen:0>, path=org.example.models.Author)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=org.example.models.Author)
          - SQL table alias mapping - author0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

DEBUG 2022-09-08 18:41:51,079 [main][EntityLoader.java:115] : Static select for entity org.example.models.Author [NONE]: select author0_.id as id1_0_0_, author0_.name as name2_0_0_, author0_.salary as salary3_0_0_ from Author author0_ where author0_.id=?
DEBUG 2022-09-08 18:41:51,079 [main][QuerySpacesImpl.java:174] : Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@c217c2cd]
DEBUG 2022-09-08 18:41:51,080 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : name
DEBUG 2022-09-08 18:41:51,080 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : salary
DEBUG 2022-09-08 18:41:51,080 [main][FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150] : Building LoadPlan...
DEBUG 2022-09-08 18:41:51,080 [main][LoadQueryJoinAndFetchProcessor.java:100] : processing queryspace <gen:0>
DEBUG 2022-09-08 18:41:51,080 [main][LoadPlanTreePrinter.java:55] : LoadPlan(entity=org.example.models.Author)
    - Returns
       - EntityReturnImpl(entity=org.example.models.Author, querySpaceUid=<gen:0>, path=org.example.models.Author)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=org.example.models.Author)
          - SQL table alias mapping - author0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

DEBUG 2022-09-08 18:41:51,081 [main][EntityLoader.java:115] : Static select for entity org.example.models.Author [READ]: select author0_.id as id1_0_0_, author0_.name as name2_0_0_, author0_.salary as salary3_0_0_ from Author author0_ where author0_.id=?
DEBUG 2022-09-08 18:41:51,081 [main][QuerySpacesImpl.java:174] : Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@9c1fdfea]
DEBUG 2022-09-08 18:41:51,081 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : name
DEBUG 2022-09-08 18:41:51,081 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : salary
DEBUG 2022-09-08 18:41:51,081 [main][FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150] : Building LoadPlan...
DEBUG 2022-09-08 18:41:51,081 [main][LoadQueryJoinAndFetchProcessor.java:100] : processing queryspace <gen:0>
DEBUG 2022-09-08 18:41:51,082 [main][LoadPlanTreePrinter.java:55] : LoadPlan(entity=org.example.models.Author)
    - Returns
       - EntityReturnImpl(entity=org.example.models.Author, querySpaceUid=<gen:0>, path=org.example.models.Author)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=org.example.models.Author)
          - SQL table alias mapping - author0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

DEBUG 2022-09-08 18:41:51,082 [main][EntityLoader.java:115] : Static select for entity org.example.models.Author [UPGRADE]: select author0_.id as id1_0_0_, author0_.name as name2_0_0_, author0_.salary as salary3_0_0_ from Author author0_ where author0_.id=? for update
DEBUG 2022-09-08 18:41:51,082 [main][QuerySpacesImpl.java:174] : Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@a2c091cb]
DEBUG 2022-09-08 18:41:51,082 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : name
DEBUG 2022-09-08 18:41:51,083 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : salary
DEBUG 2022-09-08 18:41:51,083 [main][FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150] : Building LoadPlan...
DEBUG 2022-09-08 18:41:51,083 [main][LoadQueryJoinAndFetchProcessor.java:100] : processing queryspace <gen:0>
DEBUG 2022-09-08 18:41:51,083 [main][LoadPlanTreePrinter.java:55] : LoadPlan(entity=org.example.models.Author)
    - Returns
       - EntityReturnImpl(entity=org.example.models.Author, querySpaceUid=<gen:0>, path=org.example.models.Author)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=org.example.models.Author)
          - SQL table alias mapping - author0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

DEBUG 2022-09-08 18:41:51,083 [main][EntityLoader.java:115] : Static select for entity org.example.models.Author [UPGRADE_NOWAIT]: select author0_.id as id1_0_0_, author0_.name as name2_0_0_, author0_.salary as salary3_0_0_ from Author author0_ where author0_.id=? for update
DEBUG 2022-09-08 18:41:51,084 [main][QuerySpacesImpl.java:174] : Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@252239bf]
DEBUG 2022-09-08 18:41:51,084 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : name
DEBUG 2022-09-08 18:41:51,084 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : salary
DEBUG 2022-09-08 18:41:51,084 [main][FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150] : Building LoadPlan...
DEBUG 2022-09-08 18:41:51,084 [main][LoadQueryJoinAndFetchProcessor.java:100] : processing queryspace <gen:0>
DEBUG 2022-09-08 18:41:51,084 [main][LoadPlanTreePrinter.java:55] : LoadPlan(entity=org.example.models.Author)
    - Returns
       - EntityReturnImpl(entity=org.example.models.Author, querySpaceUid=<gen:0>, path=org.example.models.Author)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=org.example.models.Author)
          - SQL table alias mapping - author0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

DEBUG 2022-09-08 18:41:51,085 [main][EntityLoader.java:115] : Static select for entity org.example.models.Author [UPGRADE_SKIPLOCKED]: select author0_.id as id1_0_0_, author0_.name as name2_0_0_, author0_.salary as salary3_0_0_ from Author author0_ where author0_.id=? for update
DEBUG 2022-09-08 18:41:51,085 [main][QuerySpacesImpl.java:174] : Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5ce74765]
DEBUG 2022-09-08 18:41:51,085 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : name
DEBUG 2022-09-08 18:41:51,085 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : salary
DEBUG 2022-09-08 18:41:51,087 [main][FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150] : Building LoadPlan...
DEBUG 2022-09-08 18:41:51,087 [main][LoadQueryJoinAndFetchProcessor.java:100] : processing queryspace <gen:0>
DEBUG 2022-09-08 18:41:51,087 [main][LoadPlanTreePrinter.java:55] : LoadPlan(entity=org.example.models.Author)
    - Returns
       - EntityReturnImpl(entity=org.example.models.Author, querySpaceUid=<gen:0>, path=org.example.models.Author)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=org.example.models.Author)
          - SQL table alias mapping - author0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

DEBUG 2022-09-08 18:41:51,087 [main][EntityLoader.java:115] : Static select for entity org.example.models.Author [FORCE]: select author0_.id as id1_0_0_, author0_.name as name2_0_0_, author0_.salary as salary3_0_0_ from Author author0_ where author0_.id=? for update
DEBUG 2022-09-08 18:41:51,088 [main][QuerySpacesImpl.java:174] : Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@20785f34]
DEBUG 2022-09-08 18:41:51,088 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : name
DEBUG 2022-09-08 18:41:51,088 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : salary
DEBUG 2022-09-08 18:41:51,088 [main][FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150] : Building LoadPlan...
DEBUG 2022-09-08 18:41:51,088 [main][LoadQueryJoinAndFetchProcessor.java:100] : processing queryspace <gen:0>
DEBUG 2022-09-08 18:41:51,088 [main][LoadPlanTreePrinter.java:55] : LoadPlan(entity=org.example.models.Author)
    - Returns
       - EntityReturnImpl(entity=org.example.models.Author, querySpaceUid=<gen:0>, path=org.example.models.Author)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=org.example.models.Author)
          - SQL table alias mapping - author0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

DEBUG 2022-09-08 18:41:51,089 [main][EntityLoader.java:115] : Static select for entity org.example.models.Author [PESSIMISTIC_READ]: select author0_.id as id1_0_0_, author0_.name as name2_0_0_, author0_.salary as salary3_0_0_ from Author author0_ where author0_.id=? lock in share mode
DEBUG 2022-09-08 18:41:51,089 [main][QuerySpacesImpl.java:174] : Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@aa239e9f]
DEBUG 2022-09-08 18:41:51,089 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : name
DEBUG 2022-09-08 18:41:51,089 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : salary
DEBUG 2022-09-08 18:41:51,089 [main][FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150] : Building LoadPlan...
DEBUG 2022-09-08 18:41:51,089 [main][LoadQueryJoinAndFetchProcessor.java:100] : processing queryspace <gen:0>
DEBUG 2022-09-08 18:41:51,090 [main][LoadPlanTreePrinter.java:55] : LoadPlan(entity=org.example.models.Author)
    - Returns
       - EntityReturnImpl(entity=org.example.models.Author, querySpaceUid=<gen:0>, path=org.example.models.Author)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=org.example.models.Author)
          - SQL table alias mapping - author0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

DEBUG 2022-09-08 18:41:51,090 [main][EntityLoader.java:115] : Static select for entity org.example.models.Author [PESSIMISTIC_WRITE]: select author0_.id as id1_0_0_, author0_.name as name2_0_0_, author0_.salary as salary3_0_0_ from Author author0_ where author0_.id=? for update
DEBUG 2022-09-08 18:41:51,090 [main][QuerySpacesImpl.java:174] : Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@c710e3b1]
DEBUG 2022-09-08 18:41:51,090 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : name
DEBUG 2022-09-08 18:41:51,090 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : salary
DEBUG 2022-09-08 18:41:51,091 [main][FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150] : Building LoadPlan...
DEBUG 2022-09-08 18:41:51,091 [main][LoadQueryJoinAndFetchProcessor.java:100] : processing queryspace <gen:0>
DEBUG 2022-09-08 18:41:51,091 [main][LoadPlanTreePrinter.java:55] : LoadPlan(entity=org.example.models.Author)
    - Returns
       - EntityReturnImpl(entity=org.example.models.Author, querySpaceUid=<gen:0>, path=org.example.models.Author)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=org.example.models.Author)
          - SQL table alias mapping - author0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

DEBUG 2022-09-08 18:41:51,091 [main][EntityLoader.java:115] : Static select for entity org.example.models.Author [PESSIMISTIC_FORCE_INCREMENT]: select author0_.id as id1_0_0_, author0_.name as name2_0_0_, author0_.salary as salary3_0_0_ from Author author0_ where author0_.id=? for update
DEBUG 2022-09-08 18:41:51,091 [main][QuerySpacesImpl.java:174] : Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@50b261b0]
DEBUG 2022-09-08 18:41:51,092 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : name
DEBUG 2022-09-08 18:41:51,092 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : salary
DEBUG 2022-09-08 18:41:51,092 [main][FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150] : Building LoadPlan...
DEBUG 2022-09-08 18:41:51,092 [main][LoadQueryJoinAndFetchProcessor.java:100] : processing queryspace <gen:0>
DEBUG 2022-09-08 18:41:51,092 [main][LoadPlanTreePrinter.java:55] : LoadPlan(entity=org.example.models.Author)
    - Returns
       - EntityReturnImpl(entity=org.example.models.Author, querySpaceUid=<gen:0>, path=org.example.models.Author)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=org.example.models.Author)
          - SQL table alias mapping - author0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

DEBUG 2022-09-08 18:41:51,093 [main][EntityLoader.java:115] : Static select for entity org.example.models.Author [OPTIMISTIC]: select author0_.id as id1_0_0_, author0_.name as name2_0_0_, author0_.salary as salary3_0_0_ from Author author0_ where author0_.id=?
DEBUG 2022-09-08 18:41:51,093 [main][QuerySpacesImpl.java:174] : Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1888bd20]
DEBUG 2022-09-08 18:41:51,093 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : name
DEBUG 2022-09-08 18:41:51,093 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : salary
DEBUG 2022-09-08 18:41:51,093 [main][FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150] : Building LoadPlan...
DEBUG 2022-09-08 18:41:51,093 [main][LoadQueryJoinAndFetchProcessor.java:100] : processing queryspace <gen:0>
DEBUG 2022-09-08 18:41:51,094 [main][LoadPlanTreePrinter.java:55] : LoadPlan(entity=org.example.models.Author)
    - Returns
       - EntityReturnImpl(entity=org.example.models.Author, querySpaceUid=<gen:0>, path=org.example.models.Author)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=org.example.models.Author)
          - SQL table alias mapping - author0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

DEBUG 2022-09-08 18:41:51,094 [main][EntityLoader.java:115] : Static select for entity org.example.models.Author [OPTIMISTIC_FORCE_INCREMENT]: select author0_.id as id1_0_0_, author0_.name as name2_0_0_, author0_.salary as salary3_0_0_ from Author author0_ where author0_.id=?
DEBUG 2022-09-08 18:41:51,094 [main][CascadeEntityLoader.java:38] : Static select for action ACTION_MERGE on entity org.example.models.Author: select author0_.id as id1_0_0_, author0_.name as name2_0_0_, author0_.salary as salary3_0_0_ from Author author0_ where author0_.id=?
DEBUG 2022-09-08 18:41:51,095 [main][CascadeEntityLoader.java:38] : Static select for action ACTION_REFRESH on entity org.example.models.Author: select author0_.id as id1_0_0_, author0_.name as name2_0_0_, author0_.salary as salary3_0_0_ from Author author0_ where author0_.id=?
DEBUG 2022-09-08 18:41:51,109 [main][SqlStatementLogger.java:92] : drop table if exists Author
INFO  2022-09-08 18:41:51,110 [main][DdlTransactionIsolatorNonJtaImpl.java:48] : HHH10001501: Connection obtained from JdbcConnectionAccess [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess@9559040c] for (non-JTA) DDL execution was not in auto-commit mode; the Connection 'local transaction' will be committed and the Connection will be set into auto-commit mode.
DEBUG 2022-09-08 18:41:51,117 [main][SqlStatementLogger.java:92] : drop table if exists Book
DEBUG 2022-09-08 18:41:51,121 [main][SqlStatementLogger.java:92] : drop table if exists hibernate_sequence
DEBUG 2022-09-08 18:41:51,126 [main][SqlStatementLogger.java:92] : create table Author (id bigint not null auto_increment, name varchar(255), salary integer, primary key (id))
INFO  2022-09-08 18:41:51,127 [main][DdlTransactionIsolatorNonJtaImpl.java:48] : HHH10001501: Connection obtained from JdbcConnectionAccess [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess@f388fab1] for (non-JTA) DDL execution was not in auto-commit mode; the Connection 'local transaction' will be committed and the Connection will be set into auto-commit mode.
DEBUG 2022-09-08 18:41:51,134 [main][SqlStatementLogger.java:92] : create table Book (id bigint not null, author_id bigint not null, name varchar(255), primary key (id))
DEBUG 2022-09-08 18:41:51,139 [main][SqlStatementLogger.java:92] : create table hibernate_sequence (next_val bigint)
DEBUG 2022-09-08 18:41:51,142 [main][SqlStatementLogger.java:92] : insert into hibernate_sequence values ( 1 )
INFO  2022-09-08 18:41:51,143 [main][SchemaCreatorImpl.java:485] : HHH000476: Executing import script 'org.hibernate.tool.schema.internal.exec.ScriptSourceInputNonExistentImpl@8298cd95'
DEBUG 2022-09-08 18:41:51,145 [main][JtaPlatformInitiator.java:42] : No JtaPlatform was specified, checking resolver
DEBUG 2022-09-08 18:41:51,145 [main][JtaPlatformResolverInitiator.java:33] : No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
DEBUG 2022-09-08 18:41:51,146 [main][StandardJtaPlatformResolver.java:101] : Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
DEBUG 2022-09-08 18:41:51,147 [main][NamedQueryRepository.java:151] : Checking 0 named HQL queries
DEBUG 2022-09-08 18:41:51,147 [main][NamedQueryRepository.java:167] : Checking 0 named SQL queries
DEBUG 2022-09-08 18:41:51,148 [main][SessionFactoryRegistry.java:52] : Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@a2ccd7e7
DEBUG 2022-09-08 18:41:51,150 [main][SessionFactoryRegistry.java:74] : Registering SessionFactory: c32744a8-aa4c-43c9-b83c-cc2f3712725c (<unnamed>)
DEBUG 2022-09-08 18:41:51,150 [main][SessionFactoryRegistry.java:81] : Not binding SessionFactory to JNDI, no JNDI name configured
DEBUG 2022-09-08 18:41:51,171 [main][StatisticsInitiator.java:82] : Statistics initialized [enabled=false]
DEBUG 2022-09-08 18:41:51,174 [main][TransactionImpl.java:55] : begin
DEBUG 2022-09-08 18:41:51,178 [main][ActionQueue.java:272] : Executing identity-insert immediately
DEBUG 2022-09-08 18:41:51,180 [main][SqlStatementLogger.java:92] : insert into Author (name, salary) values (?, ?)
DEBUG 2022-09-08 18:41:51,186 [main][IdentifierGeneratorHelper.java:78] : Natively generated identity: 1
DEBUG 2022-09-08 18:41:51,187 [main][ResourceRegistryStandardImpl.java:104] : HHH000387: ResultSet's statement was not registered
DEBUG 2022-09-08 18:41:51,187 [main][TransactionImpl.java:66] : committing
DEBUG 2022-09-08 18:41:51,188 [main][AbstractFlushingEventListener.java:132] : Processing flush-time cascades
DEBUG 2022-09-08 18:41:51,188 [main][AbstractFlushingEventListener.java:174] : Dirty checking collections
DEBUG 2022-09-08 18:41:51,189 [main][AbstractFlushingEventListener.java:106] : Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
DEBUG 2022-09-08 18:41:51,189 [main][AbstractFlushingEventListener.java:113] : Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
DEBUG 2022-09-08 18:41:51,189 [main][EntityPrinter.java:102] : Listing entities:
DEBUG 2022-09-08 18:41:51,189 [main][EntityPrinter.java:109] : org.example.models.Author{name=David Baldacci, id=1, salary=3682}
DEBUG 2022-09-08 18:41:51,190 [main][LogicalConnectionManagedImpl.java:154] : Initiating JDBC connection release from afterTransaction
DEBUG 2022-09-08 18:41:51,191 [main][LogicalConnectionManagedImpl.java:154] : Initiating JDBC connection release from afterTransaction
DEBUG 2022-09-08 18:41:51,204 [main][TransactionImpl.java:55] : begin
DEBUG 2022-09-08 18:41:51,205 [main][ActionQueue.java:272] : Executing identity-insert immediately
DEBUG 2022-09-08 18:41:51,205 [main][SqlStatementLogger.java:92] : insert into Author (name, salary) values (?, ?)
DEBUG 2022-09-08 18:41:51,206 [main][IdentifierGeneratorHelper.java:78] : Natively generated identity: 2
DEBUG 2022-09-08 18:41:51,206 [main][ResourceRegistryStandardImpl.java:104] : HHH000387: ResultSet's statement was not registered
DEBUG 2022-09-08 18:41:51,206 [main][TransactionImpl.java:66] : committing
DEBUG 2022-09-08 18:41:51,206 [main][AbstractFlushingEventListener.java:132] : Processing flush-time cascades
DEBUG 2022-09-08 18:41:51,206 [main][AbstractFlushingEventListener.java:174] : Dirty checking collections
DEBUG 2022-09-08 18:41:51,206 [main][AbstractFlushingEventListener.java:106] : Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
DEBUG 2022-09-08 18:41:51,206 [main][AbstractFlushingEventListener.java:113] : Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
DEBUG 2022-09-08 18:41:51,207 [main][EntityPrinter.java:102] : Listing entities:
DEBUG 2022-09-08 18:41:51,207 [main][EntityPrinter.java:109] : org.example.models.Author{name=Colleen Hoover, id=2, salary=3664}
DEBUG 2022-09-08 18:41:51,207 [main][LogicalConnectionManagedImpl.java:154] : Initiating JDBC connection release from afterTransaction
DEBUG 2022-09-08 18:41:51,208 [main][LogicalConnectionManagedImpl.java:154] : Initiating JDBC connection release from afterTransaction
DEBUG 2022-09-08 18:41:51,208 [main][TransactionImpl.java:55] : begin
DEBUG 2022-09-08 18:41:51,209 [main][ActionQueue.java:272] : Executing identity-insert immediately
DEBUG 2022-09-08 18:41:51,209 [main][SqlStatementLogger.java:92] : insert into Author (name, salary) values (?, ?)
DEBUG 2022-09-08 18:41:51,209 [main][IdentifierGeneratorHelper.java:78] : Natively generated identity: 3
DEBUG 2022-09-08 18:41:51,209 [main][ResourceRegistryStandardImpl.java:104] : HHH000387: ResultSet's statement was not registered
DEBUG 2022-09-08 18:41:51,210 [main][TransactionImpl.java:66] : committing
DEBUG 2022-09-08 18:41:51,210 [main][AbstractFlushingEventListener.java:132] : Processing flush-time cascades
DEBUG 2022-09-08 18:41:51,210 [main][AbstractFlushingEventListener.java:174] : Dirty checking collections
DEBUG 2022-09-08 18:41:51,210 [main][AbstractFlushingEventListener.java:106] : Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
DEBUG 2022-09-08 18:41:51,210 [main][AbstractFlushingEventListener.java:113] : Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
DEBUG 2022-09-08 18:41:51,210 [main][EntityPrinter.java:102] : Listing entities:
DEBUG 2022-09-08 18:41:51,211 [main][EntityPrinter.java:109] : org.example.models.Author{name=Stuart Woods, id=3, salary=4978}
DEBUG 2022-09-08 18:41:51,212 [main][LogicalConnectionManagedImpl.java:154] : Initiating JDBC connection release from afterTransaction
DEBUG 2022-09-08 18:41:51,212 [main][LogicalConnectionManagedImpl.java:154] : Initiating JDBC connection release from afterTransaction
DEBUG 2022-09-08 18:41:51,213 [main][TransactionImpl.java:55] : begin
DEBUG 2022-09-08 18:41:51,213 [main][ActionQueue.java:272] : Executing identity-insert immediately
DEBUG 2022-09-08 18:41:51,213 [main][SqlStatementLogger.java:92] : insert into Author (name, salary) values (?, ?)
DEBUG 2022-09-08 18:41:51,214 [main][IdentifierGeneratorHelper.java:78] : Natively generated identity: 4
DEBUG 2022-09-08 18:41:51,214 [main][ResourceRegistryStandardImpl.java:104] : HHH000387: ResultSet's statement was not registered
DEBUG 2022-09-08 18:41:51,214 [main][TransactionImpl.java:66] : committing
DEBUG 2022-09-08 18:41:51,215 [main][AbstractFlushingEventListener.java:132] : Processing flush-time cascades
DEBUG 2022-09-08 18:41:51,215 [main][AbstractFlushingEventListener.java:174] : Dirty checking collections
DEBUG 2022-09-08 18:41:51,215 [main][AbstractFlushingEventListener.java:106] : Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
DEBUG 2022-09-08 18:41:51,215 [main][AbstractFlushingEventListener.java:113] : Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
DEBUG 2022-09-08 18:41:51,215 [main][EntityPrinter.java:102] : Listing entities:
DEBUG 2022-09-08 18:41:51,215 [main][EntityPrinter.java:109] : org.example.models.Author{name=Nora Roberts, id=4, salary=3366}
DEBUG 2022-09-08 18:41:51,216 [main][LogicalConnectionManagedImpl.java:154] : Initiating JDBC connection release from afterTransaction
DEBUG 2022-09-08 18:41:51,216 [main][LogicalConnectionManagedImpl.java:154] : Initiating JDBC connection release from afterTransaction
DEBUG 2022-09-08 18:41:51,216 [main][TransactionImpl.java:55] : begin
DEBUG 2022-09-08 18:41:51,217 [main][ActionQueue.java:272] : Executing identity-insert immediately
DEBUG 2022-09-08 18:41:51,217 [main][SqlStatementLogger.java:92] : insert into Author (name, salary) values (?, ?)
DEBUG 2022-09-08 18:41:51,218 [main][IdentifierGeneratorHelper.java:78] : Natively generated identity: 5
DEBUG 2022-09-08 18:41:51,218 [main][ResourceRegistryStandardImpl.java:104] : HHH000387: ResultSet's statement was not registered
DEBUG 2022-09-08 18:41:51,218 [main][TransactionImpl.java:66] : committing
DEBUG 2022-09-08 18:41:51,218 [main][AbstractFlushingEventListener.java:132] : Processing flush-time cascades
DEBUG 2022-09-08 18:41:51,218 [main][AbstractFlushingEventListener.java:174] : Dirty checking collections
DEBUG 2022-09-08 18:41:51,218 [main][AbstractFlushingEventListener.java:106] : Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
DEBUG 2022-09-08 18:41:51,219 [main][AbstractFlushingEventListener.java:113] : Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
DEBUG 2022-09-08 18:41:51,219 [main][EntityPrinter.java:102] : Listing entities:
DEBUG 2022-09-08 18:41:51,219 [main][EntityPrinter.java:109] : org.example.models.Author{name=Michael Connelly, id=5, salary=1144}
DEBUG 2022-09-08 18:41:51,219 [main][LogicalConnectionManagedImpl.java:154] : Initiating JDBC connection release from afterTransaction
DEBUG 2022-09-08 18:41:51,222 [main][LogicalConnectionManagedImpl.java:154] : Initiating JDBC connection release from afterTransaction
DEBUG 2022-09-08 18:41:51,236 [main][CriteriaQueryImpl.java:307] : Rendered criteria query -> select generatedAlias0 from Author as generatedAlias0
DEBUG 2022-09-08 18:41:51,241 [main][QueryTranslatorFactoryInitiator.java:45] : QueryTranslatorFactory : org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory@f2c8ca88
INFO  2022-09-08 18:41:51,241 [main][QueryTranslatorFactoryInitiator.java:47] : HHH000397: Using ASTQueryTranslatorFactory
DEBUG 2022-09-08 18:41:51,258 [main][QueryTranslatorImpl.java:278] : parse() - HQL: select generatedAlias0 from org.example.models.Author as generatedAlias0
DEBUG 2022-09-08 18:41:51,261 [main][QueryTranslatorImpl.java:296] : --- HQL AST ---
 \-[QUERY] Node: 'query'
    \-[SELECT_FROM] Node: 'SELECT_FROM'
       +-[FROM] Node: 'from'
       |  \-[RANGE] Node: 'RANGE'
       |     +-[DOT] Node: '.'
       |     |  +-[DOT] Node: '.'
       |     |  |  +-[DOT] Node: '.'
       |     |  |  |  +-[IDENT] Node: 'org'
       |     |  |  |  \-[IDENT] Node: 'example'
       |     |  |  \-[IDENT] Node: 'models'
       |     |  \-[IDENT] Node: 'Author'
       |     \-[ALIAS] Node: 'generatedAlias0'
       \-[SELECT] Node: 'select'
          \-[IDENT] Node: 'generatedAlias0'

DEBUG 2022-09-08 18:41:51,262 [main][ErrorCounter.java:95] : throwQueryException() : no errors
DEBUG 2022-09-08 18:41:51,270 [main][HqlSqlBaseWalker.java:124] : select << begin [level=1, statement=select]
DEBUG 2022-09-08 18:41:51,274 [main][FromElement.java:148] : FromClause{level=1} : org.example.models.Author (generatedAlias0) -> author0_
DEBUG 2022-09-08 18:41:51,276 [main][FromReferenceNode.java:60] : Resolved : generatedAlias0 -> author0_.id
DEBUG 2022-09-08 18:41:51,276 [main][HqlSqlBaseWalker.java:128] : select : finishing up [level=1, statement=select]
DEBUG 2022-09-08 18:41:51,277 [main][HqlSqlWalker.java:725] : processQuery() :  ( SELECT ( {select clause} author0_.id ) ( FromClause{level=1} Author author0_ ) )
DEBUG 2022-09-08 18:41:51,279 [main][JoinProcessor.java:169] : Using FROM fragment [Author author0_]
DEBUG 2022-09-08 18:41:51,279 [main][HqlSqlBaseWalker.java:132] : select >> end [level=1, statement=select]
DEBUG 2022-09-08 18:41:51,279 [main][QueryTranslatorImpl.java:265] : --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (Author)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'author0_.id as id1_0_' {alias=generatedAlias0, className=org.example.models.Author, tableAlias=author0_}
    |  \-[SQL_TOKEN] SqlFragment: 'author0_.name as name2_0_, author0_.salary as salary3_0_'
    \-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[author0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'Author author0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=Author,tableAlias=author0_,origin=null,columns={,className=org.example.models.Author}}

DEBUG 2022-09-08 18:41:51,279 [main][ErrorCounter.java:95] : throwQueryException() : no errors
DEBUG 2022-09-08 18:41:51,282 [main][QueryTranslatorImpl.java:247] : HQL: select generatedAlias0 from org.example.models.Author as generatedAlias0
DEBUG 2022-09-08 18:41:51,282 [main][QueryTranslatorImpl.java:248] : SQL: select author0_.id as id1_0_, author0_.name as name2_0_, author0_.salary as salary3_0_ from Author author0_
DEBUG 2022-09-08 18:41:51,282 [main][ErrorCounter.java:95] : throwQueryException() : no errors
DEBUG 2022-09-08 18:41:51,289 [main][SqlStatementLogger.java:92] : select author0_.id as id1_0_, author0_.name as name2_0_, author0_.salary as salary3_0_ from Author author0_
DEBUG 2022-09-08 18:41:51,292 [main][DelegatingBasicLogger.java:384] : Result set row: 0
DEBUG 2022-09-08 18:41:51,293 [main][Loader.java:1527] : Result row: EntityKey[org.example.models.Author#1]
DEBUG 2022-09-08 18:41:51,294 [main][DelegatingBasicLogger.java:384] : Result set row: 1
DEBUG 2022-09-08 18:41:51,295 [main][Loader.java:1527] : Result row: EntityKey[org.example.models.Author#2]
DEBUG 2022-09-08 18:41:51,295 [main][DelegatingBasicLogger.java:384] : Result set row: 2
DEBUG 2022-09-08 18:41:51,295 [main][Loader.java:1527] : Result row: EntityKey[org.example.models.Author#3]
DEBUG 2022-09-08 18:41:51,295 [main][DelegatingBasicLogger.java:384] : Result set row: 3
DEBUG 2022-09-08 18:41:51,295 [main][Loader.java:1527] : Result row: EntityKey[org.example.models.Author#4]
DEBUG 2022-09-08 18:41:51,295 [main][DelegatingBasicLogger.java:384] : Result set row: 4
DEBUG 2022-09-08 18:41:51,296 [main][Loader.java:1527] : Result row: EntityKey[org.example.models.Author#5]
DEBUG 2022-09-08 18:41:51,296 [main][TwoPhaseLoad.java:141] : Resolving associations for [org.example.models.Author#1]
DEBUG 2022-09-08 18:41:51,296 [main][TwoPhaseLoad.java:267] : Done materializing entity [org.example.models.Author#1]
DEBUG 2022-09-08 18:41:51,296 [main][TwoPhaseLoad.java:141] : Resolving associations for [org.example.models.Author#2]
DEBUG 2022-09-08 18:41:51,297 [main][TwoPhaseLoad.java:267] : Done materializing entity [org.example.models.Author#2]
DEBUG 2022-09-08 18:41:51,297 [main][TwoPhaseLoad.java:141] : Resolving associations for [org.example.models.Author#3]
DEBUG 2022-09-08 18:41:51,297 [main][TwoPhaseLoad.java:267] : Done materializing entity [org.example.models.Author#3]
DEBUG 2022-09-08 18:41:51,297 [main][TwoPhaseLoad.java:141] : Resolving associations for [org.example.models.Author#4]
DEBUG 2022-09-08 18:41:51,297 [main][TwoPhaseLoad.java:267] : Done materializing entity [org.example.models.Author#4]
DEBUG 2022-09-08 18:41:51,297 [main][TwoPhaseLoad.java:141] : Resolving associations for [org.example.models.Author#5]
DEBUG 2022-09-08 18:41:51,297 [main][TwoPhaseLoad.java:267] : Done materializing entity [org.example.models.Author#5]
DEBUG 2022-09-08 18:41:51,298 [main][LogicalConnectionManagedImpl.java:154] : Initiating JDBC connection release from afterTransaction
DEBUG 2022-09-08 18:41:51,307 [main][SqlStatementLogger.java:92] : SELECT * FROM Author
DEBUG 2022-09-08 18:41:51,308 [main][DelegatingBasicLogger.java:384] : Result set row: 0
DEBUG 2022-09-08 18:41:51,308 [main][Loader.java:1527] : Result row: EntityKey[org.example.models.Author#1]
DEBUG 2022-09-08 18:41:51,308 [main][DelegatingBasicLogger.java:384] : Result set row: 1
DEBUG 2022-09-08 18:41:51,309 [main][Loader.java:1527] : Result row: EntityKey[org.example.models.Author#2]
DEBUG 2022-09-08 18:41:51,310 [main][DelegatingBasicLogger.java:384] : Result set row: 2
DEBUG 2022-09-08 18:41:51,310 [main][Loader.java:1527] : Result row: EntityKey[org.example.models.Author#3]
DEBUG 2022-09-08 18:41:51,310 [main][DelegatingBasicLogger.java:384] : Result set row: 3
DEBUG 2022-09-08 18:41:51,310 [main][Loader.java:1527] : Result row: EntityKey[org.example.models.Author#4]
DEBUG 2022-09-08 18:41:51,311 [main][DelegatingBasicLogger.java:384] : Result set row: 4
DEBUG 2022-09-08 18:41:51,311 [main][Loader.java:1527] : Result row: EntityKey[org.example.models.Author#5]
DEBUG 2022-09-08 18:41:51,311 [main][TwoPhaseLoad.java:141] : Resolving associations for [org.example.models.Author#1]
DEBUG 2022-09-08 18:41:51,311 [main][TwoPhaseLoad.java:267] : Done materializing entity [org.example.models.Author#1]
DEBUG 2022-09-08 18:41:51,311 [main][TwoPhaseLoad.java:141] : Resolving associations for [org.example.models.Author#2]
DEBUG 2022-09-08 18:41:51,311 [main][TwoPhaseLoad.java:267] : Done materializing entity [org.example.models.Author#2]
DEBUG 2022-09-08 18:41:51,311 [main][TwoPhaseLoad.java:141] : Resolving associations for [org.example.models.Author#3]
DEBUG 2022-09-08 18:41:51,311 [main][TwoPhaseLoad.java:267] : Done materializing entity [org.example.models.Author#3]
DEBUG 2022-09-08 18:41:51,311 [main][TwoPhaseLoad.java:141] : Resolving associations for [org.example.models.Author#4]
DEBUG 2022-09-08 18:41:51,311 [main][TwoPhaseLoad.java:267] : Done materializing entity [org.example.models.Author#4]
DEBUG 2022-09-08 18:41:51,312 [main][TwoPhaseLoad.java:141] : Resolving associations for [org.example.models.Author#5]
DEBUG 2022-09-08 18:41:51,312 [main][TwoPhaseLoad.java:267] : Done materializing entity [org.example.models.Author#5]
DEBUG 2022-09-08 18:41:51,312 [main][LogicalConnectionManagedImpl.java:154] : Initiating JDBC connection release from afterTransaction
DEBUG 2022-09-08 18:41:51,314 [main][SqlStatementLogger.java:92] : select author0_.id as id1_0_0_, author0_.name as name2_0_0_, author0_.salary as salary3_0_0_ from Author author0_ where author0_.id=?
DEBUG 2022-09-08 18:41:51,317 [main][ResultSetProcessorImpl.java:120] : Starting ResultSet row #0
DEBUG 2022-09-08 18:41:51,318 [main][EntityReferenceInitializerImpl.java:126] : On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
DEBUG 2022-09-08 18:41:51,318 [main][TwoPhaseLoad.java:141] : Resolving associations for [org.example.models.Author#2]
DEBUG 2022-09-08 18:41:51,318 [main][TwoPhaseLoad.java:267] : Done materializing entity [org.example.models.Author#2]
DEBUG 2022-09-08 18:41:51,318 [main][ResourceRegistryStandardImpl.java:73] : HHH000387: ResultSet's statement was not registered
DEBUG 2022-09-08 18:41:51,318 [main][AbstractLoadPlanBasedEntityLoader.java:189] : Done entity load : org.example.models.Author#2
DEBUG 2022-09-08 18:41:51,319 [main][LogicalConnectionManagedImpl.java:154] : Initiating JDBC connection release from afterTransaction
DEBUG 2022-09-08 18:41:51,320 [main][QueryTranslatorImpl.java:278] : parse() - HQL: select a from org.example.models.Author a where a.salary between :minSalary and :maxSalary
DEBUG 2022-09-08 18:41:51,321 [main][QueryTranslatorImpl.java:296] : --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[IDENT] Node: 'org'
    |  |     |  |  |  \-[IDENT] Node: 'example'
    |  |     |  |  \-[IDENT] Node: 'models'
    |  |     |  \-[IDENT] Node: 'Author'
    |  |     \-[ALIAS] Node: 'a'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'a'
    \-[WHERE] Node: 'where'
       \-[BETWEEN] Node: 'between'
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'a'
          |  \-[IDENT] Node: 'salary'
          +-[COLON] Node: ':'
          |  \-[IDENT] Node: 'minSalary'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'maxSalary'

DEBUG 2022-09-08 18:41:51,322 [main][ErrorCounter.java:95] : throwQueryException() : no errors
DEBUG 2022-09-08 18:41:51,322 [main][HqlSqlBaseWalker.java:124] : select << begin [level=1, statement=select]
DEBUG 2022-09-08 18:41:51,322 [main][FromElement.java:148] : FromClause{level=1} : org.example.models.Author (a) -> author0_
DEBUG 2022-09-08 18:41:51,322 [main][FromReferenceNode.java:60] : Resolved : a -> author0_.id
DEBUG 2022-09-08 18:41:51,323 [main][FromReferenceNode.java:60] : Resolved : a -> author0_.id
DEBUG 2022-09-08 18:41:51,323 [main][DotNode.java:661] : getDataType() : salary -> org.hibernate.type.IntegerType@5af6cc21
DEBUG 2022-09-08 18:41:51,324 [main][FromReferenceNode.java:60] : Resolved : a.salary -> author0_.salary
DEBUG 2022-09-08 18:41:51,324 [main][HqlSqlBaseWalker.java:128] : select : finishing up [level=1, statement=select]
DEBUG 2022-09-08 18:41:51,324 [main][HqlSqlWalker.java:725] : processQuery() :  ( SELECT ( {select clause} author0_.id ) ( FromClause{level=1} Author author0_ ) ( where ( between ( author0_.salary author0_.id salary ) ? ? ) ) )
DEBUG 2022-09-08 18:41:51,324 [main][JoinProcessor.java:169] : Using FROM fragment [Author author0_]
DEBUG 2022-09-08 18:41:51,324 [main][HqlSqlBaseWalker.java:132] : select >> end [level=1, statement=select]
DEBUG 2022-09-08 18:41:51,325 [main][QueryTranslatorImpl.java:265] : --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (Author)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'author0_.id as id1_0_' {alias=a, className=org.example.models.Author, tableAlias=author0_}
    |  \-[SQL_TOKEN] SqlFragment: 'author0_.name as name2_0_, author0_.salary as salary3_0_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[a], fromElementByTableAlias=[author0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'Author author0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=a,role=null,tableName=Author,tableAlias=author0_,origin=null,columns={,className=org.example.models.Author}}
    \-[WHERE] SqlNode: 'where'
       \-[BETWEEN] BetweenOperatorNode: 'between'
          +-[DOT] DotNode: 'author0_.salary' {propertyName=salary,dereferenceType=PRIMITIVE,getPropertyPath=salary,path=a.salary,tableAlias=author0_,className=org.example.models.Author,classAlias=a}
          |  +-[ALIAS_REF] IdentNode: 'author0_.id' {alias=a, className=org.example.models.Author, tableAlias=author0_}
          |  \-[IDENT] IdentNode: 'salary' {originalText=salary}
          +-[NAMED_PARAM] ParameterNode: '?' {name=minSalary, expectedType=org.hibernate.type.IntegerType@5af6cc21}
          \-[NAMED_PARAM] ParameterNode: '?' {name=maxSalary, expectedType=org.hibernate.type.IntegerType@5af6cc21}

DEBUG 2022-09-08 18:41:51,325 [main][ErrorCounter.java:95] : throwQueryException() : no errors
DEBUG 2022-09-08 18:41:51,325 [main][QueryTranslatorImpl.java:247] : HQL: select a from org.example.models.Author a where a.salary between :minSalary and :maxSalary
DEBUG 2022-09-08 18:41:51,325 [main][QueryTranslatorImpl.java:248] : SQL: select author0_.id as id1_0_, author0_.name as name2_0_, author0_.salary as salary3_0_ from Author author0_ where author0_.salary between ? and ?
DEBUG 2022-09-08 18:41:51,325 [main][ErrorCounter.java:95] : throwQueryException() : no errors
DEBUG 2022-09-08 18:41:51,327 [main][SqlStatementLogger.java:92] : select author0_.id as id1_0_, author0_.name as name2_0_, author0_.salary as salary3_0_ from Author author0_ where author0_.salary between ? and ?
DEBUG 2022-09-08 18:41:51,329 [main][DelegatingBasicLogger.java:384] : Result set row: 0
DEBUG 2022-09-08 18:41:51,329 [main][Loader.java:1527] : Result row: EntityKey[org.example.models.Author#1]
DEBUG 2022-09-08 18:41:51,330 [main][DelegatingBasicLogger.java:384] : Result set row: 1
DEBUG 2022-09-08 18:41:51,330 [main][Loader.java:1527] : Result row: EntityKey[org.example.models.Author#2]
DEBUG 2022-09-08 18:41:51,330 [main][DelegatingBasicLogger.java:384] : Result set row: 2
DEBUG 2022-09-08 18:41:51,330 [main][Loader.java:1527] : Result row: EntityKey[org.example.models.Author#4]
DEBUG 2022-09-08 18:41:51,330 [main][TwoPhaseLoad.java:141] : Resolving associations for [org.example.models.Author#1]
DEBUG 2022-09-08 18:41:51,330 [main][TwoPhaseLoad.java:267] : Done materializing entity [org.example.models.Author#1]
DEBUG 2022-09-08 18:41:51,330 [main][TwoPhaseLoad.java:141] : Resolving associations for [org.example.models.Author#2]
DEBUG 2022-09-08 18:41:51,331 [main][TwoPhaseLoad.java:267] : Done materializing entity [org.example.models.Author#2]
DEBUG 2022-09-08 18:41:51,331 [main][TwoPhaseLoad.java:141] : Resolving associations for [org.example.models.Author#4]
DEBUG 2022-09-08 18:41:51,331 [main][TwoPhaseLoad.java:267] : Done materializing entity [org.example.models.Author#4]
DEBUG 2022-09-08 18:41:51,331 [main][LogicalConnectionManagedImpl.java:154] : Initiating JDBC connection release from afterTransaction
DEBUG 2022-09-08 18:41:51,332 [main][SqlStatementLogger.java:92] : select author0_.id as id1_0_0_, author0_.name as name2_0_0_, author0_.salary as salary3_0_0_ from Author author0_ where author0_.id=?
DEBUG 2022-09-08 18:41:51,333 [main][ResultSetProcessorImpl.java:120] : Starting ResultSet row #0
DEBUG 2022-09-08 18:41:51,333 [main][EntityReferenceInitializerImpl.java:126] : On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
DEBUG 2022-09-08 18:41:51,334 [main][TwoPhaseLoad.java:141] : Resolving associations for [org.example.models.Author#2]
DEBUG 2022-09-08 18:41:51,334 [main][TwoPhaseLoad.java:267] : Done materializing entity [org.example.models.Author#2]
DEBUG 2022-09-08 18:41:51,334 [main][ResourceRegistryStandardImpl.java:73] : HHH000387: ResultSet's statement was not registered
DEBUG 2022-09-08 18:41:51,334 [main][AbstractLoadPlanBasedEntityLoader.java:189] : Done entity load : org.example.models.Author#2
DEBUG 2022-09-08 18:41:51,335 [main][LogicalConnectionManagedImpl.java:154] : Initiating JDBC connection release from afterTransaction
DEBUG 2022-09-08 18:41:51,336 [main][TransactionImpl.java:55] : begin
DEBUG 2022-09-08 18:41:51,336 [main][TransactionImpl.java:66] : committing
DEBUG 2022-09-08 18:41:51,336 [main][AbstractFlushingEventListener.java:132] : Processing flush-time cascades
DEBUG 2022-09-08 18:41:51,336 [main][AbstractFlushingEventListener.java:174] : Dirty checking collections
DEBUG 2022-09-08 18:41:51,337 [main][AbstractFlushingEventListener.java:106] : Flushed: 0 insertions, 1 updates, 0 deletions to 1 objects
DEBUG 2022-09-08 18:41:51,337 [main][AbstractFlushingEventListener.java:113] : Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
DEBUG 2022-09-08 18:41:51,337 [main][EntityPrinter.java:102] : Listing entities:
DEBUG 2022-09-08 18:41:51,338 [main][EntityPrinter.java:109] : org.example.models.Author{name=Ihor Kosolapow, id=2, salary=3664}
DEBUG 2022-09-08 18:41:51,341 [main][SqlStatementLogger.java:92] : update Author set name=? where id=?
DEBUG 2022-09-08 18:41:51,344 [main][LogicalConnectionManagedImpl.java:154] : Initiating JDBC connection release from afterTransaction
DEBUG 2022-09-08 18:41:51,344 [main][LogicalConnectionManagedImpl.java:154] : Initiating JDBC connection release from afterTransaction
DEBUG 2022-09-08 18:41:51,344 [main][JdbcCoordinatorImpl.java:177] : HHH000420: Closing un-released batch
DEBUG 2022-09-08 18:41:51,345 [main][SqlStatementLogger.java:92] : select author0_.id as id1_0_0_, author0_.name as name2_0_0_, author0_.salary as salary3_0_0_ from Author author0_ where author0_.id=?
DEBUG 2022-09-08 18:41:51,346 [main][ResultSetProcessorImpl.java:120] : Starting ResultSet row #0
DEBUG 2022-09-08 18:41:51,346 [main][EntityReferenceInitializerImpl.java:126] : On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
DEBUG 2022-09-08 18:41:51,347 [main][TwoPhaseLoad.java:141] : Resolving associations for [org.example.models.Author#2]
DEBUG 2022-09-08 18:41:51,347 [main][TwoPhaseLoad.java:267] : Done materializing entity [org.example.models.Author#2]
DEBUG 2022-09-08 18:41:51,347 [main][ResourceRegistryStandardImpl.java:73] : HHH000387: ResultSet's statement was not registered
DEBUG 2022-09-08 18:41:51,347 [main][AbstractLoadPlanBasedEntityLoader.java:189] : Done entity load : org.example.models.Author#2
DEBUG 2022-09-08 18:41:51,347 [main][LogicalConnectionManagedImpl.java:154] : Initiating JDBC connection release from afterTransaction
DEBUG 2022-09-08 18:41:51,349 [main][CriteriaQueryImpl.java:307] : Rendered criteria query -> select avg(generatedAlias0.salary) from Author as generatedAlias0
DEBUG 2022-09-08 18:41:51,350 [main][QueryTranslatorImpl.java:278] : parse() - HQL: select avg(generatedAlias0.salary) from org.example.models.Author as generatedAlias0
DEBUG 2022-09-08 18:41:51,351 [main][QueryTranslatorImpl.java:296] : --- HQL AST ---
 \-[QUERY] Node: 'query'
    \-[SELECT_FROM] Node: 'SELECT_FROM'
       +-[FROM] Node: 'from'
       |  \-[RANGE] Node: 'RANGE'
       |     +-[DOT] Node: '.'
       |     |  +-[DOT] Node: '.'
       |     |  |  +-[DOT] Node: '.'
       |     |  |  |  +-[IDENT] Node: 'org'
       |     |  |  |  \-[IDENT] Node: 'example'
       |     |  |  \-[IDENT] Node: 'models'
       |     |  \-[IDENT] Node: 'Author'
       |     \-[ALIAS] Node: 'generatedAlias0'
       \-[SELECT] Node: 'select'
          \-[AGGREGATE] Node: 'avg'
             \-[DOT] Node: '.'
                +-[IDENT] Node: 'generatedAlias0'
                \-[IDENT] Node: 'salary'

DEBUG 2022-09-08 18:41:51,351 [main][ErrorCounter.java:95] : throwQueryException() : no errors
DEBUG 2022-09-08 18:41:51,351 [main][HqlSqlBaseWalker.java:124] : select << begin [level=1, statement=select]
DEBUG 2022-09-08 18:41:51,352 [main][FromElement.java:148] : FromClause{level=1} : org.example.models.Author (generatedAlias0) -> author0_
DEBUG 2022-09-08 18:41:51,353 [main][FromReferenceNode.java:60] : Resolved : generatedAlias0 -> author0_.id
DEBUG 2022-09-08 18:41:51,353 [main][DotNode.java:661] : getDataType() : salary -> org.hibernate.type.IntegerType@5af6cc21
DEBUG 2022-09-08 18:41:51,353 [main][FromReferenceNode.java:60] : Resolved : generatedAlias0.salary -> author0_.salary
DEBUG 2022-09-08 18:41:51,353 [main][HqlSqlBaseWalker.java:128] : select : finishing up [level=1, statement=select]
DEBUG 2022-09-08 18:41:51,354 [main][HqlSqlWalker.java:725] : processQuery() :  ( SELECT ( {select clause} ( avg ( author0_.salary author0_.id salary ) ) ) ( FromClause{level=1} Author author0_ ) )
DEBUG 2022-09-08 18:41:51,354 [main][JoinProcessor.java:169] : Using FROM fragment [Author author0_]
DEBUG 2022-09-08 18:41:51,354 [main][HqlSqlBaseWalker.java:132] : select >> end [level=1, statement=select]
DEBUG 2022-09-08 18:41:51,354 [main][QueryTranslatorImpl.java:265] : --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (Author)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[AGGREGATE] AggregateNode: 'avg'
    |  |  \-[DOT] DotNode: 'author0_.salary' {propertyName=salary,dereferenceType=PRIMITIVE,getPropertyPath=salary,path=generatedAlias0.salary,tableAlias=author0_,className=org.example.models.Author,classAlias=generatedAlias0}
    |  |     +-[ALIAS_REF] IdentNode: 'author0_.id' {alias=generatedAlias0, className=org.example.models.Author, tableAlias=author0_}
    |  |     \-[IDENT] IdentNode: 'salary' {originalText=salary}
    |  \-[SELECT_COLUMNS] SqlNode: ' as col_0_0_'
    \-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[author0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'Author author0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=Author,tableAlias=author0_,origin=null,columns={,className=org.example.models.Author}}

DEBUG 2022-09-08 18:41:51,354 [main][ErrorCounter.java:95] : throwQueryException() : no errors
DEBUG 2022-09-08 18:41:51,355 [main][QueryTranslatorImpl.java:247] : HQL: select avg(generatedAlias0.salary) from org.example.models.Author as generatedAlias0
DEBUG 2022-09-08 18:41:51,355 [main][QueryTranslatorImpl.java:248] : SQL: select avg(author0_.salary) as col_0_0_ from Author author0_
DEBUG 2022-09-08 18:41:51,355 [main][ErrorCounter.java:95] : throwQueryException() : no errors
DEBUG 2022-09-08 18:41:51,355 [main][SqlStatementLogger.java:92] : select avg(author0_.salary) as col_0_0_ from Author author0_
DEBUG 2022-09-08 18:41:51,357 [main][DelegatingBasicLogger.java:384] : Result set row: 0
DEBUG 2022-09-08 18:41:51,357 [main][Loader.java:1527] : Result row: 
DEBUG 2022-09-08 18:41:51,357 [main][LogicalConnectionManagedImpl.java:154] : Initiating JDBC connection release from afterTransaction
DEBUG 2022-09-08 18:41:51,360 [main][CriteriaQueryImpl.java:307] : Rendered criteria query -> select generatedAlias0 from Author as generatedAlias0 where generatedAlias0.salary>3000
DEBUG 2022-09-08 18:41:51,361 [main][QueryTranslatorImpl.java:278] : parse() - HQL: select generatedAlias0 from org.example.models.Author as generatedAlias0 where generatedAlias0.salary>3000
DEBUG 2022-09-08 18:41:51,362 [main][QueryTranslatorImpl.java:296] : --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[IDENT] Node: 'org'
    |  |     |  |  |  \-[IDENT] Node: 'example'
    |  |     |  |  \-[IDENT] Node: 'models'
    |  |     |  \-[IDENT] Node: 'Author'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[GT] Node: '>'
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'salary'
          \-[NUM_INT] Node: '3000'

DEBUG 2022-09-08 18:41:51,362 [main][ErrorCounter.java:95] : throwQueryException() : no errors
DEBUG 2022-09-08 18:41:51,362 [main][HqlSqlBaseWalker.java:124] : select << begin [level=1, statement=select]
DEBUG 2022-09-08 18:41:51,362 [main][FromElement.java:148] : FromClause{level=1} : org.example.models.Author (generatedAlias0) -> author0_
DEBUG 2022-09-08 18:41:51,363 [main][FromReferenceNode.java:60] : Resolved : generatedAlias0 -> author0_.id
DEBUG 2022-09-08 18:41:51,363 [main][FromReferenceNode.java:60] : Resolved : generatedAlias0 -> author0_.id
DEBUG 2022-09-08 18:41:51,363 [main][DotNode.java:661] : getDataType() : salary -> org.hibernate.type.IntegerType@5af6cc21
DEBUG 2022-09-08 18:41:51,364 [main][FromReferenceNode.java:60] : Resolved : generatedAlias0.salary -> author0_.salary
DEBUG 2022-09-08 18:41:51,364 [main][HqlSqlBaseWalker.java:128] : select : finishing up [level=1, statement=select]
DEBUG 2022-09-08 18:41:51,364 [main][HqlSqlWalker.java:725] : processQuery() :  ( SELECT ( {select clause} author0_.id ) ( FromClause{level=1} Author author0_ ) ( where ( > ( author0_.salary author0_.id salary ) 3000 ) ) )
DEBUG 2022-09-08 18:41:51,365 [main][JoinProcessor.java:169] : Using FROM fragment [Author author0_]
DEBUG 2022-09-08 18:41:51,365 [main][HqlSqlBaseWalker.java:132] : select >> end [level=1, statement=select]
DEBUG 2022-09-08 18:41:51,365 [main][QueryTranslatorImpl.java:265] : --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (Author)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'author0_.id as id1_0_' {alias=generatedAlias0, className=org.example.models.Author, tableAlias=author0_}
    |  \-[SQL_TOKEN] SqlFragment: 'author0_.name as name2_0_, author0_.salary as salary3_0_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[author0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'Author author0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=Author,tableAlias=author0_,origin=null,columns={,className=org.example.models.Author}}
    \-[WHERE] SqlNode: 'where'
       \-[GT] BinaryLogicOperatorNode: '>'
          +-[DOT] DotNode: 'author0_.salary' {propertyName=salary,dereferenceType=PRIMITIVE,getPropertyPath=salary,path=generatedAlias0.salary,tableAlias=author0_,className=org.example.models.Author,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'author0_.id' {alias=generatedAlias0, className=org.example.models.Author, tableAlias=author0_}
          |  \-[IDENT] IdentNode: 'salary' {originalText=salary}
          \-[NUM_INT] LiteralNode: '3000'

DEBUG 2022-09-08 18:41:51,365 [main][ErrorCounter.java:95] : throwQueryException() : no errors
DEBUG 2022-09-08 18:41:51,365 [main][QueryTranslatorImpl.java:247] : HQL: select generatedAlias0 from org.example.models.Author as generatedAlias0 where generatedAlias0.salary>3000
DEBUG 2022-09-08 18:41:51,365 [main][QueryTranslatorImpl.java:248] : SQL: select author0_.id as id1_0_, author0_.name as name2_0_, author0_.salary as salary3_0_ from Author author0_ where author0_.salary>3000
DEBUG 2022-09-08 18:41:51,366 [main][ErrorCounter.java:95] : throwQueryException() : no errors
DEBUG 2022-09-08 18:41:51,366 [main][SqlStatementLogger.java:92] : select author0_.id as id1_0_, author0_.name as name2_0_, author0_.salary as salary3_0_ from Author author0_ where author0_.salary>3000
DEBUG 2022-09-08 18:41:51,367 [main][DelegatingBasicLogger.java:384] : Result set row: 0
DEBUG 2022-09-08 18:41:51,367 [main][Loader.java:1527] : Result row: EntityKey[org.example.models.Author#1]
DEBUG 2022-09-08 18:41:51,367 [main][DelegatingBasicLogger.java:384] : Result set row: 1
DEBUG 2022-09-08 18:41:51,368 [main][Loader.java:1527] : Result row: EntityKey[org.example.models.Author#2]
DEBUG 2022-09-08 18:41:51,368 [main][DelegatingBasicLogger.java:384] : Result set row: 2
DEBUG 2022-09-08 18:41:51,368 [main][Loader.java:1527] : Result row: EntityKey[org.example.models.Author#3]
DEBUG 2022-09-08 18:41:51,368 [main][DelegatingBasicLogger.java:384] : Result set row: 3
DEBUG 2022-09-08 18:41:51,368 [main][Loader.java:1527] : Result row: EntityKey[org.example.models.Author#4]
DEBUG 2022-09-08 18:41:51,369 [main][TwoPhaseLoad.java:141] : Resolving associations for [org.example.models.Author#1]
DEBUG 2022-09-08 18:41:51,369 [main][TwoPhaseLoad.java:267] : Done materializing entity [org.example.models.Author#1]
DEBUG 2022-09-08 18:41:51,370 [main][TwoPhaseLoad.java:141] : Resolving associations for [org.example.models.Author#2]
DEBUG 2022-09-08 18:41:51,370 [main][TwoPhaseLoad.java:267] : Done materializing entity [org.example.models.Author#2]
DEBUG 2022-09-08 18:41:51,370 [main][TwoPhaseLoad.java:141] : Resolving associations for [org.example.models.Author#3]
DEBUG 2022-09-08 18:41:51,370 [main][TwoPhaseLoad.java:267] : Done materializing entity [org.example.models.Author#3]
DEBUG 2022-09-08 18:41:51,370 [main][TwoPhaseLoad.java:141] : Resolving associations for [org.example.models.Author#4]
DEBUG 2022-09-08 18:41:51,370 [main][TwoPhaseLoad.java:267] : Done materializing entity [org.example.models.Author#4]
DEBUG 2022-09-08 18:41:51,370 [main][LogicalConnectionManagedImpl.java:154] : Initiating JDBC connection release from afterTransaction
WARN  2022-09-08 18:42:07,158 [main][Main.java:17] : TEST
DEBUG 2022-09-08 18:42:07,213 [main][CoreLogging.java:28] : Logging Provider: org.jboss.logging.Log4jLoggerProvider
DEBUG 2022-09-08 18:42:07,220 [main][IntegratorServiceImpl.java:46] : Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
DEBUG 2022-09-08 18:42:07,221 [main][IntegratorServiceImpl.java:46] : Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
DEBUG 2022-09-08 18:42:07,224 [main][IntegratorServiceImpl.java:46] : Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
INFO  2022-09-08 18:42:07,298 [main][Version.java:45] : HHH000412: Hibernate Core {5.2.2.Final}
INFO  2022-09-08 18:42:07,300 [main][Environment.java:213] : HHH000206: hibernate.properties not found
INFO  2022-09-08 18:42:07,301 [main][Environment.java:318] : HHH000021: Bytecode provider name : javassist
DEBUG 2022-09-08 18:42:07,324 [main][LocalXmlResourceResolver.java:57] : Interpreting public/system identifier : [null] - [http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd]
DEBUG 2022-09-08 18:42:07,325 [main][LocalXmlResourceResolver.java:85] : Recognized hibernate-configuration identifier; attempting to resolve on classpath under org/hibernate/
DEBUG 2022-09-08 18:42:07,334 [main][JaxbCfgProcessor.java:116] : cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
DEBUG 2022-09-08 18:42:07,557 [main][Configuration.java:724] : Building session factory using internal StandardServiceRegistryBuilder
DEBUG 2022-09-08 18:42:07,560 [main][ServiceBinding.java:68] : Overriding existing service binding [org.hibernate.secure.spi.JaccService]
DEBUG 2022-09-08 18:42:07,560 [main][Configuration.java:652] : Building session factory using provided StandardServiceRegistry
DEBUG 2022-09-08 18:42:07,572 [main][RegionFactoryInitiator.java:75] : Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
INFO  2022-09-08 18:42:07,577 [main][JavaReflectionManager.java:66] : HCANN000001: Hibernate Commons Annotations {5.0.1.Final}
DEBUG 2022-09-08 18:42:07,590 [main][BasicTypeRegistry.java:145] : Adding type registration boolean -> org.hibernate.type.BooleanType@5b621de1
DEBUG 2022-09-08 18:42:07,590 [main][BasicTypeRegistry.java:145] : Adding type registration boolean -> org.hibernate.type.BooleanType@5b621de1
DEBUG 2022-09-08 18:42:07,591 [main][BasicTypeRegistry.java:145] : Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@5b621de1
DEBUG 2022-09-08 18:42:07,592 [main][BasicTypeRegistry.java:145] : Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@2e5a38fa
DEBUG 2022-09-08 18:42:07,593 [main][BasicTypeRegistry.java:145] : Adding type registration true_false -> org.hibernate.type.TrueFalseType@35f8e0a2
DEBUG 2022-09-08 18:42:07,594 [main][BasicTypeRegistry.java:145] : Adding type registration yes_no -> org.hibernate.type.YesNoType@553dde3d
DEBUG 2022-09-08 18:42:07,595 [main][BasicTypeRegistry.java:145] : Adding type registration byte -> org.hibernate.type.ByteType@109e1e94
DEBUG 2022-09-08 18:42:07,596 [main][BasicTypeRegistry.java:145] : Adding type registration byte -> org.hibernate.type.ByteType@109e1e94
DEBUG 2022-09-08 18:42:07,597 [main][BasicTypeRegistry.java:145] : Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@109e1e94
DEBUG 2022-09-08 18:42:07,598 [main][BasicTypeRegistry.java:145] : Adding type registration character -> org.hibernate.type.CharacterType@c329733b
DEBUG 2022-09-08 18:42:07,598 [main][BasicTypeRegistry.java:145] : Adding type registration char -> org.hibernate.type.CharacterType@c329733b
DEBUG 2022-09-08 18:42:07,599 [main][BasicTypeRegistry.java:145] : Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@c329733b
DEBUG 2022-09-08 18:42:07,600 [main][BasicTypeRegistry.java:145] : Adding type registration short -> org.hibernate.type.ShortType@42327237
DEBUG 2022-09-08 18:42:07,601 [main][BasicTypeRegistry.java:145] : Adding type registration short -> org.hibernate.type.ShortType@42327237
DEBUG 2022-09-08 18:42:07,601 [main][BasicTypeRegistry.java:145] : Adding type registration java.lang.Short -> org.hibernate.type.ShortType@42327237
DEBUG 2022-09-08 18:42:07,602 [main][BasicTypeRegistry.java:145] : Adding type registration integer -> org.hibernate.type.IntegerType@abbbb948
DEBUG 2022-09-08 18:42:07,603 [main][BasicTypeRegistry.java:145] : Adding type registration int -> org.hibernate.type.IntegerType@abbbb948
DEBUG 2022-09-08 18:42:07,603 [main][BasicTypeRegistry.java:145] : Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@abbbb948
DEBUG 2022-09-08 18:42:07,604 [main][BasicTypeRegistry.java:145] : Adding type registration long -> org.hibernate.type.LongType@5c9a6570
DEBUG 2022-09-08 18:42:07,605 [main][BasicTypeRegistry.java:145] : Adding type registration long -> org.hibernate.type.LongType@5c9a6570
DEBUG 2022-09-08 18:42:07,605 [main][BasicTypeRegistry.java:145] : Adding type registration java.lang.Long -> org.hibernate.type.LongType@5c9a6570
DEBUG 2022-09-08 18:42:07,606 [main][BasicTypeRegistry.java:145] : Adding type registration float -> org.hibernate.type.FloatType@301236c6
DEBUG 2022-09-08 18:42:07,607 [main][BasicTypeRegistry.java:145] : Adding type registration float -> org.hibernate.type.FloatType@301236c6
DEBUG 2022-09-08 18:42:07,607 [main][BasicTypeRegistry.java:145] : Adding type registration java.lang.Float -> org.hibernate.type.FloatType@301236c6
DEBUG 2022-09-08 18:42:07,609 [main][BasicTypeRegistry.java:145] : Adding type registration double -> org.hibernate.type.DoubleType@6d930ecf
DEBUG 2022-09-08 18:42:07,609 [main][BasicTypeRegistry.java:145] : Adding type registration double -> org.hibernate.type.DoubleType@6d930ecf
DEBUG 2022-09-08 18:42:07,610 [main][BasicTypeRegistry.java:145] : Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@6d930ecf
DEBUG 2022-09-08 18:42:07,611 [main][BasicTypeRegistry.java:145] : Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@a0f76b06
DEBUG 2022-09-08 18:42:07,612 [main][BasicTypeRegistry.java:145] : Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@a0f76b06
DEBUG 2022-09-08 18:42:07,613 [main][BasicTypeRegistry.java:145] : Adding type registration big_integer -> org.hibernate.type.BigIntegerType@cee47bf9
DEBUG 2022-09-08 18:42:07,613 [main][BasicTypeRegistry.java:145] : Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@cee47bf9
DEBUG 2022-09-08 18:42:07,614 [main][BasicTypeRegistry.java:145] : Adding type registration string -> org.hibernate.type.StringType@791c612a
DEBUG 2022-09-08 18:42:07,615 [main][BasicTypeRegistry.java:145] : Adding type registration java.lang.String -> org.hibernate.type.StringType@791c612a
DEBUG 2022-09-08 18:42:07,615 [main][BasicTypeRegistry.java:145] : Adding type registration nstring -> org.hibernate.type.StringNVarcharType@e10210aa
DEBUG 2022-09-08 18:42:07,616 [main][BasicTypeRegistry.java:145] : Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@909a5c3c
DEBUG 2022-09-08 18:42:07,617 [main][BasicTypeRegistry.java:145] : Adding type registration url -> org.hibernate.type.UrlType@c943dab
DEBUG 2022-09-08 18:42:07,618 [main][BasicTypeRegistry.java:145] : Adding type registration java.net.URL -> org.hibernate.type.UrlType@c943dab
DEBUG 2022-09-08 18:42:07,619 [main][BasicTypeRegistry.java:145] : Adding type registration Duration -> org.hibernate.type.DurationType@b529ca9
DEBUG 2022-09-08 18:42:07,620 [main][BasicTypeRegistry.java:145] : Adding type registration java.time.Duration -> org.hibernate.type.DurationType@b529ca9
DEBUG 2022-09-08 18:42:07,627 [main][BasicTypeRegistry.java:145] : Adding type registration Instant -> org.hibernate.type.InstantType@f6ac025
DEBUG 2022-09-08 18:42:07,628 [main][BasicTypeRegistry.java:145] : Adding type registration java.time.Instant -> org.hibernate.type.InstantType@f6ac025
DEBUG 2022-09-08 18:42:07,629 [main][BasicTypeRegistry.java:145] : Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@97271c6b
DEBUG 2022-09-08 18:42:07,629 [main][BasicTypeRegistry.java:145] : Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@97271c6b
DEBUG 2022-09-08 18:42:07,631 [main][BasicTypeRegistry.java:145] : Adding type registration LocalDate -> org.hibernate.type.LocalDateType@1bbe154c
DEBUG 2022-09-08 18:42:07,631 [main][BasicTypeRegistry.java:145] : Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@1bbe154c
DEBUG 2022-09-08 18:42:07,632 [main][BasicTypeRegistry.java:145] : Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@dfa712bc
DEBUG 2022-09-08 18:42:07,632 [main][BasicTypeRegistry.java:145] : Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@dfa712bc
DEBUG 2022-09-08 18:42:07,633 [main][BasicTypeRegistry.java:145] : Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@fcbea222
DEBUG 2022-09-08 18:42:07,633 [main][BasicTypeRegistry.java:145] : Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@fcbea222
DEBUG 2022-09-08 18:42:07,634 [main][BasicTypeRegistry.java:145] : Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@4ca83482
DEBUG 2022-09-08 18:42:07,634 [main][BasicTypeRegistry.java:145] : Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@4ca83482
DEBUG 2022-09-08 18:42:07,636 [main][BasicTypeRegistry.java:145] : Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@755ac89
DEBUG 2022-09-08 18:42:07,636 [main][BasicTypeRegistry.java:145] : Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@755ac89
DEBUG 2022-09-08 18:42:07,637 [main][BasicTypeRegistry.java:145] : Adding type registration date -> org.hibernate.type.DateType@c13f01db
DEBUG 2022-09-08 18:42:07,637 [main][BasicTypeRegistry.java:145] : Adding type registration java.sql.Date -> org.hibernate.type.DateType@c13f01db
DEBUG 2022-09-08 18:42:07,638 [main][BasicTypeRegistry.java:145] : Adding type registration time -> org.hibernate.type.TimeType@94e4e23f
DEBUG 2022-09-08 18:42:07,638 [main][BasicTypeRegistry.java:145] : Adding type registration java.sql.Time -> org.hibernate.type.TimeType@94e4e23f
DEBUG 2022-09-08 18:42:07,639 [main][BasicTypeRegistry.java:145] : Adding type registration timestamp -> org.hibernate.type.TimestampType@59e7fda5
DEBUG 2022-09-08 18:42:07,639 [main][BasicTypeRegistry.java:145] : Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@59e7fda5
DEBUG 2022-09-08 18:42:07,640 [main][BasicTypeRegistry.java:145] : Adding type registration java.util.Date -> org.hibernate.type.TimestampType@59e7fda5
DEBUG 2022-09-08 18:42:07,641 [main][BasicTypeRegistry.java:145] : Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@38947a3b
DEBUG 2022-09-08 18:42:07,642 [main][BasicTypeRegistry.java:145] : Adding type registration calendar -> org.hibernate.type.CalendarType@5baf04ae
DEBUG 2022-09-08 18:42:07,643 [main][BasicTypeRegistry.java:145] : Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@5baf04ae
DEBUG 2022-09-08 18:42:07,643 [main][BasicTypeRegistry.java:145] : Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@5baf04ae
DEBUG 2022-09-08 18:42:07,643 [main][BasicTypeRegistry.java:145] : Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@da28763f
DEBUG 2022-09-08 18:42:07,644 [main][BasicTypeRegistry.java:145] : Adding type registration locale -> org.hibernate.type.LocaleType@f5c816e9
DEBUG 2022-09-08 18:42:07,644 [main][BasicTypeRegistry.java:145] : Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@f5c816e9
DEBUG 2022-09-08 18:42:07,645 [main][BasicTypeRegistry.java:145] : Adding type registration currency -> org.hibernate.type.CurrencyType@66ba975
DEBUG 2022-09-08 18:42:07,645 [main][BasicTypeRegistry.java:145] : Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@66ba975
DEBUG 2022-09-08 18:42:07,646 [main][BasicTypeRegistry.java:145] : Adding type registration timezone -> org.hibernate.type.TimeZoneType@dfbd89f8
DEBUG 2022-09-08 18:42:07,646 [main][BasicTypeRegistry.java:145] : Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@dfbd89f8
DEBUG 2022-09-08 18:42:07,646 [main][BasicTypeRegistry.java:145] : Adding type registration class -> org.hibernate.type.ClassType@f7c9206b
DEBUG 2022-09-08 18:42:07,647 [main][BasicTypeRegistry.java:145] : Adding type registration java.lang.Class -> org.hibernate.type.ClassType@f7c9206b
DEBUG 2022-09-08 18:42:07,647 [main][BasicTypeRegistry.java:145] : Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@b0f88ba8
DEBUG 2022-09-08 18:42:07,648 [main][BasicTypeRegistry.java:145] : Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@b0f88ba8
DEBUG 2022-09-08 18:42:07,648 [main][BasicTypeRegistry.java:145] : Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@4afc2c9b
DEBUG 2022-09-08 18:42:07,649 [main][BasicTypeRegistry.java:145] : Adding type registration binary -> org.hibernate.type.BinaryType@1c4b75ce
DEBUG 2022-09-08 18:42:07,649 [main][BasicTypeRegistry.java:145] : Adding type registration byte[] -> org.hibernate.type.BinaryType@1c4b75ce
DEBUG 2022-09-08 18:42:07,649 [main][BasicTypeRegistry.java:145] : Adding type registration [B -> org.hibernate.type.BinaryType@1c4b75ce
DEBUG 2022-09-08 18:42:07,650 [main][BasicTypeRegistry.java:145] : Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@941db6c5
DEBUG 2022-09-08 18:42:07,650 [main][BasicTypeRegistry.java:145] : Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@941db6c5
DEBUG 2022-09-08 18:42:07,650 [main][BasicTypeRegistry.java:145] : Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@941db6c5
DEBUG 2022-09-08 18:42:07,651 [main][BasicTypeRegistry.java:145] : Adding type registration row_version -> org.hibernate.type.RowVersionType@a5de614f
DEBUG 2022-09-08 18:42:07,651 [main][BasicTypeRegistry.java:145] : Adding type registration image -> org.hibernate.type.ImageType@3e271a69
DEBUG 2022-09-08 18:42:07,652 [main][BasicTypeRegistry.java:145] : Adding type registration characters -> org.hibernate.type.CharArrayType@6c0ea3a8
DEBUG 2022-09-08 18:42:07,652 [main][BasicTypeRegistry.java:145] : Adding type registration char[] -> org.hibernate.type.CharArrayType@6c0ea3a8
DEBUG 2022-09-08 18:42:07,652 [main][BasicTypeRegistry.java:145] : Adding type registration [C -> org.hibernate.type.CharArrayType@6c0ea3a8
DEBUG 2022-09-08 18:42:07,652 [main][BasicTypeRegistry.java:145] : Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@5cb67ef5
DEBUG 2022-09-08 18:42:07,653 [main][BasicTypeRegistry.java:145] : Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@5cb67ef5
DEBUG 2022-09-08 18:42:07,653 [main][BasicTypeRegistry.java:145] : Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@5cb67ef5
DEBUG 2022-09-08 18:42:07,653 [main][BasicTypeRegistry.java:145] : Adding type registration text -> org.hibernate.type.TextType@a810f168
DEBUG 2022-09-08 18:42:07,654 [main][BasicTypeRegistry.java:145] : Adding type registration ntext -> org.hibernate.type.NTextType@4bba523d
DEBUG 2022-09-08 18:42:07,656 [main][BasicTypeRegistry.java:145] : Adding type registration blob -> org.hibernate.type.BlobType@a18d07d9
DEBUG 2022-09-08 18:42:07,656 [main][BasicTypeRegistry.java:145] : Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@a18d07d9
DEBUG 2022-09-08 18:42:07,657 [main][BasicTypeRegistry.java:145] : Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@c12b68a
DEBUG 2022-09-08 18:42:07,659 [main][BasicTypeRegistry.java:145] : Adding type registration clob -> org.hibernate.type.ClobType@9548510c
DEBUG 2022-09-08 18:42:07,660 [main][BasicTypeRegistry.java:145] : Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@9548510c
DEBUG 2022-09-08 18:42:07,662 [main][BasicTypeRegistry.java:145] : Adding type registration nclob -> org.hibernate.type.NClobType@d1241f9b
DEBUG 2022-09-08 18:42:07,662 [main][BasicTypeRegistry.java:145] : Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@d1241f9b
DEBUG 2022-09-08 18:42:07,662 [main][BasicTypeRegistry.java:145] : Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@a51714b9
DEBUG 2022-09-08 18:42:07,663 [main][BasicTypeRegistry.java:145] : Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@a8e22422
DEBUG 2022-09-08 18:42:07,663 [main][BasicTypeRegistry.java:145] : Adding type registration serializable -> org.hibernate.type.SerializableType@d21f610a
DEBUG 2022-09-08 18:42:07,665 [main][BasicTypeRegistry.java:145] : Adding type registration object -> org.hibernate.type.ObjectType@2d843693
DEBUG 2022-09-08 18:42:07,665 [main][BasicTypeRegistry.java:145] : Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@2d843693
DEBUG 2022-09-08 18:42:07,665 [main][BasicTypeRegistry.java:145] : Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@ca70f3c7
DEBUG 2022-09-08 18:42:07,665 [main][BasicTypeRegistry.java:145] : Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@30994cb4
DEBUG 2022-09-08 18:42:07,666 [main][BasicTypeRegistry.java:145] : Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@2bde373
DEBUG 2022-09-08 18:42:07,666 [main][BasicTypeRegistry.java:145] : Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@9ec64c44
DEBUG 2022-09-08 18:42:07,666 [main][BasicTypeRegistry.java:145] : Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@df5fea98
DEBUG 2022-09-08 18:42:07,666 [main][BasicTypeRegistry.java:145] : Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@27e1a9d0
DEBUG 2022-09-08 18:42:07,666 [main][BasicTypeRegistry.java:145] : Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@5451e792
DEBUG 2022-09-08 18:42:07,667 [main][BasicTypeRegistry.java:145] : Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@3e5ba811
WARN  2022-09-08 18:42:07,672 [main][DriverManagerConnectionProviderImpl.java:70] : HHH10001002: Using Hibernate built-in connection pool (not for production use!)
INFO  2022-09-08 18:42:07,676 [main][DriverManagerConnectionProviderImpl.java:126] : HHH10001005: using driver [com.mysql.cj.jdbc.Driver] at URL [jdbc:mysql://localhost:3306/classicmodels?serverTimezone=UTC]
INFO  2022-09-08 18:42:07,677 [main][DriverManagerConnectionProviderImpl.java:132] : HHH10001001: Connection properties: {password=rootroot, user=root}
INFO  2022-09-08 18:42:07,677 [main][DriverManagerConnectionProviderImpl.java:140] : HHH10001003: Autocommit mode: false
DEBUG 2022-09-08 18:42:07,680 [main][DelegatingBasicLogger.java:384] : Initializing Connection pool with 1 Connections
INFO  2022-09-08 18:42:07,680 [main][PooledConnections.java:41] : HHH000115: Hibernate connection pool size: 5 (min=1)
DEBUG 2022-09-08 18:42:08,088 [main][JdbcEnvironmentInitiator.java:72] : Database ->
       name : MySQL
    version : 8.0.29
      major : 8
      minor : 0
DEBUG 2022-09-08 18:42:08,089 [main][JdbcEnvironmentInitiator.java:83] : Driver ->
       name : MySQL Connector/J
    version : mysql-connector-java-8.0.29 (Revision: dd61577595edad45c398af508cf91ad26fc4144f)
      major : 8
      minor : 0
DEBUG 2022-09-08 18:42:08,089 [main][DelegatingBasicLogger.java:389] : JDBC version : 4.2
INFO  2022-09-08 18:42:08,097 [main][Dialect.java:153] : HHH000400: Using dialect: org.hibernate.dialect.MySQLDialect
DEBUG 2022-09-08 18:42:08,140 [main][IdentifierHelperBuilder.java:117] : JDBC driver metadata reported database stores quoted identifiers in more than one case
DEBUG 2022-09-08 18:42:08,141 [main][IdentifierHelperBuilder.java:191] : IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [MIXED]; that will likely lead to problems in schema update and validation if using quoted identifiers
DEBUG 2022-09-08 18:42:08,164 [main][DefaultIdentifierGeneratorFactory.java:81] : Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
DEBUG 2022-09-08 18:42:08,164 [main][DefaultIdentifierGeneratorFactory.java:81] : Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
DEBUG 2022-09-08 18:42:08,165 [main][DefaultIdentifierGeneratorFactory.java:81] : Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
DEBUG 2022-09-08 18:42:08,165 [main][DefaultIdentifierGeneratorFactory.java:81] : Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
DEBUG 2022-09-08 18:42:08,165 [main][DefaultIdentifierGeneratorFactory.java:81] : Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
DEBUG 2022-09-08 18:42:08,166 [main][DefaultIdentifierGeneratorFactory.java:81] : Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
DEBUG 2022-09-08 18:42:08,166 [main][DefaultIdentifierGeneratorFactory.java:81] : Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
DEBUG 2022-09-08 18:42:08,167 [main][DefaultIdentifierGeneratorFactory.java:81] : Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
DEBUG 2022-09-08 18:42:08,167 [main][DefaultIdentifierGeneratorFactory.java:81] : Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
DEBUG 2022-09-08 18:42:08,168 [main][DefaultIdentifierGeneratorFactory.java:81] : Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
DEBUG 2022-09-08 18:42:08,168 [main][DefaultIdentifierGeneratorFactory.java:81] : Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
DEBUG 2022-09-08 18:42:08,168 [main][DefaultIdentifierGeneratorFactory.java:81] : Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
DEBUG 2022-09-08 18:42:08,170 [main][DefaultIdentifierGeneratorFactory.java:81] : Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
DEBUG 2022-09-08 18:42:08,170 [main][DefaultIdentifierGeneratorFactory.java:81] : Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
DEBUG 2022-09-08 18:42:08,184 [main][Namespace.java:47] : Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
DEBUG 2022-09-08 18:42:08,197 [main][AnnotationBinder.java:511] : Binding entity from annotated class: org.example.models.Author
DEBUG 2022-09-08 18:42:08,208 [main][Ejb3Column.java:213] : Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
DEBUG 2022-09-08 18:42:08,211 [main][EntityBinder.java:416] : Import with entity name Author
DEBUG 2022-09-08 18:42:08,213 [main][EntityBinder.java:692] : Bind entity org.example.models.Author on table Author
DEBUG 2022-09-08 18:42:08,224 [main][Ejb3Column.java:213] : Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Author), mappingColumn=id, insertable=true, updatable=true, unique=false}
DEBUG 2022-09-08 18:42:08,225 [main][PropertyBinder.java:174] : MetadataSourceProcessor property id with lazy=false
DEBUG 2022-09-08 18:42:08,226 [main][AbstractPropertyHolder.java:89] : Attempting to locate auto-apply AttributeConverter for property [org.example.models.Author:id]
DEBUG 2022-09-08 18:42:08,226 [main][SimpleValueBinder.java:398] : building SimpleValue for id
DEBUG 2022-09-08 18:42:08,227 [main][PropertyBinder.java:265] : Building property id
DEBUG 2022-09-08 18:42:08,230 [main][Ejb3Column.java:213] : Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Author), mappingColumn=name, insertable=true, updatable=true, unique=false}
DEBUG 2022-09-08 18:42:08,231 [main][PropertyBinder.java:174] : MetadataSourceProcessor property name with lazy=false
DEBUG 2022-09-08 18:42:08,231 [main][AbstractPropertyHolder.java:89] : Attempting to locate auto-apply AttributeConverter for property [org.example.models.Author:name]
DEBUG 2022-09-08 18:42:08,231 [main][SimpleValueBinder.java:398] : building SimpleValue for name
DEBUG 2022-09-08 18:42:08,231 [main][PropertyBinder.java:265] : Building property name
DEBUG 2022-09-08 18:42:08,231 [main][Ejb3Column.java:213] : Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Author), mappingColumn=salary, insertable=true, updatable=true, unique=false}
DEBUG 2022-09-08 18:42:08,231 [main][PropertyBinder.java:174] : MetadataSourceProcessor property salary with lazy=false
DEBUG 2022-09-08 18:42:08,232 [main][AbstractPropertyHolder.java:89] : Attempting to locate auto-apply AttributeConverter for property [org.example.models.Author:salary]
DEBUG 2022-09-08 18:42:08,232 [main][SimpleValueBinder.java:398] : building SimpleValue for salary
DEBUG 2022-09-08 18:42:08,232 [main][PropertyBinder.java:265] : Building property salary
DEBUG 2022-09-08 18:42:08,232 [main][AnnotationBinder.java:511] : Binding entity from annotated class: org.example.models.Book
DEBUG 2022-09-08 18:42:08,232 [main][Ejb3Column.java:213] : Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
DEBUG 2022-09-08 18:42:08,232 [main][EntityBinder.java:416] : Import with entity name Book
DEBUG 2022-09-08 18:42:08,233 [main][EntityBinder.java:692] : Bind entity org.example.models.Book on table Book
DEBUG 2022-09-08 18:42:08,233 [main][Ejb3Column.java:213] : Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Book), mappingColumn=id, insertable=true, updatable=true, unique=false}
DEBUG 2022-09-08 18:42:08,233 [main][PropertyBinder.java:174] : MetadataSourceProcessor property id with lazy=false
DEBUG 2022-09-08 18:42:08,233 [main][AbstractPropertyHolder.java:89] : Attempting to locate auto-apply AttributeConverter for property [org.example.models.Book:id]
DEBUG 2022-09-08 18:42:08,234 [main][SimpleValueBinder.java:398] : building SimpleValue for id
DEBUG 2022-09-08 18:42:08,234 [main][PropertyBinder.java:265] : Building property id
DEBUG 2022-09-08 18:42:08,234 [main][Ejb3Column.java:213] : Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Book), mappingColumn=author_id, insertable=true, updatable=true, unique=false}
DEBUG 2022-09-08 18:42:08,234 [main][PropertyBinder.java:174] : MetadataSourceProcessor property author_id with lazy=false
DEBUG 2022-09-08 18:42:08,234 [main][AbstractPropertyHolder.java:89] : Attempting to locate auto-apply AttributeConverter for property [org.example.models.Book:author_id]
DEBUG 2022-09-08 18:42:08,234 [main][SimpleValueBinder.java:398] : building SimpleValue for author_id
DEBUG 2022-09-08 18:42:08,234 [main][PropertyBinder.java:265] : Building property author_id
DEBUG 2022-09-08 18:42:08,235 [main][Ejb3Column.java:213] : Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Book), mappingColumn=name, insertable=true, updatable=true, unique=false}
DEBUG 2022-09-08 18:42:08,235 [main][PropertyBinder.java:174] : MetadataSourceProcessor property name with lazy=false
DEBUG 2022-09-08 18:42:08,235 [main][AbstractPropertyHolder.java:89] : Attempting to locate auto-apply AttributeConverter for property [org.example.models.Book:name]
DEBUG 2022-09-08 18:42:08,235 [main][SimpleValueBinder.java:398] : building SimpleValue for name
DEBUG 2022-09-08 18:42:08,235 [main][PropertyBinder.java:265] : Building property name
DEBUG 2022-09-08 18:42:08,236 [main][SimpleValueBinder.java:443] : Starting fillSimpleValue for id
DEBUG 2022-09-08 18:42:08,236 [main][SimpleValueBinder.java:443] : Starting fillSimpleValue for name
DEBUG 2022-09-08 18:42:08,236 [main][SimpleValueBinder.java:443] : Starting fillSimpleValue for salary
DEBUG 2022-09-08 18:42:08,236 [main][SimpleValueBinder.java:443] : Starting fillSimpleValue for id
DEBUG 2022-09-08 18:42:08,237 [main][SimpleValueBinder.java:443] : Starting fillSimpleValue for author_id
DEBUG 2022-09-08 18:42:08,237 [main][SimpleValueBinder.java:443] : Starting fillSimpleValue for name
DEBUG 2022-09-08 18:42:08,237 [main][PrimaryKey.java:35] : Forcing column [id] to be non-null as it is part of the primary key for table [author]
DEBUG 2022-09-08 18:42:08,237 [main][PrimaryKey.java:35] : Forcing column [id] to be non-null as it is part of the primary key for table [book]
DEBUG 2022-09-08 18:42:08,256 [main][SessionFactoryImpl.java:197] : Building session factory
DEBUG 2022-09-08 18:42:08,256 [main][Settings.java:69] : SessionFactory name : null
DEBUG 2022-09-08 18:42:08,256 [main][Settings.java:70] : Automatic flush during beforeCompletion(): enabled
DEBUG 2022-09-08 18:42:08,256 [main][Settings.java:71] : Automatic session close at end of transaction: disabled
DEBUG 2022-09-08 18:42:08,256 [main][Settings.java:73] : Statistics: disabled
DEBUG 2022-09-08 18:42:08,256 [main][Settings.java:75] : Deleted entity synthetic identifier rollback: disabled
DEBUG 2022-09-08 18:42:08,257 [main][Settings.java:76] : Default entity-mode: pojo
DEBUG 2022-09-08 18:42:08,257 [main][Settings.java:77] : Check Nullability in Core (should be disabled when Bean Validation is on): enabled
DEBUG 2022-09-08 18:42:08,257 [main][Settings.java:78] : Allow initialization of lazy state outside session : disabled
DEBUG 2022-09-08 18:42:08,257 [main][Settings.java:80] : Using BatchFetchStyle : LEGACY
DEBUG 2022-09-08 18:42:08,257 [main][Settings.java:81] : Default batch fetch size: -1
DEBUG 2022-09-08 18:42:08,257 [main][Settings.java:82] : Maximum outer join fetch depth: 2
DEBUG 2022-09-08 18:42:08,257 [main][Settings.java:83] : Default null ordering: NONE
DEBUG 2022-09-08 18:42:08,257 [main][Settings.java:84] : Order SQL updates by primary key: disabled
DEBUG 2022-09-08 18:42:08,257 [main][Settings.java:85] : Order SQL inserts for batching: disabled
DEBUG 2022-09-08 18:42:08,257 [main][Settings.java:87] : multi-tenancy strategy : NONE
DEBUG 2022-09-08 18:42:08,258 [main][Settings.java:89] : JTA Track by Thread: enabled
DEBUG 2022-09-08 18:42:08,258 [main][Settings.java:91] : Query language substitutions: {}
DEBUG 2022-09-08 18:42:08,258 [main][Settings.java:92] : JPA query language strict compliance: disabled
DEBUG 2022-09-08 18:42:08,258 [main][Settings.java:93] : Named query checking : enabled
DEBUG 2022-09-08 18:42:08,258 [main][Settings.java:95] : Second-level cache: enabled
DEBUG 2022-09-08 18:42:08,258 [main][Settings.java:96] : Second-level query cache: disabled
DEBUG 2022-09-08 18:42:08,258 [main][Settings.java:97] : Second-level query cache factory: org.hibernate.cache.internal.StandardQueryCacheFactory@30f54dab
DEBUG 2022-09-08 18:42:08,258 [main][Settings.java:98] : Second-level cache region prefix: null
DEBUG 2022-09-08 18:42:08,258 [main][Settings.java:99] : Optimize second-level cache for minimal puts: disabled
DEBUG 2022-09-08 18:42:08,259 [main][Settings.java:100] : Structured second-level cache entries: disabled
DEBUG 2022-09-08 18:42:08,259 [main][Settings.java:101] : Second-level cache direct-reference entries: disabled
DEBUG 2022-09-08 18:42:08,259 [main][Settings.java:102] : Automatic eviction of collection cache: disabled
DEBUG 2022-09-08 18:42:08,259 [main][Settings.java:104] : JDBC batch size: 15
DEBUG 2022-09-08 18:42:08,259 [main][Settings.java:105] : JDBC batch updates for versioned data: enabled
DEBUG 2022-09-08 18:42:08,259 [main][Settings.java:106] : Scrollable result sets: enabled
DEBUG 2022-09-08 18:42:08,259 [main][Settings.java:107] : Wrap result sets: disabled
DEBUG 2022-09-08 18:42:08,259 [main][Settings.java:108] : JDBC3 getGeneratedKeys(): enabled
DEBUG 2022-09-08 18:42:08,259 [main][Settings.java:109] : JDBC result set fetch size: null
DEBUG 2022-09-08 18:42:08,259 [main][Settings.java:110] : Connection release mode: AFTER_TRANSACTION
DEBUG 2022-09-08 18:42:08,260 [main][Settings.java:111] : Generate SQL with comments: disabled
DEBUG 2022-09-08 18:42:08,282 [main][SessionFactoryImpl.java:252] : Session factory constructed with filter configurations : {}
DEBUG 2022-09-08 18:42:08,283 [main][SessionFactoryImpl.java:253] : Instantiating session factory with properties: {awt.toolkit=sun.lwawt.macosx.LWCToolkit, java.specification.version=11, file.encoding.pkg=sun.io, jdk.extensions.version=11.0.15.0, sun.jnu.encoding=UTF-8, hibernate.dialect=org.hibernate.dialect.MySQLDialect, java.class.path=/Users/vdonets/IdeaProjects/testmaven/target/classes:/Users/vdonets/.m2/repository/org/hibernate/hibernate-core/5.2.2.Final/hibernate-core-5.2.2.Final.jar:/Users/vdonets/.m2/repository/org/jboss/logging/jboss-logging/3.3.0.Final/jboss-logging-3.3.0.Final.jar:/Users/vdonets/.m2/repository/org/hibernate/javax/persistence/hibernate-jpa-2.1-api/1.0.0.Final/hibernate-jpa-2.1-api-1.0.0.Final.jar:/Users/vdonets/.m2/repository/org/javassist/javassist/3.20.0-GA/javassist-3.20.0-GA.jar:/Users/vdonets/.m2/repository/antlr/antlr/2.7.7/antlr-2.7.7.jar:/Users/vdonets/.m2/repository/org/apache/geronimo/specs/geronimo-jta_1.1_spec/1.1.1/geronimo-jta_1.1_spec-1.1.1.jar:/Users/vdonets/.m2/repository/org/jboss/jandex/2.0.0.Final/jandex-2.0.0.Final.jar:/Users/vdonets/.m2/repository/com/fasterxml/classmate/1.3.0/classmate-1.3.0.jar:/Users/vdonets/.m2/repository/dom4j/dom4j/1.6.1/dom4j-1.6.1.jar:/Users/vdonets/.m2/repository/org/hibernate/common/hibernate-commons-annotations/5.0.1.Final/hibernate-commons-annotations-5.0.1.Final.jar:/Users/vdonets/.m2/repository/javax/enterprise/cdi-api/1.1/cdi-api-1.1.jar:/Users/vdonets/.m2/repository/javax/el/el-api/2.2/el-api-2.2.jar:/Users/vdonets/.m2/repository/org/jboss/spec/javax/interceptor/jboss-interceptors-api_1.1_spec/1.0.0.Beta1/jboss-interceptors-api_1.1_spec-1.0.0.Beta1.jar:/Users/vdonets/.m2/repository/javax/annotation/jsr250-api/1.0/jsr250-api-1.0.jar:/Users/vdonets/.m2/repository/javax/inject/javax.inject/1/javax.inject-1.jar:/Users/vdonets/.m2/repository/mysql/mysql-connector-java/8.0.29/mysql-connector-java-8.0.29.jar:/Users/vdonets/.m2/repository/com/google/protobuf/protobuf-java/3.19.4/protobuf-java-3.19.4.jar:/Users/vdonets/.m2/repository/jakarta/xml/bind/jakarta.xml.bind-api/2.3.2/jakarta.xml.bind-api-2.3.2.jar:/Users/vdonets/.m2/repository/jakarta/activation/jakarta.activation-api/1.2.1/jakarta.activation-api-1.2.1.jar:/Users/vdonets/.m2/repository/org/glassfish/jaxb/jaxb-runtime/2.3.2/jaxb-runtime-2.3.2.jar:/Users/vdonets/.m2/repository/org/glassfish/jaxb/txw2/2.3.2/txw2-2.3.2.jar:/Users/vdonets/.m2/repository/com/sun/istack/istack-commons-runtime/3.0.8/istack-commons-runtime-3.0.8.jar:/Users/vdonets/.m2/repository/org/jvnet/staxex/stax-ex/1.8.1/stax-ex-1.8.1.jar:/Users/vdonets/.m2/repository/com/sun/xml/fastinfoset/FastInfoset/1.2.16/FastInfoset-1.2.16.jar:/Users/vdonets/.m2/repository/log4j/log4j/1.2.14/log4j-1.2.14.jar:/Applications/IntelliJ IDEA.app/Contents/lib/idea_rt.jar:/Users/vdonets/Library/Caches/JetBrains/IntelliJIdea2022.1/captureAgent/debugger-agent.jar, java.vm.vendor=Eclipse OpenJ9, sun.arch.data.model=64, com.ibm.vm.bitmode=64, hbm2ddl.auto=create-drop, user.variant=, com.ibm.oti.vm.library.version=29, java.vendor.url=https://www.ibm.com/semeru-runtimes, user.timezone=Europe/Warsaw, java.vm.specification.version=11, os.name=Mac OS X, sun.java.launcher=SUN_STANDARD, user.country=US, sun.boot.library.path=/Users/vdonets/Library/Java/JavaVirtualMachines/semeru-11.0.15/Contents/Home/lib/default:/Users/vdonets/Library/Java/JavaVirtualMachines/semeru-11.0.15/Contents/Home/lib, sun.java.command=org.example.Main, sun.cpu.endian=little, user.home=/Users/vdonets, user.language=en, java.specification.vendor=Oracle Corporation, java.version.date=2022-04-19, java.home=/Users/vdonets/Library/Java/JavaVirtualMachines/semeru-11.0.15/Contents/Home, ibm.signalhandling.rs=false, jdk.extensions.name=Extensions for OpenJDK for Eclipse OpenJ9, file.separator=/, line.separator=
, java.specification.name=Java Platform API Specification, java.vm.specification.vendor=Oracle Corporation, intellij.debug.agent=true, java.compiler=j9jit29, com.ibm.util.extralibs.properties=, java.awt.graphicsenv=sun.awt.CGraphicsEnvironment, com.ibm.oti.configuration=scar, com.ibm.oti.shared.enabled=false, hibernate.hbm2ddl.auto=create-drop, com.ibm.oti.vm.bootstrap.library.path=/Users/vdonets/Library/Java/JavaVirtualMachines/semeru-11.0.15/Contents/Home/lib/default:/Users/vdonets/Library/Java/JavaVirtualMachines/semeru-11.0.15/Contents/Home/lib, com.ibm.cpu.endian=little, java.fullversion=11.0.15-ea+10
JRE 11 Mac OS X aarch64-64-Bit 20220422_36 (JIT enabled, AOT enabled)
OpenJ9   - 9a84ec34e
OMR      - ab24b6666
JCL      - b7b5b42ea6 based on jdk-11.0.15+10, java.runtime.version=11.0.15-ea+10, user.name=vdonets, path.separator=:, hibernate.connection.username=root, os.version=12.5, java.runtime.name=IBM Semeru Runtime Open Edition, hibernate.connection.url=jdbc:mysql://localhost:3306/classicmodels?serverTimezone=UTC, connection.pool_size=5, ibm.signalhandling.sigint=true, file.encoding=UTF-8, java.vm.name=Eclipse OpenJ9 VM, hibernate.show_sql=true, java.vendor.version=11.0.15.0, ibm.signalhandling.sigchain=true, show_sql=true, hibernate.connection.driver_class=com.mysql.cj.jdbc.Driver, java.vendor.url.bug=https://github.com/ibmruntimes/Semeru-Runtimes/issues, java.io.tmpdir=/var/folders/wv/6c3_66yd6kq3r7z477kwz4lr0000gn/T/, java.version=11.0.15-ea, jboss.modules.system.pkgs=com.intellij.rt, com.ibm.system.agent.path=/Users/vdonets/Library/Java/JavaVirtualMachines/semeru-11.0.15/Contents/Home/lib, user.dir=/Users/vdonets/IdeaProjects/testmaven, os.arch=aarch64, java.vm.specification.name=Java Virtual Machine Specification, java.awt.printerjob=sun.lwawt.macosx.CPrinterJob, hibernate.connection.password=****, os.encoding=UTF-8, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@230c6943, java.library.path=/Users/vdonets/Library/Java/JavaVirtualMachines/semeru-11.0.15/Contents/Home/lib/default:/Users/vdonets/Library/Java/JavaVirtualMachines/semeru-11.0.15/Contents/Home/lib:/usr/lib, java.vendor=IBM Corporation, java.vm.info=JRE 11 Mac OS X aarch64-64-Bit 20220422_36 (JIT enabled, AOT enabled)
OpenJ9   - 9a84ec34e
OMR      - ab24b6666
JCL      - b7b5b42ea6 based on jdk-11.0.15+10, java.vm.version=openj9-0.32.0, ibm.system.encoding=UTF-8, hibernate.bytecode.use_reflection_optimizer=false, com.ibm.jcl.checkClassPath=, sun.io.unicode.encoding=UnicodeLittle, hibernate.connection.pool_size=5, java.class.version=55.0}
DEBUG 2022-09-08 18:42:08,287 [main][JaccIntegrator.java:80] : Skipping JACC integration as it was not enabled
DEBUG 2022-09-08 18:42:08,288 [main][SessionFactoryImpl.java:292] : Instantiated session factory
DEBUG 2022-09-08 18:42:08,306 [main][ClassLoaderAccessImpl.java:55] : Not known whether passed class name [org.example.models.Book] is safe
DEBUG 2022-09-08 18:42:08,306 [main][ClassLoaderAccessImpl.java:57] : No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.models.Book
DEBUG 2022-09-08 18:42:08,312 [main][ClassLoaderAccessImpl.java:55] : Not known whether passed class name [org.example.models.Book] is safe
DEBUG 2022-09-08 18:42:08,312 [main][ClassLoaderAccessImpl.java:57] : No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.models.Book
DEBUG 2022-09-08 18:42:08,334 [main][ClassLoaderAccessImpl.java:55] : Not known whether passed class name [org.example.models.Author] is safe
DEBUG 2022-09-08 18:42:08,334 [main][ClassLoaderAccessImpl.java:57] : No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.models.Author
DEBUG 2022-09-08 18:42:08,334 [main][ClassLoaderAccessImpl.java:55] : Not known whether passed class name [org.example.models.Author] is safe
DEBUG 2022-09-08 18:42:08,334 [main][ClassLoaderAccessImpl.java:57] : No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.models.Author
DEBUG 2022-09-08 18:42:08,338 [main][AbstractEntityPersister.java:3529] : Static SQL for entity: org.example.models.Book
DEBUG 2022-09-08 18:42:08,338 [main][AbstractEntityPersister.java:3534] :  Version select: select id from Book where id =?
DEBUG 2022-09-08 18:42:08,338 [main][AbstractEntityPersister.java:3537] :  Snapshot select: select book_.id, book_.author_id as author_i2_1_, book_.name as name3_1_ from Book book_ where book_.id=?
DEBUG 2022-09-08 18:42:08,338 [main][DelegatingBasicLogger.java:394] :  Insert 0: insert into Book (author_id, name, id) values (?, ?, ?)
DEBUG 2022-09-08 18:42:08,339 [main][DelegatingBasicLogger.java:394] :  Update 0: update Book set author_id=?, name=? where id=?
DEBUG 2022-09-08 18:42:08,339 [main][DelegatingBasicLogger.java:394] :  Delete 0: delete from Book where id=?
DEBUG 2022-09-08 18:42:08,346 [main][QuerySpacesImpl.java:174] : Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5da07619]
DEBUG 2022-09-08 18:42:08,347 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : author_id
DEBUG 2022-09-08 18:42:08,347 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : name
DEBUG 2022-09-08 18:42:08,347 [main][FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150] : Building LoadPlan...
DEBUG 2022-09-08 18:42:08,353 [main][LoadQueryJoinAndFetchProcessor.java:100] : processing queryspace <gen:0>
DEBUG 2022-09-08 18:42:08,355 [main][LoadPlanTreePrinter.java:55] : LoadPlan(entity=org.example.models.Book)
    - Returns
       - EntityReturnImpl(entity=org.example.models.Book, querySpaceUid=<gen:0>, path=org.example.models.Book)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=org.example.models.Book)
          - SQL table alias mapping - book0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

DEBUG 2022-09-08 18:42:08,356 [main][EntityLoader.java:115] : Static select for entity org.example.models.Book [NONE]: select book0_.id as id1_1_0_, book0_.author_id as author_i2_1_0_, book0_.name as name3_1_0_ from Book book0_ where book0_.id=?
DEBUG 2022-09-08 18:42:08,356 [main][QuerySpacesImpl.java:174] : Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@49833f52]
DEBUG 2022-09-08 18:42:08,356 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : author_id
DEBUG 2022-09-08 18:42:08,356 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : name
DEBUG 2022-09-08 18:42:08,356 [main][FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150] : Building LoadPlan...
DEBUG 2022-09-08 18:42:08,356 [main][LoadQueryJoinAndFetchProcessor.java:100] : processing queryspace <gen:0>
DEBUG 2022-09-08 18:42:08,357 [main][LoadPlanTreePrinter.java:55] : LoadPlan(entity=org.example.models.Book)
    - Returns
       - EntityReturnImpl(entity=org.example.models.Book, querySpaceUid=<gen:0>, path=org.example.models.Book)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=org.example.models.Book)
          - SQL table alias mapping - book0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

DEBUG 2022-09-08 18:42:08,357 [main][EntityLoader.java:115] : Static select for entity org.example.models.Book [READ]: select book0_.id as id1_1_0_, book0_.author_id as author_i2_1_0_, book0_.name as name3_1_0_ from Book book0_ where book0_.id=?
DEBUG 2022-09-08 18:42:08,357 [main][QuerySpacesImpl.java:174] : Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@e021424c]
DEBUG 2022-09-08 18:42:08,357 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : author_id
DEBUG 2022-09-08 18:42:08,357 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : name
DEBUG 2022-09-08 18:42:08,357 [main][FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150] : Building LoadPlan...
DEBUG 2022-09-08 18:42:08,358 [main][LoadQueryJoinAndFetchProcessor.java:100] : processing queryspace <gen:0>
DEBUG 2022-09-08 18:42:08,358 [main][LoadPlanTreePrinter.java:55] : LoadPlan(entity=org.example.models.Book)
    - Returns
       - EntityReturnImpl(entity=org.example.models.Book, querySpaceUid=<gen:0>, path=org.example.models.Book)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=org.example.models.Book)
          - SQL table alias mapping - book0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

DEBUG 2022-09-08 18:42:08,358 [main][EntityLoader.java:115] : Static select for entity org.example.models.Book [UPGRADE]: select book0_.id as id1_1_0_, book0_.author_id as author_i2_1_0_, book0_.name as name3_1_0_ from Book book0_ where book0_.id=? for update
DEBUG 2022-09-08 18:42:08,358 [main][QuerySpacesImpl.java:174] : Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@143343d1]
DEBUG 2022-09-08 18:42:08,358 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : author_id
DEBUG 2022-09-08 18:42:08,358 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : name
DEBUG 2022-09-08 18:42:08,358 [main][FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150] : Building LoadPlan...
DEBUG 2022-09-08 18:42:08,359 [main][LoadQueryJoinAndFetchProcessor.java:100] : processing queryspace <gen:0>
DEBUG 2022-09-08 18:42:08,359 [main][LoadPlanTreePrinter.java:55] : LoadPlan(entity=org.example.models.Book)
    - Returns
       - EntityReturnImpl(entity=org.example.models.Book, querySpaceUid=<gen:0>, path=org.example.models.Book)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=org.example.models.Book)
          - SQL table alias mapping - book0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

DEBUG 2022-09-08 18:42:08,359 [main][EntityLoader.java:115] : Static select for entity org.example.models.Book [UPGRADE_NOWAIT]: select book0_.id as id1_1_0_, book0_.author_id as author_i2_1_0_, book0_.name as name3_1_0_ from Book book0_ where book0_.id=? for update
DEBUG 2022-09-08 18:42:08,359 [main][QuerySpacesImpl.java:174] : Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7a96286a]
DEBUG 2022-09-08 18:42:08,359 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : author_id
DEBUG 2022-09-08 18:42:08,359 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : name
DEBUG 2022-09-08 18:42:08,360 [main][FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150] : Building LoadPlan...
DEBUG 2022-09-08 18:42:08,360 [main][LoadQueryJoinAndFetchProcessor.java:100] : processing queryspace <gen:0>
DEBUG 2022-09-08 18:42:08,360 [main][LoadPlanTreePrinter.java:55] : LoadPlan(entity=org.example.models.Book)
    - Returns
       - EntityReturnImpl(entity=org.example.models.Book, querySpaceUid=<gen:0>, path=org.example.models.Book)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=org.example.models.Book)
          - SQL table alias mapping - book0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

DEBUG 2022-09-08 18:42:08,360 [main][EntityLoader.java:115] : Static select for entity org.example.models.Book [UPGRADE_SKIPLOCKED]: select book0_.id as id1_1_0_, book0_.author_id as author_i2_1_0_, book0_.name as name3_1_0_ from Book book0_ where book0_.id=? for update
DEBUG 2022-09-08 18:42:08,360 [main][QuerySpacesImpl.java:174] : Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7da6eb54]
DEBUG 2022-09-08 18:42:08,361 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : author_id
DEBUG 2022-09-08 18:42:08,362 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : name
DEBUG 2022-09-08 18:42:08,362 [main][FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150] : Building LoadPlan...
DEBUG 2022-09-08 18:42:08,362 [main][LoadQueryJoinAndFetchProcessor.java:100] : processing queryspace <gen:0>
DEBUG 2022-09-08 18:42:08,362 [main][LoadPlanTreePrinter.java:55] : LoadPlan(entity=org.example.models.Book)
    - Returns
       - EntityReturnImpl(entity=org.example.models.Book, querySpaceUid=<gen:0>, path=org.example.models.Book)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=org.example.models.Book)
          - SQL table alias mapping - book0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

DEBUG 2022-09-08 18:42:08,362 [main][EntityLoader.java:115] : Static select for entity org.example.models.Book [FORCE]: select book0_.id as id1_1_0_, book0_.author_id as author_i2_1_0_, book0_.name as name3_1_0_ from Book book0_ where book0_.id=? for update
DEBUG 2022-09-08 18:42:08,362 [main][QuerySpacesImpl.java:174] : Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@32002261]
DEBUG 2022-09-08 18:42:08,363 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : author_id
DEBUG 2022-09-08 18:42:08,363 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : name
DEBUG 2022-09-08 18:42:08,363 [main][FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150] : Building LoadPlan...
DEBUG 2022-09-08 18:42:08,363 [main][LoadQueryJoinAndFetchProcessor.java:100] : processing queryspace <gen:0>
DEBUG 2022-09-08 18:42:08,363 [main][LoadPlanTreePrinter.java:55] : LoadPlan(entity=org.example.models.Book)
    - Returns
       - EntityReturnImpl(entity=org.example.models.Book, querySpaceUid=<gen:0>, path=org.example.models.Book)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=org.example.models.Book)
          - SQL table alias mapping - book0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

DEBUG 2022-09-08 18:42:08,364 [main][EntityLoader.java:115] : Static select for entity org.example.models.Book [PESSIMISTIC_READ]: select book0_.id as id1_1_0_, book0_.author_id as author_i2_1_0_, book0_.name as name3_1_0_ from Book book0_ where book0_.id=? lock in share mode
DEBUG 2022-09-08 18:42:08,364 [main][QuerySpacesImpl.java:174] : Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6f2fd7cb]
DEBUG 2022-09-08 18:42:08,364 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : author_id
DEBUG 2022-09-08 18:42:08,364 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : name
DEBUG 2022-09-08 18:42:08,364 [main][FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150] : Building LoadPlan...
DEBUG 2022-09-08 18:42:08,364 [main][LoadQueryJoinAndFetchProcessor.java:100] : processing queryspace <gen:0>
DEBUG 2022-09-08 18:42:08,365 [main][LoadPlanTreePrinter.java:55] : LoadPlan(entity=org.example.models.Book)
    - Returns
       - EntityReturnImpl(entity=org.example.models.Book, querySpaceUid=<gen:0>, path=org.example.models.Book)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=org.example.models.Book)
          - SQL table alias mapping - book0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

DEBUG 2022-09-08 18:42:08,365 [main][EntityLoader.java:115] : Static select for entity org.example.models.Book [PESSIMISTIC_WRITE]: select book0_.id as id1_1_0_, book0_.author_id as author_i2_1_0_, book0_.name as name3_1_0_ from Book book0_ where book0_.id=? for update
DEBUG 2022-09-08 18:42:08,365 [main][QuerySpacesImpl.java:174] : Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@9993226c]
DEBUG 2022-09-08 18:42:08,365 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : author_id
DEBUG 2022-09-08 18:42:08,365 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : name
DEBUG 2022-09-08 18:42:08,365 [main][FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150] : Building LoadPlan...
DEBUG 2022-09-08 18:42:08,365 [main][LoadQueryJoinAndFetchProcessor.java:100] : processing queryspace <gen:0>
DEBUG 2022-09-08 18:42:08,366 [main][LoadPlanTreePrinter.java:55] : LoadPlan(entity=org.example.models.Book)
    - Returns
       - EntityReturnImpl(entity=org.example.models.Book, querySpaceUid=<gen:0>, path=org.example.models.Book)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=org.example.models.Book)
          - SQL table alias mapping - book0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

DEBUG 2022-09-08 18:42:08,366 [main][EntityLoader.java:115] : Static select for entity org.example.models.Book [PESSIMISTIC_FORCE_INCREMENT]: select book0_.id as id1_1_0_, book0_.author_id as author_i2_1_0_, book0_.name as name3_1_0_ from Book book0_ where book0_.id=? for update
DEBUG 2022-09-08 18:42:08,366 [main][QuerySpacesImpl.java:174] : Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7d65878c]
DEBUG 2022-09-08 18:42:08,366 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : author_id
DEBUG 2022-09-08 18:42:08,366 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : name
DEBUG 2022-09-08 18:42:08,366 [main][FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150] : Building LoadPlan...
DEBUG 2022-09-08 18:42:08,367 [main][LoadQueryJoinAndFetchProcessor.java:100] : processing queryspace <gen:0>
DEBUG 2022-09-08 18:42:08,367 [main][LoadPlanTreePrinter.java:55] : LoadPlan(entity=org.example.models.Book)
    - Returns
       - EntityReturnImpl(entity=org.example.models.Book, querySpaceUid=<gen:0>, path=org.example.models.Book)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=org.example.models.Book)
          - SQL table alias mapping - book0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

DEBUG 2022-09-08 18:42:08,367 [main][EntityLoader.java:115] : Static select for entity org.example.models.Book [OPTIMISTIC]: select book0_.id as id1_1_0_, book0_.author_id as author_i2_1_0_, book0_.name as name3_1_0_ from Book book0_ where book0_.id=?
DEBUG 2022-09-08 18:42:08,367 [main][QuerySpacesImpl.java:174] : Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7bc55ec3]
DEBUG 2022-09-08 18:42:08,367 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : author_id
DEBUG 2022-09-08 18:42:08,367 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : name
DEBUG 2022-09-08 18:42:08,367 [main][FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150] : Building LoadPlan...
DEBUG 2022-09-08 18:42:08,368 [main][LoadQueryJoinAndFetchProcessor.java:100] : processing queryspace <gen:0>
DEBUG 2022-09-08 18:42:08,368 [main][LoadPlanTreePrinter.java:55] : LoadPlan(entity=org.example.models.Book)
    - Returns
       - EntityReturnImpl(entity=org.example.models.Book, querySpaceUid=<gen:0>, path=org.example.models.Book)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=org.example.models.Book)
          - SQL table alias mapping - book0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

DEBUG 2022-09-08 18:42:08,368 [main][EntityLoader.java:115] : Static select for entity org.example.models.Book [OPTIMISTIC_FORCE_INCREMENT]: select book0_.id as id1_1_0_, book0_.author_id as author_i2_1_0_, book0_.name as name3_1_0_ from Book book0_ where book0_.id=?
DEBUG 2022-09-08 18:42:08,374 [main][CascadeEntityLoader.java:38] : Static select for action ACTION_MERGE on entity org.example.models.Book: select book0_.id as id1_1_0_, book0_.author_id as author_i2_1_0_, book0_.name as name3_1_0_ from Book book0_ where book0_.id=?
DEBUG 2022-09-08 18:42:08,375 [main][CascadeEntityLoader.java:38] : Static select for action ACTION_REFRESH on entity org.example.models.Book: select book0_.id as id1_1_0_, book0_.author_id as author_i2_1_0_, book0_.name as name3_1_0_ from Book book0_ where book0_.id=?
DEBUG 2022-09-08 18:42:08,376 [main][AbstractEntityPersister.java:3529] : Static SQL for entity: org.example.models.Author
DEBUG 2022-09-08 18:42:08,376 [main][AbstractEntityPersister.java:3534] :  Version select: select id from Author where id =?
DEBUG 2022-09-08 18:42:08,376 [main][AbstractEntityPersister.java:3537] :  Snapshot select: select author_.id, author_.name as name2_0_, author_.salary as salary3_0_ from Author author_ where author_.id=?
DEBUG 2022-09-08 18:42:08,376 [main][DelegatingBasicLogger.java:394] :  Insert 0: insert into Author (name, salary, id) values (?, ?, ?)
DEBUG 2022-09-08 18:42:08,376 [main][DelegatingBasicLogger.java:394] :  Update 0: update Author set name=?, salary=? where id=?
DEBUG 2022-09-08 18:42:08,376 [main][DelegatingBasicLogger.java:394] :  Delete 0: delete from Author where id=?
DEBUG 2022-09-08 18:42:08,376 [main][AbstractEntityPersister.java:3545] :  Identity insert: insert into Author (name, salary) values (?, ?)
DEBUG 2022-09-08 18:42:08,376 [main][QuerySpacesImpl.java:174] : Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1972ca9f]
DEBUG 2022-09-08 18:42:08,377 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : name
DEBUG 2022-09-08 18:42:08,377 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : salary
DEBUG 2022-09-08 18:42:08,377 [main][FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150] : Building LoadPlan...
DEBUG 2022-09-08 18:42:08,377 [main][LoadQueryJoinAndFetchProcessor.java:100] : processing queryspace <gen:0>
DEBUG 2022-09-08 18:42:08,377 [main][LoadPlanTreePrinter.java:55] : LoadPlan(entity=org.example.models.Author)
    - Returns
       - EntityReturnImpl(entity=org.example.models.Author, querySpaceUid=<gen:0>, path=org.example.models.Author)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=org.example.models.Author)
          - SQL table alias mapping - author0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

DEBUG 2022-09-08 18:42:08,378 [main][EntityLoader.java:115] : Static select for entity org.example.models.Author [NONE]: select author0_.id as id1_0_0_, author0_.name as name2_0_0_, author0_.salary as salary3_0_0_ from Author author0_ where author0_.id=?
DEBUG 2022-09-08 18:42:08,378 [main][QuerySpacesImpl.java:174] : Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@e0803d8]
DEBUG 2022-09-08 18:42:08,378 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : name
DEBUG 2022-09-08 18:42:08,378 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : salary
DEBUG 2022-09-08 18:42:08,378 [main][FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150] : Building LoadPlan...
DEBUG 2022-09-08 18:42:08,379 [main][LoadQueryJoinAndFetchProcessor.java:100] : processing queryspace <gen:0>
DEBUG 2022-09-08 18:42:08,379 [main][LoadPlanTreePrinter.java:55] : LoadPlan(entity=org.example.models.Author)
    - Returns
       - EntityReturnImpl(entity=org.example.models.Author, querySpaceUid=<gen:0>, path=org.example.models.Author)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=org.example.models.Author)
          - SQL table alias mapping - author0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

DEBUG 2022-09-08 18:42:08,379 [main][EntityLoader.java:115] : Static select for entity org.example.models.Author [READ]: select author0_.id as id1_0_0_, author0_.name as name2_0_0_, author0_.salary as salary3_0_0_ from Author author0_ where author0_.id=?
DEBUG 2022-09-08 18:42:08,379 [main][QuerySpacesImpl.java:174] : Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@c45f5136]
DEBUG 2022-09-08 18:42:08,379 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : name
DEBUG 2022-09-08 18:42:08,379 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : salary
DEBUG 2022-09-08 18:42:08,380 [main][FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150] : Building LoadPlan...
DEBUG 2022-09-08 18:42:08,380 [main][LoadQueryJoinAndFetchProcessor.java:100] : processing queryspace <gen:0>
DEBUG 2022-09-08 18:42:08,380 [main][LoadPlanTreePrinter.java:55] : LoadPlan(entity=org.example.models.Author)
    - Returns
       - EntityReturnImpl(entity=org.example.models.Author, querySpaceUid=<gen:0>, path=org.example.models.Author)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=org.example.models.Author)
          - SQL table alias mapping - author0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

DEBUG 2022-09-08 18:42:08,380 [main][EntityLoader.java:115] : Static select for entity org.example.models.Author [UPGRADE]: select author0_.id as id1_0_0_, author0_.name as name2_0_0_, author0_.salary as salary3_0_0_ from Author author0_ where author0_.id=? for update
DEBUG 2022-09-08 18:42:08,380 [main][QuerySpacesImpl.java:174] : Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5acdbe9]
DEBUG 2022-09-08 18:42:08,380 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : name
DEBUG 2022-09-08 18:42:08,381 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : salary
DEBUG 2022-09-08 18:42:08,381 [main][FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150] : Building LoadPlan...
DEBUG 2022-09-08 18:42:08,382 [main][LoadQueryJoinAndFetchProcessor.java:100] : processing queryspace <gen:0>
DEBUG 2022-09-08 18:42:08,382 [main][LoadPlanTreePrinter.java:55] : LoadPlan(entity=org.example.models.Author)
    - Returns
       - EntityReturnImpl(entity=org.example.models.Author, querySpaceUid=<gen:0>, path=org.example.models.Author)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=org.example.models.Author)
          - SQL table alias mapping - author0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

DEBUG 2022-09-08 18:42:08,383 [main][EntityLoader.java:115] : Static select for entity org.example.models.Author [UPGRADE_NOWAIT]: select author0_.id as id1_0_0_, author0_.name as name2_0_0_, author0_.salary as salary3_0_0_ from Author author0_ where author0_.id=? for update
DEBUG 2022-09-08 18:42:08,383 [main][QuerySpacesImpl.java:174] : Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@42517642]
DEBUG 2022-09-08 18:42:08,383 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : name
DEBUG 2022-09-08 18:42:08,383 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : salary
DEBUG 2022-09-08 18:42:08,383 [main][FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150] : Building LoadPlan...
DEBUG 2022-09-08 18:42:08,383 [main][LoadQueryJoinAndFetchProcessor.java:100] : processing queryspace <gen:0>
DEBUG 2022-09-08 18:42:08,384 [main][LoadPlanTreePrinter.java:55] : LoadPlan(entity=org.example.models.Author)
    - Returns
       - EntityReturnImpl(entity=org.example.models.Author, querySpaceUid=<gen:0>, path=org.example.models.Author)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=org.example.models.Author)
          - SQL table alias mapping - author0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

DEBUG 2022-09-08 18:42:08,384 [main][EntityLoader.java:115] : Static select for entity org.example.models.Author [UPGRADE_SKIPLOCKED]: select author0_.id as id1_0_0_, author0_.name as name2_0_0_, author0_.salary as salary3_0_0_ from Author author0_ where author0_.id=? for update
DEBUG 2022-09-08 18:42:08,384 [main][QuerySpacesImpl.java:174] : Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@91e7b2c6]
DEBUG 2022-09-08 18:42:08,384 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : name
DEBUG 2022-09-08 18:42:08,384 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : salary
DEBUG 2022-09-08 18:42:08,384 [main][FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150] : Building LoadPlan...
DEBUG 2022-09-08 18:42:08,384 [main][LoadQueryJoinAndFetchProcessor.java:100] : processing queryspace <gen:0>
DEBUG 2022-09-08 18:42:08,385 [main][LoadPlanTreePrinter.java:55] : LoadPlan(entity=org.example.models.Author)
    - Returns
       - EntityReturnImpl(entity=org.example.models.Author, querySpaceUid=<gen:0>, path=org.example.models.Author)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=org.example.models.Author)
          - SQL table alias mapping - author0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

DEBUG 2022-09-08 18:42:08,385 [main][EntityLoader.java:115] : Static select for entity org.example.models.Author [FORCE]: select author0_.id as id1_0_0_, author0_.name as name2_0_0_, author0_.salary as salary3_0_0_ from Author author0_ where author0_.id=? for update
DEBUG 2022-09-08 18:42:08,385 [main][QuerySpacesImpl.java:174] : Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@d0bbe5a1]
DEBUG 2022-09-08 18:42:08,385 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : name
DEBUG 2022-09-08 18:42:08,385 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : salary
DEBUG 2022-09-08 18:42:08,386 [main][FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150] : Building LoadPlan...
DEBUG 2022-09-08 18:42:08,386 [main][LoadQueryJoinAndFetchProcessor.java:100] : processing queryspace <gen:0>
DEBUG 2022-09-08 18:42:08,386 [main][LoadPlanTreePrinter.java:55] : LoadPlan(entity=org.example.models.Author)
    - Returns
       - EntityReturnImpl(entity=org.example.models.Author, querySpaceUid=<gen:0>, path=org.example.models.Author)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=org.example.models.Author)
          - SQL table alias mapping - author0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

DEBUG 2022-09-08 18:42:08,386 [main][EntityLoader.java:115] : Static select for entity org.example.models.Author [PESSIMISTIC_READ]: select author0_.id as id1_0_0_, author0_.name as name2_0_0_, author0_.salary as salary3_0_0_ from Author author0_ where author0_.id=? lock in share mode
DEBUG 2022-09-08 18:42:08,386 [main][QuerySpacesImpl.java:174] : Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@9c355167]
DEBUG 2022-09-08 18:42:08,387 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : name
DEBUG 2022-09-08 18:42:08,387 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : salary
DEBUG 2022-09-08 18:42:08,387 [main][FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150] : Building LoadPlan...
DEBUG 2022-09-08 18:42:08,387 [main][LoadQueryJoinAndFetchProcessor.java:100] : processing queryspace <gen:0>
DEBUG 2022-09-08 18:42:08,387 [main][LoadPlanTreePrinter.java:55] : LoadPlan(entity=org.example.models.Author)
    - Returns
       - EntityReturnImpl(entity=org.example.models.Author, querySpaceUid=<gen:0>, path=org.example.models.Author)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=org.example.models.Author)
          - SQL table alias mapping - author0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

DEBUG 2022-09-08 18:42:08,388 [main][EntityLoader.java:115] : Static select for entity org.example.models.Author [PESSIMISTIC_WRITE]: select author0_.id as id1_0_0_, author0_.name as name2_0_0_, author0_.salary as salary3_0_0_ from Author author0_ where author0_.id=? for update
DEBUG 2022-09-08 18:42:08,388 [main][QuerySpacesImpl.java:174] : Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@84f74332]
DEBUG 2022-09-08 18:42:08,388 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : name
DEBUG 2022-09-08 18:42:08,388 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : salary
DEBUG 2022-09-08 18:42:08,388 [main][FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150] : Building LoadPlan...
DEBUG 2022-09-08 18:42:08,388 [main][LoadQueryJoinAndFetchProcessor.java:100] : processing queryspace <gen:0>
DEBUG 2022-09-08 18:42:08,389 [main][LoadPlanTreePrinter.java:55] : LoadPlan(entity=org.example.models.Author)
    - Returns
       - EntityReturnImpl(entity=org.example.models.Author, querySpaceUid=<gen:0>, path=org.example.models.Author)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=org.example.models.Author)
          - SQL table alias mapping - author0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

DEBUG 2022-09-08 18:42:08,389 [main][EntityLoader.java:115] : Static select for entity org.example.models.Author [PESSIMISTIC_FORCE_INCREMENT]: select author0_.id as id1_0_0_, author0_.name as name2_0_0_, author0_.salary as salary3_0_0_ from Author author0_ where author0_.id=? for update
DEBUG 2022-09-08 18:42:08,389 [main][QuerySpacesImpl.java:174] : Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@c6a90af9]
DEBUG 2022-09-08 18:42:08,389 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : name
DEBUG 2022-09-08 18:42:08,389 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : salary
DEBUG 2022-09-08 18:42:08,389 [main][FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150] : Building LoadPlan...
DEBUG 2022-09-08 18:42:08,389 [main][LoadQueryJoinAndFetchProcessor.java:100] : processing queryspace <gen:0>
DEBUG 2022-09-08 18:42:08,390 [main][LoadPlanTreePrinter.java:55] : LoadPlan(entity=org.example.models.Author)
    - Returns
       - EntityReturnImpl(entity=org.example.models.Author, querySpaceUid=<gen:0>, path=org.example.models.Author)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=org.example.models.Author)
          - SQL table alias mapping - author0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

DEBUG 2022-09-08 18:42:08,390 [main][EntityLoader.java:115] : Static select for entity org.example.models.Author [OPTIMISTIC]: select author0_.id as id1_0_0_, author0_.name as name2_0_0_, author0_.salary as salary3_0_0_ from Author author0_ where author0_.id=?
DEBUG 2022-09-08 18:42:08,390 [main][QuerySpacesImpl.java:174] : Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@c005e956]
DEBUG 2022-09-08 18:42:08,390 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : name
DEBUG 2022-09-08 18:42:08,390 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : salary
DEBUG 2022-09-08 18:42:08,390 [main][FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150] : Building LoadPlan...
DEBUG 2022-09-08 18:42:08,390 [main][LoadQueryJoinAndFetchProcessor.java:100] : processing queryspace <gen:0>
DEBUG 2022-09-08 18:42:08,391 [main][LoadPlanTreePrinter.java:55] : LoadPlan(entity=org.example.models.Author)
    - Returns
       - EntityReturnImpl(entity=org.example.models.Author, querySpaceUid=<gen:0>, path=org.example.models.Author)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=org.example.models.Author)
          - SQL table alias mapping - author0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

DEBUG 2022-09-08 18:42:08,392 [main][EntityLoader.java:115] : Static select for entity org.example.models.Author [OPTIMISTIC_FORCE_INCREMENT]: select author0_.id as id1_0_0_, author0_.name as name2_0_0_, author0_.salary as salary3_0_0_ from Author author0_ where author0_.id=?
DEBUG 2022-09-08 18:42:08,392 [main][CascadeEntityLoader.java:38] : Static select for action ACTION_MERGE on entity org.example.models.Author: select author0_.id as id1_0_0_, author0_.name as name2_0_0_, author0_.salary as salary3_0_0_ from Author author0_ where author0_.id=?
DEBUG 2022-09-08 18:42:08,392 [main][CascadeEntityLoader.java:38] : Static select for action ACTION_REFRESH on entity org.example.models.Author: select author0_.id as id1_0_0_, author0_.name as name2_0_0_, author0_.salary as salary3_0_0_ from Author author0_ where author0_.id=?
DEBUG 2022-09-08 18:42:08,405 [main][SqlStatementLogger.java:92] : drop table if exists Author
INFO  2022-09-08 18:42:08,406 [main][DdlTransactionIsolatorNonJtaImpl.java:48] : HHH10001501: Connection obtained from JdbcConnectionAccess [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess@f4ff93df] for (non-JTA) DDL execution was not in auto-commit mode; the Connection 'local transaction' will be committed and the Connection will be set into auto-commit mode.
DEBUG 2022-09-08 18:42:08,418 [main][SqlStatementLogger.java:92] : drop table if exists Book
DEBUG 2022-09-08 18:42:08,421 [main][SqlStatementLogger.java:92] : drop table if exists hibernate_sequence
DEBUG 2022-09-08 18:42:08,426 [main][SqlStatementLogger.java:92] : create table Author (id bigint not null auto_increment, name varchar(255), salary integer, primary key (id))
INFO  2022-09-08 18:42:08,427 [main][DdlTransactionIsolatorNonJtaImpl.java:48] : HHH10001501: Connection obtained from JdbcConnectionAccess [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess@b8482c69] for (non-JTA) DDL execution was not in auto-commit mode; the Connection 'local transaction' will be committed and the Connection will be set into auto-commit mode.
DEBUG 2022-09-08 18:42:08,432 [main][SqlStatementLogger.java:92] : create table Book (id bigint not null, author_id bigint not null, name varchar(255), primary key (id))
DEBUG 2022-09-08 18:42:08,439 [main][SqlStatementLogger.java:92] : create table hibernate_sequence (next_val bigint)
DEBUG 2022-09-08 18:42:08,442 [main][SqlStatementLogger.java:92] : insert into hibernate_sequence values ( 1 )
INFO  2022-09-08 18:42:08,444 [main][SchemaCreatorImpl.java:485] : HHH000476: Executing import script 'org.hibernate.tool.schema.internal.exec.ScriptSourceInputNonExistentImpl@404b4f3e'
DEBUG 2022-09-08 18:42:08,445 [main][JtaPlatformInitiator.java:42] : No JtaPlatform was specified, checking resolver
DEBUG 2022-09-08 18:42:08,445 [main][JtaPlatformResolverInitiator.java:33] : No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
DEBUG 2022-09-08 18:42:08,448 [main][StandardJtaPlatformResolver.java:101] : Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
DEBUG 2022-09-08 18:42:08,448 [main][NamedQueryRepository.java:151] : Checking 0 named HQL queries
DEBUG 2022-09-08 18:42:08,448 [main][NamedQueryRepository.java:167] : Checking 0 named SQL queries
DEBUG 2022-09-08 18:42:08,449 [main][SessionFactoryRegistry.java:52] : Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@5b1b85fd
DEBUG 2022-09-08 18:42:08,450 [main][SessionFactoryRegistry.java:74] : Registering SessionFactory: 8bdbeb28-be94-474d-9c59-7181a27d3f7e (<unnamed>)
DEBUG 2022-09-08 18:42:08,450 [main][SessionFactoryRegistry.java:81] : Not binding SessionFactory to JNDI, no JNDI name configured
DEBUG 2022-09-08 18:42:08,472 [main][StatisticsInitiator.java:82] : Statistics initialized [enabled=false]
DEBUG 2022-09-08 18:42:08,475 [main][TransactionImpl.java:55] : begin
DEBUG 2022-09-08 18:42:08,479 [main][ActionQueue.java:272] : Executing identity-insert immediately
DEBUG 2022-09-08 18:42:08,480 [main][SqlStatementLogger.java:92] : insert into Author (name, salary) values (?, ?)
DEBUG 2022-09-08 18:42:08,487 [main][IdentifierGeneratorHelper.java:78] : Natively generated identity: 1
DEBUG 2022-09-08 18:42:08,487 [main][ResourceRegistryStandardImpl.java:104] : HHH000387: ResultSet's statement was not registered
DEBUG 2022-09-08 18:42:08,488 [main][TransactionImpl.java:66] : committing
DEBUG 2022-09-08 18:42:08,488 [main][AbstractFlushingEventListener.java:132] : Processing flush-time cascades
DEBUG 2022-09-08 18:42:08,489 [main][AbstractFlushingEventListener.java:174] : Dirty checking collections
DEBUG 2022-09-08 18:42:08,489 [main][AbstractFlushingEventListener.java:106] : Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
DEBUG 2022-09-08 18:42:08,490 [main][AbstractFlushingEventListener.java:113] : Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
DEBUG 2022-09-08 18:42:08,490 [main][EntityPrinter.java:102] : Listing entities:
DEBUG 2022-09-08 18:42:08,490 [main][EntityPrinter.java:109] : org.example.models.Author{name=David Baldacci, id=1, salary=654}
DEBUG 2022-09-08 18:42:08,491 [main][LogicalConnectionManagedImpl.java:154] : Initiating JDBC connection release from afterTransaction
DEBUG 2022-09-08 18:42:08,491 [main][LogicalConnectionManagedImpl.java:154] : Initiating JDBC connection release from afterTransaction
DEBUG 2022-09-08 18:42:08,503 [main][TransactionImpl.java:55] : begin
DEBUG 2022-09-08 18:42:08,504 [main][ActionQueue.java:272] : Executing identity-insert immediately
DEBUG 2022-09-08 18:42:08,504 [main][SqlStatementLogger.java:92] : insert into Author (name, salary) values (?, ?)
DEBUG 2022-09-08 18:42:08,505 [main][IdentifierGeneratorHelper.java:78] : Natively generated identity: 2
DEBUG 2022-09-08 18:42:08,505 [main][ResourceRegistryStandardImpl.java:104] : HHH000387: ResultSet's statement was not registered
DEBUG 2022-09-08 18:42:08,505 [main][TransactionImpl.java:66] : committing
DEBUG 2022-09-08 18:42:08,505 [main][AbstractFlushingEventListener.java:132] : Processing flush-time cascades
DEBUG 2022-09-08 18:42:08,505 [main][AbstractFlushingEventListener.java:174] : Dirty checking collections
DEBUG 2022-09-08 18:42:08,505 [main][AbstractFlushingEventListener.java:106] : Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
DEBUG 2022-09-08 18:42:08,506 [main][AbstractFlushingEventListener.java:113] : Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
DEBUG 2022-09-08 18:42:08,506 [main][EntityPrinter.java:102] : Listing entities:
DEBUG 2022-09-08 18:42:08,506 [main][EntityPrinter.java:109] : org.example.models.Author{name=Colleen Hoover, id=2, salary=3224}
DEBUG 2022-09-08 18:42:08,506 [main][LogicalConnectionManagedImpl.java:154] : Initiating JDBC connection release from afterTransaction
DEBUG 2022-09-08 18:42:08,507 [main][LogicalConnectionManagedImpl.java:154] : Initiating JDBC connection release from afterTransaction
DEBUG 2022-09-08 18:42:08,507 [main][TransactionImpl.java:55] : begin
DEBUG 2022-09-08 18:42:08,508 [main][ActionQueue.java:272] : Executing identity-insert immediately
DEBUG 2022-09-08 18:42:08,508 [main][SqlStatementLogger.java:92] : insert into Author (name, salary) values (?, ?)
DEBUG 2022-09-08 18:42:08,508 [main][IdentifierGeneratorHelper.java:78] : Natively generated identity: 3
DEBUG 2022-09-08 18:42:08,509 [main][ResourceRegistryStandardImpl.java:104] : HHH000387: ResultSet's statement was not registered
DEBUG 2022-09-08 18:42:08,509 [main][TransactionImpl.java:66] : committing
DEBUG 2022-09-08 18:42:08,509 [main][AbstractFlushingEventListener.java:132] : Processing flush-time cascades
DEBUG 2022-09-08 18:42:08,509 [main][AbstractFlushingEventListener.java:174] : Dirty checking collections
DEBUG 2022-09-08 18:42:08,509 [main][AbstractFlushingEventListener.java:106] : Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
DEBUG 2022-09-08 18:42:08,509 [main][AbstractFlushingEventListener.java:113] : Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
DEBUG 2022-09-08 18:42:08,509 [main][EntityPrinter.java:102] : Listing entities:
DEBUG 2022-09-08 18:42:08,509 [main][EntityPrinter.java:109] : org.example.models.Author{name=Stuart Woods, id=3, salary=1504}
DEBUG 2022-09-08 18:42:08,510 [main][LogicalConnectionManagedImpl.java:154] : Initiating JDBC connection release from afterTransaction
DEBUG 2022-09-08 18:42:08,510 [main][LogicalConnectionManagedImpl.java:154] : Initiating JDBC connection release from afterTransaction
DEBUG 2022-09-08 18:42:08,511 [main][TransactionImpl.java:55] : begin
DEBUG 2022-09-08 18:42:08,512 [main][ActionQueue.java:272] : Executing identity-insert immediately
DEBUG 2022-09-08 18:42:08,513 [main][SqlStatementLogger.java:92] : insert into Author (name, salary) values (?, ?)
DEBUG 2022-09-08 18:42:08,513 [main][IdentifierGeneratorHelper.java:78] : Natively generated identity: 4
DEBUG 2022-09-08 18:42:08,514 [main][ResourceRegistryStandardImpl.java:104] : HHH000387: ResultSet's statement was not registered
DEBUG 2022-09-08 18:42:08,514 [main][TransactionImpl.java:66] : committing
DEBUG 2022-09-08 18:42:08,514 [main][AbstractFlushingEventListener.java:132] : Processing flush-time cascades
DEBUG 2022-09-08 18:42:08,514 [main][AbstractFlushingEventListener.java:174] : Dirty checking collections
DEBUG 2022-09-08 18:42:08,514 [main][AbstractFlushingEventListener.java:106] : Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
DEBUG 2022-09-08 18:42:08,514 [main][AbstractFlushingEventListener.java:113] : Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
DEBUG 2022-09-08 18:42:08,514 [main][EntityPrinter.java:102] : Listing entities:
DEBUG 2022-09-08 18:42:08,515 [main][EntityPrinter.java:109] : org.example.models.Author{name=Nora Roberts, id=4, salary=2506}
DEBUG 2022-09-08 18:42:08,515 [main][LogicalConnectionManagedImpl.java:154] : Initiating JDBC connection release from afterTransaction
DEBUG 2022-09-08 18:42:08,515 [main][LogicalConnectionManagedImpl.java:154] : Initiating JDBC connection release from afterTransaction
DEBUG 2022-09-08 18:42:08,516 [main][TransactionImpl.java:55] : begin
DEBUG 2022-09-08 18:42:08,516 [main][ActionQueue.java:272] : Executing identity-insert immediately
DEBUG 2022-09-08 18:42:08,516 [main][SqlStatementLogger.java:92] : insert into Author (name, salary) values (?, ?)
DEBUG 2022-09-08 18:42:08,517 [main][IdentifierGeneratorHelper.java:78] : Natively generated identity: 5
DEBUG 2022-09-08 18:42:08,517 [main][ResourceRegistryStandardImpl.java:104] : HHH000387: ResultSet's statement was not registered
DEBUG 2022-09-08 18:42:08,517 [main][TransactionImpl.java:66] : committing
DEBUG 2022-09-08 18:42:08,518 [main][AbstractFlushingEventListener.java:132] : Processing flush-time cascades
DEBUG 2022-09-08 18:42:08,518 [main][AbstractFlushingEventListener.java:174] : Dirty checking collections
DEBUG 2022-09-08 18:42:08,518 [main][AbstractFlushingEventListener.java:106] : Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
DEBUG 2022-09-08 18:42:08,518 [main][AbstractFlushingEventListener.java:113] : Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
DEBUG 2022-09-08 18:42:08,518 [main][EntityPrinter.java:102] : Listing entities:
DEBUG 2022-09-08 18:42:08,518 [main][EntityPrinter.java:109] : org.example.models.Author{name=Michael Connelly, id=5, salary=4419}
DEBUG 2022-09-08 18:42:08,519 [main][LogicalConnectionManagedImpl.java:154] : Initiating JDBC connection release from afterTransaction
DEBUG 2022-09-08 18:42:08,519 [main][LogicalConnectionManagedImpl.java:154] : Initiating JDBC connection release from afterTransaction
DEBUG 2022-09-08 18:42:08,533 [main][CriteriaQueryImpl.java:307] : Rendered criteria query -> select generatedAlias0 from Author as generatedAlias0
DEBUG 2022-09-08 18:42:08,538 [main][QueryTranslatorFactoryInitiator.java:45] : QueryTranslatorFactory : org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory@8c28baec
INFO  2022-09-08 18:42:08,538 [main][QueryTranslatorFactoryInitiator.java:47] : HHH000397: Using ASTQueryTranslatorFactory
DEBUG 2022-09-08 18:42:08,551 [main][QueryTranslatorImpl.java:278] : parse() - HQL: select generatedAlias0 from org.example.models.Author as generatedAlias0
DEBUG 2022-09-08 18:42:08,554 [main][QueryTranslatorImpl.java:296] : --- HQL AST ---
 \-[QUERY] Node: 'query'
    \-[SELECT_FROM] Node: 'SELECT_FROM'
       +-[FROM] Node: 'from'
       |  \-[RANGE] Node: 'RANGE'
       |     +-[DOT] Node: '.'
       |     |  +-[DOT] Node: '.'
       |     |  |  +-[DOT] Node: '.'
       |     |  |  |  +-[IDENT] Node: 'org'
       |     |  |  |  \-[IDENT] Node: 'example'
       |     |  |  \-[IDENT] Node: 'models'
       |     |  \-[IDENT] Node: 'Author'
       |     \-[ALIAS] Node: 'generatedAlias0'
       \-[SELECT] Node: 'select'
          \-[IDENT] Node: 'generatedAlias0'

DEBUG 2022-09-08 18:42:08,554 [main][ErrorCounter.java:95] : throwQueryException() : no errors
DEBUG 2022-09-08 18:42:08,562 [main][HqlSqlBaseWalker.java:124] : select << begin [level=1, statement=select]
DEBUG 2022-09-08 18:42:08,566 [main][FromElement.java:148] : FromClause{level=1} : org.example.models.Author (generatedAlias0) -> author0_
DEBUG 2022-09-08 18:42:08,567 [main][FromReferenceNode.java:60] : Resolved : generatedAlias0 -> author0_.id
DEBUG 2022-09-08 18:42:08,567 [main][HqlSqlBaseWalker.java:128] : select : finishing up [level=1, statement=select]
DEBUG 2022-09-08 18:42:08,567 [main][HqlSqlWalker.java:725] : processQuery() :  ( SELECT ( {select clause} author0_.id ) ( FromClause{level=1} Author author0_ ) )
DEBUG 2022-09-08 18:42:08,570 [main][JoinProcessor.java:169] : Using FROM fragment [Author author0_]
DEBUG 2022-09-08 18:42:08,570 [main][HqlSqlBaseWalker.java:132] : select >> end [level=1, statement=select]
DEBUG 2022-09-08 18:42:08,570 [main][QueryTranslatorImpl.java:265] : --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (Author)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'author0_.id as id1_0_' {alias=generatedAlias0, className=org.example.models.Author, tableAlias=author0_}
    |  \-[SQL_TOKEN] SqlFragment: 'author0_.name as name2_0_, author0_.salary as salary3_0_'
    \-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[author0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'Author author0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=Author,tableAlias=author0_,origin=null,columns={,className=org.example.models.Author}}

DEBUG 2022-09-08 18:42:08,571 [main][ErrorCounter.java:95] : throwQueryException() : no errors
DEBUG 2022-09-08 18:42:08,574 [main][QueryTranslatorImpl.java:247] : HQL: select generatedAlias0 from org.example.models.Author as generatedAlias0
DEBUG 2022-09-08 18:42:08,574 [main][QueryTranslatorImpl.java:248] : SQL: select author0_.id as id1_0_, author0_.name as name2_0_, author0_.salary as salary3_0_ from Author author0_
DEBUG 2022-09-08 18:42:08,574 [main][ErrorCounter.java:95] : throwQueryException() : no errors
DEBUG 2022-09-08 18:42:08,579 [main][SqlStatementLogger.java:92] : select author0_.id as id1_0_, author0_.name as name2_0_, author0_.salary as salary3_0_ from Author author0_
DEBUG 2022-09-08 18:42:08,584 [main][DelegatingBasicLogger.java:384] : Result set row: 0
DEBUG 2022-09-08 18:42:08,585 [main][Loader.java:1527] : Result row: EntityKey[org.example.models.Author#1]
DEBUG 2022-09-08 18:42:08,587 [main][DelegatingBasicLogger.java:384] : Result set row: 1
DEBUG 2022-09-08 18:42:08,587 [main][Loader.java:1527] : Result row: EntityKey[org.example.models.Author#2]
DEBUG 2022-09-08 18:42:08,587 [main][DelegatingBasicLogger.java:384] : Result set row: 2
DEBUG 2022-09-08 18:42:08,587 [main][Loader.java:1527] : Result row: EntityKey[org.example.models.Author#3]
DEBUG 2022-09-08 18:42:08,587 [main][DelegatingBasicLogger.java:384] : Result set row: 3
DEBUG 2022-09-08 18:42:08,587 [main][Loader.java:1527] : Result row: EntityKey[org.example.models.Author#4]
DEBUG 2022-09-08 18:42:08,587 [main][DelegatingBasicLogger.java:384] : Result set row: 4
DEBUG 2022-09-08 18:42:08,588 [main][Loader.java:1527] : Result row: EntityKey[org.example.models.Author#5]
DEBUG 2022-09-08 18:42:08,588 [main][TwoPhaseLoad.java:141] : Resolving associations for [org.example.models.Author#1]
DEBUG 2022-09-08 18:42:08,588 [main][TwoPhaseLoad.java:267] : Done materializing entity [org.example.models.Author#1]
DEBUG 2022-09-08 18:42:08,588 [main][TwoPhaseLoad.java:141] : Resolving associations for [org.example.models.Author#2]
DEBUG 2022-09-08 18:42:08,589 [main][TwoPhaseLoad.java:267] : Done materializing entity [org.example.models.Author#2]
DEBUG 2022-09-08 18:42:08,589 [main][TwoPhaseLoad.java:141] : Resolving associations for [org.example.models.Author#3]
DEBUG 2022-09-08 18:42:08,589 [main][TwoPhaseLoad.java:267] : Done materializing entity [org.example.models.Author#3]
DEBUG 2022-09-08 18:42:08,589 [main][TwoPhaseLoad.java:141] : Resolving associations for [org.example.models.Author#4]
DEBUG 2022-09-08 18:42:08,589 [main][TwoPhaseLoad.java:267] : Done materializing entity [org.example.models.Author#4]
DEBUG 2022-09-08 18:42:08,590 [main][TwoPhaseLoad.java:141] : Resolving associations for [org.example.models.Author#5]
DEBUG 2022-09-08 18:42:08,590 [main][TwoPhaseLoad.java:267] : Done materializing entity [org.example.models.Author#5]
DEBUG 2022-09-08 18:42:08,591 [main][LogicalConnectionManagedImpl.java:154] : Initiating JDBC connection release from afterTransaction
DEBUG 2022-09-08 18:42:08,600 [main][SqlStatementLogger.java:92] : SELECT * FROM Author
DEBUG 2022-09-08 18:42:08,601 [main][DelegatingBasicLogger.java:384] : Result set row: 0
DEBUG 2022-09-08 18:42:08,601 [main][Loader.java:1527] : Result row: EntityKey[org.example.models.Author#1]
DEBUG 2022-09-08 18:42:08,602 [main][DelegatingBasicLogger.java:384] : Result set row: 1
DEBUG 2022-09-08 18:42:08,602 [main][Loader.java:1527] : Result row: EntityKey[org.example.models.Author#2]
DEBUG 2022-09-08 18:42:08,602 [main][DelegatingBasicLogger.java:384] : Result set row: 2
DEBUG 2022-09-08 18:42:08,602 [main][Loader.java:1527] : Result row: EntityKey[org.example.models.Author#3]
DEBUG 2022-09-08 18:42:08,602 [main][DelegatingBasicLogger.java:384] : Result set row: 3
DEBUG 2022-09-08 18:42:08,602 [main][Loader.java:1527] : Result row: EntityKey[org.example.models.Author#4]
DEBUG 2022-09-08 18:42:08,603 [main][DelegatingBasicLogger.java:384] : Result set row: 4
DEBUG 2022-09-08 18:42:08,603 [main][Loader.java:1527] : Result row: EntityKey[org.example.models.Author#5]
DEBUG 2022-09-08 18:42:08,603 [main][TwoPhaseLoad.java:141] : Resolving associations for [org.example.models.Author#1]
DEBUG 2022-09-08 18:42:08,603 [main][TwoPhaseLoad.java:267] : Done materializing entity [org.example.models.Author#1]
DEBUG 2022-09-08 18:42:08,603 [main][TwoPhaseLoad.java:141] : Resolving associations for [org.example.models.Author#2]
DEBUG 2022-09-08 18:42:08,603 [main][TwoPhaseLoad.java:267] : Done materializing entity [org.example.models.Author#2]
DEBUG 2022-09-08 18:42:08,603 [main][TwoPhaseLoad.java:141] : Resolving associations for [org.example.models.Author#3]
DEBUG 2022-09-08 18:42:08,603 [main][TwoPhaseLoad.java:267] : Done materializing entity [org.example.models.Author#3]
DEBUG 2022-09-08 18:42:08,604 [main][TwoPhaseLoad.java:141] : Resolving associations for [org.example.models.Author#4]
DEBUG 2022-09-08 18:42:08,604 [main][TwoPhaseLoad.java:267] : Done materializing entity [org.example.models.Author#4]
DEBUG 2022-09-08 18:42:08,604 [main][TwoPhaseLoad.java:141] : Resolving associations for [org.example.models.Author#5]
DEBUG 2022-09-08 18:42:08,604 [main][TwoPhaseLoad.java:267] : Done materializing entity [org.example.models.Author#5]
DEBUG 2022-09-08 18:42:08,604 [main][LogicalConnectionManagedImpl.java:154] : Initiating JDBC connection release from afterTransaction
DEBUG 2022-09-08 18:42:08,606 [main][SqlStatementLogger.java:92] : select author0_.id as id1_0_0_, author0_.name as name2_0_0_, author0_.salary as salary3_0_0_ from Author author0_ where author0_.id=?
DEBUG 2022-09-08 18:42:08,609 [main][ResultSetProcessorImpl.java:120] : Starting ResultSet row #0
DEBUG 2022-09-08 18:42:08,609 [main][EntityReferenceInitializerImpl.java:126] : On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
DEBUG 2022-09-08 18:42:08,609 [main][TwoPhaseLoad.java:141] : Resolving associations for [org.example.models.Author#2]
DEBUG 2022-09-08 18:42:08,610 [main][TwoPhaseLoad.java:267] : Done materializing entity [org.example.models.Author#2]
DEBUG 2022-09-08 18:42:08,610 [main][ResourceRegistryStandardImpl.java:73] : HHH000387: ResultSet's statement was not registered
DEBUG 2022-09-08 18:42:08,610 [main][AbstractLoadPlanBasedEntityLoader.java:189] : Done entity load : org.example.models.Author#2
DEBUG 2022-09-08 18:42:08,610 [main][LogicalConnectionManagedImpl.java:154] : Initiating JDBC connection release from afterTransaction
DEBUG 2022-09-08 18:42:08,612 [main][QueryTranslatorImpl.java:278] : parse() - HQL: select a from org.example.models.Author a where a.salary between :minSalary and :maxSalary
DEBUG 2022-09-08 18:42:08,614 [main][QueryTranslatorImpl.java:296] : --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[IDENT] Node: 'org'
    |  |     |  |  |  \-[IDENT] Node: 'example'
    |  |     |  |  \-[IDENT] Node: 'models'
    |  |     |  \-[IDENT] Node: 'Author'
    |  |     \-[ALIAS] Node: 'a'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'a'
    \-[WHERE] Node: 'where'
       \-[BETWEEN] Node: 'between'
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'a'
          |  \-[IDENT] Node: 'salary'
          +-[COLON] Node: ':'
          |  \-[IDENT] Node: 'minSalary'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'maxSalary'

DEBUG 2022-09-08 18:42:08,614 [main][ErrorCounter.java:95] : throwQueryException() : no errors
DEBUG 2022-09-08 18:42:08,614 [main][HqlSqlBaseWalker.java:124] : select << begin [level=1, statement=select]
DEBUG 2022-09-08 18:42:08,614 [main][FromElement.java:148] : FromClause{level=1} : org.example.models.Author (a) -> author0_
DEBUG 2022-09-08 18:42:08,615 [main][FromReferenceNode.java:60] : Resolved : a -> author0_.id
DEBUG 2022-09-08 18:42:08,615 [main][FromReferenceNode.java:60] : Resolved : a -> author0_.id
DEBUG 2022-09-08 18:42:08,616 [main][DotNode.java:661] : getDataType() : salary -> org.hibernate.type.IntegerType@abbbb948
DEBUG 2022-09-08 18:42:08,616 [main][FromReferenceNode.java:60] : Resolved : a.salary -> author0_.salary
DEBUG 2022-09-08 18:42:08,616 [main][HqlSqlBaseWalker.java:128] : select : finishing up [level=1, statement=select]
DEBUG 2022-09-08 18:42:08,617 [main][HqlSqlWalker.java:725] : processQuery() :  ( SELECT ( {select clause} author0_.id ) ( FromClause{level=1} Author author0_ ) ( where ( between ( author0_.salary author0_.id salary ) ? ? ) ) )
DEBUG 2022-09-08 18:42:08,617 [main][JoinProcessor.java:169] : Using FROM fragment [Author author0_]
DEBUG 2022-09-08 18:42:08,617 [main][HqlSqlBaseWalker.java:132] : select >> end [level=1, statement=select]
DEBUG 2022-09-08 18:42:08,617 [main][QueryTranslatorImpl.java:265] : --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (Author)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'author0_.id as id1_0_' {alias=a, className=org.example.models.Author, tableAlias=author0_}
    |  \-[SQL_TOKEN] SqlFragment: 'author0_.name as name2_0_, author0_.salary as salary3_0_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[a], fromElementByTableAlias=[author0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'Author author0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=a,role=null,tableName=Author,tableAlias=author0_,origin=null,columns={,className=org.example.models.Author}}
    \-[WHERE] SqlNode: 'where'
       \-[BETWEEN] BetweenOperatorNode: 'between'
          +-[DOT] DotNode: 'author0_.salary' {propertyName=salary,dereferenceType=PRIMITIVE,getPropertyPath=salary,path=a.salary,tableAlias=author0_,className=org.example.models.Author,classAlias=a}
          |  +-[ALIAS_REF] IdentNode: 'author0_.id' {alias=a, className=org.example.models.Author, tableAlias=author0_}
          |  \-[IDENT] IdentNode: 'salary' {originalText=salary}
          +-[NAMED_PARAM] ParameterNode: '?' {name=minSalary, expectedType=org.hibernate.type.IntegerType@abbbb948}
          \-[NAMED_PARAM] ParameterNode: '?' {name=maxSalary, expectedType=org.hibernate.type.IntegerType@abbbb948}

DEBUG 2022-09-08 18:42:08,617 [main][ErrorCounter.java:95] : throwQueryException() : no errors
DEBUG 2022-09-08 18:42:08,618 [main][QueryTranslatorImpl.java:247] : HQL: select a from org.example.models.Author a where a.salary between :minSalary and :maxSalary
DEBUG 2022-09-08 18:42:08,618 [main][QueryTranslatorImpl.java:248] : SQL: select author0_.id as id1_0_, author0_.name as name2_0_, author0_.salary as salary3_0_ from Author author0_ where author0_.salary between ? and ?
DEBUG 2022-09-08 18:42:08,618 [main][ErrorCounter.java:95] : throwQueryException() : no errors
DEBUG 2022-09-08 18:42:08,619 [main][SqlStatementLogger.java:92] : select author0_.id as id1_0_, author0_.name as name2_0_, author0_.salary as salary3_0_ from Author author0_ where author0_.salary between ? and ?
DEBUG 2022-09-08 18:42:08,622 [main][DelegatingBasicLogger.java:384] : Result set row: 0
DEBUG 2022-09-08 18:42:08,622 [main][Loader.java:1527] : Result row: EntityKey[org.example.models.Author#2]
DEBUG 2022-09-08 18:42:08,622 [main][TwoPhaseLoad.java:141] : Resolving associations for [org.example.models.Author#2]
DEBUG 2022-09-08 18:42:08,622 [main][TwoPhaseLoad.java:267] : Done materializing entity [org.example.models.Author#2]
DEBUG 2022-09-08 18:42:08,623 [main][LogicalConnectionManagedImpl.java:154] : Initiating JDBC connection release from afterTransaction
DEBUG 2022-09-08 18:42:08,623 [main][SqlStatementLogger.java:92] : select author0_.id as id1_0_0_, author0_.name as name2_0_0_, author0_.salary as salary3_0_0_ from Author author0_ where author0_.id=?
DEBUG 2022-09-08 18:42:08,625 [main][ResultSetProcessorImpl.java:120] : Starting ResultSet row #0
DEBUG 2022-09-08 18:42:08,625 [main][EntityReferenceInitializerImpl.java:126] : On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
DEBUG 2022-09-08 18:42:08,625 [main][TwoPhaseLoad.java:141] : Resolving associations for [org.example.models.Author#2]
DEBUG 2022-09-08 18:42:08,626 [main][TwoPhaseLoad.java:267] : Done materializing entity [org.example.models.Author#2]
DEBUG 2022-09-08 18:42:08,626 [main][ResourceRegistryStandardImpl.java:73] : HHH000387: ResultSet's statement was not registered
DEBUG 2022-09-08 18:42:08,626 [main][AbstractLoadPlanBasedEntityLoader.java:189] : Done entity load : org.example.models.Author#2
DEBUG 2022-09-08 18:42:08,626 [main][LogicalConnectionManagedImpl.java:154] : Initiating JDBC connection release from afterTransaction
DEBUG 2022-09-08 18:42:08,626 [main][TransactionImpl.java:55] : begin
DEBUG 2022-09-08 18:42:08,627 [main][TransactionImpl.java:66] : committing
DEBUG 2022-09-08 18:42:08,627 [main][AbstractFlushingEventListener.java:132] : Processing flush-time cascades
DEBUG 2022-09-08 18:42:08,627 [main][AbstractFlushingEventListener.java:174] : Dirty checking collections
DEBUG 2022-09-08 18:42:08,628 [main][AbstractFlushingEventListener.java:106] : Flushed: 0 insertions, 1 updates, 0 deletions to 1 objects
DEBUG 2022-09-08 18:42:08,628 [main][AbstractFlushingEventListener.java:113] : Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
DEBUG 2022-09-08 18:42:08,628 [main][EntityPrinter.java:102] : Listing entities:
DEBUG 2022-09-08 18:42:08,628 [main][EntityPrinter.java:109] : org.example.models.Author{name=Ihor Kosolapow, id=2, salary=3224}
DEBUG 2022-09-08 18:42:08,631 [main][SqlStatementLogger.java:92] : update Author set name=? where id=?
DEBUG 2022-09-08 18:42:08,633 [main][LogicalConnectionManagedImpl.java:154] : Initiating JDBC connection release from afterTransaction
DEBUG 2022-09-08 18:42:08,633 [main][LogicalConnectionManagedImpl.java:154] : Initiating JDBC connection release from afterTransaction
DEBUG 2022-09-08 18:42:08,633 [main][JdbcCoordinatorImpl.java:177] : HHH000420: Closing un-released batch
DEBUG 2022-09-08 18:42:08,635 [main][SqlStatementLogger.java:92] : select author0_.id as id1_0_0_, author0_.name as name2_0_0_, author0_.salary as salary3_0_0_ from Author author0_ where author0_.id=?
DEBUG 2022-09-08 18:42:08,637 [main][ResultSetProcessorImpl.java:120] : Starting ResultSet row #0
DEBUG 2022-09-08 18:42:08,637 [main][EntityReferenceInitializerImpl.java:126] : On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
DEBUG 2022-09-08 18:42:08,637 [main][TwoPhaseLoad.java:141] : Resolving associations for [org.example.models.Author#2]
DEBUG 2022-09-08 18:42:08,637 [main][TwoPhaseLoad.java:267] : Done materializing entity [org.example.models.Author#2]
DEBUG 2022-09-08 18:42:08,637 [main][ResourceRegistryStandardImpl.java:73] : HHH000387: ResultSet's statement was not registered
DEBUG 2022-09-08 18:42:08,637 [main][AbstractLoadPlanBasedEntityLoader.java:189] : Done entity load : org.example.models.Author#2
DEBUG 2022-09-08 18:42:08,637 [main][LogicalConnectionManagedImpl.java:154] : Initiating JDBC connection release from afterTransaction
DEBUG 2022-09-08 18:42:08,639 [main][CriteriaQueryImpl.java:307] : Rendered criteria query -> select avg(generatedAlias0.salary) from Author as generatedAlias0
DEBUG 2022-09-08 18:42:08,640 [main][QueryTranslatorImpl.java:278] : parse() - HQL: select avg(generatedAlias0.salary) from org.example.models.Author as generatedAlias0
DEBUG 2022-09-08 18:42:08,641 [main][QueryTranslatorImpl.java:296] : --- HQL AST ---
 \-[QUERY] Node: 'query'
    \-[SELECT_FROM] Node: 'SELECT_FROM'
       +-[FROM] Node: 'from'
       |  \-[RANGE] Node: 'RANGE'
       |     +-[DOT] Node: '.'
       |     |  +-[DOT] Node: '.'
       |     |  |  +-[DOT] Node: '.'
       |     |  |  |  +-[IDENT] Node: 'org'
       |     |  |  |  \-[IDENT] Node: 'example'
       |     |  |  \-[IDENT] Node: 'models'
       |     |  \-[IDENT] Node: 'Author'
       |     \-[ALIAS] Node: 'generatedAlias0'
       \-[SELECT] Node: 'select'
          \-[AGGREGATE] Node: 'avg'
             \-[DOT] Node: '.'
                +-[IDENT] Node: 'generatedAlias0'
                \-[IDENT] Node: 'salary'

DEBUG 2022-09-08 18:42:08,641 [main][ErrorCounter.java:95] : throwQueryException() : no errors
DEBUG 2022-09-08 18:42:08,641 [main][HqlSqlBaseWalker.java:124] : select << begin [level=1, statement=select]
DEBUG 2022-09-08 18:42:08,642 [main][FromElement.java:148] : FromClause{level=1} : org.example.models.Author (generatedAlias0) -> author0_
DEBUG 2022-09-08 18:42:08,642 [main][FromReferenceNode.java:60] : Resolved : generatedAlias0 -> author0_.id
DEBUG 2022-09-08 18:42:08,643 [main][DotNode.java:661] : getDataType() : salary -> org.hibernate.type.IntegerType@abbbb948
DEBUG 2022-09-08 18:42:08,643 [main][FromReferenceNode.java:60] : Resolved : generatedAlias0.salary -> author0_.salary
DEBUG 2022-09-08 18:42:08,643 [main][HqlSqlBaseWalker.java:128] : select : finishing up [level=1, statement=select]
DEBUG 2022-09-08 18:42:08,643 [main][HqlSqlWalker.java:725] : processQuery() :  ( SELECT ( {select clause} ( avg ( author0_.salary author0_.id salary ) ) ) ( FromClause{level=1} Author author0_ ) )
DEBUG 2022-09-08 18:42:08,643 [main][JoinProcessor.java:169] : Using FROM fragment [Author author0_]
DEBUG 2022-09-08 18:42:08,644 [main][HqlSqlBaseWalker.java:132] : select >> end [level=1, statement=select]
DEBUG 2022-09-08 18:42:08,644 [main][QueryTranslatorImpl.java:265] : --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (Author)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[AGGREGATE] AggregateNode: 'avg'
    |  |  \-[DOT] DotNode: 'author0_.salary' {propertyName=salary,dereferenceType=PRIMITIVE,getPropertyPath=salary,path=generatedAlias0.salary,tableAlias=author0_,className=org.example.models.Author,classAlias=generatedAlias0}
    |  |     +-[ALIAS_REF] IdentNode: 'author0_.id' {alias=generatedAlias0, className=org.example.models.Author, tableAlias=author0_}
    |  |     \-[IDENT] IdentNode: 'salary' {originalText=salary}
    |  \-[SELECT_COLUMNS] SqlNode: ' as col_0_0_'
    \-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[author0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'Author author0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=Author,tableAlias=author0_,origin=null,columns={,className=org.example.models.Author}}

DEBUG 2022-09-08 18:42:08,644 [main][ErrorCounter.java:95] : throwQueryException() : no errors
DEBUG 2022-09-08 18:42:08,645 [main][QueryTranslatorImpl.java:247] : HQL: select avg(generatedAlias0.salary) from org.example.models.Author as generatedAlias0
DEBUG 2022-09-08 18:42:08,645 [main][QueryTranslatorImpl.java:248] : SQL: select avg(author0_.salary) as col_0_0_ from Author author0_
DEBUG 2022-09-08 18:42:08,645 [main][ErrorCounter.java:95] : throwQueryException() : no errors
DEBUG 2022-09-08 18:42:08,645 [main][SqlStatementLogger.java:92] : select avg(author0_.salary) as col_0_0_ from Author author0_
DEBUG 2022-09-08 18:42:08,646 [main][DelegatingBasicLogger.java:384] : Result set row: 0
DEBUG 2022-09-08 18:42:08,646 [main][Loader.java:1527] : Result row: 
DEBUG 2022-09-08 18:42:08,647 [main][LogicalConnectionManagedImpl.java:154] : Initiating JDBC connection release from afterTransaction
DEBUG 2022-09-08 18:42:08,649 [main][CriteriaQueryImpl.java:307] : Rendered criteria query -> select generatedAlias0 from Author as generatedAlias0 where generatedAlias0.salary>3000
DEBUG 2022-09-08 18:42:08,650 [main][QueryTranslatorImpl.java:278] : parse() - HQL: select generatedAlias0 from org.example.models.Author as generatedAlias0 where generatedAlias0.salary>3000
DEBUG 2022-09-08 18:42:08,651 [main][QueryTranslatorImpl.java:296] : --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[IDENT] Node: 'org'
    |  |     |  |  |  \-[IDENT] Node: 'example'
    |  |     |  |  \-[IDENT] Node: 'models'
    |  |     |  \-[IDENT] Node: 'Author'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[GT] Node: '>'
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'salary'
          \-[NUM_INT] Node: '3000'

DEBUG 2022-09-08 18:42:08,651 [main][ErrorCounter.java:95] : throwQueryException() : no errors
DEBUG 2022-09-08 18:42:08,651 [main][HqlSqlBaseWalker.java:124] : select << begin [level=1, statement=select]
DEBUG 2022-09-08 18:42:08,651 [main][FromElement.java:148] : FromClause{level=1} : org.example.models.Author (generatedAlias0) -> author0_
DEBUG 2022-09-08 18:42:08,651 [main][FromReferenceNode.java:60] : Resolved : generatedAlias0 -> author0_.id
DEBUG 2022-09-08 18:42:08,652 [main][FromReferenceNode.java:60] : Resolved : generatedAlias0 -> author0_.id
DEBUG 2022-09-08 18:42:08,652 [main][DotNode.java:661] : getDataType() : salary -> org.hibernate.type.IntegerType@abbbb948
DEBUG 2022-09-08 18:42:08,652 [main][FromReferenceNode.java:60] : Resolved : generatedAlias0.salary -> author0_.salary
DEBUG 2022-09-08 18:42:08,654 [main][HqlSqlBaseWalker.java:128] : select : finishing up [level=1, statement=select]
DEBUG 2022-09-08 18:42:08,654 [main][HqlSqlWalker.java:725] : processQuery() :  ( SELECT ( {select clause} author0_.id ) ( FromClause{level=1} Author author0_ ) ( where ( > ( author0_.salary author0_.id salary ) 3000 ) ) )
DEBUG 2022-09-08 18:42:08,655 [main][JoinProcessor.java:169] : Using FROM fragment [Author author0_]
DEBUG 2022-09-08 18:42:08,655 [main][HqlSqlBaseWalker.java:132] : select >> end [level=1, statement=select]
DEBUG 2022-09-08 18:42:08,655 [main][QueryTranslatorImpl.java:265] : --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (Author)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'author0_.id as id1_0_' {alias=generatedAlias0, className=org.example.models.Author, tableAlias=author0_}
    |  \-[SQL_TOKEN] SqlFragment: 'author0_.name as name2_0_, author0_.salary as salary3_0_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[author0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'Author author0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=Author,tableAlias=author0_,origin=null,columns={,className=org.example.models.Author}}
    \-[WHERE] SqlNode: 'where'
       \-[GT] BinaryLogicOperatorNode: '>'
          +-[DOT] DotNode: 'author0_.salary' {propertyName=salary,dereferenceType=PRIMITIVE,getPropertyPath=salary,path=generatedAlias0.salary,tableAlias=author0_,className=org.example.models.Author,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'author0_.id' {alias=generatedAlias0, className=org.example.models.Author, tableAlias=author0_}
          |  \-[IDENT] IdentNode: 'salary' {originalText=salary}
          \-[NUM_INT] LiteralNode: '3000'

DEBUG 2022-09-08 18:42:08,655 [main][ErrorCounter.java:95] : throwQueryException() : no errors
DEBUG 2022-09-08 18:42:08,655 [main][QueryTranslatorImpl.java:247] : HQL: select generatedAlias0 from org.example.models.Author as generatedAlias0 where generatedAlias0.salary>3000
DEBUG 2022-09-08 18:42:08,656 [main][QueryTranslatorImpl.java:248] : SQL: select author0_.id as id1_0_, author0_.name as name2_0_, author0_.salary as salary3_0_ from Author author0_ where author0_.salary>3000
DEBUG 2022-09-08 18:42:08,656 [main][ErrorCounter.java:95] : throwQueryException() : no errors
DEBUG 2022-09-08 18:42:08,656 [main][SqlStatementLogger.java:92] : select author0_.id as id1_0_, author0_.name as name2_0_, author0_.salary as salary3_0_ from Author author0_ where author0_.salary>3000
DEBUG 2022-09-08 18:42:08,658 [main][DelegatingBasicLogger.java:384] : Result set row: 0
DEBUG 2022-09-08 18:42:08,658 [main][Loader.java:1527] : Result row: EntityKey[org.example.models.Author#2]
DEBUG 2022-09-08 18:42:08,659 [main][DelegatingBasicLogger.java:384] : Result set row: 1
DEBUG 2022-09-08 18:42:08,659 [main][Loader.java:1527] : Result row: EntityKey[org.example.models.Author#5]
DEBUG 2022-09-08 18:42:08,659 [main][TwoPhaseLoad.java:141] : Resolving associations for [org.example.models.Author#2]
DEBUG 2022-09-08 18:42:08,659 [main][TwoPhaseLoad.java:267] : Done materializing entity [org.example.models.Author#2]
DEBUG 2022-09-08 18:42:08,659 [main][TwoPhaseLoad.java:141] : Resolving associations for [org.example.models.Author#5]
DEBUG 2022-09-08 18:42:08,659 [main][TwoPhaseLoad.java:267] : Done materializing entity [org.example.models.Author#5]
DEBUG 2022-09-08 18:42:08,659 [main][LogicalConnectionManagedImpl.java:154] : Initiating JDBC connection release from afterTransaction
DEBUG 2022-09-08 18:42:38,094 [pool-1-thread-1][PooledConnections.java:51] : Connection pool now considered primed; min-size will be maintained
WARN  2022-09-08 19:34:26,544 [main][Main.java:17] : TEST
DEBUG 2022-09-08 19:34:26,599 [main][CoreLogging.java:28] : Logging Provider: org.jboss.logging.Log4jLoggerProvider
DEBUG 2022-09-08 19:34:26,608 [main][IntegratorServiceImpl.java:46] : Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
DEBUG 2022-09-08 19:34:26,610 [main][IntegratorServiceImpl.java:46] : Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
DEBUG 2022-09-08 19:34:26,614 [main][IntegratorServiceImpl.java:46] : Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
INFO  2022-09-08 19:34:26,691 [main][Version.java:45] : HHH000412: Hibernate Core {5.2.2.Final}
INFO  2022-09-08 19:34:26,694 [main][Environment.java:213] : HHH000206: hibernate.properties not found
INFO  2022-09-08 19:34:26,696 [main][Environment.java:318] : HHH000021: Bytecode provider name : javassist
DEBUG 2022-09-08 19:34:26,726 [main][LocalXmlResourceResolver.java:57] : Interpreting public/system identifier : [null] - [http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd]
DEBUG 2022-09-08 19:34:26,727 [main][LocalXmlResourceResolver.java:85] : Recognized hibernate-configuration identifier; attempting to resolve on classpath under org/hibernate/
DEBUG 2022-09-08 19:34:26,735 [main][JaxbCfgProcessor.java:116] : cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
DEBUG 2022-09-08 19:34:26,984 [main][Configuration.java:724] : Building session factory using internal StandardServiceRegistryBuilder
DEBUG 2022-09-08 19:34:26,988 [main][ServiceBinding.java:68] : Overriding existing service binding [org.hibernate.secure.spi.JaccService]
DEBUG 2022-09-08 19:34:26,988 [main][Configuration.java:652] : Building session factory using provided StandardServiceRegistry
DEBUG 2022-09-08 19:34:27,000 [main][RegionFactoryInitiator.java:75] : Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
INFO  2022-09-08 19:34:27,006 [main][JavaReflectionManager.java:66] : HCANN000001: Hibernate Commons Annotations {5.0.1.Final}
DEBUG 2022-09-08 19:34:27,025 [main][BasicTypeRegistry.java:145] : Adding type registration boolean -> org.hibernate.type.BooleanType@42e55204
DEBUG 2022-09-08 19:34:27,025 [main][BasicTypeRegistry.java:145] : Adding type registration boolean -> org.hibernate.type.BooleanType@42e55204
DEBUG 2022-09-08 19:34:27,026 [main][BasicTypeRegistry.java:145] : Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@42e55204
DEBUG 2022-09-08 19:34:27,027 [main][BasicTypeRegistry.java:145] : Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@fe4f88bb
DEBUG 2022-09-08 19:34:27,028 [main][BasicTypeRegistry.java:145] : Adding type registration true_false -> org.hibernate.type.TrueFalseType@74b77de8
DEBUG 2022-09-08 19:34:27,029 [main][BasicTypeRegistry.java:145] : Adding type registration yes_no -> org.hibernate.type.YesNoType@23ac9656
DEBUG 2022-09-08 19:34:27,031 [main][BasicTypeRegistry.java:145] : Adding type registration byte -> org.hibernate.type.ByteType@d86cd1b3
DEBUG 2022-09-08 19:34:27,031 [main][BasicTypeRegistry.java:145] : Adding type registration byte -> org.hibernate.type.ByteType@d86cd1b3
DEBUG 2022-09-08 19:34:27,032 [main][BasicTypeRegistry.java:145] : Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@d86cd1b3
DEBUG 2022-09-08 19:34:27,033 [main][BasicTypeRegistry.java:145] : Adding type registration character -> org.hibernate.type.CharacterType@cc328e0e
DEBUG 2022-09-08 19:34:27,033 [main][BasicTypeRegistry.java:145] : Adding type registration char -> org.hibernate.type.CharacterType@cc328e0e
DEBUG 2022-09-08 19:34:27,034 [main][BasicTypeRegistry.java:145] : Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@cc328e0e
DEBUG 2022-09-08 19:34:27,035 [main][BasicTypeRegistry.java:145] : Adding type registration short -> org.hibernate.type.ShortType@436701b8
DEBUG 2022-09-08 19:34:27,036 [main][BasicTypeRegistry.java:145] : Adding type registration short -> org.hibernate.type.ShortType@436701b8
DEBUG 2022-09-08 19:34:27,036 [main][BasicTypeRegistry.java:145] : Adding type registration java.lang.Short -> org.hibernate.type.ShortType@436701b8
DEBUG 2022-09-08 19:34:27,037 [main][BasicTypeRegistry.java:145] : Adding type registration integer -> org.hibernate.type.IntegerType@91fe6cb8
DEBUG 2022-09-08 19:34:27,038 [main][BasicTypeRegistry.java:145] : Adding type registration int -> org.hibernate.type.IntegerType@91fe6cb8
DEBUG 2022-09-08 19:34:27,039 [main][BasicTypeRegistry.java:145] : Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@91fe6cb8
DEBUG 2022-09-08 19:34:27,040 [main][BasicTypeRegistry.java:145] : Adding type registration long -> org.hibernate.type.LongType@83d29005
DEBUG 2022-09-08 19:34:27,041 [main][BasicTypeRegistry.java:145] : Adding type registration long -> org.hibernate.type.LongType@83d29005
DEBUG 2022-09-08 19:34:27,041 [main][BasicTypeRegistry.java:145] : Adding type registration java.lang.Long -> org.hibernate.type.LongType@83d29005
DEBUG 2022-09-08 19:34:27,043 [main][BasicTypeRegistry.java:145] : Adding type registration float -> org.hibernate.type.FloatType@55380324
DEBUG 2022-09-08 19:34:27,044 [main][BasicTypeRegistry.java:145] : Adding type registration float -> org.hibernate.type.FloatType@55380324
DEBUG 2022-09-08 19:34:27,045 [main][BasicTypeRegistry.java:145] : Adding type registration java.lang.Float -> org.hibernate.type.FloatType@55380324
DEBUG 2022-09-08 19:34:27,046 [main][BasicTypeRegistry.java:145] : Adding type registration double -> org.hibernate.type.DoubleType@ebe129c0
DEBUG 2022-09-08 19:34:27,047 [main][BasicTypeRegistry.java:145] : Adding type registration double -> org.hibernate.type.DoubleType@ebe129c0
DEBUG 2022-09-08 19:34:27,047 [main][BasicTypeRegistry.java:145] : Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@ebe129c0
DEBUG 2022-09-08 19:34:27,049 [main][BasicTypeRegistry.java:145] : Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@f1d51c8e
DEBUG 2022-09-08 19:34:27,050 [main][BasicTypeRegistry.java:145] : Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@f1d51c8e
DEBUG 2022-09-08 19:34:27,051 [main][BasicTypeRegistry.java:145] : Adding type registration big_integer -> org.hibernate.type.BigIntegerType@7db62654
DEBUG 2022-09-08 19:34:27,052 [main][BasicTypeRegistry.java:145] : Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@7db62654
DEBUG 2022-09-08 19:34:27,053 [main][BasicTypeRegistry.java:145] : Adding type registration string -> org.hibernate.type.StringType@1c733cd7
DEBUG 2022-09-08 19:34:27,054 [main][BasicTypeRegistry.java:145] : Adding type registration java.lang.String -> org.hibernate.type.StringType@1c733cd7
DEBUG 2022-09-08 19:34:27,056 [main][BasicTypeRegistry.java:145] : Adding type registration nstring -> org.hibernate.type.StringNVarcharType@e7abf567
DEBUG 2022-09-08 19:34:27,057 [main][BasicTypeRegistry.java:145] : Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@afd45a4e
DEBUG 2022-09-08 19:34:27,058 [main][BasicTypeRegistry.java:145] : Adding type registration url -> org.hibernate.type.UrlType@78000482
DEBUG 2022-09-08 19:34:27,058 [main][BasicTypeRegistry.java:145] : Adding type registration java.net.URL -> org.hibernate.type.UrlType@78000482
DEBUG 2022-09-08 19:34:27,060 [main][BasicTypeRegistry.java:145] : Adding type registration Duration -> org.hibernate.type.DurationType@f2eb1dc6
DEBUG 2022-09-08 19:34:27,060 [main][BasicTypeRegistry.java:145] : Adding type registration java.time.Duration -> org.hibernate.type.DurationType@f2eb1dc6
DEBUG 2022-09-08 19:34:27,070 [main][BasicTypeRegistry.java:145] : Adding type registration Instant -> org.hibernate.type.InstantType@63dd986d
DEBUG 2022-09-08 19:34:27,070 [main][BasicTypeRegistry.java:145] : Adding type registration java.time.Instant -> org.hibernate.type.InstantType@63dd986d
DEBUG 2022-09-08 19:34:27,072 [main][BasicTypeRegistry.java:145] : Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@7e1ccb54
DEBUG 2022-09-08 19:34:27,072 [main][BasicTypeRegistry.java:145] : Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@7e1ccb54
DEBUG 2022-09-08 19:34:27,074 [main][BasicTypeRegistry.java:145] : Adding type registration LocalDate -> org.hibernate.type.LocalDateType@19111e0
DEBUG 2022-09-08 19:34:27,075 [main][BasicTypeRegistry.java:145] : Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@19111e0
DEBUG 2022-09-08 19:34:27,076 [main][BasicTypeRegistry.java:145] : Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@82783a7b
DEBUG 2022-09-08 19:34:27,077 [main][BasicTypeRegistry.java:145] : Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@82783a7b
DEBUG 2022-09-08 19:34:27,079 [main][BasicTypeRegistry.java:145] : Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@f18389fe
DEBUG 2022-09-08 19:34:27,079 [main][BasicTypeRegistry.java:145] : Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@f18389fe
DEBUG 2022-09-08 19:34:27,080 [main][BasicTypeRegistry.java:145] : Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@13c68042
DEBUG 2022-09-08 19:34:27,080 [main][BasicTypeRegistry.java:145] : Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@13c68042
DEBUG 2022-09-08 19:34:27,082 [main][BasicTypeRegistry.java:145] : Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@1bd56958
DEBUG 2022-09-08 19:34:27,082 [main][BasicTypeRegistry.java:145] : Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@1bd56958
DEBUG 2022-09-08 19:34:27,084 [main][BasicTypeRegistry.java:145] : Adding type registration date -> org.hibernate.type.DateType@7c8fc6e6
DEBUG 2022-09-08 19:34:27,084 [main][BasicTypeRegistry.java:145] : Adding type registration java.sql.Date -> org.hibernate.type.DateType@7c8fc6e6
DEBUG 2022-09-08 19:34:27,085 [main][BasicTypeRegistry.java:145] : Adding type registration time -> org.hibernate.type.TimeType@1b092002
DEBUG 2022-09-08 19:34:27,085 [main][BasicTypeRegistry.java:145] : Adding type registration java.sql.Time -> org.hibernate.type.TimeType@1b092002
DEBUG 2022-09-08 19:34:27,086 [main][BasicTypeRegistry.java:145] : Adding type registration timestamp -> org.hibernate.type.TimestampType@945afb69
DEBUG 2022-09-08 19:34:27,087 [main][BasicTypeRegistry.java:145] : Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@945afb69
DEBUG 2022-09-08 19:34:27,087 [main][BasicTypeRegistry.java:145] : Adding type registration java.util.Date -> org.hibernate.type.TimestampType@945afb69
DEBUG 2022-09-08 19:34:27,089 [main][BasicTypeRegistry.java:145] : Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@84173b0e
DEBUG 2022-09-08 19:34:27,090 [main][BasicTypeRegistry.java:145] : Adding type registration calendar -> org.hibernate.type.CalendarType@6d63d4
DEBUG 2022-09-08 19:34:27,090 [main][BasicTypeRegistry.java:145] : Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@6d63d4
DEBUG 2022-09-08 19:34:27,091 [main][BasicTypeRegistry.java:145] : Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@6d63d4
DEBUG 2022-09-08 19:34:27,092 [main][BasicTypeRegistry.java:145] : Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@18ca0954
DEBUG 2022-09-08 19:34:27,093 [main][BasicTypeRegistry.java:145] : Adding type registration locale -> org.hibernate.type.LocaleType@e587c7d
DEBUG 2022-09-08 19:34:27,093 [main][BasicTypeRegistry.java:145] : Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@e587c7d
DEBUG 2022-09-08 19:34:27,094 [main][BasicTypeRegistry.java:145] : Adding type registration currency -> org.hibernate.type.CurrencyType@d0786b43
DEBUG 2022-09-08 19:34:27,094 [main][BasicTypeRegistry.java:145] : Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@d0786b43
DEBUG 2022-09-08 19:34:27,095 [main][BasicTypeRegistry.java:145] : Adding type registration timezone -> org.hibernate.type.TimeZoneType@8ec20322
DEBUG 2022-09-08 19:34:27,095 [main][BasicTypeRegistry.java:145] : Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@8ec20322
DEBUG 2022-09-08 19:34:27,096 [main][BasicTypeRegistry.java:145] : Adding type registration class -> org.hibernate.type.ClassType@2359128
DEBUG 2022-09-08 19:34:27,097 [main][BasicTypeRegistry.java:145] : Adding type registration java.lang.Class -> org.hibernate.type.ClassType@2359128
DEBUG 2022-09-08 19:34:27,098 [main][BasicTypeRegistry.java:145] : Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@f05378ba
DEBUG 2022-09-08 19:34:27,098 [main][BasicTypeRegistry.java:145] : Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@f05378ba
DEBUG 2022-09-08 19:34:27,099 [main][BasicTypeRegistry.java:145] : Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@f5f7a181
DEBUG 2022-09-08 19:34:27,100 [main][BasicTypeRegistry.java:145] : Adding type registration binary -> org.hibernate.type.BinaryType@97bf4e01
DEBUG 2022-09-08 19:34:27,100 [main][BasicTypeRegistry.java:145] : Adding type registration byte[] -> org.hibernate.type.BinaryType@97bf4e01
DEBUG 2022-09-08 19:34:27,100 [main][BasicTypeRegistry.java:145] : Adding type registration [B -> org.hibernate.type.BinaryType@97bf4e01
DEBUG 2022-09-08 19:34:27,102 [main][BasicTypeRegistry.java:145] : Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@1f08318a
DEBUG 2022-09-08 19:34:27,102 [main][BasicTypeRegistry.java:145] : Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@1f08318a
DEBUG 2022-09-08 19:34:27,103 [main][BasicTypeRegistry.java:145] : Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@1f08318a
DEBUG 2022-09-08 19:34:27,103 [main][BasicTypeRegistry.java:145] : Adding type registration row_version -> org.hibernate.type.RowVersionType@f4be7bc
DEBUG 2022-09-08 19:34:27,104 [main][BasicTypeRegistry.java:145] : Adding type registration image -> org.hibernate.type.ImageType@e67505c2
DEBUG 2022-09-08 19:34:27,105 [main][BasicTypeRegistry.java:145] : Adding type registration characters -> org.hibernate.type.CharArrayType@e31c95f4
DEBUG 2022-09-08 19:34:27,105 [main][BasicTypeRegistry.java:145] : Adding type registration char[] -> org.hibernate.type.CharArrayType@e31c95f4
DEBUG 2022-09-08 19:34:27,105 [main][BasicTypeRegistry.java:145] : Adding type registration [C -> org.hibernate.type.CharArrayType@e31c95f4
DEBUG 2022-09-08 19:34:27,106 [main][BasicTypeRegistry.java:145] : Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@9b2a1f26
DEBUG 2022-09-08 19:34:27,106 [main][BasicTypeRegistry.java:145] : Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@9b2a1f26
DEBUG 2022-09-08 19:34:27,107 [main][BasicTypeRegistry.java:145] : Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@9b2a1f26
DEBUG 2022-09-08 19:34:27,108 [main][BasicTypeRegistry.java:145] : Adding type registration text -> org.hibernate.type.TextType@78d7016
DEBUG 2022-09-08 19:34:27,109 [main][BasicTypeRegistry.java:145] : Adding type registration ntext -> org.hibernate.type.NTextType@19e15c7e
DEBUG 2022-09-08 19:34:27,112 [main][BasicTypeRegistry.java:145] : Adding type registration blob -> org.hibernate.type.BlobType@fa20ee98
DEBUG 2022-09-08 19:34:27,112 [main][BasicTypeRegistry.java:145] : Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@fa20ee98
DEBUG 2022-09-08 19:34:27,112 [main][BasicTypeRegistry.java:145] : Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@8787ae9a
DEBUG 2022-09-08 19:34:27,115 [main][BasicTypeRegistry.java:145] : Adding type registration clob -> org.hibernate.type.ClobType@d0ea7835
DEBUG 2022-09-08 19:34:27,116 [main][BasicTypeRegistry.java:145] : Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@d0ea7835
DEBUG 2022-09-08 19:34:27,118 [main][BasicTypeRegistry.java:145] : Adding type registration nclob -> org.hibernate.type.NClobType@e19dd117
DEBUG 2022-09-08 19:34:27,119 [main][BasicTypeRegistry.java:145] : Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@e19dd117
DEBUG 2022-09-08 19:34:27,119 [main][BasicTypeRegistry.java:145] : Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@6d7558ad
DEBUG 2022-09-08 19:34:27,119 [main][BasicTypeRegistry.java:145] : Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@52c2b8a7
DEBUG 2022-09-08 19:34:27,121 [main][BasicTypeRegistry.java:145] : Adding type registration serializable -> org.hibernate.type.SerializableType@a6c812b0
DEBUG 2022-09-08 19:34:27,122 [main][BasicTypeRegistry.java:145] : Adding type registration object -> org.hibernate.type.ObjectType@a2f4d293
DEBUG 2022-09-08 19:34:27,123 [main][BasicTypeRegistry.java:145] : Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@a2f4d293
DEBUG 2022-09-08 19:34:27,123 [main][BasicTypeRegistry.java:145] : Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@103f58a6
DEBUG 2022-09-08 19:34:27,124 [main][BasicTypeRegistry.java:145] : Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@9eafa2ae
DEBUG 2022-09-08 19:34:27,124 [main][BasicTypeRegistry.java:145] : Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@ed71cbe4
DEBUG 2022-09-08 19:34:27,124 [main][BasicTypeRegistry.java:145] : Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@d8d31d93
DEBUG 2022-09-08 19:34:27,126 [main][BasicTypeRegistry.java:145] : Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@e36e3326
DEBUG 2022-09-08 19:34:27,126 [main][BasicTypeRegistry.java:145] : Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@d0f1486a
DEBUG 2022-09-08 19:34:27,126 [main][BasicTypeRegistry.java:145] : Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@89b4bcbc
DEBUG 2022-09-08 19:34:27,127 [main][BasicTypeRegistry.java:145] : Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@7ac028fc
WARN  2022-09-08 19:34:27,134 [main][DriverManagerConnectionProviderImpl.java:70] : HHH10001002: Using Hibernate built-in connection pool (not for production use!)
INFO  2022-09-08 19:34:27,141 [main][DriverManagerConnectionProviderImpl.java:126] : HHH10001005: using driver [com.mysql.cj.jdbc.Driver] at URL [jdbc:mysql://localhost:3306/classicmodels?serverTimezone=UTC]
INFO  2022-09-08 19:34:27,141 [main][DriverManagerConnectionProviderImpl.java:132] : HHH10001001: Connection properties: {password=rootroot, user=root}
INFO  2022-09-08 19:34:27,142 [main][DriverManagerConnectionProviderImpl.java:140] : HHH10001003: Autocommit mode: false
DEBUG 2022-09-08 19:34:27,144 [main][DelegatingBasicLogger.java:384] : Initializing Connection pool with 1 Connections
INFO  2022-09-08 19:34:27,144 [main][PooledConnections.java:41] : HHH000115: Hibernate connection pool size: 5 (min=1)
DEBUG 2022-09-08 19:34:27,623 [main][JdbcEnvironmentInitiator.java:72] : Database ->
       name : MySQL
    version : 8.0.29
      major : 8
      minor : 0
DEBUG 2022-09-08 19:34:27,624 [main][JdbcEnvironmentInitiator.java:83] : Driver ->
       name : MySQL Connector/J
    version : mysql-connector-java-8.0.29 (Revision: dd61577595edad45c398af508cf91ad26fc4144f)
      major : 8
      minor : 0
DEBUG 2022-09-08 19:34:27,624 [main][DelegatingBasicLogger.java:389] : JDBC version : 4.2
INFO  2022-09-08 19:34:27,630 [main][Dialect.java:153] : HHH000400: Using dialect: org.hibernate.dialect.MySQLDialect
DEBUG 2022-09-08 19:34:27,672 [main][IdentifierHelperBuilder.java:117] : JDBC driver metadata reported database stores quoted identifiers in more than one case
DEBUG 2022-09-08 19:34:27,673 [main][IdentifierHelperBuilder.java:191] : IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [MIXED]; that will likely lead to problems in schema update and validation if using quoted identifiers
DEBUG 2022-09-08 19:34:27,695 [main][DefaultIdentifierGeneratorFactory.java:81] : Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
DEBUG 2022-09-08 19:34:27,696 [main][DefaultIdentifierGeneratorFactory.java:81] : Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
DEBUG 2022-09-08 19:34:27,696 [main][DefaultIdentifierGeneratorFactory.java:81] : Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
DEBUG 2022-09-08 19:34:27,696 [main][DefaultIdentifierGeneratorFactory.java:81] : Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
DEBUG 2022-09-08 19:34:27,697 [main][DefaultIdentifierGeneratorFactory.java:81] : Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
DEBUG 2022-09-08 19:34:27,698 [main][DefaultIdentifierGeneratorFactory.java:81] : Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
DEBUG 2022-09-08 19:34:27,698 [main][DefaultIdentifierGeneratorFactory.java:81] : Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
DEBUG 2022-09-08 19:34:27,699 [main][DefaultIdentifierGeneratorFactory.java:81] : Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
DEBUG 2022-09-08 19:34:27,699 [main][DefaultIdentifierGeneratorFactory.java:81] : Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
DEBUG 2022-09-08 19:34:27,700 [main][DefaultIdentifierGeneratorFactory.java:81] : Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
DEBUG 2022-09-08 19:34:27,701 [main][DefaultIdentifierGeneratorFactory.java:81] : Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
DEBUG 2022-09-08 19:34:27,701 [main][DefaultIdentifierGeneratorFactory.java:81] : Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
DEBUG 2022-09-08 19:34:27,702 [main][DefaultIdentifierGeneratorFactory.java:81] : Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
DEBUG 2022-09-08 19:34:27,702 [main][DefaultIdentifierGeneratorFactory.java:81] : Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
DEBUG 2022-09-08 19:34:27,720 [main][Namespace.java:47] : Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
DEBUG 2022-09-08 19:34:27,732 [main][AnnotationBinder.java:511] : Binding entity from annotated class: org.example.models.Author
DEBUG 2022-09-08 19:34:27,741 [main][Ejb3Column.java:213] : Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
DEBUG 2022-09-08 19:34:27,743 [main][EntityBinder.java:416] : Import with entity name Author
DEBUG 2022-09-08 19:34:27,746 [main][EntityBinder.java:692] : Bind entity org.example.models.Author on table Author
DEBUG 2022-09-08 19:34:27,763 [main][Ejb3Column.java:213] : Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Author), mappingColumn=id, insertable=true, updatable=true, unique=false}
DEBUG 2022-09-08 19:34:27,764 [main][PropertyBinder.java:174] : MetadataSourceProcessor property id with lazy=false
DEBUG 2022-09-08 19:34:27,765 [main][AbstractPropertyHolder.java:89] : Attempting to locate auto-apply AttributeConverter for property [org.example.models.Author:id]
DEBUG 2022-09-08 19:34:27,766 [main][SimpleValueBinder.java:398] : building SimpleValue for id
DEBUG 2022-09-08 19:34:27,767 [main][PropertyBinder.java:265] : Building property id
DEBUG 2022-09-08 19:34:27,769 [main][Ejb3Column.java:213] : Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Author), mappingColumn=null, insertable=true, updatable=true, unique=false}
DEBUG 2022-09-08 19:34:27,774 [main][Ejb3Column.java:213] : Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Author), mappingColumn=element, insertable=true, updatable=true, unique=false}
DEBUG 2022-09-08 19:34:27,775 [main][Ejb3Column.java:213] : Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Author), mappingColumn=books_KEY, insertable=true, updatable=true, unique=false}
DEBUG 2022-09-08 19:34:27,775 [main][Ejb3Column.java:213] : Binding column: Ejb3JoinColumn{logicalColumnName='books_KEY', referencedColumn='null', mappedBy='null'}
DEBUG 2022-09-08 19:34:27,776 [main][Ejb3Column.java:213] : Binding column: Ejb3JoinColumn{logicalColumnName='book_id', referencedColumn='', mappedBy=''}
DEBUG 2022-09-08 19:34:27,776 [main][Ejb3Column.java:213] : Binding column: Ejb3JoinColumn{logicalColumnName='author_id', referencedColumn='', mappedBy=''}
DEBUG 2022-09-08 19:34:27,776 [main][CollectionBinder.java:388] : Collection role: org.example.models.Author.books
DEBUG 2022-09-08 19:34:27,777 [main][PropertyBinder.java:265] : Building property books
DEBUG 2022-09-08 19:34:27,777 [main][Ejb3Column.java:213] : Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Author), mappingColumn=name, insertable=true, updatable=true, unique=false}
DEBUG 2022-09-08 19:34:27,778 [main][PropertyBinder.java:174] : MetadataSourceProcessor property name with lazy=false
DEBUG 2022-09-08 19:34:27,778 [main][AbstractPropertyHolder.java:89] : Attempting to locate auto-apply AttributeConverter for property [org.example.models.Author:name]
DEBUG 2022-09-08 19:34:27,778 [main][SimpleValueBinder.java:398] : building SimpleValue for name
DEBUG 2022-09-08 19:34:27,778 [main][PropertyBinder.java:265] : Building property name
DEBUG 2022-09-08 19:34:27,778 [main][Ejb3Column.java:213] : Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Author), mappingColumn=salary, insertable=true, updatable=true, unique=false}
DEBUG 2022-09-08 19:34:27,778 [main][PropertyBinder.java:174] : MetadataSourceProcessor property salary with lazy=false
DEBUG 2022-09-08 19:34:27,779 [main][AbstractPropertyHolder.java:89] : Attempting to locate auto-apply AttributeConverter for property [org.example.models.Author:salary]
DEBUG 2022-09-08 19:34:27,779 [main][SimpleValueBinder.java:398] : building SimpleValue for salary
DEBUG 2022-09-08 19:34:27,779 [main][PropertyBinder.java:265] : Building property salary
DEBUG 2022-09-08 19:34:27,779 [main][AnnotationBinder.java:511] : Binding entity from annotated class: org.example.models.Book
DEBUG 2022-09-08 19:34:27,779 [main][Ejb3Column.java:213] : Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
DEBUG 2022-09-08 19:34:27,779 [main][EntityBinder.java:416] : Import with entity name Book
DEBUG 2022-09-08 19:34:27,780 [main][EntityBinder.java:692] : Bind entity org.example.models.Book on table Book
DEBUG 2022-09-08 19:34:27,780 [main][Ejb3Column.java:213] : Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Book), mappingColumn=id, insertable=true, updatable=true, unique=false}
DEBUG 2022-09-08 19:34:27,781 [main][PropertyBinder.java:174] : MetadataSourceProcessor property id with lazy=false
DEBUG 2022-09-08 19:34:27,781 [main][AbstractPropertyHolder.java:89] : Attempting to locate auto-apply AttributeConverter for property [org.example.models.Book:id]
DEBUG 2022-09-08 19:34:27,781 [main][SimpleValueBinder.java:398] : building SimpleValue for id
DEBUG 2022-09-08 19:34:27,781 [main][PropertyBinder.java:265] : Building property id
DEBUG 2022-09-08 19:34:27,781 [main][Ejb3Column.java:213] : Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Book), mappingColumn=null, insertable=true, updatable=true, unique=false}
DEBUG 2022-09-08 19:34:27,781 [main][Ejb3Column.java:213] : Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Book), mappingColumn=element, insertable=true, updatable=true, unique=false}
DEBUG 2022-09-08 19:34:27,782 [main][Ejb3Column.java:213] : Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Book), mappingColumn=authors_KEY, insertable=true, updatable=true, unique=false}
DEBUG 2022-09-08 19:34:27,782 [main][Ejb3Column.java:213] : Binding column: Ejb3JoinColumn{logicalColumnName='authors_KEY', referencedColumn='null', mappedBy='null'}
DEBUG 2022-09-08 19:34:27,782 [main][Ejb3Column.java:213] : Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='books'}
DEBUG 2022-09-08 19:34:27,782 [main][Ejb3Column.java:213] : Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='books'}
DEBUG 2022-09-08 19:34:27,782 [main][CollectionBinder.java:388] : Collection role: org.example.models.Book.authors
DEBUG 2022-09-08 19:34:27,782 [main][PropertyBinder.java:265] : Building property authors
DEBUG 2022-09-08 19:34:27,783 [main][Ejb3Column.java:213] : Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Book), mappingColumn=name, insertable=true, updatable=true, unique=false}
DEBUG 2022-09-08 19:34:27,783 [main][PropertyBinder.java:174] : MetadataSourceProcessor property name with lazy=false
DEBUG 2022-09-08 19:34:27,783 [main][AbstractPropertyHolder.java:89] : Attempting to locate auto-apply AttributeConverter for property [org.example.models.Book:name]
DEBUG 2022-09-08 19:34:27,783 [main][SimpleValueBinder.java:398] : building SimpleValue for name
DEBUG 2022-09-08 19:34:27,783 [main][PropertyBinder.java:265] : Building property name
DEBUG 2022-09-08 19:34:27,784 [main][SimpleValueBinder.java:443] : Starting fillSimpleValue for id
DEBUG 2022-09-08 19:34:27,785 [main][SimpleValueBinder.java:443] : Starting fillSimpleValue for name
DEBUG 2022-09-08 19:34:27,785 [main][SimpleValueBinder.java:443] : Starting fillSimpleValue for salary
DEBUG 2022-09-08 19:34:27,785 [main][SimpleValueBinder.java:443] : Starting fillSimpleValue for id
DEBUG 2022-09-08 19:34:27,785 [main][SimpleValueBinder.java:443] : Starting fillSimpleValue for name
DEBUG 2022-09-08 19:34:27,786 [main][PrimaryKey.java:35] : Forcing column [id] to be non-null as it is part of the primary key for table [author]
DEBUG 2022-09-08 19:34:27,786 [main][PrimaryKey.java:35] : Forcing column [id] to be non-null as it is part of the primary key for table [book]
DEBUG 2022-09-08 19:34:27,786 [main][CollectionSecondPass.java:51] : Second pass for collection: org.example.models.Author.books
DEBUG 2022-09-08 19:34:27,786 [main][CollectionBinder.java:1210] : Binding as ManyToMany: org.example.models.Author.books
DEBUG 2022-09-08 19:34:27,788 [main][PrimaryKey.java:35] : Forcing column [book_id] to be non-null as it is part of the primary key for table [authors_books]
DEBUG 2022-09-08 19:34:27,788 [main][PrimaryKey.java:35] : Forcing column [author_id] to be non-null as it is part of the primary key for table [authors_books]
DEBUG 2022-09-08 19:34:27,788 [main][CollectionSecondPass.java:68] : Mapped collection key: book_id, element: author_id
DEBUG 2022-09-08 19:34:27,788 [main][CollectionSecondPass.java:51] : Second pass for collection: org.example.models.Book.authors
DEBUG 2022-09-08 19:34:27,789 [main][CollectionBinder.java:1210] : Binding as ManyToMany: org.example.models.Book.authors
DEBUG 2022-09-08 19:34:27,789 [main][TableBinder.java:565] : Retrieving property org.example.models.Author.books
DEBUG 2022-09-08 19:34:27,789 [main][CollectionSecondPass.java:68] : Mapped collection key: author_id, element: book_id
DEBUG 2022-09-08 19:34:27,789 [main][InFlightMetadataCollectorImpl.java:1798] : Resolving reference to class: org.example.models.Book
DEBUG 2022-09-08 19:34:27,790 [main][InFlightMetadataCollectorImpl.java:1798] : Resolving reference to class: org.example.models.Author
DEBUG 2022-09-08 19:34:27,791 [main][InFlightMetadataCollectorImpl.java:1798] : Resolving reference to class: org.example.models.Book
DEBUG 2022-09-08 19:34:27,791 [main][InFlightMetadataCollectorImpl.java:1798] : Resolving reference to class: org.example.models.Author
DEBUG 2022-09-08 19:34:27,808 [main][SessionFactoryImpl.java:197] : Building session factory
DEBUG 2022-09-08 19:34:27,808 [main][Settings.java:69] : SessionFactory name : null
DEBUG 2022-09-08 19:34:27,809 [main][Settings.java:70] : Automatic flush during beforeCompletion(): enabled
DEBUG 2022-09-08 19:34:27,809 [main][Settings.java:71] : Automatic session close at end of transaction: disabled
DEBUG 2022-09-08 19:34:27,809 [main][Settings.java:73] : Statistics: disabled
DEBUG 2022-09-08 19:34:27,809 [main][Settings.java:75] : Deleted entity synthetic identifier rollback: disabled
DEBUG 2022-09-08 19:34:27,809 [main][Settings.java:76] : Default entity-mode: pojo
DEBUG 2022-09-08 19:34:27,809 [main][Settings.java:77] : Check Nullability in Core (should be disabled when Bean Validation is on): enabled
DEBUG 2022-09-08 19:34:27,809 [main][Settings.java:78] : Allow initialization of lazy state outside session : disabled
DEBUG 2022-09-08 19:34:27,809 [main][Settings.java:80] : Using BatchFetchStyle : LEGACY
DEBUG 2022-09-08 19:34:27,809 [main][Settings.java:81] : Default batch fetch size: -1
DEBUG 2022-09-08 19:34:27,810 [main][Settings.java:82] : Maximum outer join fetch depth: 2
DEBUG 2022-09-08 19:34:27,810 [main][Settings.java:83] : Default null ordering: NONE
DEBUG 2022-09-08 19:34:27,810 [main][Settings.java:84] : Order SQL updates by primary key: disabled
DEBUG 2022-09-08 19:34:27,810 [main][Settings.java:85] : Order SQL inserts for batching: disabled
DEBUG 2022-09-08 19:34:27,810 [main][Settings.java:87] : multi-tenancy strategy : NONE
DEBUG 2022-09-08 19:34:27,810 [main][Settings.java:89] : JTA Track by Thread: enabled
DEBUG 2022-09-08 19:34:27,810 [main][Settings.java:91] : Query language substitutions: {}
DEBUG 2022-09-08 19:34:27,810 [main][Settings.java:92] : JPA query language strict compliance: disabled
DEBUG 2022-09-08 19:34:27,810 [main][Settings.java:93] : Named query checking : enabled
DEBUG 2022-09-08 19:34:27,811 [main][Settings.java:95] : Second-level cache: enabled
DEBUG 2022-09-08 19:34:27,811 [main][Settings.java:96] : Second-level query cache: disabled
DEBUG 2022-09-08 19:34:27,811 [main][Settings.java:97] : Second-level query cache factory: org.hibernate.cache.internal.StandardQueryCacheFactory@91cc8044
DEBUG 2022-09-08 19:34:27,811 [main][Settings.java:98] : Second-level cache region prefix: null
DEBUG 2022-09-08 19:34:27,811 [main][Settings.java:99] : Optimize second-level cache for minimal puts: disabled
DEBUG 2022-09-08 19:34:27,811 [main][Settings.java:100] : Structured second-level cache entries: disabled
DEBUG 2022-09-08 19:34:27,811 [main][Settings.java:101] : Second-level cache direct-reference entries: disabled
DEBUG 2022-09-08 19:34:27,811 [main][Settings.java:102] : Automatic eviction of collection cache: disabled
DEBUG 2022-09-08 19:34:27,811 [main][Settings.java:104] : JDBC batch size: 15
DEBUG 2022-09-08 19:34:27,812 [main][Settings.java:105] : JDBC batch updates for versioned data: enabled
DEBUG 2022-09-08 19:34:27,812 [main][Settings.java:106] : Scrollable result sets: enabled
DEBUG 2022-09-08 19:34:27,812 [main][Settings.java:107] : Wrap result sets: disabled
DEBUG 2022-09-08 19:34:27,812 [main][Settings.java:108] : JDBC3 getGeneratedKeys(): enabled
DEBUG 2022-09-08 19:34:27,812 [main][Settings.java:109] : JDBC result set fetch size: null
DEBUG 2022-09-08 19:34:27,812 [main][Settings.java:110] : Connection release mode: AFTER_TRANSACTION
DEBUG 2022-09-08 19:34:27,812 [main][Settings.java:111] : Generate SQL with comments: disabled
DEBUG 2022-09-08 19:34:27,833 [main][SessionFactoryImpl.java:252] : Session factory constructed with filter configurations : {}
DEBUG 2022-09-08 19:34:27,834 [main][SessionFactoryImpl.java:253] : Instantiating session factory with properties: {awt.toolkit=sun.lwawt.macosx.LWCToolkit, java.specification.version=11, file.encoding.pkg=sun.io, jdk.extensions.version=11.0.15.0, sun.jnu.encoding=UTF-8, hibernate.dialect=org.hibernate.dialect.MySQLDialect, java.class.path=/Users/vdonets/IdeaProjects/testmaven/target/classes:/Users/vdonets/.m2/repository/org/hibernate/hibernate-core/5.2.2.Final/hibernate-core-5.2.2.Final.jar:/Users/vdonets/.m2/repository/org/jboss/logging/jboss-logging/3.3.0.Final/jboss-logging-3.3.0.Final.jar:/Users/vdonets/.m2/repository/org/hibernate/javax/persistence/hibernate-jpa-2.1-api/1.0.0.Final/hibernate-jpa-2.1-api-1.0.0.Final.jar:/Users/vdonets/.m2/repository/org/javassist/javassist/3.20.0-GA/javassist-3.20.0-GA.jar:/Users/vdonets/.m2/repository/antlr/antlr/2.7.7/antlr-2.7.7.jar:/Users/vdonets/.m2/repository/org/apache/geronimo/specs/geronimo-jta_1.1_spec/1.1.1/geronimo-jta_1.1_spec-1.1.1.jar:/Users/vdonets/.m2/repository/org/jboss/jandex/2.0.0.Final/jandex-2.0.0.Final.jar:/Users/vdonets/.m2/repository/com/fasterxml/classmate/1.3.0/classmate-1.3.0.jar:/Users/vdonets/.m2/repository/dom4j/dom4j/1.6.1/dom4j-1.6.1.jar:/Users/vdonets/.m2/repository/org/hibernate/common/hibernate-commons-annotations/5.0.1.Final/hibernate-commons-annotations-5.0.1.Final.jar:/Users/vdonets/.m2/repository/javax/enterprise/cdi-api/1.1/cdi-api-1.1.jar:/Users/vdonets/.m2/repository/javax/el/el-api/2.2/el-api-2.2.jar:/Users/vdonets/.m2/repository/org/jboss/spec/javax/interceptor/jboss-interceptors-api_1.1_spec/1.0.0.Beta1/jboss-interceptors-api_1.1_spec-1.0.0.Beta1.jar:/Users/vdonets/.m2/repository/javax/annotation/jsr250-api/1.0/jsr250-api-1.0.jar:/Users/vdonets/.m2/repository/javax/inject/javax.inject/1/javax.inject-1.jar:/Users/vdonets/.m2/repository/mysql/mysql-connector-java/8.0.29/mysql-connector-java-8.0.29.jar:/Users/vdonets/.m2/repository/com/google/protobuf/protobuf-java/3.19.4/protobuf-java-3.19.4.jar:/Users/vdonets/.m2/repository/jakarta/xml/bind/jakarta.xml.bind-api/2.3.2/jakarta.xml.bind-api-2.3.2.jar:/Users/vdonets/.m2/repository/jakarta/activation/jakarta.activation-api/1.2.1/jakarta.activation-api-1.2.1.jar:/Users/vdonets/.m2/repository/org/glassfish/jaxb/jaxb-runtime/2.3.2/jaxb-runtime-2.3.2.jar:/Users/vdonets/.m2/repository/org/glassfish/jaxb/txw2/2.3.2/txw2-2.3.2.jar:/Users/vdonets/.m2/repository/com/sun/istack/istack-commons-runtime/3.0.8/istack-commons-runtime-3.0.8.jar:/Users/vdonets/.m2/repository/org/jvnet/staxex/stax-ex/1.8.1/stax-ex-1.8.1.jar:/Users/vdonets/.m2/repository/com/sun/xml/fastinfoset/FastInfoset/1.2.16/FastInfoset-1.2.16.jar:/Users/vdonets/.m2/repository/log4j/log4j/1.2.14/log4j-1.2.14.jar:/Applications/IntelliJ IDEA.app/Contents/lib/idea_rt.jar:/Users/vdonets/Library/Caches/JetBrains/IntelliJIdea2022.1/captureAgent/debugger-agent.jar, java.vm.vendor=Eclipse OpenJ9, sun.arch.data.model=64, com.ibm.vm.bitmode=64, hbm2ddl.auto=validate, user.variant=, com.ibm.oti.vm.library.version=29, java.vendor.url=https://www.ibm.com/semeru-runtimes, user.timezone=Europe/Warsaw, java.vm.specification.version=11, os.name=Mac OS X, sun.java.launcher=SUN_STANDARD, user.country=US, sun.boot.library.path=/Users/vdonets/Library/Java/JavaVirtualMachines/semeru-11.0.15/Contents/Home/lib/default:/Users/vdonets/Library/Java/JavaVirtualMachines/semeru-11.0.15/Contents/Home/lib, sun.java.command=org.example.Main, sun.cpu.endian=little, user.home=/Users/vdonets, user.language=en, java.specification.vendor=Oracle Corporation, java.version.date=2022-04-19, java.home=/Users/vdonets/Library/Java/JavaVirtualMachines/semeru-11.0.15/Contents/Home, ibm.signalhandling.rs=false, jdk.extensions.name=Extensions for OpenJDK for Eclipse OpenJ9, file.separator=/, line.separator=
, java.specification.name=Java Platform API Specification, java.vm.specification.vendor=Oracle Corporation, intellij.debug.agent=true, java.compiler=j9jit29, com.ibm.util.extralibs.properties=, java.awt.graphicsenv=sun.awt.CGraphicsEnvironment, com.ibm.oti.configuration=scar, com.ibm.oti.shared.enabled=false, hibernate.hbm2ddl.auto=validate, com.ibm.oti.vm.bootstrap.library.path=/Users/vdonets/Library/Java/JavaVirtualMachines/semeru-11.0.15/Contents/Home/lib/default:/Users/vdonets/Library/Java/JavaVirtualMachines/semeru-11.0.15/Contents/Home/lib, com.ibm.cpu.endian=little, java.fullversion=11.0.15-ea+10
JRE 11 Mac OS X aarch64-64-Bit 20220422_36 (JIT enabled, AOT enabled)
OpenJ9   - 9a84ec34e
OMR      - ab24b6666
JCL      - b7b5b42ea6 based on jdk-11.0.15+10, java.runtime.version=11.0.15-ea+10, user.name=vdonets, path.separator=:, hibernate.connection.username=root, os.version=12.5, java.runtime.name=IBM Semeru Runtime Open Edition, hibernate.connection.url=jdbc:mysql://localhost:3306/classicmodels?serverTimezone=UTC, connection.pool_size=5, ibm.signalhandling.sigint=true, file.encoding=UTF-8, java.vm.name=Eclipse OpenJ9 VM, hibernate.show_sql=true, java.vendor.version=11.0.15.0, ibm.signalhandling.sigchain=true, show_sql=true, hibernate.connection.driver_class=com.mysql.cj.jdbc.Driver, java.vendor.url.bug=https://github.com/ibmruntimes/Semeru-Runtimes/issues, java.io.tmpdir=/var/folders/wv/6c3_66yd6kq3r7z477kwz4lr0000gn/T/, java.version=11.0.15-ea, jboss.modules.system.pkgs=com.intellij.rt, com.ibm.system.agent.path=/Users/vdonets/Library/Java/JavaVirtualMachines/semeru-11.0.15/Contents/Home/lib, user.dir=/Users/vdonets/IdeaProjects/testmaven, os.arch=aarch64, java.vm.specification.name=Java Virtual Machine Specification, java.awt.printerjob=sun.lwawt.macosx.CPrinterJob, hibernate.connection.password=****, os.encoding=UTF-8, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@26ef5027, java.library.path=/Users/vdonets/Library/Java/JavaVirtualMachines/semeru-11.0.15/Contents/Home/lib/default:/Users/vdonets/Library/Java/JavaVirtualMachines/semeru-11.0.15/Contents/Home/lib:/usr/lib, java.vendor=IBM Corporation, java.vm.info=JRE 11 Mac OS X aarch64-64-Bit 20220422_36 (JIT enabled, AOT enabled)
OpenJ9   - 9a84ec34e
OMR      - ab24b6666
JCL      - b7b5b42ea6 based on jdk-11.0.15+10, java.vm.version=openj9-0.32.0, ibm.system.encoding=UTF-8, hibernate.bytecode.use_reflection_optimizer=false, com.ibm.jcl.checkClassPath=, sun.io.unicode.encoding=UnicodeLittle, hibernate.connection.pool_size=5, java.class.version=55.0}
DEBUG 2022-09-08 19:34:27,839 [main][JaccIntegrator.java:80] : Skipping JACC integration as it was not enabled
DEBUG 2022-09-08 19:34:27,840 [main][SessionFactoryImpl.java:292] : Instantiated session factory
DEBUG 2022-09-08 19:34:27,860 [main][ClassLoaderAccessImpl.java:55] : Not known whether passed class name [org.example.models.Book] is safe
DEBUG 2022-09-08 19:34:27,860 [main][ClassLoaderAccessImpl.java:57] : No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.models.Book
DEBUG 2022-09-08 19:34:27,865 [main][ClassLoaderAccessImpl.java:55] : Not known whether passed class name [org.example.models.Book] is safe
DEBUG 2022-09-08 19:34:27,866 [main][ClassLoaderAccessImpl.java:57] : No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.models.Book
DEBUG 2022-09-08 19:34:27,890 [main][ClassLoaderAccessImpl.java:55] : Not known whether passed class name [org.example.models.Author] is safe
DEBUG 2022-09-08 19:34:27,890 [main][ClassLoaderAccessImpl.java:57] : No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.models.Author
DEBUG 2022-09-08 19:34:27,891 [main][ClassLoaderAccessImpl.java:55] : Not known whether passed class name [org.example.models.Author] is safe
DEBUG 2022-09-08 19:34:27,891 [main][ClassLoaderAccessImpl.java:57] : No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.models.Author
DEBUG 2022-09-08 19:34:27,897 [main][AbstractCollectionPersister.java:670] : Static SQL for collection: org.example.models.Book.authors
DEBUG 2022-09-08 19:34:27,897 [main][AbstractCollectionPersister.java:672] :  Row insert: insert into Authors_Books (author_id, book_id) values (?, ?)
DEBUG 2022-09-08 19:34:27,897 [main][AbstractCollectionPersister.java:675] :  Row update: update Authors_Books set book_id=? where author_id=? and book_id=?
DEBUG 2022-09-08 19:34:27,898 [main][AbstractCollectionPersister.java:678] :  Row delete: delete from Authors_Books where author_id=? and book_id=?
DEBUG 2022-09-08 19:34:27,898 [main][AbstractCollectionPersister.java:681] :  One-shot delete: delete from Authors_Books where author_id=?
DEBUG 2022-09-08 19:34:27,898 [main][AbstractCollectionPersister.java:670] : Static SQL for collection: org.example.models.Author.books
DEBUG 2022-09-08 19:34:27,898 [main][AbstractCollectionPersister.java:672] :  Row insert: insert into Authors_Books (book_id, author_id) values (?, ?)
DEBUG 2022-09-08 19:34:27,898 [main][AbstractCollectionPersister.java:675] :  Row update: update Authors_Books set author_id=? where book_id=? and author_id=?
DEBUG 2022-09-08 19:34:27,898 [main][AbstractCollectionPersister.java:678] :  Row delete: delete from Authors_Books where book_id=? and author_id=?
DEBUG 2022-09-08 19:34:27,898 [main][AbstractCollectionPersister.java:681] :  One-shot delete: delete from Authors_Books where book_id=?
DEBUG 2022-09-08 19:34:27,900 [main][AbstractEntityPersister.java:3529] : Static SQL for entity: org.example.models.Book
DEBUG 2022-09-08 19:34:27,900 [main][AbstractEntityPersister.java:3534] :  Version select: select id from Book where id =?
DEBUG 2022-09-08 19:34:27,900 [main][AbstractEntityPersister.java:3537] :  Snapshot select: select book_.id, book_.name as name2_2_ from Book book_ where book_.id=?
DEBUG 2022-09-08 19:34:27,900 [main][DelegatingBasicLogger.java:394] :  Insert 0: insert into Book (name, id) values (?, ?)
DEBUG 2022-09-08 19:34:27,901 [main][DelegatingBasicLogger.java:394] :  Update 0: update Book set name=? where id=?
DEBUG 2022-09-08 19:34:27,901 [main][DelegatingBasicLogger.java:394] :  Delete 0: delete from Book where id=?
DEBUG 2022-09-08 19:34:27,910 [main][QuerySpacesImpl.java:174] : Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@34595320]
DEBUG 2022-09-08 19:34:27,911 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : authors
DEBUG 2022-09-08 19:34:27,912 [main][QuerySpacesImpl.java:174] : Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@41349165]
DEBUG 2022-09-08 19:34:27,913 [main][QuerySpacesImpl.java:174] : Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@397a2a10]
DEBUG 2022-09-08 19:34:27,913 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : name
DEBUG 2022-09-08 19:34:27,913 [main][FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150] : Building LoadPlan...
DEBUG 2022-09-08 19:34:27,918 [main][LoadQueryJoinAndFetchProcessor.java:100] : processing queryspace <gen:0>
DEBUG 2022-09-08 19:34:27,921 [main][LoadPlanTreePrinter.java:55] : LoadPlan(entity=org.example.models.Book)
    - Returns
       - EntityReturnImpl(entity=org.example.models.Book, querySpaceUid=<gen:0>, path=org.example.models.Book)
          - CollectionAttributeFetchImpl(collection=org.example.models.Book.authors, querySpaceUid=<gen:1>, path=org.example.models.Book.authors)
             - (collection element) CollectionFetchableElementEntityGraph(entity=org.example.models.Author, querySpaceUid=<gen:2>, path=org.example.models.Book.authors.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=org.example.models.Book)
          - SQL table alias mapping - book0_
          - alias suffix - 0_
          - suffixed key columns - {id1_2_0_}

DEBUG 2022-09-08 19:34:27,922 [main][EntityLoader.java:115] : Static select for entity org.example.models.Book [NONE]: select book0_.id as id1_2_0_, book0_.name as name2_2_0_ from Book book0_ where book0_.id=?
DEBUG 2022-09-08 19:34:27,923 [main][QuerySpacesImpl.java:174] : Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@979cbe8b]
DEBUG 2022-09-08 19:34:27,923 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : authors
DEBUG 2022-09-08 19:34:27,923 [main][QuerySpacesImpl.java:174] : Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@73492b80]
DEBUG 2022-09-08 19:34:27,923 [main][QuerySpacesImpl.java:174] : Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@bb239b54]
DEBUG 2022-09-08 19:34:27,923 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : name
DEBUG 2022-09-08 19:34:27,923 [main][FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150] : Building LoadPlan...
DEBUG 2022-09-08 19:34:27,924 [main][LoadQueryJoinAndFetchProcessor.java:100] : processing queryspace <gen:0>
DEBUG 2022-09-08 19:34:27,924 [main][LoadPlanTreePrinter.java:55] : LoadPlan(entity=org.example.models.Book)
    - Returns
       - EntityReturnImpl(entity=org.example.models.Book, querySpaceUid=<gen:0>, path=org.example.models.Book)
          - CollectionAttributeFetchImpl(collection=org.example.models.Book.authors, querySpaceUid=<gen:1>, path=org.example.models.Book.authors)
             - (collection element) CollectionFetchableElementEntityGraph(entity=org.example.models.Author, querySpaceUid=<gen:2>, path=org.example.models.Book.authors.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=org.example.models.Book)
          - SQL table alias mapping - book0_
          - alias suffix - 0_
          - suffixed key columns - {id1_2_0_}

DEBUG 2022-09-08 19:34:27,925 [main][EntityLoader.java:115] : Static select for entity org.example.models.Book [READ]: select book0_.id as id1_2_0_, book0_.name as name2_2_0_ from Book book0_ where book0_.id=?
DEBUG 2022-09-08 19:34:27,925 [main][QuerySpacesImpl.java:174] : Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@602bffd1]
DEBUG 2022-09-08 19:34:27,925 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : authors
DEBUG 2022-09-08 19:34:27,925 [main][QuerySpacesImpl.java:174] : Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@b2b09d1b]
DEBUG 2022-09-08 19:34:27,925 [main][QuerySpacesImpl.java:174] : Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@427419c3]
DEBUG 2022-09-08 19:34:27,925 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : name
DEBUG 2022-09-08 19:34:27,925 [main][FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150] : Building LoadPlan...
DEBUG 2022-09-08 19:34:27,926 [main][LoadQueryJoinAndFetchProcessor.java:100] : processing queryspace <gen:0>
DEBUG 2022-09-08 19:34:27,926 [main][LoadPlanTreePrinter.java:55] : LoadPlan(entity=org.example.models.Book)
    - Returns
       - EntityReturnImpl(entity=org.example.models.Book, querySpaceUid=<gen:0>, path=org.example.models.Book)
          - CollectionAttributeFetchImpl(collection=org.example.models.Book.authors, querySpaceUid=<gen:1>, path=org.example.models.Book.authors)
             - (collection element) CollectionFetchableElementEntityGraph(entity=org.example.models.Author, querySpaceUid=<gen:2>, path=org.example.models.Book.authors.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=org.example.models.Book)
          - SQL table alias mapping - book0_
          - alias suffix - 0_
          - suffixed key columns - {id1_2_0_}

DEBUG 2022-09-08 19:34:27,926 [main][EntityLoader.java:115] : Static select for entity org.example.models.Book [UPGRADE]: select book0_.id as id1_2_0_, book0_.name as name2_2_0_ from Book book0_ where book0_.id=? for update
DEBUG 2022-09-08 19:34:27,926 [main][QuerySpacesImpl.java:174] : Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@30afc1af]
DEBUG 2022-09-08 19:34:27,927 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : authors
DEBUG 2022-09-08 19:34:27,927 [main][QuerySpacesImpl.java:174] : Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@87fc79ac]
DEBUG 2022-09-08 19:34:27,927 [main][QuerySpacesImpl.java:174] : Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4b7927ac]
DEBUG 2022-09-08 19:34:27,927 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : name
DEBUG 2022-09-08 19:34:27,927 [main][FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150] : Building LoadPlan...
DEBUG 2022-09-08 19:34:27,928 [main][LoadQueryJoinAndFetchProcessor.java:100] : processing queryspace <gen:0>
DEBUG 2022-09-08 19:34:27,928 [main][LoadPlanTreePrinter.java:55] : LoadPlan(entity=org.example.models.Book)
    - Returns
       - EntityReturnImpl(entity=org.example.models.Book, querySpaceUid=<gen:0>, path=org.example.models.Book)
          - CollectionAttributeFetchImpl(collection=org.example.models.Book.authors, querySpaceUid=<gen:1>, path=org.example.models.Book.authors)
             - (collection element) CollectionFetchableElementEntityGraph(entity=org.example.models.Author, querySpaceUid=<gen:2>, path=org.example.models.Book.authors.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=org.example.models.Book)
          - SQL table alias mapping - book0_
          - alias suffix - 0_
          - suffixed key columns - {id1_2_0_}

DEBUG 2022-09-08 19:34:27,928 [main][EntityLoader.java:115] : Static select for entity org.example.models.Book [UPGRADE_NOWAIT]: select book0_.id as id1_2_0_, book0_.name as name2_2_0_ from Book book0_ where book0_.id=? for update
DEBUG 2022-09-08 19:34:27,929 [main][QuerySpacesImpl.java:174] : Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@56780949]
DEBUG 2022-09-08 19:34:27,929 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : authors
DEBUG 2022-09-08 19:34:27,929 [main][QuerySpacesImpl.java:174] : Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@330294fb]
DEBUG 2022-09-08 19:34:27,929 [main][QuerySpacesImpl.java:174] : Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@c13b179f]
DEBUG 2022-09-08 19:34:27,929 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : name
DEBUG 2022-09-08 19:34:27,929 [main][FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150] : Building LoadPlan...
DEBUG 2022-09-08 19:34:27,930 [main][LoadQueryJoinAndFetchProcessor.java:100] : processing queryspace <gen:0>
DEBUG 2022-09-08 19:34:27,931 [main][LoadPlanTreePrinter.java:55] : LoadPlan(entity=org.example.models.Book)
    - Returns
       - EntityReturnImpl(entity=org.example.models.Book, querySpaceUid=<gen:0>, path=org.example.models.Book)
          - CollectionAttributeFetchImpl(collection=org.example.models.Book.authors, querySpaceUid=<gen:1>, path=org.example.models.Book.authors)
             - (collection element) CollectionFetchableElementEntityGraph(entity=org.example.models.Author, querySpaceUid=<gen:2>, path=org.example.models.Book.authors.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=org.example.models.Book)
          - SQL table alias mapping - book0_
          - alias suffix - 0_
          - suffixed key columns - {id1_2_0_}

DEBUG 2022-09-08 19:34:27,931 [main][EntityLoader.java:115] : Static select for entity org.example.models.Book [UPGRADE_SKIPLOCKED]: select book0_.id as id1_2_0_, book0_.name as name2_2_0_ from Book book0_ where book0_.id=? for update
DEBUG 2022-09-08 19:34:27,931 [main][QuerySpacesImpl.java:174] : Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@8ee2688a]
DEBUG 2022-09-08 19:34:27,931 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : authors
DEBUG 2022-09-08 19:34:27,932 [main][QuerySpacesImpl.java:174] : Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@e323fc25]
DEBUG 2022-09-08 19:34:27,932 [main][QuerySpacesImpl.java:174] : Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@b58bdca8]
DEBUG 2022-09-08 19:34:27,932 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : name
DEBUG 2022-09-08 19:34:27,932 [main][FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150] : Building LoadPlan...
DEBUG 2022-09-08 19:34:27,932 [main][LoadQueryJoinAndFetchProcessor.java:100] : processing queryspace <gen:0>
DEBUG 2022-09-08 19:34:27,933 [main][LoadPlanTreePrinter.java:55] : LoadPlan(entity=org.example.models.Book)
    - Returns
       - EntityReturnImpl(entity=org.example.models.Book, querySpaceUid=<gen:0>, path=org.example.models.Book)
          - CollectionAttributeFetchImpl(collection=org.example.models.Book.authors, querySpaceUid=<gen:1>, path=org.example.models.Book.authors)
             - (collection element) CollectionFetchableElementEntityGraph(entity=org.example.models.Author, querySpaceUid=<gen:2>, path=org.example.models.Book.authors.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=org.example.models.Book)
          - SQL table alias mapping - book0_
          - alias suffix - 0_
          - suffixed key columns - {id1_2_0_}

DEBUG 2022-09-08 19:34:27,933 [main][EntityLoader.java:115] : Static select for entity org.example.models.Book [FORCE]: select book0_.id as id1_2_0_, book0_.name as name2_2_0_ from Book book0_ where book0_.id=? for update
DEBUG 2022-09-08 19:34:27,933 [main][QuerySpacesImpl.java:174] : Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@f013fef0]
DEBUG 2022-09-08 19:34:27,933 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : authors
DEBUG 2022-09-08 19:34:27,934 [main][QuerySpacesImpl.java:174] : Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@3866b7f6]
DEBUG 2022-09-08 19:34:27,934 [main][QuerySpacesImpl.java:174] : Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@bd48f19]
DEBUG 2022-09-08 19:34:27,935 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : name
DEBUG 2022-09-08 19:34:27,935 [main][FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150] : Building LoadPlan...
DEBUG 2022-09-08 19:34:27,935 [main][LoadQueryJoinAndFetchProcessor.java:100] : processing queryspace <gen:0>
DEBUG 2022-09-08 19:34:27,936 [main][LoadPlanTreePrinter.java:55] : LoadPlan(entity=org.example.models.Book)
    - Returns
       - EntityReturnImpl(entity=org.example.models.Book, querySpaceUid=<gen:0>, path=org.example.models.Book)
          - CollectionAttributeFetchImpl(collection=org.example.models.Book.authors, querySpaceUid=<gen:1>, path=org.example.models.Book.authors)
             - (collection element) CollectionFetchableElementEntityGraph(entity=org.example.models.Author, querySpaceUid=<gen:2>, path=org.example.models.Book.authors.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=org.example.models.Book)
          - SQL table alias mapping - book0_
          - alias suffix - 0_
          - suffixed key columns - {id1_2_0_}

DEBUG 2022-09-08 19:34:27,936 [main][EntityLoader.java:115] : Static select for entity org.example.models.Book [PESSIMISTIC_READ]: select book0_.id as id1_2_0_, book0_.name as name2_2_0_ from Book book0_ where book0_.id=? lock in share mode
DEBUG 2022-09-08 19:34:27,936 [main][QuerySpacesImpl.java:174] : Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@12821f8c]
DEBUG 2022-09-08 19:34:27,936 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : authors
DEBUG 2022-09-08 19:34:27,936 [main][QuerySpacesImpl.java:174] : Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@fa2b031b]
DEBUG 2022-09-08 19:34:27,937 [main][QuerySpacesImpl.java:174] : Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@c5fb82e4]
DEBUG 2022-09-08 19:34:27,937 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : name
DEBUG 2022-09-08 19:34:27,937 [main][FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150] : Building LoadPlan...
DEBUG 2022-09-08 19:34:27,937 [main][LoadQueryJoinAndFetchProcessor.java:100] : processing queryspace <gen:0>
DEBUG 2022-09-08 19:34:27,938 [main][LoadPlanTreePrinter.java:55] : LoadPlan(entity=org.example.models.Book)
    - Returns
       - EntityReturnImpl(entity=org.example.models.Book, querySpaceUid=<gen:0>, path=org.example.models.Book)
          - CollectionAttributeFetchImpl(collection=org.example.models.Book.authors, querySpaceUid=<gen:1>, path=org.example.models.Book.authors)
             - (collection element) CollectionFetchableElementEntityGraph(entity=org.example.models.Author, querySpaceUid=<gen:2>, path=org.example.models.Book.authors.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=org.example.models.Book)
          - SQL table alias mapping - book0_
          - alias suffix - 0_
          - suffixed key columns - {id1_2_0_}

DEBUG 2022-09-08 19:34:27,938 [main][EntityLoader.java:115] : Static select for entity org.example.models.Book [PESSIMISTIC_WRITE]: select book0_.id as id1_2_0_, book0_.name as name2_2_0_ from Book book0_ where book0_.id=? for update
DEBUG 2022-09-08 19:34:27,938 [main][QuerySpacesImpl.java:174] : Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@b42a1bc7]
DEBUG 2022-09-08 19:34:27,938 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : authors
DEBUG 2022-09-08 19:34:27,938 [main][QuerySpacesImpl.java:174] : Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@8dbd4b3b]
DEBUG 2022-09-08 19:34:27,938 [main][QuerySpacesImpl.java:174] : Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2b95ff23]
DEBUG 2022-09-08 19:34:27,939 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : name
DEBUG 2022-09-08 19:34:27,939 [main][FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150] : Building LoadPlan...
DEBUG 2022-09-08 19:34:27,939 [main][LoadQueryJoinAndFetchProcessor.java:100] : processing queryspace <gen:0>
DEBUG 2022-09-08 19:34:27,939 [main][LoadPlanTreePrinter.java:55] : LoadPlan(entity=org.example.models.Book)
    - Returns
       - EntityReturnImpl(entity=org.example.models.Book, querySpaceUid=<gen:0>, path=org.example.models.Book)
          - CollectionAttributeFetchImpl(collection=org.example.models.Book.authors, querySpaceUid=<gen:1>, path=org.example.models.Book.authors)
             - (collection element) CollectionFetchableElementEntityGraph(entity=org.example.models.Author, querySpaceUid=<gen:2>, path=org.example.models.Book.authors.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=org.example.models.Book)
          - SQL table alias mapping - book0_
          - alias suffix - 0_
          - suffixed key columns - {id1_2_0_}

DEBUG 2022-09-08 19:34:27,939 [main][EntityLoader.java:115] : Static select for entity org.example.models.Book [PESSIMISTIC_FORCE_INCREMENT]: select book0_.id as id1_2_0_, book0_.name as name2_2_0_ from Book book0_ where book0_.id=? for update
DEBUG 2022-09-08 19:34:27,940 [main][QuerySpacesImpl.java:174] : Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2052d4f8]
DEBUG 2022-09-08 19:34:27,941 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : authors
DEBUG 2022-09-08 19:34:27,941 [main][QuerySpacesImpl.java:174] : Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@a4d50de3]
DEBUG 2022-09-08 19:34:27,941 [main][QuerySpacesImpl.java:174] : Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@34de3569]
DEBUG 2022-09-08 19:34:27,941 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : name
DEBUG 2022-09-08 19:34:27,941 [main][FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150] : Building LoadPlan...
DEBUG 2022-09-08 19:34:27,941 [main][LoadQueryJoinAndFetchProcessor.java:100] : processing queryspace <gen:0>
DEBUG 2022-09-08 19:34:27,942 [main][LoadPlanTreePrinter.java:55] : LoadPlan(entity=org.example.models.Book)
    - Returns
       - EntityReturnImpl(entity=org.example.models.Book, querySpaceUid=<gen:0>, path=org.example.models.Book)
          - CollectionAttributeFetchImpl(collection=org.example.models.Book.authors, querySpaceUid=<gen:1>, path=org.example.models.Book.authors)
             - (collection element) CollectionFetchableElementEntityGraph(entity=org.example.models.Author, querySpaceUid=<gen:2>, path=org.example.models.Book.authors.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=org.example.models.Book)
          - SQL table alias mapping - book0_
          - alias suffix - 0_
          - suffixed key columns - {id1_2_0_}

DEBUG 2022-09-08 19:34:27,942 [main][EntityLoader.java:115] : Static select for entity org.example.models.Book [OPTIMISTIC]: select book0_.id as id1_2_0_, book0_.name as name2_2_0_ from Book book0_ where book0_.id=?
DEBUG 2022-09-08 19:34:27,942 [main][QuerySpacesImpl.java:174] : Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1d9cc636]
DEBUG 2022-09-08 19:34:27,943 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : authors
DEBUG 2022-09-08 19:34:27,943 [main][QuerySpacesImpl.java:174] : Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@d518cd2c]
DEBUG 2022-09-08 19:34:27,943 [main][QuerySpacesImpl.java:174] : Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1539826f]
DEBUG 2022-09-08 19:34:27,943 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : name
DEBUG 2022-09-08 19:34:27,943 [main][FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150] : Building LoadPlan...
DEBUG 2022-09-08 19:34:27,943 [main][LoadQueryJoinAndFetchProcessor.java:100] : processing queryspace <gen:0>
DEBUG 2022-09-08 19:34:27,944 [main][LoadPlanTreePrinter.java:55] : LoadPlan(entity=org.example.models.Book)
    - Returns
       - EntityReturnImpl(entity=org.example.models.Book, querySpaceUid=<gen:0>, path=org.example.models.Book)
          - CollectionAttributeFetchImpl(collection=org.example.models.Book.authors, querySpaceUid=<gen:1>, path=org.example.models.Book.authors)
             - (collection element) CollectionFetchableElementEntityGraph(entity=org.example.models.Author, querySpaceUid=<gen:2>, path=org.example.models.Book.authors.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=org.example.models.Book)
          - SQL table alias mapping - book0_
          - alias suffix - 0_
          - suffixed key columns - {id1_2_0_}

DEBUG 2022-09-08 19:34:27,944 [main][EntityLoader.java:115] : Static select for entity org.example.models.Book [OPTIMISTIC_FORCE_INCREMENT]: select book0_.id as id1_2_0_, book0_.name as name2_2_0_ from Book book0_ where book0_.id=?
DEBUG 2022-09-08 19:34:27,949 [main][CascadeEntityLoader.java:38] : Static select for action ACTION_MERGE on entity org.example.models.Book: select book0_.id as id1_2_0_, book0_.name as name2_2_0_ from Book book0_ where book0_.id=?
DEBUG 2022-09-08 19:34:27,949 [main][CascadeEntityLoader.java:38] : Static select for action ACTION_REFRESH on entity org.example.models.Book: select book0_.id as id1_2_0_, book0_.name as name2_2_0_ from Book book0_ where book0_.id=?
DEBUG 2022-09-08 19:34:27,950 [main][AbstractEntityPersister.java:3529] : Static SQL for entity: org.example.models.Author
DEBUG 2022-09-08 19:34:27,950 [main][AbstractEntityPersister.java:3534] :  Version select: select id from Author where id =?
DEBUG 2022-09-08 19:34:27,950 [main][AbstractEntityPersister.java:3537] :  Snapshot select: select author_.id, author_.name as name2_0_, author_.salary as salary3_0_ from Author author_ where author_.id=?
DEBUG 2022-09-08 19:34:27,950 [main][DelegatingBasicLogger.java:394] :  Insert 0: insert into Author (name, salary, id) values (?, ?, ?)
DEBUG 2022-09-08 19:34:27,951 [main][DelegatingBasicLogger.java:394] :  Update 0: update Author set name=?, salary=? where id=?
DEBUG 2022-09-08 19:34:27,951 [main][DelegatingBasicLogger.java:394] :  Delete 0: delete from Author where id=?
DEBUG 2022-09-08 19:34:27,951 [main][AbstractEntityPersister.java:3545] :  Identity insert: insert into Author (name, salary) values (?, ?)
DEBUG 2022-09-08 19:34:27,951 [main][QuerySpacesImpl.java:174] : Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@56e886f5]
DEBUG 2022-09-08 19:34:27,951 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : books
DEBUG 2022-09-08 19:34:27,952 [main][QuerySpacesImpl.java:174] : Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@db2800cc]
DEBUG 2022-09-08 19:34:27,953 [main][QuerySpacesImpl.java:174] : Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@318d47e3]
DEBUG 2022-09-08 19:34:27,953 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : name
DEBUG 2022-09-08 19:34:27,953 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : salary
DEBUG 2022-09-08 19:34:27,953 [main][FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150] : Building LoadPlan...
DEBUG 2022-09-08 19:34:27,953 [main][LoadQueryJoinAndFetchProcessor.java:100] : processing queryspace <gen:0>
DEBUG 2022-09-08 19:34:27,954 [main][LoadPlanTreePrinter.java:55] : LoadPlan(entity=org.example.models.Author)
    - Returns
       - EntityReturnImpl(entity=org.example.models.Author, querySpaceUid=<gen:0>, path=org.example.models.Author)
          - CollectionAttributeFetchImpl(collection=org.example.models.Author.books, querySpaceUid=<gen:1>, path=org.example.models.Author.books)
             - (collection element) CollectionFetchableElementEntityGraph(entity=org.example.models.Book, querySpaceUid=<gen:2>, path=org.example.models.Author.books.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=org.example.models.Author)
          - SQL table alias mapping - author0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

DEBUG 2022-09-08 19:34:27,954 [main][EntityLoader.java:115] : Static select for entity org.example.models.Author [NONE]: select author0_.id as id1_0_0_, author0_.name as name2_0_0_, author0_.salary as salary3_0_0_ from Author author0_ where author0_.id=?
DEBUG 2022-09-08 19:34:27,954 [main][QuerySpacesImpl.java:174] : Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@eb52892b]
DEBUG 2022-09-08 19:34:27,955 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : books
DEBUG 2022-09-08 19:34:27,955 [main][QuerySpacesImpl.java:174] : Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@1545b883]
DEBUG 2022-09-08 19:34:27,955 [main][QuerySpacesImpl.java:174] : Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@f2e76a76]
DEBUG 2022-09-08 19:34:27,955 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : name
DEBUG 2022-09-08 19:34:27,955 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : salary
DEBUG 2022-09-08 19:34:27,955 [main][FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150] : Building LoadPlan...
DEBUG 2022-09-08 19:34:27,955 [main][LoadQueryJoinAndFetchProcessor.java:100] : processing queryspace <gen:0>
DEBUG 2022-09-08 19:34:27,956 [main][LoadPlanTreePrinter.java:55] : LoadPlan(entity=org.example.models.Author)
    - Returns
       - EntityReturnImpl(entity=org.example.models.Author, querySpaceUid=<gen:0>, path=org.example.models.Author)
          - CollectionAttributeFetchImpl(collection=org.example.models.Author.books, querySpaceUid=<gen:1>, path=org.example.models.Author.books)
             - (collection element) CollectionFetchableElementEntityGraph(entity=org.example.models.Book, querySpaceUid=<gen:2>, path=org.example.models.Author.books.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=org.example.models.Author)
          - SQL table alias mapping - author0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

DEBUG 2022-09-08 19:34:27,956 [main][EntityLoader.java:115] : Static select for entity org.example.models.Author [READ]: select author0_.id as id1_0_0_, author0_.name as name2_0_0_, author0_.salary as salary3_0_0_ from Author author0_ where author0_.id=?
DEBUG 2022-09-08 19:34:27,956 [main][QuerySpacesImpl.java:174] : Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@b7f0d19c]
DEBUG 2022-09-08 19:34:27,956 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : books
DEBUG 2022-09-08 19:34:27,956 [main][QuerySpacesImpl.java:174] : Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@e77a5b53]
DEBUG 2022-09-08 19:34:27,957 [main][QuerySpacesImpl.java:174] : Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@24e91a9f]
DEBUG 2022-09-08 19:34:27,957 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : name
DEBUG 2022-09-08 19:34:27,957 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : salary
DEBUG 2022-09-08 19:34:27,957 [main][FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150] : Building LoadPlan...
DEBUG 2022-09-08 19:34:27,957 [main][LoadQueryJoinAndFetchProcessor.java:100] : processing queryspace <gen:0>
DEBUG 2022-09-08 19:34:27,958 [main][LoadPlanTreePrinter.java:55] : LoadPlan(entity=org.example.models.Author)
    - Returns
       - EntityReturnImpl(entity=org.example.models.Author, querySpaceUid=<gen:0>, path=org.example.models.Author)
          - CollectionAttributeFetchImpl(collection=org.example.models.Author.books, querySpaceUid=<gen:1>, path=org.example.models.Author.books)
             - (collection element) CollectionFetchableElementEntityGraph(entity=org.example.models.Book, querySpaceUid=<gen:2>, path=org.example.models.Author.books.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=org.example.models.Author)
          - SQL table alias mapping - author0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

DEBUG 2022-09-08 19:34:27,958 [main][EntityLoader.java:115] : Static select for entity org.example.models.Author [UPGRADE]: select author0_.id as id1_0_0_, author0_.name as name2_0_0_, author0_.salary as salary3_0_0_ from Author author0_ where author0_.id=? for update
DEBUG 2022-09-08 19:34:27,958 [main][QuerySpacesImpl.java:174] : Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@b6a279e5]
DEBUG 2022-09-08 19:34:27,958 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : books
DEBUG 2022-09-08 19:34:27,958 [main][QuerySpacesImpl.java:174] : Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@6d07c3d6]
DEBUG 2022-09-08 19:34:27,959 [main][QuerySpacesImpl.java:174] : Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2d480a13]
DEBUG 2022-09-08 19:34:27,959 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : name
DEBUG 2022-09-08 19:34:27,959 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : salary
DEBUG 2022-09-08 19:34:27,959 [main][FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150] : Building LoadPlan...
DEBUG 2022-09-08 19:34:27,959 [main][LoadQueryJoinAndFetchProcessor.java:100] : processing queryspace <gen:0>
DEBUG 2022-09-08 19:34:27,960 [main][LoadPlanTreePrinter.java:55] : LoadPlan(entity=org.example.models.Author)
    - Returns
       - EntityReturnImpl(entity=org.example.models.Author, querySpaceUid=<gen:0>, path=org.example.models.Author)
          - CollectionAttributeFetchImpl(collection=org.example.models.Author.books, querySpaceUid=<gen:1>, path=org.example.models.Author.books)
             - (collection element) CollectionFetchableElementEntityGraph(entity=org.example.models.Book, querySpaceUid=<gen:2>, path=org.example.models.Author.books.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=org.example.models.Author)
          - SQL table alias mapping - author0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

DEBUG 2022-09-08 19:34:27,960 [main][EntityLoader.java:115] : Static select for entity org.example.models.Author [UPGRADE_NOWAIT]: select author0_.id as id1_0_0_, author0_.name as name2_0_0_, author0_.salary as salary3_0_0_ from Author author0_ where author0_.id=? for update
DEBUG 2022-09-08 19:34:27,960 [main][QuerySpacesImpl.java:174] : Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@a790507b]
DEBUG 2022-09-08 19:34:27,960 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : books
DEBUG 2022-09-08 19:34:27,960 [main][QuerySpacesImpl.java:174] : Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@7fc8575b]
DEBUG 2022-09-08 19:34:27,961 [main][QuerySpacesImpl.java:174] : Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@fb7356d2]
DEBUG 2022-09-08 19:34:27,961 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : name
DEBUG 2022-09-08 19:34:27,962 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : salary
DEBUG 2022-09-08 19:34:27,962 [main][FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150] : Building LoadPlan...
DEBUG 2022-09-08 19:34:27,962 [main][LoadQueryJoinAndFetchProcessor.java:100] : processing queryspace <gen:0>
DEBUG 2022-09-08 19:34:27,962 [main][LoadPlanTreePrinter.java:55] : LoadPlan(entity=org.example.models.Author)
    - Returns
       - EntityReturnImpl(entity=org.example.models.Author, querySpaceUid=<gen:0>, path=org.example.models.Author)
          - CollectionAttributeFetchImpl(collection=org.example.models.Author.books, querySpaceUid=<gen:1>, path=org.example.models.Author.books)
             - (collection element) CollectionFetchableElementEntityGraph(entity=org.example.models.Book, querySpaceUid=<gen:2>, path=org.example.models.Author.books.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=org.example.models.Author)
          - SQL table alias mapping - author0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

DEBUG 2022-09-08 19:34:27,963 [main][EntityLoader.java:115] : Static select for entity org.example.models.Author [UPGRADE_SKIPLOCKED]: select author0_.id as id1_0_0_, author0_.name as name2_0_0_, author0_.salary as salary3_0_0_ from Author author0_ where author0_.id=? for update
DEBUG 2022-09-08 19:34:27,963 [main][QuerySpacesImpl.java:174] : Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@d639b394]
DEBUG 2022-09-08 19:34:27,963 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : books
DEBUG 2022-09-08 19:34:27,963 [main][QuerySpacesImpl.java:174] : Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@62b48f1]
DEBUG 2022-09-08 19:34:27,963 [main][QuerySpacesImpl.java:174] : Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@318c29d9]
DEBUG 2022-09-08 19:34:27,963 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : name
DEBUG 2022-09-08 19:34:27,964 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : salary
DEBUG 2022-09-08 19:34:27,964 [main][FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150] : Building LoadPlan...
DEBUG 2022-09-08 19:34:27,964 [main][LoadQueryJoinAndFetchProcessor.java:100] : processing queryspace <gen:0>
DEBUG 2022-09-08 19:34:27,964 [main][LoadPlanTreePrinter.java:55] : LoadPlan(entity=org.example.models.Author)
    - Returns
       - EntityReturnImpl(entity=org.example.models.Author, querySpaceUid=<gen:0>, path=org.example.models.Author)
          - CollectionAttributeFetchImpl(collection=org.example.models.Author.books, querySpaceUid=<gen:1>, path=org.example.models.Author.books)
             - (collection element) CollectionFetchableElementEntityGraph(entity=org.example.models.Book, querySpaceUid=<gen:2>, path=org.example.models.Author.books.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=org.example.models.Author)
          - SQL table alias mapping - author0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

DEBUG 2022-09-08 19:34:27,964 [main][EntityLoader.java:115] : Static select for entity org.example.models.Author [FORCE]: select author0_.id as id1_0_0_, author0_.name as name2_0_0_, author0_.salary as salary3_0_0_ from Author author0_ where author0_.id=? for update
DEBUG 2022-09-08 19:34:27,965 [main][QuerySpacesImpl.java:174] : Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@d6e48ba8]
DEBUG 2022-09-08 19:34:27,965 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : books
DEBUG 2022-09-08 19:34:27,965 [main][QuerySpacesImpl.java:174] : Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@4647460c]
DEBUG 2022-09-08 19:34:27,965 [main][QuerySpacesImpl.java:174] : Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1036d4a8]
DEBUG 2022-09-08 19:34:27,965 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : name
DEBUG 2022-09-08 19:34:27,965 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : salary
DEBUG 2022-09-08 19:34:27,965 [main][FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150] : Building LoadPlan...
DEBUG 2022-09-08 19:34:27,966 [main][LoadQueryJoinAndFetchProcessor.java:100] : processing queryspace <gen:0>
DEBUG 2022-09-08 19:34:27,966 [main][LoadPlanTreePrinter.java:55] : LoadPlan(entity=org.example.models.Author)
    - Returns
       - EntityReturnImpl(entity=org.example.models.Author, querySpaceUid=<gen:0>, path=org.example.models.Author)
          - CollectionAttributeFetchImpl(collection=org.example.models.Author.books, querySpaceUid=<gen:1>, path=org.example.models.Author.books)
             - (collection element) CollectionFetchableElementEntityGraph(entity=org.example.models.Book, querySpaceUid=<gen:2>, path=org.example.models.Author.books.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=org.example.models.Author)
          - SQL table alias mapping - author0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

DEBUG 2022-09-08 19:34:27,966 [main][EntityLoader.java:115] : Static select for entity org.example.models.Author [PESSIMISTIC_READ]: select author0_.id as id1_0_0_, author0_.name as name2_0_0_, author0_.salary as salary3_0_0_ from Author author0_ where author0_.id=? lock in share mode
DEBUG 2022-09-08 19:34:27,966 [main][QuerySpacesImpl.java:174] : Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@57f76adc]
DEBUG 2022-09-08 19:34:27,967 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : books
DEBUG 2022-09-08 19:34:27,967 [main][QuerySpacesImpl.java:174] : Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@6cc9c552]
DEBUG 2022-09-08 19:34:27,967 [main][QuerySpacesImpl.java:174] : Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@bc9d4909]
DEBUG 2022-09-08 19:34:27,967 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : name
DEBUG 2022-09-08 19:34:27,967 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : salary
DEBUG 2022-09-08 19:34:27,967 [main][FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150] : Building LoadPlan...
DEBUG 2022-09-08 19:34:27,967 [main][LoadQueryJoinAndFetchProcessor.java:100] : processing queryspace <gen:0>
DEBUG 2022-09-08 19:34:27,968 [main][LoadPlanTreePrinter.java:55] : LoadPlan(entity=org.example.models.Author)
    - Returns
       - EntityReturnImpl(entity=org.example.models.Author, querySpaceUid=<gen:0>, path=org.example.models.Author)
          - CollectionAttributeFetchImpl(collection=org.example.models.Author.books, querySpaceUid=<gen:1>, path=org.example.models.Author.books)
             - (collection element) CollectionFetchableElementEntityGraph(entity=org.example.models.Book, querySpaceUid=<gen:2>, path=org.example.models.Author.books.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=org.example.models.Author)
          - SQL table alias mapping - author0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

DEBUG 2022-09-08 19:34:27,968 [main][EntityLoader.java:115] : Static select for entity org.example.models.Author [PESSIMISTIC_WRITE]: select author0_.id as id1_0_0_, author0_.name as name2_0_0_, author0_.salary as salary3_0_0_ from Author author0_ where author0_.id=? for update
DEBUG 2022-09-08 19:34:27,968 [main][QuerySpacesImpl.java:174] : Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@cd1bdf02]
DEBUG 2022-09-08 19:34:27,968 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : books
DEBUG 2022-09-08 19:34:27,968 [main][QuerySpacesImpl.java:174] : Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@1585b354]
DEBUG 2022-09-08 19:34:27,969 [main][QuerySpacesImpl.java:174] : Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@18aa22b6]
DEBUG 2022-09-08 19:34:27,969 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : name
DEBUG 2022-09-08 19:34:27,969 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : salary
DEBUG 2022-09-08 19:34:27,969 [main][FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150] : Building LoadPlan...
DEBUG 2022-09-08 19:34:27,969 [main][LoadQueryJoinAndFetchProcessor.java:100] : processing queryspace <gen:0>
DEBUG 2022-09-08 19:34:27,970 [main][LoadPlanTreePrinter.java:55] : LoadPlan(entity=org.example.models.Author)
    - Returns
       - EntityReturnImpl(entity=org.example.models.Author, querySpaceUid=<gen:0>, path=org.example.models.Author)
          - CollectionAttributeFetchImpl(collection=org.example.models.Author.books, querySpaceUid=<gen:1>, path=org.example.models.Author.books)
             - (collection element) CollectionFetchableElementEntityGraph(entity=org.example.models.Book, querySpaceUid=<gen:2>, path=org.example.models.Author.books.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=org.example.models.Author)
          - SQL table alias mapping - author0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

DEBUG 2022-09-08 19:34:27,970 [main][EntityLoader.java:115] : Static select for entity org.example.models.Author [PESSIMISTIC_FORCE_INCREMENT]: select author0_.id as id1_0_0_, author0_.name as name2_0_0_, author0_.salary as salary3_0_0_ from Author author0_ where author0_.id=? for update
DEBUG 2022-09-08 19:34:27,970 [main][QuerySpacesImpl.java:174] : Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@51b0d257]
DEBUG 2022-09-08 19:34:27,970 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : books
DEBUG 2022-09-08 19:34:27,970 [main][QuerySpacesImpl.java:174] : Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@9345dc54]
DEBUG 2022-09-08 19:34:27,971 [main][QuerySpacesImpl.java:174] : Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@c0c5c9ce]
DEBUG 2022-09-08 19:34:27,971 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : name
DEBUG 2022-09-08 19:34:27,971 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : salary
DEBUG 2022-09-08 19:34:27,971 [main][FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150] : Building LoadPlan...
DEBUG 2022-09-08 19:34:27,971 [main][LoadQueryJoinAndFetchProcessor.java:100] : processing queryspace <gen:0>
DEBUG 2022-09-08 19:34:27,971 [main][LoadPlanTreePrinter.java:55] : LoadPlan(entity=org.example.models.Author)
    - Returns
       - EntityReturnImpl(entity=org.example.models.Author, querySpaceUid=<gen:0>, path=org.example.models.Author)
          - CollectionAttributeFetchImpl(collection=org.example.models.Author.books, querySpaceUid=<gen:1>, path=org.example.models.Author.books)
             - (collection element) CollectionFetchableElementEntityGraph(entity=org.example.models.Book, querySpaceUid=<gen:2>, path=org.example.models.Author.books.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=org.example.models.Author)
          - SQL table alias mapping - author0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

DEBUG 2022-09-08 19:34:27,971 [main][EntityLoader.java:115] : Static select for entity org.example.models.Author [OPTIMISTIC]: select author0_.id as id1_0_0_, author0_.name as name2_0_0_, author0_.salary as salary3_0_0_ from Author author0_ where author0_.id=?
DEBUG 2022-09-08 19:34:27,972 [main][QuerySpacesImpl.java:174] : Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@925e6524]
DEBUG 2022-09-08 19:34:27,972 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : books
DEBUG 2022-09-08 19:34:27,972 [main][QuerySpacesImpl.java:174] : Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@9f853aaf]
DEBUG 2022-09-08 19:34:27,972 [main][QuerySpacesImpl.java:174] : Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@fc8f4389]
DEBUG 2022-09-08 19:34:27,972 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : name
DEBUG 2022-09-08 19:34:27,972 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : salary
DEBUG 2022-09-08 19:34:27,972 [main][FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150] : Building LoadPlan...
DEBUG 2022-09-08 19:34:27,972 [main][LoadQueryJoinAndFetchProcessor.java:100] : processing queryspace <gen:0>
DEBUG 2022-09-08 19:34:27,973 [main][LoadPlanTreePrinter.java:55] : LoadPlan(entity=org.example.models.Author)
    - Returns
       - EntityReturnImpl(entity=org.example.models.Author, querySpaceUid=<gen:0>, path=org.example.models.Author)
          - CollectionAttributeFetchImpl(collection=org.example.models.Author.books, querySpaceUid=<gen:1>, path=org.example.models.Author.books)
             - (collection element) CollectionFetchableElementEntityGraph(entity=org.example.models.Book, querySpaceUid=<gen:2>, path=org.example.models.Author.books.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=org.example.models.Author)
          - SQL table alias mapping - author0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

DEBUG 2022-09-08 19:34:27,973 [main][EntityLoader.java:115] : Static select for entity org.example.models.Author [OPTIMISTIC_FORCE_INCREMENT]: select author0_.id as id1_0_0_, author0_.name as name2_0_0_, author0_.salary as salary3_0_0_ from Author author0_ where author0_.id=?
DEBUG 2022-09-08 19:34:27,973 [main][CascadeEntityLoader.java:38] : Static select for action ACTION_MERGE on entity org.example.models.Author: select author0_.id as id1_0_0_, author0_.name as name2_0_0_, author0_.salary as salary3_0_0_ from Author author0_ where author0_.id=?
DEBUG 2022-09-08 19:34:27,973 [main][CascadeEntityLoader.java:38] : Static select for action ACTION_REFRESH on entity org.example.models.Author: select author0_.id as id1_0_0_, author0_.name as name2_0_0_, author0_.salary as salary3_0_0_ from Author author0_ where author0_.id=?
DEBUG 2022-09-08 19:34:27,976 [main][QuerySpacesImpl.java:174] : Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@53a69a5f]
DEBUG 2022-09-08 19:34:27,977 [main][QuerySpacesImpl.java:174] : Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@b489dd44]
DEBUG 2022-09-08 19:34:27,977 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : books
DEBUG 2022-09-08 19:34:27,977 [main][MetamodelGraphWalker.java:145] : Property path deemed to be circular : books
DEBUG 2022-09-08 19:34:27,978 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : name
DEBUG 2022-09-08 19:34:27,978 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : salary
DEBUG 2022-09-08 19:34:27,978 [main][FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150] : Building LoadPlan...
DEBUG 2022-09-08 19:34:27,979 [main][LoadQueryJoinAndFetchProcessor.java:100] : processing queryspace <gen:0>
DEBUG 2022-09-08 19:34:27,980 [main][LoadPlanTreePrinter.java:55] : LoadPlan(collection=org.example.models.Book.authors)
    - Returns
       - CollectionReturnImpl(collection=org.example.models.Book.authors, querySpaceUid=<gen:0>, path=[org.example.models.Book.authors])
          - (collection element) CollectionFetchableElementEntityGraph(entity=org.example.models.Author, querySpaceUid=<gen:1>, path=[org.example.models.Book.authors].<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=org.example.models.Book.authors)
          - SQL table alias mapping - authors0_
          - alias suffix - 0_
          - suffixed key columns - {author_i2_1_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - id1_0_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=org.example.models.Author)
                - SQL table alias mapping - author1_
                - alias suffix - 1_
                - suffixed key columns - {id1_0_1_}

DEBUG 2022-09-08 19:34:27,980 [main][CollectionLoader.java:83] : Static select for collection org.example.models.Book.authors: select authors0_.author_id as author_i2_1_0_, authors0_.book_id as book_id1_1_0_, author1_.id as id1_0_1_, author1_.name as name2_0_1_, author1_.salary as salary3_0_1_ from Authors_Books authors0_ inner join Author author1_ on authors0_.book_id=author1_.id where authors0_.author_id=?
DEBUG 2022-09-08 19:34:27,980 [main][QuerySpacesImpl.java:174] : Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@b618b088]
DEBUG 2022-09-08 19:34:27,981 [main][QuerySpacesImpl.java:174] : Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@fada13e4]
DEBUG 2022-09-08 19:34:27,982 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : authors
DEBUG 2022-09-08 19:34:27,982 [main][MetamodelGraphWalker.java:145] : Property path deemed to be circular : authors
DEBUG 2022-09-08 19:34:27,982 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : name
DEBUG 2022-09-08 19:34:27,982 [main][FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150] : Building LoadPlan...
DEBUG 2022-09-08 19:34:27,982 [main][LoadQueryJoinAndFetchProcessor.java:100] : processing queryspace <gen:0>
DEBUG 2022-09-08 19:34:27,982 [main][LoadPlanTreePrinter.java:55] : LoadPlan(collection=org.example.models.Author.books)
    - Returns
       - CollectionReturnImpl(collection=org.example.models.Author.books, querySpaceUid=<gen:0>, path=[org.example.models.Author.books])
          - (collection element) CollectionFetchableElementEntityGraph(entity=org.example.models.Book, querySpaceUid=<gen:1>, path=[org.example.models.Author.books].<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=org.example.models.Author.books)
          - SQL table alias mapping - books0_
          - alias suffix - 0_
          - suffixed key columns - {book_id1_1_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - id1_2_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=org.example.models.Book)
                - SQL table alias mapping - book1_
                - alias suffix - 1_
                - suffixed key columns - {id1_2_1_}

DEBUG 2022-09-08 19:34:27,982 [main][CollectionLoader.java:83] : Static select for collection org.example.models.Author.books: select books0_.book_id as book_id1_1_0_, books0_.author_id as author_i2_1_0_, book1_.id as id1_2_1_, book1_.name as name2_2_1_ from Authors_Books books0_ inner join Book book1_ on books0_.author_id=book1_.id where books0_.book_id=?
INFO  2022-09-08 19:34:27,998 [main][DdlTransactionIsolatorNonJtaImpl.java:48] : HHH10001501: Connection obtained from JdbcConnectionAccess [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess@363865b0] for (non-JTA) DDL execution was not in auto-commit mode; the Connection 'local transaction' will be committed and the Connection will be set into auto-commit mode.
INFO  2022-09-08 19:34:28,046 [main][InformationExtractorJdbcDatabaseMetaDataImpl.java:393] : HHH000262: Table not found: Authors_Books
INFO  2022-09-08 19:34:28,049 [main][InformationExtractorJdbcDatabaseMetaDataImpl.java:393] : HHH000262: Table not found: Authors_Books
DEBUG 2022-09-08 19:34:28,050 [main][AbstractServiceRegistryImpl.java:410] : Implicitly destroying ServiceRegistry on de-registration of all child ServiceRegistries
INFO  2022-09-08 19:34:28,050 [main][DriverManagerConnectionProviderImpl.java:230] : HHH10001008: Cleaning up connection pool [jdbc:mysql://localhost:3306/classicmodels?serverTimezone=UTC]
DEBUG 2022-09-08 19:34:28,052 [main][BootstrapServiceRegistryImpl.java:295] : Implicitly destroying Boot-strap registry on de-registration of all child ServiceRegistries
WARN  2022-09-08 19:35:26,389 [main][Main.java:17] : TEST
DEBUG 2022-09-08 19:35:26,445 [main][CoreLogging.java:28] : Logging Provider: org.jboss.logging.Log4jLoggerProvider
DEBUG 2022-09-08 19:35:26,452 [main][IntegratorServiceImpl.java:46] : Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
DEBUG 2022-09-08 19:35:26,454 [main][IntegratorServiceImpl.java:46] : Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
DEBUG 2022-09-08 19:35:26,458 [main][IntegratorServiceImpl.java:46] : Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
INFO  2022-09-08 19:35:26,538 [main][Version.java:45] : HHH000412: Hibernate Core {5.2.2.Final}
INFO  2022-09-08 19:35:26,541 [main][Environment.java:213] : HHH000206: hibernate.properties not found
INFO  2022-09-08 19:35:26,542 [main][Environment.java:318] : HHH000021: Bytecode provider name : javassist
DEBUG 2022-09-08 19:35:26,570 [main][LocalXmlResourceResolver.java:57] : Interpreting public/system identifier : [null] - [http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd]
DEBUG 2022-09-08 19:35:26,571 [main][LocalXmlResourceResolver.java:85] : Recognized hibernate-configuration identifier; attempting to resolve on classpath under org/hibernate/
DEBUG 2022-09-08 19:35:26,575 [main][JaxbCfgProcessor.java:116] : cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
DEBUG 2022-09-08 19:35:26,814 [main][Configuration.java:724] : Building session factory using internal StandardServiceRegistryBuilder
DEBUG 2022-09-08 19:35:26,818 [main][ServiceBinding.java:68] : Overriding existing service binding [org.hibernate.secure.spi.JaccService]
DEBUG 2022-09-08 19:35:26,818 [main][Configuration.java:652] : Building session factory using provided StandardServiceRegistry
DEBUG 2022-09-08 19:35:26,827 [main][RegionFactoryInitiator.java:75] : Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
INFO  2022-09-08 19:35:26,832 [main][JavaReflectionManager.java:66] : HCANN000001: Hibernate Commons Annotations {5.0.1.Final}
DEBUG 2022-09-08 19:35:26,846 [main][BasicTypeRegistry.java:145] : Adding type registration boolean -> org.hibernate.type.BooleanType@15245185
DEBUG 2022-09-08 19:35:26,846 [main][BasicTypeRegistry.java:145] : Adding type registration boolean -> org.hibernate.type.BooleanType@15245185
DEBUG 2022-09-08 19:35:26,848 [main][BasicTypeRegistry.java:145] : Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@15245185
DEBUG 2022-09-08 19:35:26,849 [main][BasicTypeRegistry.java:145] : Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@d5bda683
DEBUG 2022-09-08 19:35:26,850 [main][BasicTypeRegistry.java:145] : Adding type registration true_false -> org.hibernate.type.TrueFalseType@f6b324bf
DEBUG 2022-09-08 19:35:26,851 [main][BasicTypeRegistry.java:145] : Adding type registration yes_no -> org.hibernate.type.YesNoType@662f3e4c
DEBUG 2022-09-08 19:35:26,852 [main][BasicTypeRegistry.java:145] : Adding type registration byte -> org.hibernate.type.ByteType@249c37bd
DEBUG 2022-09-08 19:35:26,853 [main][BasicTypeRegistry.java:145] : Adding type registration byte -> org.hibernate.type.ByteType@249c37bd
DEBUG 2022-09-08 19:35:26,853 [main][BasicTypeRegistry.java:145] : Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@249c37bd
DEBUG 2022-09-08 19:35:26,854 [main][BasicTypeRegistry.java:145] : Adding type registration character -> org.hibernate.type.CharacterType@46779472
DEBUG 2022-09-08 19:35:26,854 [main][BasicTypeRegistry.java:145] : Adding type registration char -> org.hibernate.type.CharacterType@46779472
DEBUG 2022-09-08 19:35:26,855 [main][BasicTypeRegistry.java:145] : Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@46779472
DEBUG 2022-09-08 19:35:26,856 [main][BasicTypeRegistry.java:145] : Adding type registration short -> org.hibernate.type.ShortType@6f761f19
DEBUG 2022-09-08 19:35:26,856 [main][BasicTypeRegistry.java:145] : Adding type registration short -> org.hibernate.type.ShortType@6f761f19
DEBUG 2022-09-08 19:35:26,857 [main][BasicTypeRegistry.java:145] : Adding type registration java.lang.Short -> org.hibernate.type.ShortType@6f761f19
DEBUG 2022-09-08 19:35:26,857 [main][BasicTypeRegistry.java:145] : Adding type registration integer -> org.hibernate.type.IntegerType@ecb5d623
DEBUG 2022-09-08 19:35:26,858 [main][BasicTypeRegistry.java:145] : Adding type registration int -> org.hibernate.type.IntegerType@ecb5d623
DEBUG 2022-09-08 19:35:26,858 [main][BasicTypeRegistry.java:145] : Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@ecb5d623
DEBUG 2022-09-08 19:35:26,860 [main][BasicTypeRegistry.java:145] : Adding type registration long -> org.hibernate.type.LongType@e0cb5858
DEBUG 2022-09-08 19:35:26,860 [main][BasicTypeRegistry.java:145] : Adding type registration long -> org.hibernate.type.LongType@e0cb5858
DEBUG 2022-09-08 19:35:26,860 [main][BasicTypeRegistry.java:145] : Adding type registration java.lang.Long -> org.hibernate.type.LongType@e0cb5858
DEBUG 2022-09-08 19:35:26,862 [main][BasicTypeRegistry.java:145] : Adding type registration float -> org.hibernate.type.FloatType@78473ac2
DEBUG 2022-09-08 19:35:26,862 [main][BasicTypeRegistry.java:145] : Adding type registration float -> org.hibernate.type.FloatType@78473ac2
DEBUG 2022-09-08 19:35:26,863 [main][BasicTypeRegistry.java:145] : Adding type registration java.lang.Float -> org.hibernate.type.FloatType@78473ac2
DEBUG 2022-09-08 19:35:26,864 [main][BasicTypeRegistry.java:145] : Adding type registration double -> org.hibernate.type.DoubleType@cb4a4536
DEBUG 2022-09-08 19:35:26,864 [main][BasicTypeRegistry.java:145] : Adding type registration double -> org.hibernate.type.DoubleType@cb4a4536
DEBUG 2022-09-08 19:35:26,865 [main][BasicTypeRegistry.java:145] : Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@cb4a4536
DEBUG 2022-09-08 19:35:26,866 [main][BasicTypeRegistry.java:145] : Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@aebc6023
DEBUG 2022-09-08 19:35:26,866 [main][BasicTypeRegistry.java:145] : Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@aebc6023
DEBUG 2022-09-08 19:35:26,867 [main][BasicTypeRegistry.java:145] : Adding type registration big_integer -> org.hibernate.type.BigIntegerType@3019a932
DEBUG 2022-09-08 19:35:26,868 [main][BasicTypeRegistry.java:145] : Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@3019a932
DEBUG 2022-09-08 19:35:26,869 [main][BasicTypeRegistry.java:145] : Adding type registration string -> org.hibernate.type.StringType@9c39c8ca
DEBUG 2022-09-08 19:35:26,870 [main][BasicTypeRegistry.java:145] : Adding type registration java.lang.String -> org.hibernate.type.StringType@9c39c8ca
DEBUG 2022-09-08 19:35:26,871 [main][BasicTypeRegistry.java:145] : Adding type registration nstring -> org.hibernate.type.StringNVarcharType@bdaf56ce
DEBUG 2022-09-08 19:35:26,871 [main][BasicTypeRegistry.java:145] : Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@5d76be50
DEBUG 2022-09-08 19:35:26,872 [main][BasicTypeRegistry.java:145] : Adding type registration url -> org.hibernate.type.UrlType@ce1af811
DEBUG 2022-09-08 19:35:26,873 [main][BasicTypeRegistry.java:145] : Adding type registration java.net.URL -> org.hibernate.type.UrlType@ce1af811
DEBUG 2022-09-08 19:35:26,874 [main][BasicTypeRegistry.java:145] : Adding type registration Duration -> org.hibernate.type.DurationType@48d6e732
DEBUG 2022-09-08 19:35:26,874 [main][BasicTypeRegistry.java:145] : Adding type registration java.time.Duration -> org.hibernate.type.DurationType@48d6e732
DEBUG 2022-09-08 19:35:26,881 [main][BasicTypeRegistry.java:145] : Adding type registration Instant -> org.hibernate.type.InstantType@ac580e41
DEBUG 2022-09-08 19:35:26,881 [main][BasicTypeRegistry.java:145] : Adding type registration java.time.Instant -> org.hibernate.type.InstantType@ac580e41
DEBUG 2022-09-08 19:35:26,882 [main][BasicTypeRegistry.java:145] : Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@9a8b3a33
DEBUG 2022-09-08 19:35:26,883 [main][BasicTypeRegistry.java:145] : Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@9a8b3a33
DEBUG 2022-09-08 19:35:26,885 [main][BasicTypeRegistry.java:145] : Adding type registration LocalDate -> org.hibernate.type.LocalDateType@9adfe7f2
DEBUG 2022-09-08 19:35:26,885 [main][BasicTypeRegistry.java:145] : Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@9adfe7f2
DEBUG 2022-09-08 19:35:26,886 [main][BasicTypeRegistry.java:145] : Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@f765f7cf
DEBUG 2022-09-08 19:35:26,887 [main][BasicTypeRegistry.java:145] : Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@f765f7cf
DEBUG 2022-09-08 19:35:26,888 [main][BasicTypeRegistry.java:145] : Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@ba38bb6d
DEBUG 2022-09-08 19:35:26,888 [main][BasicTypeRegistry.java:145] : Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@ba38bb6d
DEBUG 2022-09-08 19:35:26,889 [main][BasicTypeRegistry.java:145] : Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@222922be
DEBUG 2022-09-08 19:35:26,890 [main][BasicTypeRegistry.java:145] : Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@222922be
DEBUG 2022-09-08 19:35:26,892 [main][BasicTypeRegistry.java:145] : Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@92f70282
DEBUG 2022-09-08 19:35:26,893 [main][BasicTypeRegistry.java:145] : Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@92f70282
DEBUG 2022-09-08 19:35:26,894 [main][BasicTypeRegistry.java:145] : Adding type registration date -> org.hibernate.type.DateType@a6ccfeb8
DEBUG 2022-09-08 19:35:26,894 [main][BasicTypeRegistry.java:145] : Adding type registration java.sql.Date -> org.hibernate.type.DateType@a6ccfeb8
DEBUG 2022-09-08 19:35:26,895 [main][BasicTypeRegistry.java:145] : Adding type registration time -> org.hibernate.type.TimeType@c283435f
DEBUG 2022-09-08 19:35:26,896 [main][BasicTypeRegistry.java:145] : Adding type registration java.sql.Time -> org.hibernate.type.TimeType@c283435f
DEBUG 2022-09-08 19:35:26,897 [main][BasicTypeRegistry.java:145] : Adding type registration timestamp -> org.hibernate.type.TimestampType@1ab5640b
DEBUG 2022-09-08 19:35:26,897 [main][BasicTypeRegistry.java:145] : Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@1ab5640b
DEBUG 2022-09-08 19:35:26,897 [main][BasicTypeRegistry.java:145] : Adding type registration java.util.Date -> org.hibernate.type.TimestampType@1ab5640b
DEBUG 2022-09-08 19:35:26,899 [main][BasicTypeRegistry.java:145] : Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@9ea7c474
DEBUG 2022-09-08 19:35:26,899 [main][BasicTypeRegistry.java:145] : Adding type registration calendar -> org.hibernate.type.CalendarType@e5e8a248
DEBUG 2022-09-08 19:35:26,900 [main][BasicTypeRegistry.java:145] : Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@e5e8a248
DEBUG 2022-09-08 19:35:26,900 [main][BasicTypeRegistry.java:145] : Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@e5e8a248
DEBUG 2022-09-08 19:35:26,901 [main][BasicTypeRegistry.java:145] : Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@b39dd894
DEBUG 2022-09-08 19:35:26,901 [main][BasicTypeRegistry.java:145] : Adding type registration locale -> org.hibernate.type.LocaleType@e3394e04
DEBUG 2022-09-08 19:35:26,902 [main][BasicTypeRegistry.java:145] : Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@e3394e04
DEBUG 2022-09-08 19:35:26,903 [main][BasicTypeRegistry.java:145] : Adding type registration currency -> org.hibernate.type.CurrencyType@c97fe2da
DEBUG 2022-09-08 19:35:26,903 [main][BasicTypeRegistry.java:145] : Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@c97fe2da
DEBUG 2022-09-08 19:35:26,904 [main][BasicTypeRegistry.java:145] : Adding type registration timezone -> org.hibernate.type.TimeZoneType@95d52aa9
DEBUG 2022-09-08 19:35:26,904 [main][BasicTypeRegistry.java:145] : Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@95d52aa9
DEBUG 2022-09-08 19:35:26,905 [main][BasicTypeRegistry.java:145] : Adding type registration class -> org.hibernate.type.ClassType@abe094bf
DEBUG 2022-09-08 19:35:26,905 [main][BasicTypeRegistry.java:145] : Adding type registration java.lang.Class -> org.hibernate.type.ClassType@abe094bf
DEBUG 2022-09-08 19:35:26,906 [main][BasicTypeRegistry.java:145] : Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@a2bb1edc
DEBUG 2022-09-08 19:35:26,907 [main][BasicTypeRegistry.java:145] : Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@a2bb1edc
DEBUG 2022-09-08 19:35:26,907 [main][BasicTypeRegistry.java:145] : Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@9b35b8ad
DEBUG 2022-09-08 19:35:26,908 [main][BasicTypeRegistry.java:145] : Adding type registration binary -> org.hibernate.type.BinaryType@8fb2376b
DEBUG 2022-09-08 19:35:26,908 [main][BasicTypeRegistry.java:145] : Adding type registration byte[] -> org.hibernate.type.BinaryType@8fb2376b
DEBUG 2022-09-08 19:35:26,910 [main][BasicTypeRegistry.java:145] : Adding type registration [B -> org.hibernate.type.BinaryType@8fb2376b
DEBUG 2022-09-08 19:35:26,911 [main][BasicTypeRegistry.java:145] : Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@f9c92504
DEBUG 2022-09-08 19:35:26,911 [main][BasicTypeRegistry.java:145] : Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@f9c92504
DEBUG 2022-09-08 19:35:26,911 [main][BasicTypeRegistry.java:145] : Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@f9c92504
DEBUG 2022-09-08 19:35:26,912 [main][BasicTypeRegistry.java:145] : Adding type registration row_version -> org.hibernate.type.RowVersionType@e4c4c89
DEBUG 2022-09-08 19:35:26,912 [main][BasicTypeRegistry.java:145] : Adding type registration image -> org.hibernate.type.ImageType@8ac2bd2c
DEBUG 2022-09-08 19:35:26,913 [main][BasicTypeRegistry.java:145] : Adding type registration characters -> org.hibernate.type.CharArrayType@ad00a04d
DEBUG 2022-09-08 19:35:26,913 [main][BasicTypeRegistry.java:145] : Adding type registration char[] -> org.hibernate.type.CharArrayType@ad00a04d
DEBUG 2022-09-08 19:35:26,914 [main][BasicTypeRegistry.java:145] : Adding type registration [C -> org.hibernate.type.CharArrayType@ad00a04d
DEBUG 2022-09-08 19:35:26,914 [main][BasicTypeRegistry.java:145] : Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@c6c5732d
DEBUG 2022-09-08 19:35:26,915 [main][BasicTypeRegistry.java:145] : Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@c6c5732d
DEBUG 2022-09-08 19:35:26,915 [main][BasicTypeRegistry.java:145] : Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@c6c5732d
DEBUG 2022-09-08 19:35:26,915 [main][BasicTypeRegistry.java:145] : Adding type registration text -> org.hibernate.type.TextType@fab5da15
DEBUG 2022-09-08 19:35:26,916 [main][BasicTypeRegistry.java:145] : Adding type registration ntext -> org.hibernate.type.NTextType@434363b6
DEBUG 2022-09-08 19:35:26,918 [main][BasicTypeRegistry.java:145] : Adding type registration blob -> org.hibernate.type.BlobType@fed9500e
DEBUG 2022-09-08 19:35:26,918 [main][BasicTypeRegistry.java:145] : Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@fed9500e
DEBUG 2022-09-08 19:35:26,919 [main][BasicTypeRegistry.java:145] : Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@a544eb98
DEBUG 2022-09-08 19:35:26,921 [main][BasicTypeRegistry.java:145] : Adding type registration clob -> org.hibernate.type.ClobType@7512e4d1
DEBUG 2022-09-08 19:35:26,921 [main][BasicTypeRegistry.java:145] : Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@7512e4d1
DEBUG 2022-09-08 19:35:26,922 [main][BasicTypeRegistry.java:145] : Adding type registration nclob -> org.hibernate.type.NClobType@22e63b03
DEBUG 2022-09-08 19:35:26,923 [main][BasicTypeRegistry.java:145] : Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@22e63b03
DEBUG 2022-09-08 19:35:26,923 [main][BasicTypeRegistry.java:145] : Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@1e7f3e76
DEBUG 2022-09-08 19:35:26,923 [main][BasicTypeRegistry.java:145] : Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@e2a7f7b1
DEBUG 2022-09-08 19:35:26,924 [main][BasicTypeRegistry.java:145] : Adding type registration serializable -> org.hibernate.type.SerializableType@e53b9e1e
DEBUG 2022-09-08 19:35:26,926 [main][BasicTypeRegistry.java:145] : Adding type registration object -> org.hibernate.type.ObjectType@1cd75cf8
DEBUG 2022-09-08 19:35:26,927 [main][BasicTypeRegistry.java:145] : Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@1cd75cf8
DEBUG 2022-09-08 19:35:26,927 [main][BasicTypeRegistry.java:145] : Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@665cd7d1
DEBUG 2022-09-08 19:35:26,927 [main][BasicTypeRegistry.java:145] : Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@ec428bd6
DEBUG 2022-09-08 19:35:26,928 [main][BasicTypeRegistry.java:145] : Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@ad9dd7e1
DEBUG 2022-09-08 19:35:26,928 [main][BasicTypeRegistry.java:145] : Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@e866e3b2
DEBUG 2022-09-08 19:35:26,928 [main][BasicTypeRegistry.java:145] : Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@88c4e14e
DEBUG 2022-09-08 19:35:26,928 [main][BasicTypeRegistry.java:145] : Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@8e633d11
DEBUG 2022-09-08 19:35:26,929 [main][BasicTypeRegistry.java:145] : Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@be99ac42
DEBUG 2022-09-08 19:35:26,929 [main][BasicTypeRegistry.java:145] : Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@7946e6be
WARN  2022-09-08 19:35:26,934 [main][DriverManagerConnectionProviderImpl.java:70] : HHH10001002: Using Hibernate built-in connection pool (not for production use!)
INFO  2022-09-08 19:35:26,939 [main][DriverManagerConnectionProviderImpl.java:126] : HHH10001005: using driver [com.mysql.cj.jdbc.Driver] at URL [jdbc:mysql://localhost:3306/classicmodels?serverTimezone=UTC]
INFO  2022-09-08 19:35:26,939 [main][DriverManagerConnectionProviderImpl.java:132] : HHH10001001: Connection properties: {password=rootroot, user=root}
INFO  2022-09-08 19:35:26,940 [main][DriverManagerConnectionProviderImpl.java:140] : HHH10001003: Autocommit mode: false
DEBUG 2022-09-08 19:35:26,943 [main][DelegatingBasicLogger.java:384] : Initializing Connection pool with 1 Connections
INFO  2022-09-08 19:35:26,943 [main][PooledConnections.java:41] : HHH000115: Hibernate connection pool size: 5 (min=1)
DEBUG 2022-09-08 19:35:27,340 [main][JdbcEnvironmentInitiator.java:72] : Database ->
       name : MySQL
    version : 8.0.29
      major : 8
      minor : 0
DEBUG 2022-09-08 19:35:27,340 [main][JdbcEnvironmentInitiator.java:83] : Driver ->
       name : MySQL Connector/J
    version : mysql-connector-java-8.0.29 (Revision: dd61577595edad45c398af508cf91ad26fc4144f)
      major : 8
      minor : 0
DEBUG 2022-09-08 19:35:27,340 [main][DelegatingBasicLogger.java:389] : JDBC version : 4.2
INFO  2022-09-08 19:35:27,346 [main][Dialect.java:153] : HHH000400: Using dialect: org.hibernate.dialect.MySQLDialect
DEBUG 2022-09-08 19:35:27,388 [main][IdentifierHelperBuilder.java:117] : JDBC driver metadata reported database stores quoted identifiers in more than one case
DEBUG 2022-09-08 19:35:27,389 [main][IdentifierHelperBuilder.java:191] : IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [MIXED]; that will likely lead to problems in schema update and validation if using quoted identifiers
DEBUG 2022-09-08 19:35:27,409 [main][DefaultIdentifierGeneratorFactory.java:81] : Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
DEBUG 2022-09-08 19:35:27,409 [main][DefaultIdentifierGeneratorFactory.java:81] : Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
DEBUG 2022-09-08 19:35:27,410 [main][DefaultIdentifierGeneratorFactory.java:81] : Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
DEBUG 2022-09-08 19:35:27,410 [main][DefaultIdentifierGeneratorFactory.java:81] : Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
DEBUG 2022-09-08 19:35:27,410 [main][DefaultIdentifierGeneratorFactory.java:81] : Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
DEBUG 2022-09-08 19:35:27,411 [main][DefaultIdentifierGeneratorFactory.java:81] : Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
DEBUG 2022-09-08 19:35:27,411 [main][DefaultIdentifierGeneratorFactory.java:81] : Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
DEBUG 2022-09-08 19:35:27,412 [main][DefaultIdentifierGeneratorFactory.java:81] : Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
DEBUG 2022-09-08 19:35:27,412 [main][DefaultIdentifierGeneratorFactory.java:81] : Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
DEBUG 2022-09-08 19:35:27,413 [main][DefaultIdentifierGeneratorFactory.java:81] : Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
DEBUG 2022-09-08 19:35:27,413 [main][DefaultIdentifierGeneratorFactory.java:81] : Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
DEBUG 2022-09-08 19:35:27,413 [main][DefaultIdentifierGeneratorFactory.java:81] : Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
DEBUG 2022-09-08 19:35:27,413 [main][DefaultIdentifierGeneratorFactory.java:81] : Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
DEBUG 2022-09-08 19:35:27,414 [main][DefaultIdentifierGeneratorFactory.java:81] : Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
DEBUG 2022-09-08 19:35:27,428 [main][Namespace.java:47] : Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
DEBUG 2022-09-08 19:35:27,451 [main][AnnotationBinder.java:511] : Binding entity from annotated class: org.example.models.Author
DEBUG 2022-09-08 19:35:27,463 [main][Ejb3Column.java:213] : Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
DEBUG 2022-09-08 19:35:27,465 [main][EntityBinder.java:416] : Import with entity name Author
DEBUG 2022-09-08 19:35:27,467 [main][EntityBinder.java:692] : Bind entity org.example.models.Author on table Author
DEBUG 2022-09-08 19:35:27,487 [main][Ejb3Column.java:213] : Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Author), mappingColumn=id, insertable=true, updatable=true, unique=false}
DEBUG 2022-09-08 19:35:27,488 [main][PropertyBinder.java:174] : MetadataSourceProcessor property id with lazy=false
DEBUG 2022-09-08 19:35:27,489 [main][AbstractPropertyHolder.java:89] : Attempting to locate auto-apply AttributeConverter for property [org.example.models.Author:id]
DEBUG 2022-09-08 19:35:27,489 [main][SimpleValueBinder.java:398] : building SimpleValue for id
DEBUG 2022-09-08 19:35:27,490 [main][PropertyBinder.java:265] : Building property id
DEBUG 2022-09-08 19:35:27,493 [main][Ejb3Column.java:213] : Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Author), mappingColumn=null, insertable=true, updatable=true, unique=false}
DEBUG 2022-09-08 19:35:27,506 [main][Ejb3Column.java:213] : Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Author), mappingColumn=element, insertable=true, updatable=true, unique=false}
DEBUG 2022-09-08 19:35:27,506 [main][Ejb3Column.java:213] : Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Author), mappingColumn=books_KEY, insertable=true, updatable=true, unique=false}
DEBUG 2022-09-08 19:35:27,507 [main][Ejb3Column.java:213] : Binding column: Ejb3JoinColumn{logicalColumnName='books_KEY', referencedColumn='null', mappedBy='null'}
DEBUG 2022-09-08 19:35:27,507 [main][Ejb3Column.java:213] : Binding column: Ejb3JoinColumn{logicalColumnName='book_id', referencedColumn='', mappedBy=''}
DEBUG 2022-09-08 19:35:27,508 [main][Ejb3Column.java:213] : Binding column: Ejb3JoinColumn{logicalColumnName='author_id', referencedColumn='', mappedBy=''}
DEBUG 2022-09-08 19:35:27,508 [main][CollectionBinder.java:388] : Collection role: org.example.models.Author.books
DEBUG 2022-09-08 19:35:27,509 [main][PropertyBinder.java:265] : Building property books
DEBUG 2022-09-08 19:35:27,510 [main][Ejb3Column.java:213] : Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Author), mappingColumn=name, insertable=true, updatable=true, unique=false}
DEBUG 2022-09-08 19:35:27,510 [main][PropertyBinder.java:174] : MetadataSourceProcessor property name with lazy=false
DEBUG 2022-09-08 19:35:27,510 [main][AbstractPropertyHolder.java:89] : Attempting to locate auto-apply AttributeConverter for property [org.example.models.Author:name]
DEBUG 2022-09-08 19:35:27,510 [main][SimpleValueBinder.java:398] : building SimpleValue for name
DEBUG 2022-09-08 19:35:27,510 [main][PropertyBinder.java:265] : Building property name
DEBUG 2022-09-08 19:35:27,511 [main][Ejb3Column.java:213] : Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Author), mappingColumn=salary, insertable=true, updatable=true, unique=false}
DEBUG 2022-09-08 19:35:27,511 [main][PropertyBinder.java:174] : MetadataSourceProcessor property salary with lazy=false
DEBUG 2022-09-08 19:35:27,511 [main][AbstractPropertyHolder.java:89] : Attempting to locate auto-apply AttributeConverter for property [org.example.models.Author:salary]
DEBUG 2022-09-08 19:35:27,511 [main][SimpleValueBinder.java:398] : building SimpleValue for salary
DEBUG 2022-09-08 19:35:27,511 [main][PropertyBinder.java:265] : Building property salary
DEBUG 2022-09-08 19:35:27,512 [main][AnnotationBinder.java:511] : Binding entity from annotated class: org.example.models.Book
DEBUG 2022-09-08 19:35:27,512 [main][Ejb3Column.java:213] : Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
DEBUG 2022-09-08 19:35:27,512 [main][EntityBinder.java:416] : Import with entity name Book
DEBUG 2022-09-08 19:35:27,512 [main][EntityBinder.java:692] : Bind entity org.example.models.Book on table Book
DEBUG 2022-09-08 19:35:27,513 [main][Ejb3Column.java:213] : Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Book), mappingColumn=id, insertable=true, updatable=true, unique=false}
DEBUG 2022-09-08 19:35:27,513 [main][PropertyBinder.java:174] : MetadataSourceProcessor property id with lazy=false
DEBUG 2022-09-08 19:35:27,513 [main][AbstractPropertyHolder.java:89] : Attempting to locate auto-apply AttributeConverter for property [org.example.models.Book:id]
DEBUG 2022-09-08 19:35:27,514 [main][SimpleValueBinder.java:398] : building SimpleValue for id
DEBUG 2022-09-08 19:35:27,514 [main][PropertyBinder.java:265] : Building property id
DEBUG 2022-09-08 19:35:27,514 [main][Ejb3Column.java:213] : Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Book), mappingColumn=null, insertable=true, updatable=true, unique=false}
DEBUG 2022-09-08 19:35:27,514 [main][Ejb3Column.java:213] : Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Book), mappingColumn=element, insertable=true, updatable=true, unique=false}
DEBUG 2022-09-08 19:35:27,515 [main][Ejb3Column.java:213] : Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Book), mappingColumn=authors_KEY, insertable=true, updatable=true, unique=false}
DEBUG 2022-09-08 19:35:27,515 [main][Ejb3Column.java:213] : Binding column: Ejb3JoinColumn{logicalColumnName='authors_KEY', referencedColumn='null', mappedBy='null'}
DEBUG 2022-09-08 19:35:27,515 [main][Ejb3Column.java:213] : Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='books'}
DEBUG 2022-09-08 19:35:27,515 [main][Ejb3Column.java:213] : Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='books'}
DEBUG 2022-09-08 19:35:27,515 [main][CollectionBinder.java:388] : Collection role: org.example.models.Book.authors
DEBUG 2022-09-08 19:35:27,515 [main][PropertyBinder.java:265] : Building property authors
DEBUG 2022-09-08 19:35:27,516 [main][Ejb3Column.java:213] : Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Book), mappingColumn=name, insertable=true, updatable=true, unique=false}
DEBUG 2022-09-08 19:35:27,516 [main][PropertyBinder.java:174] : MetadataSourceProcessor property name with lazy=false
DEBUG 2022-09-08 19:35:27,516 [main][AbstractPropertyHolder.java:89] : Attempting to locate auto-apply AttributeConverter for property [org.example.models.Book:name]
DEBUG 2022-09-08 19:35:27,516 [main][SimpleValueBinder.java:398] : building SimpleValue for name
DEBUG 2022-09-08 19:35:27,516 [main][PropertyBinder.java:265] : Building property name
DEBUG 2022-09-08 19:35:27,517 [main][SimpleValueBinder.java:443] : Starting fillSimpleValue for id
DEBUG 2022-09-08 19:35:27,517 [main][SimpleValueBinder.java:443] : Starting fillSimpleValue for name
DEBUG 2022-09-08 19:35:27,517 [main][SimpleValueBinder.java:443] : Starting fillSimpleValue for salary
DEBUG 2022-09-08 19:35:27,518 [main][SimpleValueBinder.java:443] : Starting fillSimpleValue for id
DEBUG 2022-09-08 19:35:27,518 [main][SimpleValueBinder.java:443] : Starting fillSimpleValue for name
DEBUG 2022-09-08 19:35:27,519 [main][PrimaryKey.java:35] : Forcing column [id] to be non-null as it is part of the primary key for table [author]
DEBUG 2022-09-08 19:35:27,519 [main][PrimaryKey.java:35] : Forcing column [id] to be non-null as it is part of the primary key for table [book]
DEBUG 2022-09-08 19:35:27,520 [main][CollectionSecondPass.java:51] : Second pass for collection: org.example.models.Author.books
DEBUG 2022-09-08 19:35:27,520 [main][CollectionBinder.java:1210] : Binding as ManyToMany: org.example.models.Author.books
DEBUG 2022-09-08 19:35:27,522 [main][PrimaryKey.java:35] : Forcing column [book_id] to be non-null as it is part of the primary key for table [authors_books]
DEBUG 2022-09-08 19:35:27,522 [main][PrimaryKey.java:35] : Forcing column [author_id] to be non-null as it is part of the primary key for table [authors_books]
DEBUG 2022-09-08 19:35:27,522 [main][CollectionSecondPass.java:68] : Mapped collection key: book_id, element: author_id
DEBUG 2022-09-08 19:35:27,522 [main][CollectionSecondPass.java:51] : Second pass for collection: org.example.models.Book.authors
DEBUG 2022-09-08 19:35:27,523 [main][CollectionBinder.java:1210] : Binding as ManyToMany: org.example.models.Book.authors
DEBUG 2022-09-08 19:35:27,523 [main][TableBinder.java:565] : Retrieving property org.example.models.Author.books
DEBUG 2022-09-08 19:35:27,523 [main][CollectionSecondPass.java:68] : Mapped collection key: author_id, element: book_id
DEBUG 2022-09-08 19:35:27,523 [main][InFlightMetadataCollectorImpl.java:1798] : Resolving reference to class: org.example.models.Book
DEBUG 2022-09-08 19:35:27,525 [main][InFlightMetadataCollectorImpl.java:1798] : Resolving reference to class: org.example.models.Author
DEBUG 2022-09-08 19:35:27,525 [main][InFlightMetadataCollectorImpl.java:1798] : Resolving reference to class: org.example.models.Book
DEBUG 2022-09-08 19:35:27,525 [main][InFlightMetadataCollectorImpl.java:1798] : Resolving reference to class: org.example.models.Author
DEBUG 2022-09-08 19:35:27,544 [main][SessionFactoryImpl.java:197] : Building session factory
DEBUG 2022-09-08 19:35:27,545 [main][Settings.java:69] : SessionFactory name : null
DEBUG 2022-09-08 19:35:27,545 [main][Settings.java:70] : Automatic flush during beforeCompletion(): enabled
DEBUG 2022-09-08 19:35:27,545 [main][Settings.java:71] : Automatic session close at end of transaction: disabled
DEBUG 2022-09-08 19:35:27,545 [main][Settings.java:73] : Statistics: disabled
DEBUG 2022-09-08 19:35:27,545 [main][Settings.java:75] : Deleted entity synthetic identifier rollback: disabled
DEBUG 2022-09-08 19:35:27,545 [main][Settings.java:76] : Default entity-mode: pojo
DEBUG 2022-09-08 19:35:27,546 [main][Settings.java:77] : Check Nullability in Core (should be disabled when Bean Validation is on): enabled
DEBUG 2022-09-08 19:35:27,546 [main][Settings.java:78] : Allow initialization of lazy state outside session : disabled
DEBUG 2022-09-08 19:35:27,546 [main][Settings.java:80] : Using BatchFetchStyle : LEGACY
DEBUG 2022-09-08 19:35:27,546 [main][Settings.java:81] : Default batch fetch size: -1
DEBUG 2022-09-08 19:35:27,546 [main][Settings.java:82] : Maximum outer join fetch depth: 2
DEBUG 2022-09-08 19:35:27,546 [main][Settings.java:83] : Default null ordering: NONE
DEBUG 2022-09-08 19:35:27,546 [main][Settings.java:84] : Order SQL updates by primary key: disabled
DEBUG 2022-09-08 19:35:27,546 [main][Settings.java:85] : Order SQL inserts for batching: disabled
DEBUG 2022-09-08 19:35:27,546 [main][Settings.java:87] : multi-tenancy strategy : NONE
DEBUG 2022-09-08 19:35:27,547 [main][Settings.java:89] : JTA Track by Thread: enabled
DEBUG 2022-09-08 19:35:27,547 [main][Settings.java:91] : Query language substitutions: {}
DEBUG 2022-09-08 19:35:27,547 [main][Settings.java:92] : JPA query language strict compliance: disabled
DEBUG 2022-09-08 19:35:27,547 [main][Settings.java:93] : Named query checking : enabled
DEBUG 2022-09-08 19:35:27,547 [main][Settings.java:95] : Second-level cache: enabled
DEBUG 2022-09-08 19:35:27,547 [main][Settings.java:96] : Second-level query cache: disabled
DEBUG 2022-09-08 19:35:27,547 [main][Settings.java:97] : Second-level query cache factory: org.hibernate.cache.internal.StandardQueryCacheFactory@611525a6
DEBUG 2022-09-08 19:35:27,547 [main][Settings.java:98] : Second-level cache region prefix: null
DEBUG 2022-09-08 19:35:27,547 [main][Settings.java:99] : Optimize second-level cache for minimal puts: disabled
DEBUG 2022-09-08 19:35:27,548 [main][Settings.java:100] : Structured second-level cache entries: disabled
DEBUG 2022-09-08 19:35:27,549 [main][Settings.java:101] : Second-level cache direct-reference entries: disabled
DEBUG 2022-09-08 19:35:27,549 [main][Settings.java:102] : Automatic eviction of collection cache: disabled
DEBUG 2022-09-08 19:35:27,549 [main][Settings.java:104] : JDBC batch size: 15
DEBUG 2022-09-08 19:35:27,549 [main][Settings.java:105] : JDBC batch updates for versioned data: enabled
DEBUG 2022-09-08 19:35:27,549 [main][Settings.java:106] : Scrollable result sets: enabled
DEBUG 2022-09-08 19:35:27,549 [main][Settings.java:107] : Wrap result sets: disabled
DEBUG 2022-09-08 19:35:27,549 [main][Settings.java:108] : JDBC3 getGeneratedKeys(): enabled
DEBUG 2022-09-08 19:35:27,549 [main][Settings.java:109] : JDBC result set fetch size: null
DEBUG 2022-09-08 19:35:27,549 [main][Settings.java:110] : Connection release mode: AFTER_TRANSACTION
DEBUG 2022-09-08 19:35:27,550 [main][Settings.java:111] : Generate SQL with comments: disabled
DEBUG 2022-09-08 19:35:27,572 [main][SessionFactoryImpl.java:252] : Session factory constructed with filter configurations : {}
DEBUG 2022-09-08 19:35:27,572 [main][SessionFactoryImpl.java:253] : Instantiating session factory with properties: {awt.toolkit=sun.lwawt.macosx.LWCToolkit, java.specification.version=11, file.encoding.pkg=sun.io, jdk.extensions.version=11.0.15.0, sun.jnu.encoding=UTF-8, hibernate.dialect=org.hibernate.dialect.MySQLDialect, java.class.path=/Users/vdonets/IdeaProjects/testmaven/target/classes:/Users/vdonets/.m2/repository/org/hibernate/hibernate-core/5.2.2.Final/hibernate-core-5.2.2.Final.jar:/Users/vdonets/.m2/repository/org/jboss/logging/jboss-logging/3.3.0.Final/jboss-logging-3.3.0.Final.jar:/Users/vdonets/.m2/repository/org/hibernate/javax/persistence/hibernate-jpa-2.1-api/1.0.0.Final/hibernate-jpa-2.1-api-1.0.0.Final.jar:/Users/vdonets/.m2/repository/org/javassist/javassist/3.20.0-GA/javassist-3.20.0-GA.jar:/Users/vdonets/.m2/repository/antlr/antlr/2.7.7/antlr-2.7.7.jar:/Users/vdonets/.m2/repository/org/apache/geronimo/specs/geronimo-jta_1.1_spec/1.1.1/geronimo-jta_1.1_spec-1.1.1.jar:/Users/vdonets/.m2/repository/org/jboss/jandex/2.0.0.Final/jandex-2.0.0.Final.jar:/Users/vdonets/.m2/repository/com/fasterxml/classmate/1.3.0/classmate-1.3.0.jar:/Users/vdonets/.m2/repository/dom4j/dom4j/1.6.1/dom4j-1.6.1.jar:/Users/vdonets/.m2/repository/org/hibernate/common/hibernate-commons-annotations/5.0.1.Final/hibernate-commons-annotations-5.0.1.Final.jar:/Users/vdonets/.m2/repository/javax/enterprise/cdi-api/1.1/cdi-api-1.1.jar:/Users/vdonets/.m2/repository/javax/el/el-api/2.2/el-api-2.2.jar:/Users/vdonets/.m2/repository/org/jboss/spec/javax/interceptor/jboss-interceptors-api_1.1_spec/1.0.0.Beta1/jboss-interceptors-api_1.1_spec-1.0.0.Beta1.jar:/Users/vdonets/.m2/repository/javax/annotation/jsr250-api/1.0/jsr250-api-1.0.jar:/Users/vdonets/.m2/repository/javax/inject/javax.inject/1/javax.inject-1.jar:/Users/vdonets/.m2/repository/mysql/mysql-connector-java/8.0.29/mysql-connector-java-8.0.29.jar:/Users/vdonets/.m2/repository/com/google/protobuf/protobuf-java/3.19.4/protobuf-java-3.19.4.jar:/Users/vdonets/.m2/repository/jakarta/xml/bind/jakarta.xml.bind-api/2.3.2/jakarta.xml.bind-api-2.3.2.jar:/Users/vdonets/.m2/repository/jakarta/activation/jakarta.activation-api/1.2.1/jakarta.activation-api-1.2.1.jar:/Users/vdonets/.m2/repository/org/glassfish/jaxb/jaxb-runtime/2.3.2/jaxb-runtime-2.3.2.jar:/Users/vdonets/.m2/repository/org/glassfish/jaxb/txw2/2.3.2/txw2-2.3.2.jar:/Users/vdonets/.m2/repository/com/sun/istack/istack-commons-runtime/3.0.8/istack-commons-runtime-3.0.8.jar:/Users/vdonets/.m2/repository/org/jvnet/staxex/stax-ex/1.8.1/stax-ex-1.8.1.jar:/Users/vdonets/.m2/repository/com/sun/xml/fastinfoset/FastInfoset/1.2.16/FastInfoset-1.2.16.jar:/Users/vdonets/.m2/repository/log4j/log4j/1.2.14/log4j-1.2.14.jar:/Applications/IntelliJ IDEA.app/Contents/lib/idea_rt.jar:/Users/vdonets/Library/Caches/JetBrains/IntelliJIdea2022.1/captureAgent/debugger-agent.jar, java.vm.vendor=Eclipse OpenJ9, sun.arch.data.model=64, com.ibm.vm.bitmode=64, hbm2ddl.auto=create, user.variant=, com.ibm.oti.vm.library.version=29, java.vendor.url=https://www.ibm.com/semeru-runtimes, user.timezone=Europe/Warsaw, java.vm.specification.version=11, os.name=Mac OS X, sun.java.launcher=SUN_STANDARD, user.country=US, sun.boot.library.path=/Users/vdonets/Library/Java/JavaVirtualMachines/semeru-11.0.15/Contents/Home/lib/default:/Users/vdonets/Library/Java/JavaVirtualMachines/semeru-11.0.15/Contents/Home/lib, sun.java.command=org.example.Main, sun.cpu.endian=little, user.home=/Users/vdonets, user.language=en, java.specification.vendor=Oracle Corporation, java.version.date=2022-04-19, java.home=/Users/vdonets/Library/Java/JavaVirtualMachines/semeru-11.0.15/Contents/Home, ibm.signalhandling.rs=false, jdk.extensions.name=Extensions for OpenJDK for Eclipse OpenJ9, file.separator=/, line.separator=
, java.specification.name=Java Platform API Specification, java.vm.specification.vendor=Oracle Corporation, intellij.debug.agent=true, java.compiler=j9jit29, com.ibm.util.extralibs.properties=, java.awt.graphicsenv=sun.awt.CGraphicsEnvironment, com.ibm.oti.configuration=scar, com.ibm.oti.shared.enabled=false, hibernate.hbm2ddl.auto=create, com.ibm.oti.vm.bootstrap.library.path=/Users/vdonets/Library/Java/JavaVirtualMachines/semeru-11.0.15/Contents/Home/lib/default:/Users/vdonets/Library/Java/JavaVirtualMachines/semeru-11.0.15/Contents/Home/lib, com.ibm.cpu.endian=little, java.fullversion=11.0.15-ea+10
JRE 11 Mac OS X aarch64-64-Bit 20220422_36 (JIT enabled, AOT enabled)
OpenJ9   - 9a84ec34e
OMR      - ab24b6666
JCL      - b7b5b42ea6 based on jdk-11.0.15+10, java.runtime.version=11.0.15-ea+10, user.name=vdonets, path.separator=:, hibernate.connection.username=root, os.version=12.5, java.runtime.name=IBM Semeru Runtime Open Edition, hibernate.connection.url=jdbc:mysql://localhost:3306/classicmodels?serverTimezone=UTC, connection.pool_size=5, ibm.signalhandling.sigint=true, file.encoding=UTF-8, java.vm.name=Eclipse OpenJ9 VM, hibernate.show_sql=true, java.vendor.version=11.0.15.0, ibm.signalhandling.sigchain=true, show_sql=true, hibernate.connection.driver_class=com.mysql.cj.jdbc.Driver, java.vendor.url.bug=https://github.com/ibmruntimes/Semeru-Runtimes/issues, java.io.tmpdir=/var/folders/wv/6c3_66yd6kq3r7z477kwz4lr0000gn/T/, java.version=11.0.15-ea, jboss.modules.system.pkgs=com.intellij.rt, com.ibm.system.agent.path=/Users/vdonets/Library/Java/JavaVirtualMachines/semeru-11.0.15/Contents/Home/lib, user.dir=/Users/vdonets/IdeaProjects/testmaven, os.arch=aarch64, java.vm.specification.name=Java Virtual Machine Specification, java.awt.printerjob=sun.lwawt.macosx.CPrinterJob, hibernate.connection.password=****, os.encoding=UTF-8, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@82e71d89, java.library.path=/Users/vdonets/Library/Java/JavaVirtualMachines/semeru-11.0.15/Contents/Home/lib/default:/Users/vdonets/Library/Java/JavaVirtualMachines/semeru-11.0.15/Contents/Home/lib:/usr/lib, java.vendor=IBM Corporation, java.vm.info=JRE 11 Mac OS X aarch64-64-Bit 20220422_36 (JIT enabled, AOT enabled)
OpenJ9   - 9a84ec34e
OMR      - ab24b6666
JCL      - b7b5b42ea6 based on jdk-11.0.15+10, java.vm.version=openj9-0.32.0, ibm.system.encoding=UTF-8, hibernate.bytecode.use_reflection_optimizer=false, com.ibm.jcl.checkClassPath=, sun.io.unicode.encoding=UnicodeLittle, hibernate.connection.pool_size=5, java.class.version=55.0}
DEBUG 2022-09-08 19:35:27,578 [main][JaccIntegrator.java:80] : Skipping JACC integration as it was not enabled
DEBUG 2022-09-08 19:35:27,579 [main][SessionFactoryImpl.java:292] : Instantiated session factory
DEBUG 2022-09-08 19:35:27,597 [main][ClassLoaderAccessImpl.java:55] : Not known whether passed class name [org.example.models.Book] is safe
DEBUG 2022-09-08 19:35:27,597 [main][ClassLoaderAccessImpl.java:57] : No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.models.Book
DEBUG 2022-09-08 19:35:27,604 [main][ClassLoaderAccessImpl.java:55] : Not known whether passed class name [org.example.models.Book] is safe
DEBUG 2022-09-08 19:35:27,604 [main][ClassLoaderAccessImpl.java:57] : No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.models.Book
DEBUG 2022-09-08 19:35:27,625 [main][ClassLoaderAccessImpl.java:55] : Not known whether passed class name [org.example.models.Author] is safe
DEBUG 2022-09-08 19:35:27,626 [main][ClassLoaderAccessImpl.java:57] : No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.models.Author
DEBUG 2022-09-08 19:35:27,626 [main][ClassLoaderAccessImpl.java:55] : Not known whether passed class name [org.example.models.Author] is safe
DEBUG 2022-09-08 19:35:27,626 [main][ClassLoaderAccessImpl.java:57] : No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.models.Author
DEBUG 2022-09-08 19:35:27,634 [main][AbstractCollectionPersister.java:670] : Static SQL for collection: org.example.models.Book.authors
DEBUG 2022-09-08 19:35:27,634 [main][AbstractCollectionPersister.java:672] :  Row insert: insert into Authors_Books (author_id, book_id) values (?, ?)
DEBUG 2022-09-08 19:35:27,635 [main][AbstractCollectionPersister.java:675] :  Row update: update Authors_Books set book_id=? where author_id=? and book_id=?
DEBUG 2022-09-08 19:35:27,635 [main][AbstractCollectionPersister.java:678] :  Row delete: delete from Authors_Books where author_id=? and book_id=?
DEBUG 2022-09-08 19:35:27,635 [main][AbstractCollectionPersister.java:681] :  One-shot delete: delete from Authors_Books where author_id=?
DEBUG 2022-09-08 19:35:27,635 [main][AbstractCollectionPersister.java:670] : Static SQL for collection: org.example.models.Author.books
DEBUG 2022-09-08 19:35:27,635 [main][AbstractCollectionPersister.java:672] :  Row insert: insert into Authors_Books (book_id, author_id) values (?, ?)
DEBUG 2022-09-08 19:35:27,635 [main][AbstractCollectionPersister.java:675] :  Row update: update Authors_Books set author_id=? where book_id=? and author_id=?
DEBUG 2022-09-08 19:35:27,636 [main][AbstractCollectionPersister.java:678] :  Row delete: delete from Authors_Books where book_id=? and author_id=?
DEBUG 2022-09-08 19:35:27,636 [main][AbstractCollectionPersister.java:681] :  One-shot delete: delete from Authors_Books where book_id=?
DEBUG 2022-09-08 19:35:27,637 [main][AbstractEntityPersister.java:3529] : Static SQL for entity: org.example.models.Book
DEBUG 2022-09-08 19:35:27,637 [main][AbstractEntityPersister.java:3534] :  Version select: select id from Book where id =?
DEBUG 2022-09-08 19:35:27,637 [main][AbstractEntityPersister.java:3537] :  Snapshot select: select book_.id, book_.name as name2_2_ from Book book_ where book_.id=?
DEBUG 2022-09-08 19:35:27,638 [main][DelegatingBasicLogger.java:394] :  Insert 0: insert into Book (name, id) values (?, ?)
DEBUG 2022-09-08 19:35:27,638 [main][DelegatingBasicLogger.java:394] :  Update 0: update Book set name=? where id=?
DEBUG 2022-09-08 19:35:27,638 [main][DelegatingBasicLogger.java:394] :  Delete 0: delete from Book where id=?
DEBUG 2022-09-08 19:35:27,646 [main][QuerySpacesImpl.java:174] : Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@a6fd49c3]
DEBUG 2022-09-08 19:35:27,647 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : authors
DEBUG 2022-09-08 19:35:27,648 [main][QuerySpacesImpl.java:174] : Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@95b1d245]
DEBUG 2022-09-08 19:35:27,649 [main][QuerySpacesImpl.java:174] : Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@e699ab20]
DEBUG 2022-09-08 19:35:27,649 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : name
DEBUG 2022-09-08 19:35:27,649 [main][FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150] : Building LoadPlan...
DEBUG 2022-09-08 19:35:27,653 [main][LoadQueryJoinAndFetchProcessor.java:100] : processing queryspace <gen:0>
DEBUG 2022-09-08 19:35:27,657 [main][LoadPlanTreePrinter.java:55] : LoadPlan(entity=org.example.models.Book)
    - Returns
       - EntityReturnImpl(entity=org.example.models.Book, querySpaceUid=<gen:0>, path=org.example.models.Book)
          - CollectionAttributeFetchImpl(collection=org.example.models.Book.authors, querySpaceUid=<gen:1>, path=org.example.models.Book.authors)
             - (collection element) CollectionFetchableElementEntityGraph(entity=org.example.models.Author, querySpaceUid=<gen:2>, path=org.example.models.Book.authors.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=org.example.models.Book)
          - SQL table alias mapping - book0_
          - alias suffix - 0_
          - suffixed key columns - {id1_2_0_}

DEBUG 2022-09-08 19:35:27,658 [main][EntityLoader.java:115] : Static select for entity org.example.models.Book [NONE]: select book0_.id as id1_2_0_, book0_.name as name2_2_0_ from Book book0_ where book0_.id=?
DEBUG 2022-09-08 19:35:27,658 [main][QuerySpacesImpl.java:174] : Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@dd27c4ec]
DEBUG 2022-09-08 19:35:27,658 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : authors
DEBUG 2022-09-08 19:35:27,659 [main][QuerySpacesImpl.java:174] : Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@2b367c7d]
DEBUG 2022-09-08 19:35:27,659 [main][QuerySpacesImpl.java:174] : Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@79489897]
DEBUG 2022-09-08 19:35:27,659 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : name
DEBUG 2022-09-08 19:35:27,659 [main][FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150] : Building LoadPlan...
DEBUG 2022-09-08 19:35:27,659 [main][LoadQueryJoinAndFetchProcessor.java:100] : processing queryspace <gen:0>
DEBUG 2022-09-08 19:35:27,660 [main][LoadPlanTreePrinter.java:55] : LoadPlan(entity=org.example.models.Book)
    - Returns
       - EntityReturnImpl(entity=org.example.models.Book, querySpaceUid=<gen:0>, path=org.example.models.Book)
          - CollectionAttributeFetchImpl(collection=org.example.models.Book.authors, querySpaceUid=<gen:1>, path=org.example.models.Book.authors)
             - (collection element) CollectionFetchableElementEntityGraph(entity=org.example.models.Author, querySpaceUid=<gen:2>, path=org.example.models.Book.authors.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=org.example.models.Book)
          - SQL table alias mapping - book0_
          - alias suffix - 0_
          - suffixed key columns - {id1_2_0_}

DEBUG 2022-09-08 19:35:27,660 [main][EntityLoader.java:115] : Static select for entity org.example.models.Book [READ]: select book0_.id as id1_2_0_, book0_.name as name2_2_0_ from Book book0_ where book0_.id=?
DEBUG 2022-09-08 19:35:27,660 [main][QuerySpacesImpl.java:174] : Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1c1bff2e]
DEBUG 2022-09-08 19:35:27,660 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : authors
DEBUG 2022-09-08 19:35:27,660 [main][QuerySpacesImpl.java:174] : Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@480e518a]
DEBUG 2022-09-08 19:35:27,661 [main][QuerySpacesImpl.java:174] : Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@f9d99617]
DEBUG 2022-09-08 19:35:27,661 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : name
DEBUG 2022-09-08 19:35:27,661 [main][FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150] : Building LoadPlan...
DEBUG 2022-09-08 19:35:27,661 [main][LoadQueryJoinAndFetchProcessor.java:100] : processing queryspace <gen:0>
DEBUG 2022-09-08 19:35:27,662 [main][LoadPlanTreePrinter.java:55] : LoadPlan(entity=org.example.models.Book)
    - Returns
       - EntityReturnImpl(entity=org.example.models.Book, querySpaceUid=<gen:0>, path=org.example.models.Book)
          - CollectionAttributeFetchImpl(collection=org.example.models.Book.authors, querySpaceUid=<gen:1>, path=org.example.models.Book.authors)
             - (collection element) CollectionFetchableElementEntityGraph(entity=org.example.models.Author, querySpaceUid=<gen:2>, path=org.example.models.Book.authors.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=org.example.models.Book)
          - SQL table alias mapping - book0_
          - alias suffix - 0_
          - suffixed key columns - {id1_2_0_}

DEBUG 2022-09-08 19:35:27,662 [main][EntityLoader.java:115] : Static select for entity org.example.models.Book [UPGRADE]: select book0_.id as id1_2_0_, book0_.name as name2_2_0_ from Book book0_ where book0_.id=? for update
DEBUG 2022-09-08 19:35:27,662 [main][QuerySpacesImpl.java:174] : Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7bb0d1d5]
DEBUG 2022-09-08 19:35:27,663 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : authors
DEBUG 2022-09-08 19:35:27,663 [main][QuerySpacesImpl.java:174] : Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@6693cb56]
DEBUG 2022-09-08 19:35:27,663 [main][QuerySpacesImpl.java:174] : Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@46f3d3ac]
DEBUG 2022-09-08 19:35:27,663 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : name
DEBUG 2022-09-08 19:35:27,663 [main][FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150] : Building LoadPlan...
DEBUG 2022-09-08 19:35:27,664 [main][LoadQueryJoinAndFetchProcessor.java:100] : processing queryspace <gen:0>
DEBUG 2022-09-08 19:35:27,664 [main][LoadPlanTreePrinter.java:55] : LoadPlan(entity=org.example.models.Book)
    - Returns
       - EntityReturnImpl(entity=org.example.models.Book, querySpaceUid=<gen:0>, path=org.example.models.Book)
          - CollectionAttributeFetchImpl(collection=org.example.models.Book.authors, querySpaceUid=<gen:1>, path=org.example.models.Book.authors)
             - (collection element) CollectionFetchableElementEntityGraph(entity=org.example.models.Author, querySpaceUid=<gen:2>, path=org.example.models.Book.authors.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=org.example.models.Book)
          - SQL table alias mapping - book0_
          - alias suffix - 0_
          - suffixed key columns - {id1_2_0_}

DEBUG 2022-09-08 19:35:27,665 [main][EntityLoader.java:115] : Static select for entity org.example.models.Book [UPGRADE_NOWAIT]: select book0_.id as id1_2_0_, book0_.name as name2_2_0_ from Book book0_ where book0_.id=? for update
DEBUG 2022-09-08 19:35:27,665 [main][QuerySpacesImpl.java:174] : Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@890b6ab1]
DEBUG 2022-09-08 19:35:27,665 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : authors
DEBUG 2022-09-08 19:35:27,666 [main][QuerySpacesImpl.java:174] : Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@4bf5d23a]
DEBUG 2022-09-08 19:35:27,666 [main][QuerySpacesImpl.java:174] : Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@82223ea5]
DEBUG 2022-09-08 19:35:27,667 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : name
DEBUG 2022-09-08 19:35:27,667 [main][FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150] : Building LoadPlan...
DEBUG 2022-09-08 19:35:27,667 [main][LoadQueryJoinAndFetchProcessor.java:100] : processing queryspace <gen:0>
DEBUG 2022-09-08 19:35:27,667 [main][LoadPlanTreePrinter.java:55] : LoadPlan(entity=org.example.models.Book)
    - Returns
       - EntityReturnImpl(entity=org.example.models.Book, querySpaceUid=<gen:0>, path=org.example.models.Book)
          - CollectionAttributeFetchImpl(collection=org.example.models.Book.authors, querySpaceUid=<gen:1>, path=org.example.models.Book.authors)
             - (collection element) CollectionFetchableElementEntityGraph(entity=org.example.models.Author, querySpaceUid=<gen:2>, path=org.example.models.Book.authors.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=org.example.models.Book)
          - SQL table alias mapping - book0_
          - alias suffix - 0_
          - suffixed key columns - {id1_2_0_}

DEBUG 2022-09-08 19:35:27,668 [main][EntityLoader.java:115] : Static select for entity org.example.models.Book [UPGRADE_SKIPLOCKED]: select book0_.id as id1_2_0_, book0_.name as name2_2_0_ from Book book0_ where book0_.id=? for update
DEBUG 2022-09-08 19:35:27,668 [main][QuerySpacesImpl.java:174] : Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@b9a13c26]
DEBUG 2022-09-08 19:35:27,668 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : authors
DEBUG 2022-09-08 19:35:27,668 [main][QuerySpacesImpl.java:174] : Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@93e479c4]
DEBUG 2022-09-08 19:35:27,669 [main][QuerySpacesImpl.java:174] : Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@b4585be4]
DEBUG 2022-09-08 19:35:27,669 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : name
DEBUG 2022-09-08 19:35:27,669 [main][FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150] : Building LoadPlan...
DEBUG 2022-09-08 19:35:27,669 [main][LoadQueryJoinAndFetchProcessor.java:100] : processing queryspace <gen:0>
DEBUG 2022-09-08 19:35:27,669 [main][LoadPlanTreePrinter.java:55] : LoadPlan(entity=org.example.models.Book)
    - Returns
       - EntityReturnImpl(entity=org.example.models.Book, querySpaceUid=<gen:0>, path=org.example.models.Book)
          - CollectionAttributeFetchImpl(collection=org.example.models.Book.authors, querySpaceUid=<gen:1>, path=org.example.models.Book.authors)
             - (collection element) CollectionFetchableElementEntityGraph(entity=org.example.models.Author, querySpaceUid=<gen:2>, path=org.example.models.Book.authors.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=org.example.models.Book)
          - SQL table alias mapping - book0_
          - alias suffix - 0_
          - suffixed key columns - {id1_2_0_}

DEBUG 2022-09-08 19:35:27,670 [main][EntityLoader.java:115] : Static select for entity org.example.models.Book [FORCE]: select book0_.id as id1_2_0_, book0_.name as name2_2_0_ from Book book0_ where book0_.id=? for update
DEBUG 2022-09-08 19:35:27,670 [main][QuerySpacesImpl.java:174] : Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@66dad05c]
DEBUG 2022-09-08 19:35:27,670 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : authors
DEBUG 2022-09-08 19:35:27,670 [main][QuerySpacesImpl.java:174] : Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@4942630c]
DEBUG 2022-09-08 19:35:27,670 [main][QuerySpacesImpl.java:174] : Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@cececce6]
DEBUG 2022-09-08 19:35:27,671 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : name
DEBUG 2022-09-08 19:35:27,671 [main][FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150] : Building LoadPlan...
DEBUG 2022-09-08 19:35:27,671 [main][LoadQueryJoinAndFetchProcessor.java:100] : processing queryspace <gen:0>
DEBUG 2022-09-08 19:35:27,671 [main][LoadPlanTreePrinter.java:55] : LoadPlan(entity=org.example.models.Book)
    - Returns
       - EntityReturnImpl(entity=org.example.models.Book, querySpaceUid=<gen:0>, path=org.example.models.Book)
          - CollectionAttributeFetchImpl(collection=org.example.models.Book.authors, querySpaceUid=<gen:1>, path=org.example.models.Book.authors)
             - (collection element) CollectionFetchableElementEntityGraph(entity=org.example.models.Author, querySpaceUid=<gen:2>, path=org.example.models.Book.authors.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=org.example.models.Book)
          - SQL table alias mapping - book0_
          - alias suffix - 0_
          - suffixed key columns - {id1_2_0_}

DEBUG 2022-09-08 19:35:27,672 [main][EntityLoader.java:115] : Static select for entity org.example.models.Book [PESSIMISTIC_READ]: select book0_.id as id1_2_0_, book0_.name as name2_2_0_ from Book book0_ where book0_.id=? lock in share mode
DEBUG 2022-09-08 19:35:27,672 [main][QuerySpacesImpl.java:174] : Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@a166eff4]
DEBUG 2022-09-08 19:35:27,672 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : authors
DEBUG 2022-09-08 19:35:27,672 [main][QuerySpacesImpl.java:174] : Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@a89967d1]
DEBUG 2022-09-08 19:35:27,672 [main][QuerySpacesImpl.java:174] : Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@769de99a]
DEBUG 2022-09-08 19:35:27,673 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : name
DEBUG 2022-09-08 19:35:27,673 [main][FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150] : Building LoadPlan...
DEBUG 2022-09-08 19:35:27,673 [main][LoadQueryJoinAndFetchProcessor.java:100] : processing queryspace <gen:0>
DEBUG 2022-09-08 19:35:27,673 [main][LoadPlanTreePrinter.java:55] : LoadPlan(entity=org.example.models.Book)
    - Returns
       - EntityReturnImpl(entity=org.example.models.Book, querySpaceUid=<gen:0>, path=org.example.models.Book)
          - CollectionAttributeFetchImpl(collection=org.example.models.Book.authors, querySpaceUid=<gen:1>, path=org.example.models.Book.authors)
             - (collection element) CollectionFetchableElementEntityGraph(entity=org.example.models.Author, querySpaceUid=<gen:2>, path=org.example.models.Book.authors.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=org.example.models.Book)
          - SQL table alias mapping - book0_
          - alias suffix - 0_
          - suffixed key columns - {id1_2_0_}

DEBUG 2022-09-08 19:35:27,674 [main][EntityLoader.java:115] : Static select for entity org.example.models.Book [PESSIMISTIC_WRITE]: select book0_.id as id1_2_0_, book0_.name as name2_2_0_ from Book book0_ where book0_.id=? for update
DEBUG 2022-09-08 19:35:27,674 [main][QuerySpacesImpl.java:174] : Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@53c10cb5]
DEBUG 2022-09-08 19:35:27,674 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : authors
DEBUG 2022-09-08 19:35:27,674 [main][QuerySpacesImpl.java:174] : Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@d3043211]
DEBUG 2022-09-08 19:35:27,675 [main][QuerySpacesImpl.java:174] : Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@d939a99f]
DEBUG 2022-09-08 19:35:27,675 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : name
DEBUG 2022-09-08 19:35:27,676 [main][FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150] : Building LoadPlan...
DEBUG 2022-09-08 19:35:27,676 [main][LoadQueryJoinAndFetchProcessor.java:100] : processing queryspace <gen:0>
DEBUG 2022-09-08 19:35:27,676 [main][LoadPlanTreePrinter.java:55] : LoadPlan(entity=org.example.models.Book)
    - Returns
       - EntityReturnImpl(entity=org.example.models.Book, querySpaceUid=<gen:0>, path=org.example.models.Book)
          - CollectionAttributeFetchImpl(collection=org.example.models.Book.authors, querySpaceUid=<gen:1>, path=org.example.models.Book.authors)
             - (collection element) CollectionFetchableElementEntityGraph(entity=org.example.models.Author, querySpaceUid=<gen:2>, path=org.example.models.Book.authors.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=org.example.models.Book)
          - SQL table alias mapping - book0_
          - alias suffix - 0_
          - suffixed key columns - {id1_2_0_}

DEBUG 2022-09-08 19:35:27,676 [main][EntityLoader.java:115] : Static select for entity org.example.models.Book [PESSIMISTIC_FORCE_INCREMENT]: select book0_.id as id1_2_0_, book0_.name as name2_2_0_ from Book book0_ where book0_.id=? for update
DEBUG 2022-09-08 19:35:27,677 [main][QuerySpacesImpl.java:174] : Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6184e938]
DEBUG 2022-09-08 19:35:27,677 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : authors
DEBUG 2022-09-08 19:35:27,677 [main][QuerySpacesImpl.java:174] : Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@e7ef4295]
DEBUG 2022-09-08 19:35:27,677 [main][QuerySpacesImpl.java:174] : Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7837ddcf]
DEBUG 2022-09-08 19:35:27,677 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : name
DEBUG 2022-09-08 19:35:27,677 [main][FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150] : Building LoadPlan...
DEBUG 2022-09-08 19:35:27,678 [main][LoadQueryJoinAndFetchProcessor.java:100] : processing queryspace <gen:0>
DEBUG 2022-09-08 19:35:27,678 [main][LoadPlanTreePrinter.java:55] : LoadPlan(entity=org.example.models.Book)
    - Returns
       - EntityReturnImpl(entity=org.example.models.Book, querySpaceUid=<gen:0>, path=org.example.models.Book)
          - CollectionAttributeFetchImpl(collection=org.example.models.Book.authors, querySpaceUid=<gen:1>, path=org.example.models.Book.authors)
             - (collection element) CollectionFetchableElementEntityGraph(entity=org.example.models.Author, querySpaceUid=<gen:2>, path=org.example.models.Book.authors.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=org.example.models.Book)
          - SQL table alias mapping - book0_
          - alias suffix - 0_
          - suffixed key columns - {id1_2_0_}

DEBUG 2022-09-08 19:35:27,678 [main][EntityLoader.java:115] : Static select for entity org.example.models.Book [OPTIMISTIC]: select book0_.id as id1_2_0_, book0_.name as name2_2_0_ from Book book0_ where book0_.id=?
DEBUG 2022-09-08 19:35:27,678 [main][QuerySpacesImpl.java:174] : Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@d9311988]
DEBUG 2022-09-08 19:35:27,678 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : authors
DEBUG 2022-09-08 19:35:27,678 [main][QuerySpacesImpl.java:174] : Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@1d84a7b8]
DEBUG 2022-09-08 19:35:27,679 [main][QuerySpacesImpl.java:174] : Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@96b3109b]
DEBUG 2022-09-08 19:35:27,679 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : name
DEBUG 2022-09-08 19:35:27,679 [main][FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150] : Building LoadPlan...
DEBUG 2022-09-08 19:35:27,679 [main][LoadQueryJoinAndFetchProcessor.java:100] : processing queryspace <gen:0>
DEBUG 2022-09-08 19:35:27,679 [main][LoadPlanTreePrinter.java:55] : LoadPlan(entity=org.example.models.Book)
    - Returns
       - EntityReturnImpl(entity=org.example.models.Book, querySpaceUid=<gen:0>, path=org.example.models.Book)
          - CollectionAttributeFetchImpl(collection=org.example.models.Book.authors, querySpaceUid=<gen:1>, path=org.example.models.Book.authors)
             - (collection element) CollectionFetchableElementEntityGraph(entity=org.example.models.Author, querySpaceUid=<gen:2>, path=org.example.models.Book.authors.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=org.example.models.Book)
          - SQL table alias mapping - book0_
          - alias suffix - 0_
          - suffixed key columns - {id1_2_0_}

DEBUG 2022-09-08 19:35:27,679 [main][EntityLoader.java:115] : Static select for entity org.example.models.Book [OPTIMISTIC_FORCE_INCREMENT]: select book0_.id as id1_2_0_, book0_.name as name2_2_0_ from Book book0_ where book0_.id=?
DEBUG 2022-09-08 19:35:27,685 [main][CascadeEntityLoader.java:38] : Static select for action ACTION_MERGE on entity org.example.models.Book: select book0_.id as id1_2_0_, book0_.name as name2_2_0_ from Book book0_ where book0_.id=?
DEBUG 2022-09-08 19:35:27,686 [main][CascadeEntityLoader.java:38] : Static select for action ACTION_REFRESH on entity org.example.models.Book: select book0_.id as id1_2_0_, book0_.name as name2_2_0_ from Book book0_ where book0_.id=?
DEBUG 2022-09-08 19:35:27,687 [main][AbstractEntityPersister.java:3529] : Static SQL for entity: org.example.models.Author
DEBUG 2022-09-08 19:35:27,688 [main][AbstractEntityPersister.java:3534] :  Version select: select id from Author where id =?
DEBUG 2022-09-08 19:35:27,688 [main][AbstractEntityPersister.java:3537] :  Snapshot select: select author_.id, author_.name as name2_0_, author_.salary as salary3_0_ from Author author_ where author_.id=?
DEBUG 2022-09-08 19:35:27,688 [main][DelegatingBasicLogger.java:394] :  Insert 0: insert into Author (name, salary, id) values (?, ?, ?)
DEBUG 2022-09-08 19:35:27,688 [main][DelegatingBasicLogger.java:394] :  Update 0: update Author set name=?, salary=? where id=?
DEBUG 2022-09-08 19:35:27,688 [main][DelegatingBasicLogger.java:394] :  Delete 0: delete from Author where id=?
DEBUG 2022-09-08 19:35:27,688 [main][AbstractEntityPersister.java:3545] :  Identity insert: insert into Author (name, salary) values (?, ?)
DEBUG 2022-09-08 19:35:27,688 [main][QuerySpacesImpl.java:174] : Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@a6297610]
DEBUG 2022-09-08 19:35:27,688 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : books
DEBUG 2022-09-08 19:35:27,689 [main][QuerySpacesImpl.java:174] : Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@c7f93a2d]
DEBUG 2022-09-08 19:35:27,689 [main][QuerySpacesImpl.java:174] : Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@ae0fbb13]
DEBUG 2022-09-08 19:35:27,689 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : name
DEBUG 2022-09-08 19:35:27,689 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : salary
DEBUG 2022-09-08 19:35:27,689 [main][FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150] : Building LoadPlan...
DEBUG 2022-09-08 19:35:27,689 [main][LoadQueryJoinAndFetchProcessor.java:100] : processing queryspace <gen:0>
DEBUG 2022-09-08 19:35:27,690 [main][LoadPlanTreePrinter.java:55] : LoadPlan(entity=org.example.models.Author)
    - Returns
       - EntityReturnImpl(entity=org.example.models.Author, querySpaceUid=<gen:0>, path=org.example.models.Author)
          - CollectionAttributeFetchImpl(collection=org.example.models.Author.books, querySpaceUid=<gen:1>, path=org.example.models.Author.books)
             - (collection element) CollectionFetchableElementEntityGraph(entity=org.example.models.Book, querySpaceUid=<gen:2>, path=org.example.models.Author.books.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=org.example.models.Author)
          - SQL table alias mapping - author0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

DEBUG 2022-09-08 19:35:27,690 [main][EntityLoader.java:115] : Static select for entity org.example.models.Author [NONE]: select author0_.id as id1_0_0_, author0_.name as name2_0_0_, author0_.salary as salary3_0_0_ from Author author0_ where author0_.id=?
DEBUG 2022-09-08 19:35:27,690 [main][QuerySpacesImpl.java:174] : Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@ad8d4073]
DEBUG 2022-09-08 19:35:27,690 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : books
DEBUG 2022-09-08 19:35:27,690 [main][QuerySpacesImpl.java:174] : Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@1363188d]
DEBUG 2022-09-08 19:35:27,690 [main][QuerySpacesImpl.java:174] : Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@cf8ccc64]
DEBUG 2022-09-08 19:35:27,690 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : name
DEBUG 2022-09-08 19:35:27,690 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : salary
DEBUG 2022-09-08 19:35:27,691 [main][FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150] : Building LoadPlan...
DEBUG 2022-09-08 19:35:27,691 [main][LoadQueryJoinAndFetchProcessor.java:100] : processing queryspace <gen:0>
DEBUG 2022-09-08 19:35:27,691 [main][LoadPlanTreePrinter.java:55] : LoadPlan(entity=org.example.models.Author)
    - Returns
       - EntityReturnImpl(entity=org.example.models.Author, querySpaceUid=<gen:0>, path=org.example.models.Author)
          - CollectionAttributeFetchImpl(collection=org.example.models.Author.books, querySpaceUid=<gen:1>, path=org.example.models.Author.books)
             - (collection element) CollectionFetchableElementEntityGraph(entity=org.example.models.Book, querySpaceUid=<gen:2>, path=org.example.models.Author.books.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=org.example.models.Author)
          - SQL table alias mapping - author0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

DEBUG 2022-09-08 19:35:27,691 [main][EntityLoader.java:115] : Static select for entity org.example.models.Author [READ]: select author0_.id as id1_0_0_, author0_.name as name2_0_0_, author0_.salary as salary3_0_0_ from Author author0_ where author0_.id=?
DEBUG 2022-09-08 19:35:27,691 [main][QuerySpacesImpl.java:174] : Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@b8b93b0a]
DEBUG 2022-09-08 19:35:27,691 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : books
DEBUG 2022-09-08 19:35:27,692 [main][QuerySpacesImpl.java:174] : Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@ffcc64a3]
DEBUG 2022-09-08 19:35:27,692 [main][QuerySpacesImpl.java:174] : Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@81ee3389]
DEBUG 2022-09-08 19:35:27,692 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : name
DEBUG 2022-09-08 19:35:27,692 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : salary
DEBUG 2022-09-08 19:35:27,692 [main][FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150] : Building LoadPlan...
DEBUG 2022-09-08 19:35:27,692 [main][LoadQueryJoinAndFetchProcessor.java:100] : processing queryspace <gen:0>
DEBUG 2022-09-08 19:35:27,693 [main][LoadPlanTreePrinter.java:55] : LoadPlan(entity=org.example.models.Author)
    - Returns
       - EntityReturnImpl(entity=org.example.models.Author, querySpaceUid=<gen:0>, path=org.example.models.Author)
          - CollectionAttributeFetchImpl(collection=org.example.models.Author.books, querySpaceUid=<gen:1>, path=org.example.models.Author.books)
             - (collection element) CollectionFetchableElementEntityGraph(entity=org.example.models.Book, querySpaceUid=<gen:2>, path=org.example.models.Author.books.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=org.example.models.Author)
          - SQL table alias mapping - author0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

DEBUG 2022-09-08 19:35:27,693 [main][EntityLoader.java:115] : Static select for entity org.example.models.Author [UPGRADE]: select author0_.id as id1_0_0_, author0_.name as name2_0_0_, author0_.salary as salary3_0_0_ from Author author0_ where author0_.id=? for update
DEBUG 2022-09-08 19:35:27,693 [main][QuerySpacesImpl.java:174] : Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2f91acdb]
DEBUG 2022-09-08 19:35:27,693 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : books
DEBUG 2022-09-08 19:35:27,693 [main][QuerySpacesImpl.java:174] : Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@fbf869e3]
DEBUG 2022-09-08 19:35:27,693 [main][QuerySpacesImpl.java:174] : Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@45406dbb]
DEBUG 2022-09-08 19:35:27,693 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : name
DEBUG 2022-09-08 19:35:27,694 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : salary
DEBUG 2022-09-08 19:35:27,695 [main][FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150] : Building LoadPlan...
DEBUG 2022-09-08 19:35:27,695 [main][LoadQueryJoinAndFetchProcessor.java:100] : processing queryspace <gen:0>
DEBUG 2022-09-08 19:35:27,695 [main][LoadPlanTreePrinter.java:55] : LoadPlan(entity=org.example.models.Author)
    - Returns
       - EntityReturnImpl(entity=org.example.models.Author, querySpaceUid=<gen:0>, path=org.example.models.Author)
          - CollectionAttributeFetchImpl(collection=org.example.models.Author.books, querySpaceUid=<gen:1>, path=org.example.models.Author.books)
             - (collection element) CollectionFetchableElementEntityGraph(entity=org.example.models.Book, querySpaceUid=<gen:2>, path=org.example.models.Author.books.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=org.example.models.Author)
          - SQL table alias mapping - author0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

DEBUG 2022-09-08 19:35:27,695 [main][EntityLoader.java:115] : Static select for entity org.example.models.Author [UPGRADE_NOWAIT]: select author0_.id as id1_0_0_, author0_.name as name2_0_0_, author0_.salary as salary3_0_0_ from Author author0_ where author0_.id=? for update
DEBUG 2022-09-08 19:35:27,695 [main][QuerySpacesImpl.java:174] : Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@f435661a]
DEBUG 2022-09-08 19:35:27,696 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : books
DEBUG 2022-09-08 19:35:27,696 [main][QuerySpacesImpl.java:174] : Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@cf267b5b]
DEBUG 2022-09-08 19:35:27,696 [main][QuerySpacesImpl.java:174] : Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@ddff797d]
DEBUG 2022-09-08 19:35:27,696 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : name
DEBUG 2022-09-08 19:35:27,696 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : salary
DEBUG 2022-09-08 19:35:27,696 [main][FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150] : Building LoadPlan...
DEBUG 2022-09-08 19:35:27,696 [main][LoadQueryJoinAndFetchProcessor.java:100] : processing queryspace <gen:0>
DEBUG 2022-09-08 19:35:27,697 [main][LoadPlanTreePrinter.java:55] : LoadPlan(entity=org.example.models.Author)
    - Returns
       - EntityReturnImpl(entity=org.example.models.Author, querySpaceUid=<gen:0>, path=org.example.models.Author)
          - CollectionAttributeFetchImpl(collection=org.example.models.Author.books, querySpaceUid=<gen:1>, path=org.example.models.Author.books)
             - (collection element) CollectionFetchableElementEntityGraph(entity=org.example.models.Book, querySpaceUid=<gen:2>, path=org.example.models.Author.books.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=org.example.models.Author)
          - SQL table alias mapping - author0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

DEBUG 2022-09-08 19:35:27,697 [main][EntityLoader.java:115] : Static select for entity org.example.models.Author [UPGRADE_SKIPLOCKED]: select author0_.id as id1_0_0_, author0_.name as name2_0_0_, author0_.salary as salary3_0_0_ from Author author0_ where author0_.id=? for update
DEBUG 2022-09-08 19:35:27,697 [main][QuerySpacesImpl.java:174] : Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@a69aa78]
DEBUG 2022-09-08 19:35:27,697 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : books
DEBUG 2022-09-08 19:35:27,697 [main][QuerySpacesImpl.java:174] : Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@3b81b655]
DEBUG 2022-09-08 19:35:27,697 [main][QuerySpacesImpl.java:174] : Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5e0e3385]
DEBUG 2022-09-08 19:35:27,697 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : name
DEBUG 2022-09-08 19:35:27,698 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : salary
DEBUG 2022-09-08 19:35:27,698 [main][FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150] : Building LoadPlan...
DEBUG 2022-09-08 19:35:27,698 [main][LoadQueryJoinAndFetchProcessor.java:100] : processing queryspace <gen:0>
DEBUG 2022-09-08 19:35:27,698 [main][LoadPlanTreePrinter.java:55] : LoadPlan(entity=org.example.models.Author)
    - Returns
       - EntityReturnImpl(entity=org.example.models.Author, querySpaceUid=<gen:0>, path=org.example.models.Author)
          - CollectionAttributeFetchImpl(collection=org.example.models.Author.books, querySpaceUid=<gen:1>, path=org.example.models.Author.books)
             - (collection element) CollectionFetchableElementEntityGraph(entity=org.example.models.Book, querySpaceUid=<gen:2>, path=org.example.models.Author.books.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=org.example.models.Author)
          - SQL table alias mapping - author0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

DEBUG 2022-09-08 19:35:27,698 [main][EntityLoader.java:115] : Static select for entity org.example.models.Author [FORCE]: select author0_.id as id1_0_0_, author0_.name as name2_0_0_, author0_.salary as salary3_0_0_ from Author author0_ where author0_.id=? for update
DEBUG 2022-09-08 19:35:27,698 [main][QuerySpacesImpl.java:174] : Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2b66097d]
DEBUG 2022-09-08 19:35:27,699 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : books
DEBUG 2022-09-08 19:35:27,699 [main][QuerySpacesImpl.java:174] : Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@3574a594]
DEBUG 2022-09-08 19:35:27,699 [main][QuerySpacesImpl.java:174] : Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@811ad87a]
DEBUG 2022-09-08 19:35:27,699 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : name
DEBUG 2022-09-08 19:35:27,699 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : salary
DEBUG 2022-09-08 19:35:27,699 [main][FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150] : Building LoadPlan...
DEBUG 2022-09-08 19:35:27,699 [main][LoadQueryJoinAndFetchProcessor.java:100] : processing queryspace <gen:0>
DEBUG 2022-09-08 19:35:27,700 [main][LoadPlanTreePrinter.java:55] : LoadPlan(entity=org.example.models.Author)
    - Returns
       - EntityReturnImpl(entity=org.example.models.Author, querySpaceUid=<gen:0>, path=org.example.models.Author)
          - CollectionAttributeFetchImpl(collection=org.example.models.Author.books, querySpaceUid=<gen:1>, path=org.example.models.Author.books)
             - (collection element) CollectionFetchableElementEntityGraph(entity=org.example.models.Book, querySpaceUid=<gen:2>, path=org.example.models.Author.books.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=org.example.models.Author)
          - SQL table alias mapping - author0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

DEBUG 2022-09-08 19:35:27,700 [main][EntityLoader.java:115] : Static select for entity org.example.models.Author [PESSIMISTIC_READ]: select author0_.id as id1_0_0_, author0_.name as name2_0_0_, author0_.salary as salary3_0_0_ from Author author0_ where author0_.id=? lock in share mode
DEBUG 2022-09-08 19:35:27,700 [main][QuerySpacesImpl.java:174] : Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@46982b39]
DEBUG 2022-09-08 19:35:27,700 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : books
DEBUG 2022-09-08 19:35:27,700 [main][QuerySpacesImpl.java:174] : Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@45fa0c71]
DEBUG 2022-09-08 19:35:27,701 [main][QuerySpacesImpl.java:174] : Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@38d2444a]
DEBUG 2022-09-08 19:35:27,701 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : name
DEBUG 2022-09-08 19:35:27,701 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : salary
DEBUG 2022-09-08 19:35:27,701 [main][FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150] : Building LoadPlan...
DEBUG 2022-09-08 19:35:27,702 [main][LoadQueryJoinAndFetchProcessor.java:100] : processing queryspace <gen:0>
DEBUG 2022-09-08 19:35:27,702 [main][LoadPlanTreePrinter.java:55] : LoadPlan(entity=org.example.models.Author)
    - Returns
       - EntityReturnImpl(entity=org.example.models.Author, querySpaceUid=<gen:0>, path=org.example.models.Author)
          - CollectionAttributeFetchImpl(collection=org.example.models.Author.books, querySpaceUid=<gen:1>, path=org.example.models.Author.books)
             - (collection element) CollectionFetchableElementEntityGraph(entity=org.example.models.Book, querySpaceUid=<gen:2>, path=org.example.models.Author.books.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=org.example.models.Author)
          - SQL table alias mapping - author0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

DEBUG 2022-09-08 19:35:27,703 [main][EntityLoader.java:115] : Static select for entity org.example.models.Author [PESSIMISTIC_WRITE]: select author0_.id as id1_0_0_, author0_.name as name2_0_0_, author0_.salary as salary3_0_0_ from Author author0_ where author0_.id=? for update
DEBUG 2022-09-08 19:35:27,703 [main][QuerySpacesImpl.java:174] : Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@fa43df4f]
DEBUG 2022-09-08 19:35:27,703 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : books
DEBUG 2022-09-08 19:35:27,703 [main][QuerySpacesImpl.java:174] : Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@7b0ab3d7]
DEBUG 2022-09-08 19:35:27,703 [main][QuerySpacesImpl.java:174] : Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@599a8173]
DEBUG 2022-09-08 19:35:27,703 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : name
DEBUG 2022-09-08 19:35:27,704 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : salary
DEBUG 2022-09-08 19:35:27,704 [main][FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150] : Building LoadPlan...
DEBUG 2022-09-08 19:35:27,704 [main][LoadQueryJoinAndFetchProcessor.java:100] : processing queryspace <gen:0>
DEBUG 2022-09-08 19:35:27,704 [main][LoadPlanTreePrinter.java:55] : LoadPlan(entity=org.example.models.Author)
    - Returns
       - EntityReturnImpl(entity=org.example.models.Author, querySpaceUid=<gen:0>, path=org.example.models.Author)
          - CollectionAttributeFetchImpl(collection=org.example.models.Author.books, querySpaceUid=<gen:1>, path=org.example.models.Author.books)
             - (collection element) CollectionFetchableElementEntityGraph(entity=org.example.models.Book, querySpaceUid=<gen:2>, path=org.example.models.Author.books.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=org.example.models.Author)
          - SQL table alias mapping - author0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

DEBUG 2022-09-08 19:35:27,704 [main][EntityLoader.java:115] : Static select for entity org.example.models.Author [PESSIMISTIC_FORCE_INCREMENT]: select author0_.id as id1_0_0_, author0_.name as name2_0_0_, author0_.salary as salary3_0_0_ from Author author0_ where author0_.id=? for update
DEBUG 2022-09-08 19:35:27,704 [main][QuerySpacesImpl.java:174] : Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@28ed59c1]
DEBUG 2022-09-08 19:35:27,705 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : books
DEBUG 2022-09-08 19:35:27,705 [main][QuerySpacesImpl.java:174] : Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@f44aa8b]
DEBUG 2022-09-08 19:35:27,705 [main][QuerySpacesImpl.java:174] : Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7702cb22]
DEBUG 2022-09-08 19:35:27,705 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : name
DEBUG 2022-09-08 19:35:27,705 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : salary
DEBUG 2022-09-08 19:35:27,705 [main][FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150] : Building LoadPlan...
DEBUG 2022-09-08 19:35:27,705 [main][LoadQueryJoinAndFetchProcessor.java:100] : processing queryspace <gen:0>
DEBUG 2022-09-08 19:35:27,706 [main][LoadPlanTreePrinter.java:55] : LoadPlan(entity=org.example.models.Author)
    - Returns
       - EntityReturnImpl(entity=org.example.models.Author, querySpaceUid=<gen:0>, path=org.example.models.Author)
          - CollectionAttributeFetchImpl(collection=org.example.models.Author.books, querySpaceUid=<gen:1>, path=org.example.models.Author.books)
             - (collection element) CollectionFetchableElementEntityGraph(entity=org.example.models.Book, querySpaceUid=<gen:2>, path=org.example.models.Author.books.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=org.example.models.Author)
          - SQL table alias mapping - author0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

DEBUG 2022-09-08 19:35:27,706 [main][EntityLoader.java:115] : Static select for entity org.example.models.Author [OPTIMISTIC]: select author0_.id as id1_0_0_, author0_.name as name2_0_0_, author0_.salary as salary3_0_0_ from Author author0_ where author0_.id=?
DEBUG 2022-09-08 19:35:27,706 [main][QuerySpacesImpl.java:174] : Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@96f3488d]
DEBUG 2022-09-08 19:35:27,706 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : books
DEBUG 2022-09-08 19:35:27,706 [main][QuerySpacesImpl.java:174] : Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@c4a85f77]
DEBUG 2022-09-08 19:35:27,706 [main][QuerySpacesImpl.java:174] : Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@265db41d]
DEBUG 2022-09-08 19:35:27,706 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : name
DEBUG 2022-09-08 19:35:27,706 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : salary
DEBUG 2022-09-08 19:35:27,707 [main][FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150] : Building LoadPlan...
DEBUG 2022-09-08 19:35:27,707 [main][LoadQueryJoinAndFetchProcessor.java:100] : processing queryspace <gen:0>
DEBUG 2022-09-08 19:35:27,707 [main][LoadPlanTreePrinter.java:55] : LoadPlan(entity=org.example.models.Author)
    - Returns
       - EntityReturnImpl(entity=org.example.models.Author, querySpaceUid=<gen:0>, path=org.example.models.Author)
          - CollectionAttributeFetchImpl(collection=org.example.models.Author.books, querySpaceUid=<gen:1>, path=org.example.models.Author.books)
             - (collection element) CollectionFetchableElementEntityGraph(entity=org.example.models.Book, querySpaceUid=<gen:2>, path=org.example.models.Author.books.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=org.example.models.Author)
          - SQL table alias mapping - author0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

DEBUG 2022-09-08 19:35:27,707 [main][EntityLoader.java:115] : Static select for entity org.example.models.Author [OPTIMISTIC_FORCE_INCREMENT]: select author0_.id as id1_0_0_, author0_.name as name2_0_0_, author0_.salary as salary3_0_0_ from Author author0_ where author0_.id=?
DEBUG 2022-09-08 19:35:27,707 [main][CascadeEntityLoader.java:38] : Static select for action ACTION_MERGE on entity org.example.models.Author: select author0_.id as id1_0_0_, author0_.name as name2_0_0_, author0_.salary as salary3_0_0_ from Author author0_ where author0_.id=?
DEBUG 2022-09-08 19:35:27,708 [main][CascadeEntityLoader.java:38] : Static select for action ACTION_REFRESH on entity org.example.models.Author: select author0_.id as id1_0_0_, author0_.name as name2_0_0_, author0_.salary as salary3_0_0_ from Author author0_ where author0_.id=?
DEBUG 2022-09-08 19:35:27,709 [main][QuerySpacesImpl.java:174] : Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@6e7af3cf]
DEBUG 2022-09-08 19:35:27,710 [main][QuerySpacesImpl.java:174] : Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@c40b6053]
DEBUG 2022-09-08 19:35:27,710 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : books
DEBUG 2022-09-08 19:35:27,711 [main][MetamodelGraphWalker.java:145] : Property path deemed to be circular : books
DEBUG 2022-09-08 19:35:27,711 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : name
DEBUG 2022-09-08 19:35:27,712 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : salary
DEBUG 2022-09-08 19:35:27,712 [main][FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150] : Building LoadPlan...
DEBUG 2022-09-08 19:35:27,713 [main][LoadQueryJoinAndFetchProcessor.java:100] : processing queryspace <gen:0>
DEBUG 2022-09-08 19:35:27,714 [main][LoadPlanTreePrinter.java:55] : LoadPlan(collection=org.example.models.Book.authors)
    - Returns
       - CollectionReturnImpl(collection=org.example.models.Book.authors, querySpaceUid=<gen:0>, path=[org.example.models.Book.authors])
          - (collection element) CollectionFetchableElementEntityGraph(entity=org.example.models.Author, querySpaceUid=<gen:1>, path=[org.example.models.Book.authors].<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=org.example.models.Book.authors)
          - SQL table alias mapping - authors0_
          - alias suffix - 0_
          - suffixed key columns - {author_i2_1_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - id1_0_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=org.example.models.Author)
                - SQL table alias mapping - author1_
                - alias suffix - 1_
                - suffixed key columns - {id1_0_1_}

DEBUG 2022-09-08 19:35:27,714 [main][CollectionLoader.java:83] : Static select for collection org.example.models.Book.authors: select authors0_.author_id as author_i2_1_0_, authors0_.book_id as book_id1_1_0_, author1_.id as id1_0_1_, author1_.name as name2_0_1_, author1_.salary as salary3_0_1_ from Authors_Books authors0_ inner join Author author1_ on authors0_.book_id=author1_.id where authors0_.author_id=?
DEBUG 2022-09-08 19:35:27,714 [main][QuerySpacesImpl.java:174] : Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@8dfe30d]
DEBUG 2022-09-08 19:35:27,714 [main][QuerySpacesImpl.java:174] : Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6b931]
DEBUG 2022-09-08 19:35:27,714 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : authors
DEBUG 2022-09-08 19:35:27,715 [main][MetamodelGraphWalker.java:145] : Property path deemed to be circular : authors
DEBUG 2022-09-08 19:35:27,715 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : name
DEBUG 2022-09-08 19:35:27,715 [main][FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150] : Building LoadPlan...
DEBUG 2022-09-08 19:35:27,715 [main][LoadQueryJoinAndFetchProcessor.java:100] : processing queryspace <gen:0>
DEBUG 2022-09-08 19:35:27,715 [main][LoadPlanTreePrinter.java:55] : LoadPlan(collection=org.example.models.Author.books)
    - Returns
       - CollectionReturnImpl(collection=org.example.models.Author.books, querySpaceUid=<gen:0>, path=[org.example.models.Author.books])
          - (collection element) CollectionFetchableElementEntityGraph(entity=org.example.models.Book, querySpaceUid=<gen:1>, path=[org.example.models.Author.books].<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=org.example.models.Author.books)
          - SQL table alias mapping - books0_
          - alias suffix - 0_
          - suffixed key columns - {book_id1_1_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - id1_2_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=org.example.models.Book)
                - SQL table alias mapping - book1_
                - alias suffix - 1_
                - suffixed key columns - {id1_2_1_}

DEBUG 2022-09-08 19:35:27,715 [main][CollectionLoader.java:83] : Static select for collection org.example.models.Author.books: select books0_.book_id as book_id1_1_0_, books0_.author_id as author_i2_1_0_, book1_.id as id1_2_1_, book1_.name as name2_2_1_ from Authors_Books books0_ inner join Book book1_ on books0_.author_id=book1_.id where books0_.book_id=?
DEBUG 2022-09-08 19:35:27,728 [main][SqlStatementLogger.java:92] : alter table Authors_Books drop foreign key FKs1vdbwf5okcxthhicku1hc93d
INFO  2022-09-08 19:35:27,730 [main][DdlTransactionIsolatorNonJtaImpl.java:48] : HHH10001501: Connection obtained from JdbcConnectionAccess [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess@4036da6b] for (non-JTA) DDL execution was not in auto-commit mode; the Connection 'local transaction' will be committed and the Connection will be set into auto-commit mode.
WARN  2022-09-08 19:35:27,741 [main][ExceptionHandlerLoggedImpl.java:27] : GenerationTarget encountered exception accepting command : Error executing DDL via JDBC Statement
org.hibernate.tool.schema.spi.CommandAcceptanceException: Error executing DDL via JDBC Statement
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:62)
	at org.hibernate.tool.schema.internal.SchemaDropperImpl.applySqlString(SchemaDropperImpl.java:374)
	at org.hibernate.tool.schema.internal.SchemaDropperImpl.applySqlStrings(SchemaDropperImpl.java:359)
	at org.hibernate.tool.schema.internal.SchemaDropperImpl.applyConstraintDropping(SchemaDropperImpl.java:331)
	at org.hibernate.tool.schema.internal.SchemaDropperImpl.dropFromMetadata(SchemaDropperImpl.java:230)
	at org.hibernate.tool.schema.internal.SchemaDropperImpl.performDrop(SchemaDropperImpl.java:154)
	at org.hibernate.tool.schema.internal.SchemaDropperImpl.doDrop(SchemaDropperImpl.java:126)
	at org.hibernate.tool.schema.internal.SchemaDropperImpl.doDrop(SchemaDropperImpl.java:112)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.performDatabaseAction(SchemaManagementToolCoordinator.java:137)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.process(SchemaManagementToolCoordinator.java:65)
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:307)
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:490)
	at org.hibernate.cfg.Configuration.buildSessionFactory(Configuration.java:710)
	at org.hibernate.cfg.Configuration.buildSessionFactory(Configuration.java:726)
	at org.example.utils.HibernateUtil.<clinit>(HibernateUtil.java:16)
	at org.example.repos.AuthorRepository.<init>(AuthorRepository.java:23)
	at org.example.Main.main(Main.java:18)
Caused by: 
java.sql.SQLSyntaxErrorException: Table 'classicmodels.authors_books' doesn't exist
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:120)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.StatementImpl.executeInternal(StatementImpl.java:763)
	at com.mysql.cj.jdbc.StatementImpl.execute(StatementImpl.java:648)
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:49)
	... 16 more
DEBUG 2022-09-08 19:35:27,751 [main][SqlStatementLogger.java:92] : alter table Authors_Books drop foreign key FK1h5wgpewyadjq3lpqpjo0ylx4
WARN  2022-09-08 19:35:27,753 [main][ExceptionHandlerLoggedImpl.java:27] : GenerationTarget encountered exception accepting command : Error executing DDL via JDBC Statement
org.hibernate.tool.schema.spi.CommandAcceptanceException: Error executing DDL via JDBC Statement
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:62)
	at org.hibernate.tool.schema.internal.SchemaDropperImpl.applySqlString(SchemaDropperImpl.java:374)
	at org.hibernate.tool.schema.internal.SchemaDropperImpl.applySqlStrings(SchemaDropperImpl.java:359)
	at org.hibernate.tool.schema.internal.SchemaDropperImpl.applyConstraintDropping(SchemaDropperImpl.java:331)
	at org.hibernate.tool.schema.internal.SchemaDropperImpl.dropFromMetadata(SchemaDropperImpl.java:230)
	at org.hibernate.tool.schema.internal.SchemaDropperImpl.performDrop(SchemaDropperImpl.java:154)
	at org.hibernate.tool.schema.internal.SchemaDropperImpl.doDrop(SchemaDropperImpl.java:126)
	at org.hibernate.tool.schema.internal.SchemaDropperImpl.doDrop(SchemaDropperImpl.java:112)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.performDatabaseAction(SchemaManagementToolCoordinator.java:137)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.process(SchemaManagementToolCoordinator.java:65)
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:307)
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:490)
	at org.hibernate.cfg.Configuration.buildSessionFactory(Configuration.java:710)
	at org.hibernate.cfg.Configuration.buildSessionFactory(Configuration.java:726)
	at org.example.utils.HibernateUtil.<clinit>(HibernateUtil.java:16)
	at org.example.repos.AuthorRepository.<init>(AuthorRepository.java:23)
	at org.example.Main.main(Main.java:18)
Caused by: 
java.sql.SQLSyntaxErrorException: Table 'classicmodels.authors_books' doesn't exist
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:120)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.StatementImpl.executeInternal(StatementImpl.java:763)
	at com.mysql.cj.jdbc.StatementImpl.execute(StatementImpl.java:648)
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:49)
	... 16 more
DEBUG 2022-09-08 19:35:27,753 [main][SqlStatementLogger.java:92] : drop table if exists Author
DEBUG 2022-09-08 19:35:27,759 [main][SqlStatementLogger.java:92] : drop table if exists Authors_Books
DEBUG 2022-09-08 19:35:27,761 [main][SqlStatementLogger.java:92] : drop table if exists Book
DEBUG 2022-09-08 19:35:27,768 [main][SqlStatementLogger.java:92] : drop table if exists hibernate_sequence
DEBUG 2022-09-08 19:35:27,778 [main][SqlStatementLogger.java:92] : create table Author (id bigint not null auto_increment, name varchar(255), salary integer, primary key (id))
INFO  2022-09-08 19:35:27,779 [main][DdlTransactionIsolatorNonJtaImpl.java:48] : HHH10001501: Connection obtained from JdbcConnectionAccess [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess@215f7fe4] for (non-JTA) DDL execution was not in auto-commit mode; the Connection 'local transaction' will be committed and the Connection will be set into auto-commit mode.
DEBUG 2022-09-08 19:35:27,792 [main][SqlStatementLogger.java:92] : create table Authors_Books (book_id bigint not null, author_id bigint not null, primary key (book_id, author_id))
DEBUG 2022-09-08 19:35:27,796 [main][SqlStatementLogger.java:92] : create table Book (id bigint not null, name varchar(255), primary key (id))
DEBUG 2022-09-08 19:35:27,799 [main][SqlStatementLogger.java:92] : create table hibernate_sequence (next_val bigint)
DEBUG 2022-09-08 19:35:27,801 [main][SqlStatementLogger.java:92] : insert into hibernate_sequence values ( 1 )
DEBUG 2022-09-08 19:35:27,802 [main][SqlStatementLogger.java:92] : alter table Authors_Books add constraint FKs1vdbwf5okcxthhicku1hc93d foreign key (author_id) references Book (id)
DEBUG 2022-09-08 19:35:27,812 [main][SqlStatementLogger.java:92] : alter table Authors_Books add constraint FK1h5wgpewyadjq3lpqpjo0ylx4 foreign key (book_id) references Author (id)
INFO  2022-09-08 19:35:27,821 [main][SchemaCreatorImpl.java:485] : HHH000476: Executing import script 'org.hibernate.tool.schema.internal.exec.ScriptSourceInputNonExistentImpl@e895ae89'
DEBUG 2022-09-08 19:35:27,822 [main][JtaPlatformInitiator.java:42] : No JtaPlatform was specified, checking resolver
DEBUG 2022-09-08 19:35:27,823 [main][JtaPlatformResolverInitiator.java:33] : No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
DEBUG 2022-09-08 19:35:27,824 [main][StandardJtaPlatformResolver.java:101] : Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
DEBUG 2022-09-08 19:35:27,825 [main][NamedQueryRepository.java:151] : Checking 0 named HQL queries
DEBUG 2022-09-08 19:35:27,825 [main][NamedQueryRepository.java:167] : Checking 0 named SQL queries
DEBUG 2022-09-08 19:35:27,825 [main][SessionFactoryRegistry.java:52] : Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@370e4b21
DEBUG 2022-09-08 19:35:27,826 [main][SessionFactoryRegistry.java:74] : Registering SessionFactory: 8a5c4b79-3259-4a93-b2c3-106f8aa58129 (<unnamed>)
DEBUG 2022-09-08 19:35:27,826 [main][SessionFactoryRegistry.java:81] : Not binding SessionFactory to JNDI, no JNDI name configured
DEBUG 2022-09-08 19:35:27,851 [main][StatisticsInitiator.java:82] : Statistics initialized [enabled=false]
DEBUG 2022-09-08 19:35:27,855 [main][TransactionImpl.java:55] : begin
DEBUG 2022-09-08 19:35:27,861 [main][ActionQueue.java:272] : Executing identity-insert immediately
DEBUG 2022-09-08 19:35:27,862 [main][SqlStatementLogger.java:92] : insert into Author (name, salary) values (?, ?)
DEBUG 2022-09-08 19:35:27,869 [main][IdentifierGeneratorHelper.java:78] : Natively generated identity: 1
DEBUG 2022-09-08 19:35:27,869 [main][ResourceRegistryStandardImpl.java:104] : HHH000387: ResultSet's statement was not registered
DEBUG 2022-09-08 19:35:27,870 [main][TransactionImpl.java:66] : committing
DEBUG 2022-09-08 19:35:27,871 [main][AbstractFlushingEventListener.java:132] : Processing flush-time cascades
DEBUG 2022-09-08 19:35:27,871 [main][AbstractFlushingEventListener.java:174] : Dirty checking collections
DEBUG 2022-09-08 19:35:27,872 [main][AbstractFlushingEventListener.java:106] : Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
DEBUG 2022-09-08 19:35:27,872 [main][AbstractFlushingEventListener.java:113] : Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
DEBUG 2022-09-08 19:35:27,872 [main][EntityPrinter.java:102] : Listing entities:
DEBUG 2022-09-08 19:35:27,872 [main][EntityPrinter.java:109] : org.example.models.Author{books=null, name=David Baldacci, id=1, salary=2793}
DEBUG 2022-09-08 19:35:27,873 [main][LogicalConnectionManagedImpl.java:154] : Initiating JDBC connection release from afterTransaction
DEBUG 2022-09-08 19:35:27,874 [main][LogicalConnectionManagedImpl.java:154] : Initiating JDBC connection release from afterTransaction
DEBUG 2022-09-08 19:35:27,888 [main][TransactionImpl.java:55] : begin
DEBUG 2022-09-08 19:35:27,889 [main][ActionQueue.java:272] : Executing identity-insert immediately
DEBUG 2022-09-08 19:35:27,889 [main][SqlStatementLogger.java:92] : insert into Author (name, salary) values (?, ?)
DEBUG 2022-09-08 19:35:27,890 [main][IdentifierGeneratorHelper.java:78] : Natively generated identity: 2
DEBUG 2022-09-08 19:35:27,890 [main][ResourceRegistryStandardImpl.java:104] : HHH000387: ResultSet's statement was not registered
DEBUG 2022-09-08 19:35:27,890 [main][TransactionImpl.java:66] : committing
DEBUG 2022-09-08 19:35:27,890 [main][AbstractFlushingEventListener.java:132] : Processing flush-time cascades
DEBUG 2022-09-08 19:35:27,890 [main][AbstractFlushingEventListener.java:174] : Dirty checking collections
DEBUG 2022-09-08 19:35:27,890 [main][AbstractFlushingEventListener.java:106] : Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
DEBUG 2022-09-08 19:35:27,891 [main][AbstractFlushingEventListener.java:113] : Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
DEBUG 2022-09-08 19:35:27,891 [main][EntityPrinter.java:102] : Listing entities:
DEBUG 2022-09-08 19:35:27,891 [main][EntityPrinter.java:109] : org.example.models.Author{books=null, name=Colleen Hoover, id=2, salary=4237}
DEBUG 2022-09-08 19:35:27,891 [main][LogicalConnectionManagedImpl.java:154] : Initiating JDBC connection release from afterTransaction
DEBUG 2022-09-08 19:35:27,892 [main][LogicalConnectionManagedImpl.java:154] : Initiating JDBC connection release from afterTransaction
DEBUG 2022-09-08 19:35:27,892 [main][TransactionImpl.java:55] : begin
DEBUG 2022-09-08 19:35:27,893 [main][ActionQueue.java:272] : Executing identity-insert immediately
DEBUG 2022-09-08 19:35:27,893 [main][SqlStatementLogger.java:92] : insert into Author (name, salary) values (?, ?)
DEBUG 2022-09-08 19:35:27,894 [main][IdentifierGeneratorHelper.java:78] : Natively generated identity: 3
DEBUG 2022-09-08 19:35:27,894 [main][ResourceRegistryStandardImpl.java:104] : HHH000387: ResultSet's statement was not registered
DEBUG 2022-09-08 19:35:27,894 [main][TransactionImpl.java:66] : committing
DEBUG 2022-09-08 19:35:27,894 [main][AbstractFlushingEventListener.java:132] : Processing flush-time cascades
DEBUG 2022-09-08 19:35:27,894 [main][AbstractFlushingEventListener.java:174] : Dirty checking collections
DEBUG 2022-09-08 19:35:27,894 [main][AbstractFlushingEventListener.java:106] : Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
DEBUG 2022-09-08 19:35:27,894 [main][AbstractFlushingEventListener.java:113] : Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
DEBUG 2022-09-08 19:35:27,895 [main][EntityPrinter.java:102] : Listing entities:
DEBUG 2022-09-08 19:35:27,895 [main][EntityPrinter.java:109] : org.example.models.Author{books=null, name=Stuart Woods, id=3, salary=2441}
DEBUG 2022-09-08 19:35:27,895 [main][LogicalConnectionManagedImpl.java:154] : Initiating JDBC connection release from afterTransaction
DEBUG 2022-09-08 19:35:27,896 [main][LogicalConnectionManagedImpl.java:154] : Initiating JDBC connection release from afterTransaction
DEBUG 2022-09-08 19:35:27,896 [main][TransactionImpl.java:55] : begin
DEBUG 2022-09-08 19:35:27,897 [main][ActionQueue.java:272] : Executing identity-insert immediately
DEBUG 2022-09-08 19:35:27,897 [main][SqlStatementLogger.java:92] : insert into Author (name, salary) values (?, ?)
DEBUG 2022-09-08 19:35:27,897 [main][IdentifierGeneratorHelper.java:78] : Natively generated identity: 4
DEBUG 2022-09-08 19:35:27,898 [main][ResourceRegistryStandardImpl.java:104] : HHH000387: ResultSet's statement was not registered
DEBUG 2022-09-08 19:35:27,898 [main][TransactionImpl.java:66] : committing
DEBUG 2022-09-08 19:35:27,898 [main][AbstractFlushingEventListener.java:132] : Processing flush-time cascades
DEBUG 2022-09-08 19:35:27,898 [main][AbstractFlushingEventListener.java:174] : Dirty checking collections
DEBUG 2022-09-08 19:35:27,898 [main][AbstractFlushingEventListener.java:106] : Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
DEBUG 2022-09-08 19:35:27,898 [main][AbstractFlushingEventListener.java:113] : Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
DEBUG 2022-09-08 19:35:27,898 [main][EntityPrinter.java:102] : Listing entities:
DEBUG 2022-09-08 19:35:27,898 [main][EntityPrinter.java:109] : org.example.models.Author{books=null, name=Nora Roberts, id=4, salary=3099}
DEBUG 2022-09-08 19:35:27,900 [main][LogicalConnectionManagedImpl.java:154] : Initiating JDBC connection release from afterTransaction
DEBUG 2022-09-08 19:35:27,900 [main][LogicalConnectionManagedImpl.java:154] : Initiating JDBC connection release from afterTransaction
DEBUG 2022-09-08 19:35:27,901 [main][TransactionImpl.java:55] : begin
DEBUG 2022-09-08 19:35:27,901 [main][ActionQueue.java:272] : Executing identity-insert immediately
DEBUG 2022-09-08 19:35:27,901 [main][SqlStatementLogger.java:92] : insert into Author (name, salary) values (?, ?)
DEBUG 2022-09-08 19:35:27,902 [main][IdentifierGeneratorHelper.java:78] : Natively generated identity: 5
DEBUG 2022-09-08 19:35:27,902 [main][ResourceRegistryStandardImpl.java:104] : HHH000387: ResultSet's statement was not registered
DEBUG 2022-09-08 19:35:27,902 [main][TransactionImpl.java:66] : committing
DEBUG 2022-09-08 19:35:27,902 [main][AbstractFlushingEventListener.java:132] : Processing flush-time cascades
DEBUG 2022-09-08 19:35:27,902 [main][AbstractFlushingEventListener.java:174] : Dirty checking collections
DEBUG 2022-09-08 19:35:27,903 [main][AbstractFlushingEventListener.java:106] : Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
DEBUG 2022-09-08 19:35:27,903 [main][AbstractFlushingEventListener.java:113] : Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
DEBUG 2022-09-08 19:35:27,903 [main][EntityPrinter.java:102] : Listing entities:
DEBUG 2022-09-08 19:35:27,903 [main][EntityPrinter.java:109] : org.example.models.Author{books=null, name=Michael Connelly, id=5, salary=431}
DEBUG 2022-09-08 19:35:27,903 [main][LogicalConnectionManagedImpl.java:154] : Initiating JDBC connection release from afterTransaction
DEBUG 2022-09-08 19:35:27,903 [main][LogicalConnectionManagedImpl.java:154] : Initiating JDBC connection release from afterTransaction
DEBUG 2022-09-08 19:35:27,909 [main][CriteriaQueryImpl.java:307] : Rendered criteria query -> select generatedAlias0 from Author as generatedAlias0
DEBUG 2022-09-08 19:35:27,916 [main][QueryTranslatorFactoryInitiator.java:45] : QueryTranslatorFactory : org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory@11949216
INFO  2022-09-08 19:35:27,916 [main][QueryTranslatorFactoryInitiator.java:47] : HHH000397: Using ASTQueryTranslatorFactory
DEBUG 2022-09-08 19:35:27,930 [main][QueryTranslatorImpl.java:278] : parse() - HQL: select generatedAlias0 from org.example.models.Author as generatedAlias0
DEBUG 2022-09-08 19:35:27,932 [main][QueryTranslatorImpl.java:296] : --- HQL AST ---
 \-[QUERY] Node: 'query'
    \-[SELECT_FROM] Node: 'SELECT_FROM'
       +-[FROM] Node: 'from'
       |  \-[RANGE] Node: 'RANGE'
       |     +-[DOT] Node: '.'
       |     |  +-[DOT] Node: '.'
       |     |  |  +-[DOT] Node: '.'
       |     |  |  |  +-[IDENT] Node: 'org'
       |     |  |  |  \-[IDENT] Node: 'example'
       |     |  |  \-[IDENT] Node: 'models'
       |     |  \-[IDENT] Node: 'Author'
       |     \-[ALIAS] Node: 'generatedAlias0'
       \-[SELECT] Node: 'select'
          \-[IDENT] Node: 'generatedAlias0'

DEBUG 2022-09-08 19:35:27,932 [main][ErrorCounter.java:95] : throwQueryException() : no errors
DEBUG 2022-09-08 19:35:27,940 [main][HqlSqlBaseWalker.java:124] : select << begin [level=1, statement=select]
DEBUG 2022-09-08 19:35:27,944 [main][FromElement.java:148] : FromClause{level=1} : org.example.models.Author (generatedAlias0) -> author0_
DEBUG 2022-09-08 19:35:27,945 [main][FromReferenceNode.java:60] : Resolved : generatedAlias0 -> author0_.id
DEBUG 2022-09-08 19:35:27,945 [main][HqlSqlBaseWalker.java:128] : select : finishing up [level=1, statement=select]
DEBUG 2022-09-08 19:35:27,945 [main][HqlSqlWalker.java:725] : processQuery() :  ( SELECT ( {select clause} author0_.id ) ( FromClause{level=1} Author author0_ ) )
DEBUG 2022-09-08 19:35:27,948 [main][JoinProcessor.java:169] : Using FROM fragment [Author author0_]
DEBUG 2022-09-08 19:35:27,949 [main][HqlSqlBaseWalker.java:132] : select >> end [level=1, statement=select]
DEBUG 2022-09-08 19:35:27,949 [main][QueryTranslatorImpl.java:265] : --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (Author)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'author0_.id as id1_0_' {alias=generatedAlias0, className=org.example.models.Author, tableAlias=author0_}
    |  \-[SQL_TOKEN] SqlFragment: 'author0_.name as name2_0_, author0_.salary as salary3_0_'
    \-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[author0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'Author author0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=Author,tableAlias=author0_,origin=null,columns={,className=org.example.models.Author}}

DEBUG 2022-09-08 19:35:27,949 [main][ErrorCounter.java:95] : throwQueryException() : no errors
DEBUG 2022-09-08 19:35:27,951 [main][QueryTranslatorImpl.java:247] : HQL: select generatedAlias0 from org.example.models.Author as generatedAlias0
DEBUG 2022-09-08 19:35:27,952 [main][QueryTranslatorImpl.java:248] : SQL: select author0_.id as id1_0_, author0_.name as name2_0_, author0_.salary as salary3_0_ from Author author0_
DEBUG 2022-09-08 19:35:27,952 [main][ErrorCounter.java:95] : throwQueryException() : no errors
DEBUG 2022-09-08 19:35:27,957 [main][SqlStatementLogger.java:92] : select author0_.id as id1_0_, author0_.name as name2_0_, author0_.salary as salary3_0_ from Author author0_
DEBUG 2022-09-08 19:35:27,959 [main][DelegatingBasicLogger.java:384] : Result set row: 0
DEBUG 2022-09-08 19:35:27,959 [main][Loader.java:1527] : Result row: EntityKey[org.example.models.Author#1]
DEBUG 2022-09-08 19:35:27,961 [main][DelegatingBasicLogger.java:384] : Result set row: 1
DEBUG 2022-09-08 19:35:27,961 [main][Loader.java:1527] : Result row: EntityKey[org.example.models.Author#2]
DEBUG 2022-09-08 19:35:27,961 [main][DelegatingBasicLogger.java:384] : Result set row: 2
DEBUG 2022-09-08 19:35:27,961 [main][Loader.java:1527] : Result row: EntityKey[org.example.models.Author#3]
DEBUG 2022-09-08 19:35:27,961 [main][DelegatingBasicLogger.java:384] : Result set row: 3
DEBUG 2022-09-08 19:35:27,961 [main][Loader.java:1527] : Result row: EntityKey[org.example.models.Author#4]
DEBUG 2022-09-08 19:35:27,962 [main][DelegatingBasicLogger.java:384] : Result set row: 4
DEBUG 2022-09-08 19:35:27,962 [main][Loader.java:1527] : Result row: EntityKey[org.example.models.Author#5]
DEBUG 2022-09-08 19:35:27,964 [main][TwoPhaseLoad.java:141] : Resolving associations for [org.example.models.Author#1]
DEBUG 2022-09-08 19:35:27,967 [main][TwoPhaseLoad.java:267] : Done materializing entity [org.example.models.Author#1]
DEBUG 2022-09-08 19:35:27,967 [main][TwoPhaseLoad.java:141] : Resolving associations for [org.example.models.Author#2]
DEBUG 2022-09-08 19:35:27,967 [main][TwoPhaseLoad.java:267] : Done materializing entity [org.example.models.Author#2]
DEBUG 2022-09-08 19:35:27,967 [main][TwoPhaseLoad.java:141] : Resolving associations for [org.example.models.Author#3]
DEBUG 2022-09-08 19:35:27,967 [main][TwoPhaseLoad.java:267] : Done materializing entity [org.example.models.Author#3]
DEBUG 2022-09-08 19:35:27,968 [main][TwoPhaseLoad.java:141] : Resolving associations for [org.example.models.Author#4]
DEBUG 2022-09-08 19:35:27,968 [main][TwoPhaseLoad.java:267] : Done materializing entity [org.example.models.Author#4]
DEBUG 2022-09-08 19:35:27,968 [main][TwoPhaseLoad.java:141] : Resolving associations for [org.example.models.Author#5]
DEBUG 2022-09-08 19:35:27,968 [main][TwoPhaseLoad.java:267] : Done materializing entity [org.example.models.Author#5]
DEBUG 2022-09-08 19:35:27,968 [main][LogicalConnectionManagedImpl.java:154] : Initiating JDBC connection release from afterTransaction
DEBUG 2022-09-08 19:35:27,977 [main][SqlStatementLogger.java:92] : SELECT * FROM Author
DEBUG 2022-09-08 19:35:27,979 [main][DelegatingBasicLogger.java:384] : Result set row: 0
DEBUG 2022-09-08 19:35:27,979 [main][Loader.java:1527] : Result row: EntityKey[org.example.models.Author#1]
DEBUG 2022-09-08 19:35:27,979 [main][DelegatingBasicLogger.java:384] : Result set row: 1
DEBUG 2022-09-08 19:35:27,979 [main][Loader.java:1527] : Result row: EntityKey[org.example.models.Author#2]
DEBUG 2022-09-08 19:35:27,980 [main][DelegatingBasicLogger.java:384] : Result set row: 2
DEBUG 2022-09-08 19:35:27,980 [main][Loader.java:1527] : Result row: EntityKey[org.example.models.Author#3]
DEBUG 2022-09-08 19:35:27,980 [main][DelegatingBasicLogger.java:384] : Result set row: 3
DEBUG 2022-09-08 19:35:27,980 [main][Loader.java:1527] : Result row: EntityKey[org.example.models.Author#4]
DEBUG 2022-09-08 19:35:27,980 [main][DelegatingBasicLogger.java:384] : Result set row: 4
DEBUG 2022-09-08 19:35:27,980 [main][Loader.java:1527] : Result row: EntityKey[org.example.models.Author#5]
DEBUG 2022-09-08 19:35:27,980 [main][TwoPhaseLoad.java:141] : Resolving associations for [org.example.models.Author#1]
DEBUG 2022-09-08 19:35:27,981 [main][TwoPhaseLoad.java:267] : Done materializing entity [org.example.models.Author#1]
DEBUG 2022-09-08 19:35:27,981 [main][TwoPhaseLoad.java:141] : Resolving associations for [org.example.models.Author#2]
DEBUG 2022-09-08 19:35:27,981 [main][TwoPhaseLoad.java:267] : Done materializing entity [org.example.models.Author#2]
DEBUG 2022-09-08 19:35:27,982 [main][TwoPhaseLoad.java:141] : Resolving associations for [org.example.models.Author#3]
DEBUG 2022-09-08 19:35:27,982 [main][TwoPhaseLoad.java:267] : Done materializing entity [org.example.models.Author#3]
DEBUG 2022-09-08 19:35:27,982 [main][TwoPhaseLoad.java:141] : Resolving associations for [org.example.models.Author#4]
DEBUG 2022-09-08 19:35:27,982 [main][TwoPhaseLoad.java:267] : Done materializing entity [org.example.models.Author#4]
DEBUG 2022-09-08 19:35:27,982 [main][TwoPhaseLoad.java:141] : Resolving associations for [org.example.models.Author#5]
DEBUG 2022-09-08 19:35:27,982 [main][TwoPhaseLoad.java:267] : Done materializing entity [org.example.models.Author#5]
DEBUG 2022-09-08 19:35:27,983 [main][LogicalConnectionManagedImpl.java:154] : Initiating JDBC connection release from afterTransaction
DEBUG 2022-09-08 19:35:27,985 [main][SqlStatementLogger.java:92] : select author0_.id as id1_0_0_, author0_.name as name2_0_0_, author0_.salary as salary3_0_0_ from Author author0_ where author0_.id=?
DEBUG 2022-09-08 19:35:27,988 [main][ResultSetProcessorImpl.java:120] : Starting ResultSet row #0
DEBUG 2022-09-08 19:35:27,988 [main][EntityReferenceInitializerImpl.java:126] : On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
DEBUG 2022-09-08 19:35:27,988 [main][TwoPhaseLoad.java:141] : Resolving associations for [org.example.models.Author#2]
DEBUG 2022-09-08 19:35:27,989 [main][TwoPhaseLoad.java:267] : Done materializing entity [org.example.models.Author#2]
DEBUG 2022-09-08 19:35:27,989 [main][ResourceRegistryStandardImpl.java:73] : HHH000387: ResultSet's statement was not registered
DEBUG 2022-09-08 19:35:27,989 [main][AbstractLoadPlanBasedEntityLoader.java:189] : Done entity load : org.example.models.Author#2
DEBUG 2022-09-08 19:35:27,989 [main][LogicalConnectionManagedImpl.java:154] : Initiating JDBC connection release from afterTransaction
DEBUG 2022-09-08 19:35:27,991 [main][QueryTranslatorImpl.java:278] : parse() - HQL: select a from org.example.models.Author a where a.salary between :minSalary and :maxSalary
DEBUG 2022-09-08 19:35:27,992 [main][QueryTranslatorImpl.java:296] : --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[IDENT] Node: 'org'
    |  |     |  |  |  \-[IDENT] Node: 'example'
    |  |     |  |  \-[IDENT] Node: 'models'
    |  |     |  \-[IDENT] Node: 'Author'
    |  |     \-[ALIAS] Node: 'a'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'a'
    \-[WHERE] Node: 'where'
       \-[BETWEEN] Node: 'between'
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'a'
          |  \-[IDENT] Node: 'salary'
          +-[COLON] Node: ':'
          |  \-[IDENT] Node: 'minSalary'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'maxSalary'

DEBUG 2022-09-08 19:35:27,992 [main][ErrorCounter.java:95] : throwQueryException() : no errors
DEBUG 2022-09-08 19:35:27,993 [main][HqlSqlBaseWalker.java:124] : select << begin [level=1, statement=select]
DEBUG 2022-09-08 19:35:27,993 [main][FromElement.java:148] : FromClause{level=1} : org.example.models.Author (a) -> author0_
DEBUG 2022-09-08 19:35:27,993 [main][FromReferenceNode.java:60] : Resolved : a -> author0_.id
DEBUG 2022-09-08 19:35:27,994 [main][FromReferenceNode.java:60] : Resolved : a -> author0_.id
DEBUG 2022-09-08 19:35:27,994 [main][DotNode.java:661] : getDataType() : salary -> org.hibernate.type.IntegerType@ecb5d623
DEBUG 2022-09-08 19:35:27,994 [main][FromReferenceNode.java:60] : Resolved : a.salary -> author0_.salary
DEBUG 2022-09-08 19:35:27,995 [main][HqlSqlBaseWalker.java:128] : select : finishing up [level=1, statement=select]
DEBUG 2022-09-08 19:35:27,995 [main][HqlSqlWalker.java:725] : processQuery() :  ( SELECT ( {select clause} author0_.id ) ( FromClause{level=1} Author author0_ ) ( where ( between ( author0_.salary author0_.id salary ) ? ? ) ) )
DEBUG 2022-09-08 19:35:27,995 [main][JoinProcessor.java:169] : Using FROM fragment [Author author0_]
DEBUG 2022-09-08 19:35:27,995 [main][HqlSqlBaseWalker.java:132] : select >> end [level=1, statement=select]
DEBUG 2022-09-08 19:35:27,996 [main][QueryTranslatorImpl.java:265] : --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (Author)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'author0_.id as id1_0_' {alias=a, className=org.example.models.Author, tableAlias=author0_}
    |  \-[SQL_TOKEN] SqlFragment: 'author0_.name as name2_0_, author0_.salary as salary3_0_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[a], fromElementByTableAlias=[author0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'Author author0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=a,role=null,tableName=Author,tableAlias=author0_,origin=null,columns={,className=org.example.models.Author}}
    \-[WHERE] SqlNode: 'where'
       \-[BETWEEN] BetweenOperatorNode: 'between'
          +-[DOT] DotNode: 'author0_.salary' {propertyName=salary,dereferenceType=PRIMITIVE,getPropertyPath=salary,path=a.salary,tableAlias=author0_,className=org.example.models.Author,classAlias=a}
          |  +-[ALIAS_REF] IdentNode: 'author0_.id' {alias=a, className=org.example.models.Author, tableAlias=author0_}
          |  \-[IDENT] IdentNode: 'salary' {originalText=salary}
          +-[NAMED_PARAM] ParameterNode: '?' {name=minSalary, expectedType=org.hibernate.type.IntegerType@ecb5d623}
          \-[NAMED_PARAM] ParameterNode: '?' {name=maxSalary, expectedType=org.hibernate.type.IntegerType@ecb5d623}

DEBUG 2022-09-08 19:35:27,996 [main][ErrorCounter.java:95] : throwQueryException() : no errors
DEBUG 2022-09-08 19:35:27,996 [main][QueryTranslatorImpl.java:247] : HQL: select a from org.example.models.Author a where a.salary between :minSalary and :maxSalary
DEBUG 2022-09-08 19:35:27,996 [main][QueryTranslatorImpl.java:248] : SQL: select author0_.id as id1_0_, author0_.name as name2_0_, author0_.salary as salary3_0_ from Author author0_ where author0_.salary between ? and ?
DEBUG 2022-09-08 19:35:27,996 [main][ErrorCounter.java:95] : throwQueryException() : no errors
DEBUG 2022-09-08 19:35:27,998 [main][SqlStatementLogger.java:92] : select author0_.id as id1_0_, author0_.name as name2_0_, author0_.salary as salary3_0_ from Author author0_ where author0_.salary between ? and ?
DEBUG 2022-09-08 19:35:27,999 [main][DelegatingBasicLogger.java:384] : Result set row: 0
DEBUG 2022-09-08 19:35:28,000 [main][Loader.java:1527] : Result row: EntityKey[org.example.models.Author#4]
DEBUG 2022-09-08 19:35:28,000 [main][TwoPhaseLoad.java:141] : Resolving associations for [org.example.models.Author#4]
DEBUG 2022-09-08 19:35:28,000 [main][TwoPhaseLoad.java:267] : Done materializing entity [org.example.models.Author#4]
DEBUG 2022-09-08 19:35:28,000 [main][LogicalConnectionManagedImpl.java:154] : Initiating JDBC connection release from afterTransaction
DEBUG 2022-09-08 19:35:28,002 [main][SqlStatementLogger.java:92] : select author0_.id as id1_0_0_, author0_.name as name2_0_0_, author0_.salary as salary3_0_0_ from Author author0_ where author0_.id=?
DEBUG 2022-09-08 19:35:28,004 [main][ResultSetProcessorImpl.java:120] : Starting ResultSet row #0
DEBUG 2022-09-08 19:35:28,004 [main][EntityReferenceInitializerImpl.java:126] : On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
DEBUG 2022-09-08 19:35:28,004 [main][TwoPhaseLoad.java:141] : Resolving associations for [org.example.models.Author#2]
DEBUG 2022-09-08 19:35:28,005 [main][TwoPhaseLoad.java:267] : Done materializing entity [org.example.models.Author#2]
DEBUG 2022-09-08 19:35:28,005 [main][ResourceRegistryStandardImpl.java:73] : HHH000387: ResultSet's statement was not registered
DEBUG 2022-09-08 19:35:28,005 [main][AbstractLoadPlanBasedEntityLoader.java:189] : Done entity load : org.example.models.Author#2
DEBUG 2022-09-08 19:35:28,005 [main][LogicalConnectionManagedImpl.java:154] : Initiating JDBC connection release from afterTransaction
DEBUG 2022-09-08 19:35:28,005 [main][TransactionImpl.java:55] : begin
DEBUG 2022-09-08 19:35:28,006 [main][TransactionImpl.java:66] : committing
DEBUG 2022-09-08 19:35:28,006 [main][AbstractFlushingEventListener.java:132] : Processing flush-time cascades
DEBUG 2022-09-08 19:35:28,006 [main][AbstractFlushingEventListener.java:174] : Dirty checking collections
DEBUG 2022-09-08 19:35:28,008 [main][Collections.java:206] : Collection found: [org.example.models.Author.books#2], was: [org.example.models.Author.books#2] (uninitialized)
DEBUG 2022-09-08 19:35:28,008 [main][AbstractFlushingEventListener.java:106] : Flushed: 0 insertions, 1 updates, 0 deletions to 1 objects
DEBUG 2022-09-08 19:35:28,008 [main][AbstractFlushingEventListener.java:113] : Flushed: 0 (re)creations, 0 updates, 0 removals to 1 collections
DEBUG 2022-09-08 19:35:28,008 [main][EntityPrinter.java:102] : Listing entities:
DEBUG 2022-09-08 19:35:28,008 [main][EntityPrinter.java:109] : org.example.models.Author{books=<uninitialized>, name=Ihor Kosolapow, id=2, salary=4237}
DEBUG 2022-09-08 19:35:28,011 [main][SqlStatementLogger.java:92] : update Author set name=? where id=?
DEBUG 2022-09-08 19:35:28,013 [main][LogicalConnectionManagedImpl.java:154] : Initiating JDBC connection release from afterTransaction
DEBUG 2022-09-08 19:35:28,014 [main][LogicalConnectionManagedImpl.java:154] : Initiating JDBC connection release from afterTransaction
DEBUG 2022-09-08 19:35:28,014 [main][JdbcCoordinatorImpl.java:177] : HHH000420: Closing un-released batch
DEBUG 2022-09-08 19:35:28,015 [main][SqlStatementLogger.java:92] : select author0_.id as id1_0_0_, author0_.name as name2_0_0_, author0_.salary as salary3_0_0_ from Author author0_ where author0_.id=?
DEBUG 2022-09-08 19:35:28,016 [main][ResultSetProcessorImpl.java:120] : Starting ResultSet row #0
DEBUG 2022-09-08 19:35:28,016 [main][EntityReferenceInitializerImpl.java:126] : On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
DEBUG 2022-09-08 19:35:28,016 [main][TwoPhaseLoad.java:141] : Resolving associations for [org.example.models.Author#2]
DEBUG 2022-09-08 19:35:28,017 [main][TwoPhaseLoad.java:267] : Done materializing entity [org.example.models.Author#2]
DEBUG 2022-09-08 19:35:28,017 [main][ResourceRegistryStandardImpl.java:73] : HHH000387: ResultSet's statement was not registered
DEBUG 2022-09-08 19:35:28,017 [main][AbstractLoadPlanBasedEntityLoader.java:189] : Done entity load : org.example.models.Author#2
DEBUG 2022-09-08 19:35:28,017 [main][LogicalConnectionManagedImpl.java:154] : Initiating JDBC connection release from afterTransaction
DEBUG 2022-09-08 19:35:28,019 [main][CriteriaQueryImpl.java:307] : Rendered criteria query -> select avg(generatedAlias0.salary) from Author as generatedAlias0
DEBUG 2022-09-08 19:35:28,020 [main][QueryTranslatorImpl.java:278] : parse() - HQL: select avg(generatedAlias0.salary) from org.example.models.Author as generatedAlias0
DEBUG 2022-09-08 19:35:28,021 [main][QueryTranslatorImpl.java:296] : --- HQL AST ---
 \-[QUERY] Node: 'query'
    \-[SELECT_FROM] Node: 'SELECT_FROM'
       +-[FROM] Node: 'from'
       |  \-[RANGE] Node: 'RANGE'
       |     +-[DOT] Node: '.'
       |     |  +-[DOT] Node: '.'
       |     |  |  +-[DOT] Node: '.'
       |     |  |  |  +-[IDENT] Node: 'org'
       |     |  |  |  \-[IDENT] Node: 'example'
       |     |  |  \-[IDENT] Node: 'models'
       |     |  \-[IDENT] Node: 'Author'
       |     \-[ALIAS] Node: 'generatedAlias0'
       \-[SELECT] Node: 'select'
          \-[AGGREGATE] Node: 'avg'
             \-[DOT] Node: '.'
                +-[IDENT] Node: 'generatedAlias0'
                \-[IDENT] Node: 'salary'

DEBUG 2022-09-08 19:35:28,021 [main][ErrorCounter.java:95] : throwQueryException() : no errors
DEBUG 2022-09-08 19:35:28,021 [main][HqlSqlBaseWalker.java:124] : select << begin [level=1, statement=select]
DEBUG 2022-09-08 19:35:28,022 [main][FromElement.java:148] : FromClause{level=1} : org.example.models.Author (generatedAlias0) -> author0_
DEBUG 2022-09-08 19:35:28,022 [main][FromReferenceNode.java:60] : Resolved : generatedAlias0 -> author0_.id
DEBUG 2022-09-08 19:35:28,023 [main][DotNode.java:661] : getDataType() : salary -> org.hibernate.type.IntegerType@ecb5d623
DEBUG 2022-09-08 19:35:28,023 [main][FromReferenceNode.java:60] : Resolved : generatedAlias0.salary -> author0_.salary
DEBUG 2022-09-08 19:35:28,024 [main][HqlSqlBaseWalker.java:128] : select : finishing up [level=1, statement=select]
DEBUG 2022-09-08 19:35:28,024 [main][HqlSqlWalker.java:725] : processQuery() :  ( SELECT ( {select clause} ( avg ( author0_.salary author0_.id salary ) ) ) ( FromClause{level=1} Author author0_ ) )
DEBUG 2022-09-08 19:35:28,024 [main][JoinProcessor.java:169] : Using FROM fragment [Author author0_]
DEBUG 2022-09-08 19:35:28,024 [main][HqlSqlBaseWalker.java:132] : select >> end [level=1, statement=select]
DEBUG 2022-09-08 19:35:28,025 [main][QueryTranslatorImpl.java:265] : --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (Author)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[AGGREGATE] AggregateNode: 'avg'
    |  |  \-[DOT] DotNode: 'author0_.salary' {propertyName=salary,dereferenceType=PRIMITIVE,getPropertyPath=salary,path=generatedAlias0.salary,tableAlias=author0_,className=org.example.models.Author,classAlias=generatedAlias0}
    |  |     +-[ALIAS_REF] IdentNode: 'author0_.id' {alias=generatedAlias0, className=org.example.models.Author, tableAlias=author0_}
    |  |     \-[IDENT] IdentNode: 'salary' {originalText=salary}
    |  \-[SELECT_COLUMNS] SqlNode: ' as col_0_0_'
    \-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[author0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'Author author0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=Author,tableAlias=author0_,origin=null,columns={,className=org.example.models.Author}}

DEBUG 2022-09-08 19:35:28,025 [main][ErrorCounter.java:95] : throwQueryException() : no errors
DEBUG 2022-09-08 19:35:28,026 [main][QueryTranslatorImpl.java:247] : HQL: select avg(generatedAlias0.salary) from org.example.models.Author as generatedAlias0
DEBUG 2022-09-08 19:35:28,026 [main][QueryTranslatorImpl.java:248] : SQL: select avg(author0_.salary) as col_0_0_ from Author author0_
DEBUG 2022-09-08 19:35:28,026 [main][ErrorCounter.java:95] : throwQueryException() : no errors
DEBUG 2022-09-08 19:35:28,026 [main][SqlStatementLogger.java:92] : select avg(author0_.salary) as col_0_0_ from Author author0_
DEBUG 2022-09-08 19:35:28,028 [main][DelegatingBasicLogger.java:384] : Result set row: 0
DEBUG 2022-09-08 19:35:28,028 [main][Loader.java:1527] : Result row: 
DEBUG 2022-09-08 19:35:28,028 [main][LogicalConnectionManagedImpl.java:154] : Initiating JDBC connection release from afterTransaction
DEBUG 2022-09-08 19:35:28,031 [main][CriteriaQueryImpl.java:307] : Rendered criteria query -> select generatedAlias0 from Author as generatedAlias0 where generatedAlias0.salary>3000
DEBUG 2022-09-08 19:35:28,032 [main][QueryTranslatorImpl.java:278] : parse() - HQL: select generatedAlias0 from org.example.models.Author as generatedAlias0 where generatedAlias0.salary>3000
DEBUG 2022-09-08 19:35:28,033 [main][QueryTranslatorImpl.java:296] : --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[IDENT] Node: 'org'
    |  |     |  |  |  \-[IDENT] Node: 'example'
    |  |     |  |  \-[IDENT] Node: 'models'
    |  |     |  \-[IDENT] Node: 'Author'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[GT] Node: '>'
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'salary'
          \-[NUM_INT] Node: '3000'

DEBUG 2022-09-08 19:35:28,033 [main][ErrorCounter.java:95] : throwQueryException() : no errors
DEBUG 2022-09-08 19:35:28,033 [main][HqlSqlBaseWalker.java:124] : select << begin [level=1, statement=select]
DEBUG 2022-09-08 19:35:28,033 [main][FromElement.java:148] : FromClause{level=1} : org.example.models.Author (generatedAlias0) -> author0_
DEBUG 2022-09-08 19:35:28,034 [main][FromReferenceNode.java:60] : Resolved : generatedAlias0 -> author0_.id
DEBUG 2022-09-08 19:35:28,035 [main][FromReferenceNode.java:60] : Resolved : generatedAlias0 -> author0_.id
DEBUG 2022-09-08 19:35:28,035 [main][DotNode.java:661] : getDataType() : salary -> org.hibernate.type.IntegerType@ecb5d623
DEBUG 2022-09-08 19:35:28,035 [main][FromReferenceNode.java:60] : Resolved : generatedAlias0.salary -> author0_.salary
DEBUG 2022-09-08 19:35:28,036 [main][HqlSqlBaseWalker.java:128] : select : finishing up [level=1, statement=select]
DEBUG 2022-09-08 19:35:28,036 [main][HqlSqlWalker.java:725] : processQuery() :  ( SELECT ( {select clause} author0_.id ) ( FromClause{level=1} Author author0_ ) ( where ( > ( author0_.salary author0_.id salary ) 3000 ) ) )
DEBUG 2022-09-08 19:35:28,036 [main][JoinProcessor.java:169] : Using FROM fragment [Author author0_]
DEBUG 2022-09-08 19:35:28,037 [main][HqlSqlBaseWalker.java:132] : select >> end [level=1, statement=select]
DEBUG 2022-09-08 19:35:28,037 [main][QueryTranslatorImpl.java:265] : --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (Author)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'author0_.id as id1_0_' {alias=generatedAlias0, className=org.example.models.Author, tableAlias=author0_}
    |  \-[SQL_TOKEN] SqlFragment: 'author0_.name as name2_0_, author0_.salary as salary3_0_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[author0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'Author author0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=Author,tableAlias=author0_,origin=null,columns={,className=org.example.models.Author}}
    \-[WHERE] SqlNode: 'where'
       \-[GT] BinaryLogicOperatorNode: '>'
          +-[DOT] DotNode: 'author0_.salary' {propertyName=salary,dereferenceType=PRIMITIVE,getPropertyPath=salary,path=generatedAlias0.salary,tableAlias=author0_,className=org.example.models.Author,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'author0_.id' {alias=generatedAlias0, className=org.example.models.Author, tableAlias=author0_}
          |  \-[IDENT] IdentNode: 'salary' {originalText=salary}
          \-[NUM_INT] LiteralNode: '3000'

DEBUG 2022-09-08 19:35:28,037 [main][ErrorCounter.java:95] : throwQueryException() : no errors
DEBUG 2022-09-08 19:35:28,038 [main][QueryTranslatorImpl.java:247] : HQL: select generatedAlias0 from org.example.models.Author as generatedAlias0 where generatedAlias0.salary>3000
DEBUG 2022-09-08 19:35:28,038 [main][QueryTranslatorImpl.java:248] : SQL: select author0_.id as id1_0_, author0_.name as name2_0_, author0_.salary as salary3_0_ from Author author0_ where author0_.salary>3000
DEBUG 2022-09-08 19:35:28,038 [main][ErrorCounter.java:95] : throwQueryException() : no errors
DEBUG 2022-09-08 19:35:28,038 [main][SqlStatementLogger.java:92] : select author0_.id as id1_0_, author0_.name as name2_0_, author0_.salary as salary3_0_ from Author author0_ where author0_.salary>3000
DEBUG 2022-09-08 19:35:28,040 [main][DelegatingBasicLogger.java:384] : Result set row: 0
DEBUG 2022-09-08 19:35:28,040 [main][Loader.java:1527] : Result row: EntityKey[org.example.models.Author#2]
DEBUG 2022-09-08 19:35:28,041 [main][DelegatingBasicLogger.java:384] : Result set row: 1
DEBUG 2022-09-08 19:35:28,041 [main][Loader.java:1527] : Result row: EntityKey[org.example.models.Author#4]
DEBUG 2022-09-08 19:35:28,041 [main][TwoPhaseLoad.java:141] : Resolving associations for [org.example.models.Author#2]
DEBUG 2022-09-08 19:35:28,041 [main][TwoPhaseLoad.java:267] : Done materializing entity [org.example.models.Author#2]
DEBUG 2022-09-08 19:35:28,041 [main][TwoPhaseLoad.java:141] : Resolving associations for [org.example.models.Author#4]
DEBUG 2022-09-08 19:35:28,041 [main][TwoPhaseLoad.java:267] : Done materializing entity [org.example.models.Author#4]
DEBUG 2022-09-08 19:35:28,043 [main][LogicalConnectionManagedImpl.java:154] : Initiating JDBC connection release from afterTransaction
DEBUG 2022-09-08 19:35:57,346 [pool-1-thread-1][PooledConnections.java:51] : Connection pool now considered primed; min-size will be maintained
WARN  2022-09-08 19:44:18,956 [main][Main.java:17] : TEST
DEBUG 2022-09-08 19:44:19,013 [main][CoreLogging.java:28] : Logging Provider: org.jboss.logging.Log4jLoggerProvider
DEBUG 2022-09-08 19:44:19,022 [main][IntegratorServiceImpl.java:46] : Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
DEBUG 2022-09-08 19:44:19,024 [main][IntegratorServiceImpl.java:46] : Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
DEBUG 2022-09-08 19:44:19,027 [main][IntegratorServiceImpl.java:46] : Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
INFO  2022-09-08 19:44:19,115 [main][Version.java:45] : HHH000412: Hibernate Core {5.2.2.Final}
INFO  2022-09-08 19:44:19,118 [main][Environment.java:213] : HHH000206: hibernate.properties not found
INFO  2022-09-08 19:44:19,120 [main][Environment.java:318] : HHH000021: Bytecode provider name : javassist
DEBUG 2022-09-08 19:44:19,148 [main][LocalXmlResourceResolver.java:57] : Interpreting public/system identifier : [null] - [http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd]
DEBUG 2022-09-08 19:44:19,149 [main][LocalXmlResourceResolver.java:85] : Recognized hibernate-configuration identifier; attempting to resolve on classpath under org/hibernate/
DEBUG 2022-09-08 19:44:19,157 [main][JaxbCfgProcessor.java:116] : cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
DEBUG 2022-09-08 19:44:19,446 [main][Configuration.java:724] : Building session factory using internal StandardServiceRegistryBuilder
DEBUG 2022-09-08 19:44:19,452 [main][ServiceBinding.java:68] : Overriding existing service binding [org.hibernate.secure.spi.JaccService]
DEBUG 2022-09-08 19:44:19,453 [main][Configuration.java:652] : Building session factory using provided StandardServiceRegistry
DEBUG 2022-09-08 19:44:19,465 [main][RegionFactoryInitiator.java:75] : Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
INFO  2022-09-08 19:44:19,471 [main][JavaReflectionManager.java:66] : HCANN000001: Hibernate Commons Annotations {5.0.1.Final}
DEBUG 2022-09-08 19:44:19,489 [main][BasicTypeRegistry.java:145] : Adding type registration boolean -> org.hibernate.type.BooleanType@daafba34
DEBUG 2022-09-08 19:44:19,489 [main][BasicTypeRegistry.java:145] : Adding type registration boolean -> org.hibernate.type.BooleanType@daafba34
DEBUG 2022-09-08 19:44:19,490 [main][BasicTypeRegistry.java:145] : Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@daafba34
DEBUG 2022-09-08 19:44:19,492 [main][BasicTypeRegistry.java:145] : Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@99610b76
DEBUG 2022-09-08 19:44:19,493 [main][BasicTypeRegistry.java:145] : Adding type registration true_false -> org.hibernate.type.TrueFalseType@6998ed65
DEBUG 2022-09-08 19:44:19,494 [main][BasicTypeRegistry.java:145] : Adding type registration yes_no -> org.hibernate.type.YesNoType@e9cefcc7
DEBUG 2022-09-08 19:44:19,495 [main][BasicTypeRegistry.java:145] : Adding type registration byte -> org.hibernate.type.ByteType@fdf51ca2
DEBUG 2022-09-08 19:44:19,496 [main][BasicTypeRegistry.java:145] : Adding type registration byte -> org.hibernate.type.ByteType@fdf51ca2
DEBUG 2022-09-08 19:44:19,496 [main][BasicTypeRegistry.java:145] : Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@fdf51ca2
DEBUG 2022-09-08 19:44:19,497 [main][BasicTypeRegistry.java:145] : Adding type registration character -> org.hibernate.type.CharacterType@45e783c
DEBUG 2022-09-08 19:44:19,498 [main][BasicTypeRegistry.java:145] : Adding type registration char -> org.hibernate.type.CharacterType@45e783c
DEBUG 2022-09-08 19:44:19,498 [main][BasicTypeRegistry.java:145] : Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@45e783c
DEBUG 2022-09-08 19:44:19,500 [main][BasicTypeRegistry.java:145] : Adding type registration short -> org.hibernate.type.ShortType@99d77154
DEBUG 2022-09-08 19:44:19,500 [main][BasicTypeRegistry.java:145] : Adding type registration short -> org.hibernate.type.ShortType@99d77154
DEBUG 2022-09-08 19:44:19,501 [main][BasicTypeRegistry.java:145] : Adding type registration java.lang.Short -> org.hibernate.type.ShortType@99d77154
DEBUG 2022-09-08 19:44:19,502 [main][BasicTypeRegistry.java:145] : Adding type registration integer -> org.hibernate.type.IntegerType@37be5ab7
DEBUG 2022-09-08 19:44:19,503 [main][BasicTypeRegistry.java:145] : Adding type registration int -> org.hibernate.type.IntegerType@37be5ab7
DEBUG 2022-09-08 19:44:19,503 [main][BasicTypeRegistry.java:145] : Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@37be5ab7
DEBUG 2022-09-08 19:44:19,505 [main][BasicTypeRegistry.java:145] : Adding type registration long -> org.hibernate.type.LongType@40c0b06c
DEBUG 2022-09-08 19:44:19,505 [main][BasicTypeRegistry.java:145] : Adding type registration long -> org.hibernate.type.LongType@40c0b06c
DEBUG 2022-09-08 19:44:19,506 [main][BasicTypeRegistry.java:145] : Adding type registration java.lang.Long -> org.hibernate.type.LongType@40c0b06c
DEBUG 2022-09-08 19:44:19,509 [main][BasicTypeRegistry.java:145] : Adding type registration float -> org.hibernate.type.FloatType@f3419578
DEBUG 2022-09-08 19:44:19,509 [main][BasicTypeRegistry.java:145] : Adding type registration float -> org.hibernate.type.FloatType@f3419578
DEBUG 2022-09-08 19:44:19,510 [main][BasicTypeRegistry.java:145] : Adding type registration java.lang.Float -> org.hibernate.type.FloatType@f3419578
DEBUG 2022-09-08 19:44:19,511 [main][BasicTypeRegistry.java:145] : Adding type registration double -> org.hibernate.type.DoubleType@4e538206
DEBUG 2022-09-08 19:44:19,512 [main][BasicTypeRegistry.java:145] : Adding type registration double -> org.hibernate.type.DoubleType@4e538206
DEBUG 2022-09-08 19:44:19,513 [main][BasicTypeRegistry.java:145] : Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@4e538206
DEBUG 2022-09-08 19:44:19,514 [main][BasicTypeRegistry.java:145] : Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@a3cab3a4
DEBUG 2022-09-08 19:44:19,515 [main][BasicTypeRegistry.java:145] : Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@a3cab3a4
DEBUG 2022-09-08 19:44:19,516 [main][BasicTypeRegistry.java:145] : Adding type registration big_integer -> org.hibernate.type.BigIntegerType@636c5ccb
DEBUG 2022-09-08 19:44:19,517 [main][BasicTypeRegistry.java:145] : Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@636c5ccb
DEBUG 2022-09-08 19:44:19,518 [main][BasicTypeRegistry.java:145] : Adding type registration string -> org.hibernate.type.StringType@fdc058aa
DEBUG 2022-09-08 19:44:19,518 [main][BasicTypeRegistry.java:145] : Adding type registration java.lang.String -> org.hibernate.type.StringType@fdc058aa
DEBUG 2022-09-08 19:44:19,519 [main][BasicTypeRegistry.java:145] : Adding type registration nstring -> org.hibernate.type.StringNVarcharType@23146373
DEBUG 2022-09-08 19:44:19,520 [main][BasicTypeRegistry.java:145] : Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@de81ae9e
DEBUG 2022-09-08 19:44:19,521 [main][BasicTypeRegistry.java:145] : Adding type registration url -> org.hibernate.type.UrlType@6d0ee5e8
DEBUG 2022-09-08 19:44:19,521 [main][BasicTypeRegistry.java:145] : Adding type registration java.net.URL -> org.hibernate.type.UrlType@6d0ee5e8
DEBUG 2022-09-08 19:44:19,523 [main][BasicTypeRegistry.java:145] : Adding type registration Duration -> org.hibernate.type.DurationType@c0612851
DEBUG 2022-09-08 19:44:19,523 [main][BasicTypeRegistry.java:145] : Adding type registration java.time.Duration -> org.hibernate.type.DurationType@c0612851
DEBUG 2022-09-08 19:44:19,530 [main][BasicTypeRegistry.java:145] : Adding type registration Instant -> org.hibernate.type.InstantType@b375924a
DEBUG 2022-09-08 19:44:19,530 [main][BasicTypeRegistry.java:145] : Adding type registration java.time.Instant -> org.hibernate.type.InstantType@b375924a
DEBUG 2022-09-08 19:44:19,533 [main][BasicTypeRegistry.java:145] : Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@f53eca7f
DEBUG 2022-09-08 19:44:19,533 [main][BasicTypeRegistry.java:145] : Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@f53eca7f
DEBUG 2022-09-08 19:44:19,534 [main][BasicTypeRegistry.java:145] : Adding type registration LocalDate -> org.hibernate.type.LocalDateType@2c6e6d70
DEBUG 2022-09-08 19:44:19,535 [main][BasicTypeRegistry.java:145] : Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@2c6e6d70
DEBUG 2022-09-08 19:44:19,536 [main][BasicTypeRegistry.java:145] : Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@21cec466
DEBUG 2022-09-08 19:44:19,536 [main][BasicTypeRegistry.java:145] : Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@21cec466
DEBUG 2022-09-08 19:44:19,537 [main][BasicTypeRegistry.java:145] : Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@ba9d320
DEBUG 2022-09-08 19:44:19,537 [main][BasicTypeRegistry.java:145] : Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@ba9d320
DEBUG 2022-09-08 19:44:19,539 [main][BasicTypeRegistry.java:145] : Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@8cc7e4f3
DEBUG 2022-09-08 19:44:19,540 [main][BasicTypeRegistry.java:145] : Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@8cc7e4f3
DEBUG 2022-09-08 19:44:19,542 [main][BasicTypeRegistry.java:145] : Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@488b0fc1
DEBUG 2022-09-08 19:44:19,542 [main][BasicTypeRegistry.java:145] : Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@488b0fc1
DEBUG 2022-09-08 19:44:19,543 [main][BasicTypeRegistry.java:145] : Adding type registration date -> org.hibernate.type.DateType@481b483a
DEBUG 2022-09-08 19:44:19,544 [main][BasicTypeRegistry.java:145] : Adding type registration java.sql.Date -> org.hibernate.type.DateType@481b483a
DEBUG 2022-09-08 19:44:19,545 [main][BasicTypeRegistry.java:145] : Adding type registration time -> org.hibernate.type.TimeType@20fdfb9c
DEBUG 2022-09-08 19:44:19,545 [main][BasicTypeRegistry.java:145] : Adding type registration java.sql.Time -> org.hibernate.type.TimeType@20fdfb9c
DEBUG 2022-09-08 19:44:19,546 [main][BasicTypeRegistry.java:145] : Adding type registration timestamp -> org.hibernate.type.TimestampType@95e3644c
DEBUG 2022-09-08 19:44:19,546 [main][BasicTypeRegistry.java:145] : Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@95e3644c
DEBUG 2022-09-08 19:44:19,546 [main][BasicTypeRegistry.java:145] : Adding type registration java.util.Date -> org.hibernate.type.TimestampType@95e3644c
DEBUG 2022-09-08 19:44:19,548 [main][BasicTypeRegistry.java:145] : Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@7276860c
DEBUG 2022-09-08 19:44:19,548 [main][BasicTypeRegistry.java:145] : Adding type registration calendar -> org.hibernate.type.CalendarType@76d11716
DEBUG 2022-09-08 19:44:19,548 [main][BasicTypeRegistry.java:145] : Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@76d11716
DEBUG 2022-09-08 19:44:19,549 [main][BasicTypeRegistry.java:145] : Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@76d11716
DEBUG 2022-09-08 19:44:19,549 [main][BasicTypeRegistry.java:145] : Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@8fc6c870
DEBUG 2022-09-08 19:44:19,550 [main][BasicTypeRegistry.java:145] : Adding type registration locale -> org.hibernate.type.LocaleType@fece3ac0
DEBUG 2022-09-08 19:44:19,550 [main][BasicTypeRegistry.java:145] : Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@fece3ac0
DEBUG 2022-09-08 19:44:19,552 [main][BasicTypeRegistry.java:145] : Adding type registration currency -> org.hibernate.type.CurrencyType@2a4417ee
DEBUG 2022-09-08 19:44:19,552 [main][BasicTypeRegistry.java:145] : Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@2a4417ee
DEBUG 2022-09-08 19:44:19,553 [main][BasicTypeRegistry.java:145] : Adding type registration timezone -> org.hibernate.type.TimeZoneType@9a464e67
DEBUG 2022-09-08 19:44:19,553 [main][BasicTypeRegistry.java:145] : Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@9a464e67
DEBUG 2022-09-08 19:44:19,554 [main][BasicTypeRegistry.java:145] : Adding type registration class -> org.hibernate.type.ClassType@9a108770
DEBUG 2022-09-08 19:44:19,554 [main][BasicTypeRegistry.java:145] : Adding type registration java.lang.Class -> org.hibernate.type.ClassType@9a108770
DEBUG 2022-09-08 19:44:19,555 [main][BasicTypeRegistry.java:145] : Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@91d66130
DEBUG 2022-09-08 19:44:19,555 [main][BasicTypeRegistry.java:145] : Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@91d66130
DEBUG 2022-09-08 19:44:19,555 [main][BasicTypeRegistry.java:145] : Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@e448a782
DEBUG 2022-09-08 19:44:19,556 [main][BasicTypeRegistry.java:145] : Adding type registration binary -> org.hibernate.type.BinaryType@312bbaf
DEBUG 2022-09-08 19:44:19,556 [main][BasicTypeRegistry.java:145] : Adding type registration byte[] -> org.hibernate.type.BinaryType@312bbaf
DEBUG 2022-09-08 19:44:19,556 [main][BasicTypeRegistry.java:145] : Adding type registration [B -> org.hibernate.type.BinaryType@312bbaf
DEBUG 2022-09-08 19:44:19,557 [main][BasicTypeRegistry.java:145] : Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@3595988f
DEBUG 2022-09-08 19:44:19,557 [main][BasicTypeRegistry.java:145] : Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@3595988f
DEBUG 2022-09-08 19:44:19,558 [main][BasicTypeRegistry.java:145] : Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@3595988f
DEBUG 2022-09-08 19:44:19,558 [main][BasicTypeRegistry.java:145] : Adding type registration row_version -> org.hibernate.type.RowVersionType@a73352f0
DEBUG 2022-09-08 19:44:19,559 [main][BasicTypeRegistry.java:145] : Adding type registration image -> org.hibernate.type.ImageType@70d2028
DEBUG 2022-09-08 19:44:19,559 [main][BasicTypeRegistry.java:145] : Adding type registration characters -> org.hibernate.type.CharArrayType@6aa6c615
DEBUG 2022-09-08 19:44:19,560 [main][BasicTypeRegistry.java:145] : Adding type registration char[] -> org.hibernate.type.CharArrayType@6aa6c615
DEBUG 2022-09-08 19:44:19,560 [main][BasicTypeRegistry.java:145] : Adding type registration [C -> org.hibernate.type.CharArrayType@6aa6c615
DEBUG 2022-09-08 19:44:19,561 [main][BasicTypeRegistry.java:145] : Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@4fe7b1bd
DEBUG 2022-09-08 19:44:19,561 [main][BasicTypeRegistry.java:145] : Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@4fe7b1bd
DEBUG 2022-09-08 19:44:19,561 [main][BasicTypeRegistry.java:145] : Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@4fe7b1bd
DEBUG 2022-09-08 19:44:19,561 [main][BasicTypeRegistry.java:145] : Adding type registration text -> org.hibernate.type.TextType@6ec7c79a
DEBUG 2022-09-08 19:44:19,562 [main][BasicTypeRegistry.java:145] : Adding type registration ntext -> org.hibernate.type.NTextType@595b2d19
DEBUG 2022-09-08 19:44:19,564 [main][BasicTypeRegistry.java:145] : Adding type registration blob -> org.hibernate.type.BlobType@ff00a0cf
DEBUG 2022-09-08 19:44:19,564 [main][BasicTypeRegistry.java:145] : Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@ff00a0cf
DEBUG 2022-09-08 19:44:19,565 [main][BasicTypeRegistry.java:145] : Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@1647be5e
DEBUG 2022-09-08 19:44:19,568 [main][BasicTypeRegistry.java:145] : Adding type registration clob -> org.hibernate.type.ClobType@5e0e2bd5
DEBUG 2022-09-08 19:44:19,568 [main][BasicTypeRegistry.java:145] : Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@5e0e2bd5
DEBUG 2022-09-08 19:44:19,570 [main][BasicTypeRegistry.java:145] : Adding type registration nclob -> org.hibernate.type.NClobType@a29df0fd
DEBUG 2022-09-08 19:44:19,570 [main][BasicTypeRegistry.java:145] : Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@a29df0fd
DEBUG 2022-09-08 19:44:19,570 [main][BasicTypeRegistry.java:145] : Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@ba29fea7
DEBUG 2022-09-08 19:44:19,571 [main][BasicTypeRegistry.java:145] : Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@6cd24d17
DEBUG 2022-09-08 19:44:19,571 [main][BasicTypeRegistry.java:145] : Adding type registration serializable -> org.hibernate.type.SerializableType@4f10838e
DEBUG 2022-09-08 19:44:19,573 [main][BasicTypeRegistry.java:145] : Adding type registration object -> org.hibernate.type.ObjectType@b9687138
DEBUG 2022-09-08 19:44:19,573 [main][BasicTypeRegistry.java:145] : Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@b9687138
DEBUG 2022-09-08 19:44:19,573 [main][BasicTypeRegistry.java:145] : Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@60560b6f
DEBUG 2022-09-08 19:44:19,574 [main][BasicTypeRegistry.java:145] : Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@ba1142ce
DEBUG 2022-09-08 19:44:19,574 [main][BasicTypeRegistry.java:145] : Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@f8530060
DEBUG 2022-09-08 19:44:19,574 [main][BasicTypeRegistry.java:145] : Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@2dc46a59
DEBUG 2022-09-08 19:44:19,574 [main][BasicTypeRegistry.java:145] : Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@df5d174a
DEBUG 2022-09-08 19:44:19,574 [main][BasicTypeRegistry.java:145] : Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@e331eec7
DEBUG 2022-09-08 19:44:19,574 [main][BasicTypeRegistry.java:145] : Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@9380c386
DEBUG 2022-09-08 19:44:19,575 [main][BasicTypeRegistry.java:145] : Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@c72cbb24
WARN  2022-09-08 19:44:19,581 [main][DriverManagerConnectionProviderImpl.java:70] : HHH10001002: Using Hibernate built-in connection pool (not for production use!)
INFO  2022-09-08 19:44:19,587 [main][DriverManagerConnectionProviderImpl.java:126] : HHH10001005: using driver [com.mysql.cj.jdbc.Driver] at URL [jdbc:mysql://localhost:3306/classicmodels?serverTimezone=UTC]
INFO  2022-09-08 19:44:19,587 [main][DriverManagerConnectionProviderImpl.java:132] : HHH10001001: Connection properties: {password=rootroot, user=root}
INFO  2022-09-08 19:44:19,588 [main][DriverManagerConnectionProviderImpl.java:140] : HHH10001003: Autocommit mode: false
DEBUG 2022-09-08 19:44:19,590 [main][DelegatingBasicLogger.java:384] : Initializing Connection pool with 1 Connections
INFO  2022-09-08 19:44:19,590 [main][PooledConnections.java:41] : HHH000115: Hibernate connection pool size: 5 (min=1)
DEBUG 2022-09-08 19:44:20,014 [main][JdbcEnvironmentInitiator.java:72] : Database ->
       name : MySQL
    version : 8.0.29
      major : 8
      minor : 0
DEBUG 2022-09-08 19:44:20,014 [main][JdbcEnvironmentInitiator.java:83] : Driver ->
       name : MySQL Connector/J
    version : mysql-connector-java-8.0.29 (Revision: dd61577595edad45c398af508cf91ad26fc4144f)
      major : 8
      minor : 0
DEBUG 2022-09-08 19:44:20,014 [main][DelegatingBasicLogger.java:389] : JDBC version : 4.2
INFO  2022-09-08 19:44:20,020 [main][Dialect.java:153] : HHH000400: Using dialect: org.hibernate.dialect.MySQLDialect
DEBUG 2022-09-08 19:44:20,094 [main][IdentifierHelperBuilder.java:117] : JDBC driver metadata reported database stores quoted identifiers in more than one case
DEBUG 2022-09-08 19:44:20,095 [main][IdentifierHelperBuilder.java:191] : IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [MIXED]; that will likely lead to problems in schema update and validation if using quoted identifiers
DEBUG 2022-09-08 19:44:20,117 [main][DefaultIdentifierGeneratorFactory.java:81] : Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
DEBUG 2022-09-08 19:44:20,117 [main][DefaultIdentifierGeneratorFactory.java:81] : Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
DEBUG 2022-09-08 19:44:20,117 [main][DefaultIdentifierGeneratorFactory.java:81] : Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
DEBUG 2022-09-08 19:44:20,118 [main][DefaultIdentifierGeneratorFactory.java:81] : Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
DEBUG 2022-09-08 19:44:20,118 [main][DefaultIdentifierGeneratorFactory.java:81] : Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
DEBUG 2022-09-08 19:44:20,118 [main][DefaultIdentifierGeneratorFactory.java:81] : Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
DEBUG 2022-09-08 19:44:20,119 [main][DefaultIdentifierGeneratorFactory.java:81] : Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
DEBUG 2022-09-08 19:44:20,120 [main][DefaultIdentifierGeneratorFactory.java:81] : Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
DEBUG 2022-09-08 19:44:20,121 [main][DefaultIdentifierGeneratorFactory.java:81] : Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
DEBUG 2022-09-08 19:44:20,121 [main][DefaultIdentifierGeneratorFactory.java:81] : Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
DEBUG 2022-09-08 19:44:20,121 [main][DefaultIdentifierGeneratorFactory.java:81] : Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
DEBUG 2022-09-08 19:44:20,122 [main][DefaultIdentifierGeneratorFactory.java:81] : Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
DEBUG 2022-09-08 19:44:20,122 [main][DefaultIdentifierGeneratorFactory.java:81] : Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
DEBUG 2022-09-08 19:44:20,122 [main][DefaultIdentifierGeneratorFactory.java:81] : Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
DEBUG 2022-09-08 19:44:20,141 [main][Namespace.java:47] : Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
DEBUG 2022-09-08 19:44:20,157 [main][AnnotationBinder.java:511] : Binding entity from annotated class: org.example.models.Author
DEBUG 2022-09-08 19:44:20,165 [main][Ejb3Column.java:213] : Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
DEBUG 2022-09-08 19:44:20,168 [main][EntityBinder.java:416] : Import with entity name Author
DEBUG 2022-09-08 19:44:20,171 [main][EntityBinder.java:692] : Bind entity org.example.models.Author on table Author
DEBUG 2022-09-08 19:44:20,191 [main][Ejb3Column.java:213] : Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Author), mappingColumn=id, insertable=true, updatable=true, unique=false}
DEBUG 2022-09-08 19:44:20,193 [main][PropertyBinder.java:174] : MetadataSourceProcessor property id with lazy=false
DEBUG 2022-09-08 19:44:20,193 [main][AbstractPropertyHolder.java:89] : Attempting to locate auto-apply AttributeConverter for property [org.example.models.Author:id]
DEBUG 2022-09-08 19:44:20,194 [main][SimpleValueBinder.java:398] : building SimpleValue for id
DEBUG 2022-09-08 19:44:20,196 [main][PropertyBinder.java:265] : Building property id
DEBUG 2022-09-08 19:44:20,201 [main][Ejb3Column.java:213] : Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Author), mappingColumn=null, insertable=true, updatable=true, unique=false}
DEBUG 2022-09-08 19:44:20,205 [main][Ejb3Column.java:213] : Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Author), mappingColumn=element, insertable=true, updatable=true, unique=false}
DEBUG 2022-09-08 19:44:20,207 [main][Ejb3Column.java:213] : Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Author), mappingColumn=books_KEY, insertable=true, updatable=true, unique=false}
DEBUG 2022-09-08 19:44:20,208 [main][Ejb3Column.java:213] : Binding column: Ejb3JoinColumn{logicalColumnName='books_KEY', referencedColumn='null', mappedBy='null'}
DEBUG 2022-09-08 19:44:20,209 [main][Ejb3Column.java:213] : Binding column: Ejb3JoinColumn{logicalColumnName='book_id', referencedColumn='', mappedBy=''}
DEBUG 2022-09-08 19:44:20,209 [main][Ejb3Column.java:213] : Binding column: Ejb3JoinColumn{logicalColumnName='author_id', referencedColumn='', mappedBy=''}
DEBUG 2022-09-08 19:44:20,209 [main][CollectionBinder.java:388] : Collection role: org.example.models.Author.books
DEBUG 2022-09-08 19:44:20,210 [main][PropertyBinder.java:265] : Building property books
DEBUG 2022-09-08 19:44:20,210 [main][Ejb3Column.java:213] : Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Author), mappingColumn=name, insertable=true, updatable=true, unique=false}
DEBUG 2022-09-08 19:44:20,210 [main][PropertyBinder.java:174] : MetadataSourceProcessor property name with lazy=false
DEBUG 2022-09-08 19:44:20,211 [main][AbstractPropertyHolder.java:89] : Attempting to locate auto-apply AttributeConverter for property [org.example.models.Author:name]
DEBUG 2022-09-08 19:44:20,211 [main][SimpleValueBinder.java:398] : building SimpleValue for name
DEBUG 2022-09-08 19:44:20,211 [main][PropertyBinder.java:265] : Building property name
DEBUG 2022-09-08 19:44:20,211 [main][Ejb3Column.java:213] : Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='author'}
DEBUG 2022-09-08 19:44:20,211 [main][Ejb3Column.java:213] : Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Author), mappingColumn=photos, insertable=true, updatable=true, unique=false}
DEBUG 2022-09-08 19:44:20,211 [main][Ejb3Column.java:213] : Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Author), mappingColumn=null, insertable=true, updatable=true, unique=false}
DEBUG 2022-09-08 19:44:20,212 [main][Ejb3Column.java:213] : Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Author), mappingColumn=element, insertable=true, updatable=true, unique=false}
DEBUG 2022-09-08 19:44:20,212 [main][Ejb3Column.java:213] : Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Author), mappingColumn=photos_KEY, insertable=true, updatable=true, unique=false}
DEBUG 2022-09-08 19:44:20,212 [main][Ejb3Column.java:213] : Binding column: Ejb3JoinColumn{logicalColumnName='photos_KEY', referencedColumn='null', mappedBy='null'}
DEBUG 2022-09-08 19:44:20,212 [main][Ejb3Column.java:213] : Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='author'}
DEBUG 2022-09-08 19:44:20,212 [main][Ejb3Column.java:213] : Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='author'}
DEBUG 2022-09-08 19:44:20,212 [main][CollectionBinder.java:388] : Collection role: org.example.models.Author.photos
DEBUG 2022-09-08 19:44:20,213 [main][PropertyBinder.java:265] : Building property photos
DEBUG 2022-09-08 19:44:20,213 [main][Ejb3Column.java:213] : Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Author), mappingColumn=salary, insertable=true, updatable=true, unique=false}
DEBUG 2022-09-08 19:44:20,213 [main][PropertyBinder.java:174] : MetadataSourceProcessor property salary with lazy=false
DEBUG 2022-09-08 19:44:20,213 [main][AbstractPropertyHolder.java:89] : Attempting to locate auto-apply AttributeConverter for property [org.example.models.Author:salary]
DEBUG 2022-09-08 19:44:20,213 [main][SimpleValueBinder.java:398] : building SimpleValue for salary
DEBUG 2022-09-08 19:44:20,213 [main][PropertyBinder.java:265] : Building property salary
DEBUG 2022-09-08 19:44:20,214 [main][AnnotationBinder.java:511] : Binding entity from annotated class: org.example.models.Book
DEBUG 2022-09-08 19:44:20,214 [main][Ejb3Column.java:213] : Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
DEBUG 2022-09-08 19:44:20,214 [main][EntityBinder.java:416] : Import with entity name Book
DEBUG 2022-09-08 19:44:20,214 [main][EntityBinder.java:692] : Bind entity org.example.models.Book on table Book
DEBUG 2022-09-08 19:44:20,215 [main][Ejb3Column.java:213] : Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Book), mappingColumn=id, insertable=true, updatable=true, unique=false}
DEBUG 2022-09-08 19:44:20,215 [main][PropertyBinder.java:174] : MetadataSourceProcessor property id with lazy=false
DEBUG 2022-09-08 19:44:20,215 [main][AbstractPropertyHolder.java:89] : Attempting to locate auto-apply AttributeConverter for property [org.example.models.Book:id]
DEBUG 2022-09-08 19:44:20,215 [main][SimpleValueBinder.java:398] : building SimpleValue for id
DEBUG 2022-09-08 19:44:20,216 [main][PropertyBinder.java:265] : Building property id
DEBUG 2022-09-08 19:44:20,216 [main][Ejb3Column.java:213] : Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Book), mappingColumn=null, insertable=true, updatable=true, unique=false}
DEBUG 2022-09-08 19:44:20,216 [main][Ejb3Column.java:213] : Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Book), mappingColumn=element, insertable=true, updatable=true, unique=false}
DEBUG 2022-09-08 19:44:20,216 [main][Ejb3Column.java:213] : Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Book), mappingColumn=authors_KEY, insertable=true, updatable=true, unique=false}
DEBUG 2022-09-08 19:44:20,217 [main][Ejb3Column.java:213] : Binding column: Ejb3JoinColumn{logicalColumnName='authors_KEY', referencedColumn='null', mappedBy='null'}
DEBUG 2022-09-08 19:44:20,217 [main][Ejb3Column.java:213] : Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='books'}
DEBUG 2022-09-08 19:44:20,217 [main][Ejb3Column.java:213] : Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='books'}
DEBUG 2022-09-08 19:44:20,217 [main][CollectionBinder.java:388] : Collection role: org.example.models.Book.authors
DEBUG 2022-09-08 19:44:20,217 [main][PropertyBinder.java:265] : Building property authors
DEBUG 2022-09-08 19:44:20,218 [main][Ejb3Column.java:213] : Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Book), mappingColumn=name, insertable=true, updatable=true, unique=false}
DEBUG 2022-09-08 19:44:20,218 [main][PropertyBinder.java:174] : MetadataSourceProcessor property name with lazy=false
DEBUG 2022-09-08 19:44:20,218 [main][AbstractPropertyHolder.java:89] : Attempting to locate auto-apply AttributeConverter for property [org.example.models.Book:name]
DEBUG 2022-09-08 19:44:20,218 [main][SimpleValueBinder.java:398] : building SimpleValue for name
DEBUG 2022-09-08 19:44:20,218 [main][PropertyBinder.java:265] : Building property name
DEBUG 2022-09-08 19:44:20,219 [main][SimpleValueBinder.java:443] : Starting fillSimpleValue for id
DEBUG 2022-09-08 19:44:20,219 [main][SimpleValueBinder.java:443] : Starting fillSimpleValue for name
DEBUG 2022-09-08 19:44:20,219 [main][SimpleValueBinder.java:443] : Starting fillSimpleValue for salary
DEBUG 2022-09-08 19:44:20,220 [main][SimpleValueBinder.java:443] : Starting fillSimpleValue for id
DEBUG 2022-09-08 19:44:20,220 [main][SimpleValueBinder.java:443] : Starting fillSimpleValue for name
DEBUG 2022-09-08 19:44:20,220 [main][PrimaryKey.java:35] : Forcing column [id] to be non-null as it is part of the primary key for table [author]
DEBUG 2022-09-08 19:44:20,221 [main][PrimaryKey.java:35] : Forcing column [id] to be non-null as it is part of the primary key for table [book]
DEBUG 2022-09-08 19:44:20,221 [main][CollectionSecondPass.java:51] : Second pass for collection: org.example.models.Author.books
DEBUG 2022-09-08 19:44:20,221 [main][CollectionBinder.java:1210] : Binding as ManyToMany: org.example.models.Author.books
DEBUG 2022-09-08 19:44:20,223 [main][PrimaryKey.java:35] : Forcing column [book_id] to be non-null as it is part of the primary key for table [authors_books]
DEBUG 2022-09-08 19:44:20,223 [main][PrimaryKey.java:35] : Forcing column [author_id] to be non-null as it is part of the primary key for table [authors_books]
DEBUG 2022-09-08 19:44:20,225 [main][CollectionSecondPass.java:68] : Mapped collection key: book_id, element: author_id
DEBUG 2022-09-08 19:44:20,225 [main][CollectionSecondPass.java:51] : Second pass for collection: org.example.models.Author.photos
DEBUG 2022-09-08 19:44:20,225 [main][CollectionBinder.java:1216] : Binding a collection of element: org.example.models.Author.photos
WARN  2022-09-08 19:44:41,831 [main][Main.java:17] : TEST
DEBUG 2022-09-08 19:44:41,891 [main][CoreLogging.java:28] : Logging Provider: org.jboss.logging.Log4jLoggerProvider
DEBUG 2022-09-08 19:44:41,902 [main][IntegratorServiceImpl.java:46] : Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
DEBUG 2022-09-08 19:44:41,905 [main][IntegratorServiceImpl.java:46] : Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
DEBUG 2022-09-08 19:44:41,909 [main][IntegratorServiceImpl.java:46] : Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
INFO  2022-09-08 19:44:42,001 [main][Version.java:45] : HHH000412: Hibernate Core {5.2.2.Final}
INFO  2022-09-08 19:44:42,006 [main][Environment.java:213] : HHH000206: hibernate.properties not found
INFO  2022-09-08 19:44:42,008 [main][Environment.java:318] : HHH000021: Bytecode provider name : javassist
DEBUG 2022-09-08 19:44:42,037 [main][LocalXmlResourceResolver.java:57] : Interpreting public/system identifier : [null] - [http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd]
DEBUG 2022-09-08 19:44:42,039 [main][LocalXmlResourceResolver.java:85] : Recognized hibernate-configuration identifier; attempting to resolve on classpath under org/hibernate/
DEBUG 2022-09-08 19:44:42,044 [main][JaxbCfgProcessor.java:116] : cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
DEBUG 2022-09-08 19:44:42,309 [main][Configuration.java:724] : Building session factory using internal StandardServiceRegistryBuilder
DEBUG 2022-09-08 19:44:42,313 [main][ServiceBinding.java:68] : Overriding existing service binding [org.hibernate.secure.spi.JaccService]
DEBUG 2022-09-08 19:44:42,314 [main][Configuration.java:652] : Building session factory using provided StandardServiceRegistry
DEBUG 2022-09-08 19:44:42,324 [main][RegionFactoryInitiator.java:75] : Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
INFO  2022-09-08 19:44:42,330 [main][JavaReflectionManager.java:66] : HCANN000001: Hibernate Commons Annotations {5.0.1.Final}
DEBUG 2022-09-08 19:44:42,346 [main][BasicTypeRegistry.java:145] : Adding type registration boolean -> org.hibernate.type.BooleanType@b5cf5a3f
DEBUG 2022-09-08 19:44:42,347 [main][BasicTypeRegistry.java:145] : Adding type registration boolean -> org.hibernate.type.BooleanType@b5cf5a3f
DEBUG 2022-09-08 19:44:42,348 [main][BasicTypeRegistry.java:145] : Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@b5cf5a3f
DEBUG 2022-09-08 19:44:42,349 [main][BasicTypeRegistry.java:145] : Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@dd6d4ef9
DEBUG 2022-09-08 19:44:42,351 [main][BasicTypeRegistry.java:145] : Adding type registration true_false -> org.hibernate.type.TrueFalseType@7147bbd0
DEBUG 2022-09-08 19:44:42,352 [main][BasicTypeRegistry.java:145] : Adding type registration yes_no -> org.hibernate.type.YesNoType@d83ef3bd
DEBUG 2022-09-08 19:44:42,354 [main][BasicTypeRegistry.java:145] : Adding type registration byte -> org.hibernate.type.ByteType@b1524d4d
DEBUG 2022-09-08 19:44:42,355 [main][BasicTypeRegistry.java:145] : Adding type registration byte -> org.hibernate.type.ByteType@b1524d4d
DEBUG 2022-09-08 19:44:42,355 [main][BasicTypeRegistry.java:145] : Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@b1524d4d
DEBUG 2022-09-08 19:44:42,359 [main][BasicTypeRegistry.java:145] : Adding type registration character -> org.hibernate.type.CharacterType@44e3216b
DEBUG 2022-09-08 19:44:42,360 [main][BasicTypeRegistry.java:145] : Adding type registration char -> org.hibernate.type.CharacterType@44e3216b
DEBUG 2022-09-08 19:44:42,360 [main][BasicTypeRegistry.java:145] : Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@44e3216b
DEBUG 2022-09-08 19:44:42,364 [main][BasicTypeRegistry.java:145] : Adding type registration short -> org.hibernate.type.ShortType@2d06814
DEBUG 2022-09-08 19:44:42,365 [main][BasicTypeRegistry.java:145] : Adding type registration short -> org.hibernate.type.ShortType@2d06814
DEBUG 2022-09-08 19:44:42,366 [main][BasicTypeRegistry.java:145] : Adding type registration java.lang.Short -> org.hibernate.type.ShortType@2d06814
DEBUG 2022-09-08 19:44:42,367 [main][BasicTypeRegistry.java:145] : Adding type registration integer -> org.hibernate.type.IntegerType@6e121d46
DEBUG 2022-09-08 19:44:42,368 [main][BasicTypeRegistry.java:145] : Adding type registration int -> org.hibernate.type.IntegerType@6e121d46
DEBUG 2022-09-08 19:44:42,369 [main][BasicTypeRegistry.java:145] : Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@6e121d46
DEBUG 2022-09-08 19:44:42,370 [main][BasicTypeRegistry.java:145] : Adding type registration long -> org.hibernate.type.LongType@982a77ea
DEBUG 2022-09-08 19:44:42,371 [main][BasicTypeRegistry.java:145] : Adding type registration long -> org.hibernate.type.LongType@982a77ea
DEBUG 2022-09-08 19:44:42,371 [main][BasicTypeRegistry.java:145] : Adding type registration java.lang.Long -> org.hibernate.type.LongType@982a77ea
DEBUG 2022-09-08 19:44:42,373 [main][BasicTypeRegistry.java:145] : Adding type registration float -> org.hibernate.type.FloatType@2bef1667
DEBUG 2022-09-08 19:44:42,374 [main][BasicTypeRegistry.java:145] : Adding type registration float -> org.hibernate.type.FloatType@2bef1667
DEBUG 2022-09-08 19:44:42,375 [main][BasicTypeRegistry.java:145] : Adding type registration java.lang.Float -> org.hibernate.type.FloatType@2bef1667
DEBUG 2022-09-08 19:44:42,376 [main][BasicTypeRegistry.java:145] : Adding type registration double -> org.hibernate.type.DoubleType@a32bb696
DEBUG 2022-09-08 19:44:42,377 [main][BasicTypeRegistry.java:145] : Adding type registration double -> org.hibernate.type.DoubleType@a32bb696
DEBUG 2022-09-08 19:44:42,378 [main][BasicTypeRegistry.java:145] : Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@a32bb696
DEBUG 2022-09-08 19:44:42,381 [main][BasicTypeRegistry.java:145] : Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@edf99e62
DEBUG 2022-09-08 19:44:42,381 [main][BasicTypeRegistry.java:145] : Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@edf99e62
DEBUG 2022-09-08 19:44:42,382 [main][BasicTypeRegistry.java:145] : Adding type registration big_integer -> org.hibernate.type.BigIntegerType@c5d0549c
DEBUG 2022-09-08 19:44:42,383 [main][BasicTypeRegistry.java:145] : Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@c5d0549c
DEBUG 2022-09-08 19:44:42,385 [main][BasicTypeRegistry.java:145] : Adding type registration string -> org.hibernate.type.StringType@2370b011
DEBUG 2022-09-08 19:44:42,385 [main][BasicTypeRegistry.java:145] : Adding type registration java.lang.String -> org.hibernate.type.StringType@2370b011
DEBUG 2022-09-08 19:44:42,387 [main][BasicTypeRegistry.java:145] : Adding type registration nstring -> org.hibernate.type.StringNVarcharType@6857e55f
DEBUG 2022-09-08 19:44:42,388 [main][BasicTypeRegistry.java:145] : Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@3365e061
DEBUG 2022-09-08 19:44:42,389 [main][BasicTypeRegistry.java:145] : Adding type registration url -> org.hibernate.type.UrlType@3f4e62c0
DEBUG 2022-09-08 19:44:42,390 [main][BasicTypeRegistry.java:145] : Adding type registration java.net.URL -> org.hibernate.type.UrlType@3f4e62c0
DEBUG 2022-09-08 19:44:42,391 [main][BasicTypeRegistry.java:145] : Adding type registration Duration -> org.hibernate.type.DurationType@bcc45297
DEBUG 2022-09-08 19:44:42,392 [main][BasicTypeRegistry.java:145] : Adding type registration java.time.Duration -> org.hibernate.type.DurationType@bcc45297
DEBUG 2022-09-08 19:44:42,401 [main][BasicTypeRegistry.java:145] : Adding type registration Instant -> org.hibernate.type.InstantType@b6e59dd2
DEBUG 2022-09-08 19:44:42,402 [main][BasicTypeRegistry.java:145] : Adding type registration java.time.Instant -> org.hibernate.type.InstantType@b6e59dd2
DEBUG 2022-09-08 19:44:42,403 [main][BasicTypeRegistry.java:145] : Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@a73df2ad
DEBUG 2022-09-08 19:44:42,404 [main][BasicTypeRegistry.java:145] : Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@a73df2ad
DEBUG 2022-09-08 19:44:42,405 [main][BasicTypeRegistry.java:145] : Adding type registration LocalDate -> org.hibernate.type.LocalDateType@265e842b
DEBUG 2022-09-08 19:44:42,406 [main][BasicTypeRegistry.java:145] : Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@265e842b
DEBUG 2022-09-08 19:44:42,407 [main][BasicTypeRegistry.java:145] : Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@182028c0
DEBUG 2022-09-08 19:44:42,408 [main][BasicTypeRegistry.java:145] : Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@182028c0
DEBUG 2022-09-08 19:44:42,409 [main][BasicTypeRegistry.java:145] : Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@d7bcd91d
DEBUG 2022-09-08 19:44:42,409 [main][BasicTypeRegistry.java:145] : Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@d7bcd91d
DEBUG 2022-09-08 19:44:42,410 [main][BasicTypeRegistry.java:145] : Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@c0de607
DEBUG 2022-09-08 19:44:42,411 [main][BasicTypeRegistry.java:145] : Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@c0de607
DEBUG 2022-09-08 19:44:42,413 [main][BasicTypeRegistry.java:145] : Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@60637c80
DEBUG 2022-09-08 19:44:42,413 [main][BasicTypeRegistry.java:145] : Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@60637c80
DEBUG 2022-09-08 19:44:42,415 [main][BasicTypeRegistry.java:145] : Adding type registration date -> org.hibernate.type.DateType@49c2b84a
DEBUG 2022-09-08 19:44:42,415 [main][BasicTypeRegistry.java:145] : Adding type registration java.sql.Date -> org.hibernate.type.DateType@49c2b84a
DEBUG 2022-09-08 19:44:42,416 [main][BasicTypeRegistry.java:145] : Adding type registration time -> org.hibernate.type.TimeType@a16ab347
DEBUG 2022-09-08 19:44:42,416 [main][BasicTypeRegistry.java:145] : Adding type registration java.sql.Time -> org.hibernate.type.TimeType@a16ab347
DEBUG 2022-09-08 19:44:42,417 [main][BasicTypeRegistry.java:145] : Adding type registration timestamp -> org.hibernate.type.TimestampType@27a38a58
DEBUG 2022-09-08 19:44:42,418 [main][BasicTypeRegistry.java:145] : Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@27a38a58
DEBUG 2022-09-08 19:44:42,418 [main][BasicTypeRegistry.java:145] : Adding type registration java.util.Date -> org.hibernate.type.TimestampType@27a38a58
DEBUG 2022-09-08 19:44:42,421 [main][BasicTypeRegistry.java:145] : Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@c3200cca
DEBUG 2022-09-08 19:44:42,422 [main][BasicTypeRegistry.java:145] : Adding type registration calendar -> org.hibernate.type.CalendarType@820deae3
DEBUG 2022-09-08 19:44:42,423 [main][BasicTypeRegistry.java:145] : Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@820deae3
DEBUG 2022-09-08 19:44:42,423 [main][BasicTypeRegistry.java:145] : Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@820deae3
DEBUG 2022-09-08 19:44:42,424 [main][BasicTypeRegistry.java:145] : Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@57143040
DEBUG 2022-09-08 19:44:42,425 [main][BasicTypeRegistry.java:145] : Adding type registration locale -> org.hibernate.type.LocaleType@c9dfd44d
DEBUG 2022-09-08 19:44:42,426 [main][BasicTypeRegistry.java:145] : Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@c9dfd44d
DEBUG 2022-09-08 19:44:42,427 [main][BasicTypeRegistry.java:145] : Adding type registration currency -> org.hibernate.type.CurrencyType@395f913e
DEBUG 2022-09-08 19:44:42,427 [main][BasicTypeRegistry.java:145] : Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@395f913e
DEBUG 2022-09-08 19:44:42,428 [main][BasicTypeRegistry.java:145] : Adding type registration timezone -> org.hibernate.type.TimeZoneType@81c4d2b9
DEBUG 2022-09-08 19:44:42,429 [main][BasicTypeRegistry.java:145] : Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@81c4d2b9
DEBUG 2022-09-08 19:44:42,429 [main][BasicTypeRegistry.java:145] : Adding type registration class -> org.hibernate.type.ClassType@e7082ea3
DEBUG 2022-09-08 19:44:42,430 [main][BasicTypeRegistry.java:145] : Adding type registration java.lang.Class -> org.hibernate.type.ClassType@e7082ea3
DEBUG 2022-09-08 19:44:42,431 [main][BasicTypeRegistry.java:145] : Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@c76f9f1
DEBUG 2022-09-08 19:44:42,431 [main][BasicTypeRegistry.java:145] : Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@c76f9f1
DEBUG 2022-09-08 19:44:42,431 [main][BasicTypeRegistry.java:145] : Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@c04a35c2
DEBUG 2022-09-08 19:44:42,432 [main][BasicTypeRegistry.java:145] : Adding type registration binary -> org.hibernate.type.BinaryType@28009b84
DEBUG 2022-09-08 19:44:42,432 [main][BasicTypeRegistry.java:145] : Adding type registration byte[] -> org.hibernate.type.BinaryType@28009b84
DEBUG 2022-09-08 19:44:42,433 [main][BasicTypeRegistry.java:145] : Adding type registration [B -> org.hibernate.type.BinaryType@28009b84
DEBUG 2022-09-08 19:44:42,434 [main][BasicTypeRegistry.java:145] : Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@4cf013a3
DEBUG 2022-09-08 19:44:42,434 [main][BasicTypeRegistry.java:145] : Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@4cf013a3
DEBUG 2022-09-08 19:44:42,434 [main][BasicTypeRegistry.java:145] : Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@4cf013a3
DEBUG 2022-09-08 19:44:42,435 [main][BasicTypeRegistry.java:145] : Adding type registration row_version -> org.hibernate.type.RowVersionType@dd278af7
DEBUG 2022-09-08 19:44:42,436 [main][BasicTypeRegistry.java:145] : Adding type registration image -> org.hibernate.type.ImageType@9bd2fe9b
DEBUG 2022-09-08 19:44:42,437 [main][BasicTypeRegistry.java:145] : Adding type registration characters -> org.hibernate.type.CharArrayType@505c328
DEBUG 2022-09-08 19:44:42,437 [main][BasicTypeRegistry.java:145] : Adding type registration char[] -> org.hibernate.type.CharArrayType@505c328
DEBUG 2022-09-08 19:44:42,437 [main][BasicTypeRegistry.java:145] : Adding type registration [C -> org.hibernate.type.CharArrayType@505c328
DEBUG 2022-09-08 19:44:42,438 [main][BasicTypeRegistry.java:145] : Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@abf39b88
DEBUG 2022-09-08 19:44:42,439 [main][BasicTypeRegistry.java:145] : Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@abf39b88
DEBUG 2022-09-08 19:44:42,439 [main][BasicTypeRegistry.java:145] : Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@abf39b88
DEBUG 2022-09-08 19:44:42,439 [main][BasicTypeRegistry.java:145] : Adding type registration text -> org.hibernate.type.TextType@9b83594b
DEBUG 2022-09-08 19:44:42,440 [main][BasicTypeRegistry.java:145] : Adding type registration ntext -> org.hibernate.type.NTextType@e426ae28
DEBUG 2022-09-08 19:44:42,443 [main][BasicTypeRegistry.java:145] : Adding type registration blob -> org.hibernate.type.BlobType@6701f47
DEBUG 2022-09-08 19:44:42,444 [main][BasicTypeRegistry.java:145] : Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@6701f47
DEBUG 2022-09-08 19:44:42,444 [main][BasicTypeRegistry.java:145] : Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@473a410a
DEBUG 2022-09-08 19:44:42,447 [main][BasicTypeRegistry.java:145] : Adding type registration clob -> org.hibernate.type.ClobType@d002d436
DEBUG 2022-09-08 19:44:42,447 [main][BasicTypeRegistry.java:145] : Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@d002d436
DEBUG 2022-09-08 19:44:42,449 [main][BasicTypeRegistry.java:145] : Adding type registration nclob -> org.hibernate.type.NClobType@67ef6cd9
DEBUG 2022-09-08 19:44:42,449 [main][BasicTypeRegistry.java:145] : Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@67ef6cd9
DEBUG 2022-09-08 19:44:42,450 [main][BasicTypeRegistry.java:145] : Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@5816a5c5
DEBUG 2022-09-08 19:44:42,450 [main][BasicTypeRegistry.java:145] : Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@78b69766
DEBUG 2022-09-08 19:44:42,451 [main][BasicTypeRegistry.java:145] : Adding type registration serializable -> org.hibernate.type.SerializableType@b7933318
DEBUG 2022-09-08 19:44:42,453 [main][BasicTypeRegistry.java:145] : Adding type registration object -> org.hibernate.type.ObjectType@54f3158b
DEBUG 2022-09-08 19:44:42,454 [main][BasicTypeRegistry.java:145] : Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@54f3158b
DEBUG 2022-09-08 19:44:42,454 [main][BasicTypeRegistry.java:145] : Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@d2e3c6bf
DEBUG 2022-09-08 19:44:42,454 [main][BasicTypeRegistry.java:145] : Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@4d8bf270
DEBUG 2022-09-08 19:44:42,455 [main][BasicTypeRegistry.java:145] : Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@d85c1815
DEBUG 2022-09-08 19:44:42,455 [main][BasicTypeRegistry.java:145] : Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@453ab11a
DEBUG 2022-09-08 19:44:42,455 [main][BasicTypeRegistry.java:145] : Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@f0cafcaa
DEBUG 2022-09-08 19:44:42,455 [main][BasicTypeRegistry.java:145] : Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@bd1e5922
DEBUG 2022-09-08 19:44:42,456 [main][BasicTypeRegistry.java:145] : Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@feba69ca
DEBUG 2022-09-08 19:44:42,456 [main][BasicTypeRegistry.java:145] : Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@5a0b6b5c
WARN  2022-09-08 19:44:42,463 [main][DriverManagerConnectionProviderImpl.java:70] : HHH10001002: Using Hibernate built-in connection pool (not for production use!)
INFO  2022-09-08 19:44:42,469 [main][DriverManagerConnectionProviderImpl.java:126] : HHH10001005: using driver [com.mysql.cj.jdbc.Driver] at URL [jdbc:mysql://localhost:3306/classicmodels?serverTimezone=UTC]
INFO  2022-09-08 19:44:42,469 [main][DriverManagerConnectionProviderImpl.java:132] : HHH10001001: Connection properties: {password=rootroot, user=root}
INFO  2022-09-08 19:44:42,469 [main][DriverManagerConnectionProviderImpl.java:140] : HHH10001003: Autocommit mode: false
DEBUG 2022-09-08 19:44:42,472 [main][DelegatingBasicLogger.java:384] : Initializing Connection pool with 1 Connections
INFO  2022-09-08 19:44:42,472 [main][PooledConnections.java:41] : HHH000115: Hibernate connection pool size: 5 (min=1)
DEBUG 2022-09-08 19:44:42,913 [main][JdbcEnvironmentInitiator.java:72] : Database ->
       name : MySQL
    version : 8.0.29
      major : 8
      minor : 0
DEBUG 2022-09-08 19:44:42,914 [main][JdbcEnvironmentInitiator.java:83] : Driver ->
       name : MySQL Connector/J
    version : mysql-connector-java-8.0.29 (Revision: dd61577595edad45c398af508cf91ad26fc4144f)
      major : 8
      minor : 0
DEBUG 2022-09-08 19:44:42,914 [main][DelegatingBasicLogger.java:389] : JDBC version : 4.2
INFO  2022-09-08 19:44:42,920 [main][Dialect.java:153] : HHH000400: Using dialect: org.hibernate.dialect.MySQLDialect
DEBUG 2022-09-08 19:44:42,964 [main][IdentifierHelperBuilder.java:117] : JDBC driver metadata reported database stores quoted identifiers in more than one case
DEBUG 2022-09-08 19:44:42,965 [main][IdentifierHelperBuilder.java:191] : IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [MIXED]; that will likely lead to problems in schema update and validation if using quoted identifiers
DEBUG 2022-09-08 19:44:42,987 [main][DefaultIdentifierGeneratorFactory.java:81] : Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
DEBUG 2022-09-08 19:44:42,988 [main][DefaultIdentifierGeneratorFactory.java:81] : Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
DEBUG 2022-09-08 19:44:42,989 [main][DefaultIdentifierGeneratorFactory.java:81] : Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
DEBUG 2022-09-08 19:44:42,989 [main][DefaultIdentifierGeneratorFactory.java:81] : Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
DEBUG 2022-09-08 19:44:42,989 [main][DefaultIdentifierGeneratorFactory.java:81] : Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
DEBUG 2022-09-08 19:44:42,990 [main][DefaultIdentifierGeneratorFactory.java:81] : Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
DEBUG 2022-09-08 19:44:42,990 [main][DefaultIdentifierGeneratorFactory.java:81] : Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
DEBUG 2022-09-08 19:44:42,991 [main][DefaultIdentifierGeneratorFactory.java:81] : Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
DEBUG 2022-09-08 19:44:42,992 [main][DefaultIdentifierGeneratorFactory.java:81] : Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
DEBUG 2022-09-08 19:44:42,992 [main][DefaultIdentifierGeneratorFactory.java:81] : Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
DEBUG 2022-09-08 19:44:42,992 [main][DefaultIdentifierGeneratorFactory.java:81] : Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
DEBUG 2022-09-08 19:44:42,993 [main][DefaultIdentifierGeneratorFactory.java:81] : Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
DEBUG 2022-09-08 19:44:42,994 [main][DefaultIdentifierGeneratorFactory.java:81] : Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
DEBUG 2022-09-08 19:44:42,995 [main][DefaultIdentifierGeneratorFactory.java:81] : Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
DEBUG 2022-09-08 19:44:43,010 [main][Namespace.java:47] : Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
DEBUG 2022-09-08 19:44:43,024 [main][AnnotationBinder.java:511] : Binding entity from annotated class: org.example.models.Author
DEBUG 2022-09-08 19:44:43,033 [main][Ejb3Column.java:213] : Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
DEBUG 2022-09-08 19:44:43,036 [main][EntityBinder.java:416] : Import with entity name Author
DEBUG 2022-09-08 19:44:43,039 [main][EntityBinder.java:692] : Bind entity org.example.models.Author on table Author
DEBUG 2022-09-08 19:44:43,058 [main][Ejb3Column.java:213] : Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Author), mappingColumn=id, insertable=true, updatable=true, unique=false}
DEBUG 2022-09-08 19:44:43,060 [main][PropertyBinder.java:174] : MetadataSourceProcessor property id with lazy=false
DEBUG 2022-09-08 19:44:43,061 [main][AbstractPropertyHolder.java:89] : Attempting to locate auto-apply AttributeConverter for property [org.example.models.Author:id]
DEBUG 2022-09-08 19:44:43,062 [main][SimpleValueBinder.java:398] : building SimpleValue for id
DEBUG 2022-09-08 19:44:43,063 [main][PropertyBinder.java:265] : Building property id
DEBUG 2022-09-08 19:44:43,067 [main][Ejb3Column.java:213] : Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Author), mappingColumn=null, insertable=true, updatable=true, unique=false}
DEBUG 2022-09-08 19:44:43,072 [main][Ejb3Column.java:213] : Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Author), mappingColumn=element, insertable=true, updatable=true, unique=false}
DEBUG 2022-09-08 19:44:43,072 [main][Ejb3Column.java:213] : Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Author), mappingColumn=books_KEY, insertable=true, updatable=true, unique=false}
DEBUG 2022-09-08 19:44:43,073 [main][Ejb3Column.java:213] : Binding column: Ejb3JoinColumn{logicalColumnName='books_KEY', referencedColumn='null', mappedBy='null'}
DEBUG 2022-09-08 19:44:43,073 [main][Ejb3Column.java:213] : Binding column: Ejb3JoinColumn{logicalColumnName='book_id', referencedColumn='', mappedBy=''}
DEBUG 2022-09-08 19:44:43,073 [main][Ejb3Column.java:213] : Binding column: Ejb3JoinColumn{logicalColumnName='author_id', referencedColumn='', mappedBy=''}
DEBUG 2022-09-08 19:44:43,074 [main][CollectionBinder.java:388] : Collection role: org.example.models.Author.books
DEBUG 2022-09-08 19:44:43,075 [main][PropertyBinder.java:265] : Building property books
DEBUG 2022-09-08 19:44:43,075 [main][Ejb3Column.java:213] : Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Author), mappingColumn=name, insertable=true, updatable=true, unique=false}
DEBUG 2022-09-08 19:44:43,075 [main][PropertyBinder.java:174] : MetadataSourceProcessor property name with lazy=false
DEBUG 2022-09-08 19:44:43,075 [main][AbstractPropertyHolder.java:89] : Attempting to locate auto-apply AttributeConverter for property [org.example.models.Author:name]
DEBUG 2022-09-08 19:44:43,075 [main][SimpleValueBinder.java:398] : building SimpleValue for name
DEBUG 2022-09-08 19:44:43,076 [main][PropertyBinder.java:265] : Building property name
DEBUG 2022-09-08 19:44:43,076 [main][Ejb3Column.java:213] : Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='author'}
DEBUG 2022-09-08 19:44:43,076 [main][Ejb3Column.java:213] : Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Author), mappingColumn=photos, insertable=true, updatable=true, unique=false}
DEBUG 2022-09-08 19:44:43,076 [main][Ejb3Column.java:213] : Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Author), mappingColumn=null, insertable=true, updatable=true, unique=false}
DEBUG 2022-09-08 19:44:43,076 [main][Ejb3Column.java:213] : Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Author), mappingColumn=element, insertable=true, updatable=true, unique=false}
DEBUG 2022-09-08 19:44:43,077 [main][Ejb3Column.java:213] : Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Author), mappingColumn=photos_KEY, insertable=true, updatable=true, unique=false}
DEBUG 2022-09-08 19:44:43,077 [main][Ejb3Column.java:213] : Binding column: Ejb3JoinColumn{logicalColumnName='photos_KEY', referencedColumn='null', mappedBy='null'}
DEBUG 2022-09-08 19:44:43,077 [main][Ejb3Column.java:213] : Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='author'}
DEBUG 2022-09-08 19:44:43,077 [main][Ejb3Column.java:213] : Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='author'}
DEBUG 2022-09-08 19:44:43,077 [main][CollectionBinder.java:388] : Collection role: org.example.models.Author.photos
DEBUG 2022-09-08 19:44:43,077 [main][PropertyBinder.java:265] : Building property photos
DEBUG 2022-09-08 19:44:43,078 [main][Ejb3Column.java:213] : Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Author), mappingColumn=salary, insertable=true, updatable=true, unique=false}
DEBUG 2022-09-08 19:44:43,078 [main][PropertyBinder.java:174] : MetadataSourceProcessor property salary with lazy=false
DEBUG 2022-09-08 19:44:43,078 [main][AbstractPropertyHolder.java:89] : Attempting to locate auto-apply AttributeConverter for property [org.example.models.Author:salary]
DEBUG 2022-09-08 19:44:43,078 [main][SimpleValueBinder.java:398] : building SimpleValue for salary
DEBUG 2022-09-08 19:44:43,078 [main][PropertyBinder.java:265] : Building property salary
DEBUG 2022-09-08 19:44:43,079 [main][AnnotationBinder.java:511] : Binding entity from annotated class: org.example.models.Book
DEBUG 2022-09-08 19:44:43,079 [main][Ejb3Column.java:213] : Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
DEBUG 2022-09-08 19:44:43,079 [main][EntityBinder.java:416] : Import with entity name Book
DEBUG 2022-09-08 19:44:43,079 [main][EntityBinder.java:692] : Bind entity org.example.models.Book on table Book
DEBUG 2022-09-08 19:44:43,080 [main][Ejb3Column.java:213] : Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Book), mappingColumn=id, insertable=true, updatable=true, unique=false}
DEBUG 2022-09-08 19:44:43,080 [main][PropertyBinder.java:174] : MetadataSourceProcessor property id with lazy=false
DEBUG 2022-09-08 19:44:43,080 [main][AbstractPropertyHolder.java:89] : Attempting to locate auto-apply AttributeConverter for property [org.example.models.Book:id]
DEBUG 2022-09-08 19:44:43,080 [main][SimpleValueBinder.java:398] : building SimpleValue for id
DEBUG 2022-09-08 19:44:43,080 [main][PropertyBinder.java:265] : Building property id
DEBUG 2022-09-08 19:44:43,081 [main][Ejb3Column.java:213] : Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Book), mappingColumn=null, insertable=true, updatable=true, unique=false}
DEBUG 2022-09-08 19:44:43,081 [main][Ejb3Column.java:213] : Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Book), mappingColumn=element, insertable=true, updatable=true, unique=false}
DEBUG 2022-09-08 19:44:43,081 [main][Ejb3Column.java:213] : Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Book), mappingColumn=authors_KEY, insertable=true, updatable=true, unique=false}
DEBUG 2022-09-08 19:44:43,082 [main][Ejb3Column.java:213] : Binding column: Ejb3JoinColumn{logicalColumnName='authors_KEY', referencedColumn='null', mappedBy='null'}
DEBUG 2022-09-08 19:44:43,082 [main][Ejb3Column.java:213] : Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='books'}
DEBUG 2022-09-08 19:44:43,083 [main][Ejb3Column.java:213] : Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='books'}
DEBUG 2022-09-08 19:44:43,083 [main][CollectionBinder.java:388] : Collection role: org.example.models.Book.authors
DEBUG 2022-09-08 19:44:43,083 [main][PropertyBinder.java:265] : Building property authors
DEBUG 2022-09-08 19:44:43,083 [main][Ejb3Column.java:213] : Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Book), mappingColumn=name, insertable=true, updatable=true, unique=false}
DEBUG 2022-09-08 19:44:43,083 [main][PropertyBinder.java:174] : MetadataSourceProcessor property name with lazy=false
DEBUG 2022-09-08 19:44:43,083 [main][AbstractPropertyHolder.java:89] : Attempting to locate auto-apply AttributeConverter for property [org.example.models.Book:name]
DEBUG 2022-09-08 19:44:43,084 [main][SimpleValueBinder.java:398] : building SimpleValue for name
DEBUG 2022-09-08 19:44:43,084 [main][PropertyBinder.java:265] : Building property name
DEBUG 2022-09-08 19:44:43,084 [main][AnnotationBinder.java:511] : Binding entity from annotated class: org.example.models.Photo
DEBUG 2022-09-08 19:44:43,084 [main][Ejb3Column.java:213] : Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
DEBUG 2022-09-08 19:44:43,084 [main][EntityBinder.java:416] : Import with entity name Photo
DEBUG 2022-09-08 19:44:43,084 [main][EntityBinder.java:692] : Bind entity org.example.models.Photo on table Photo
DEBUG 2022-09-08 19:44:43,087 [main][Ejb3Column.java:213] : Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Photo), mappingColumn=id, insertable=true, updatable=true, unique=false}
DEBUG 2022-09-08 19:44:43,087 [main][PropertyBinder.java:174] : MetadataSourceProcessor property id with lazy=false
DEBUG 2022-09-08 19:44:43,087 [main][AbstractPropertyHolder.java:89] : Attempting to locate auto-apply AttributeConverter for property [org.example.models.Photo:id]
DEBUG 2022-09-08 19:44:43,087 [main][SimpleValueBinder.java:398] : building SimpleValue for id
DEBUG 2022-09-08 19:44:43,088 [main][PropertyBinder.java:265] : Building property id
DEBUG 2022-09-08 19:44:43,088 [main][Ejb3Column.java:213] : Binding column: Ejb3JoinColumn{logicalColumnName='author_id', referencedColumn='', mappedBy=''}
DEBUG 2022-09-08 19:44:43,088 [main][Ejb3Column.java:213] : Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Photo), mappingColumn=author, insertable=true, updatable=true, unique=false}
DEBUG 2022-09-08 19:44:43,089 [main][PropertyBinder.java:265] : Building property author
DEBUG 2022-09-08 19:44:43,089 [main][Ejb3Column.java:213] : Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Photo), mappingColumn=file_name, insertable=true, updatable=true, unique=false}
DEBUG 2022-09-08 19:44:43,089 [main][PropertyBinder.java:174] : MetadataSourceProcessor property fileName with lazy=false
DEBUG 2022-09-08 19:44:43,089 [main][AbstractPropertyHolder.java:89] : Attempting to locate auto-apply AttributeConverter for property [org.example.models.Photo:fileName]
DEBUG 2022-09-08 19:44:43,090 [main][SimpleValueBinder.java:398] : building SimpleValue for fileName
DEBUG 2022-09-08 19:44:43,090 [main][PropertyBinder.java:265] : Building property fileName
DEBUG 2022-09-08 19:44:43,090 [main][SimpleValueBinder.java:443] : Starting fillSimpleValue for id
DEBUG 2022-09-08 19:44:43,090 [main][SimpleValueBinder.java:443] : Starting fillSimpleValue for name
DEBUG 2022-09-08 19:44:43,091 [main][SimpleValueBinder.java:443] : Starting fillSimpleValue for salary
DEBUG 2022-09-08 19:44:43,091 [main][SimpleValueBinder.java:443] : Starting fillSimpleValue for id
DEBUG 2022-09-08 19:44:43,091 [main][SimpleValueBinder.java:443] : Starting fillSimpleValue for name
DEBUG 2022-09-08 19:44:43,091 [main][SimpleValueBinder.java:443] : Starting fillSimpleValue for id
DEBUG 2022-09-08 19:44:43,091 [main][SimpleValueBinder.java:443] : Starting fillSimpleValue for fileName
DEBUG 2022-09-08 19:44:43,093 [main][PrimaryKey.java:35] : Forcing column [id] to be non-null as it is part of the primary key for table [author]
DEBUG 2022-09-08 19:44:43,093 [main][PrimaryKey.java:35] : Forcing column [id] to be non-null as it is part of the primary key for table [book]
DEBUG 2022-09-08 19:44:43,093 [main][PrimaryKey.java:35] : Forcing column [id] to be non-null as it is part of the primary key for table [photo]
DEBUG 2022-09-08 19:44:43,093 [main][CollectionSecondPass.java:51] : Second pass for collection: org.example.models.Author.books
DEBUG 2022-09-08 19:44:43,093 [main][CollectionBinder.java:1210] : Binding as ManyToMany: org.example.models.Author.books
DEBUG 2022-09-08 19:44:43,094 [main][PrimaryKey.java:35] : Forcing column [book_id] to be non-null as it is part of the primary key for table [authors_books]
DEBUG 2022-09-08 19:44:43,094 [main][PrimaryKey.java:35] : Forcing column [author_id] to be non-null as it is part of the primary key for table [authors_books]
DEBUG 2022-09-08 19:44:43,095 [main][CollectionSecondPass.java:68] : Mapped collection key: book_id, element: author_id
DEBUG 2022-09-08 19:44:43,095 [main][CollectionSecondPass.java:51] : Second pass for collection: org.example.models.Author.photos
DEBUG 2022-09-08 19:44:43,096 [main][CollectionBinder.java:830] : Binding a OneToMany: org.example.models.Author.photos through a foreign key
DEBUG 2022-09-08 19:44:43,096 [main][CollectionBinder.java:868] : Mapping collection: org.example.models.Author.photos -> Photo
DEBUG 2022-09-08 19:44:43,097 [main][TableBinder.java:565] : Retrieving property org.example.models.Photo.author
DEBUG 2022-09-08 19:44:43,097 [main][CollectionSecondPass.java:68] : Mapped collection key: author_id, one-to-many: org.example.models.Photo
DEBUG 2022-09-08 19:44:43,097 [main][CollectionSecondPass.java:51] : Second pass for collection: org.example.models.Book.authors
DEBUG 2022-09-08 19:44:43,097 [main][CollectionBinder.java:1210] : Binding as ManyToMany: org.example.models.Book.authors
DEBUG 2022-09-08 19:44:43,097 [main][TableBinder.java:565] : Retrieving property org.example.models.Author.books
DEBUG 2022-09-08 19:44:43,097 [main][CollectionSecondPass.java:68] : Mapped collection key: author_id, element: book_id
DEBUG 2022-09-08 19:44:43,097 [main][InFlightMetadataCollectorImpl.java:1798] : Resolving reference to class: org.example.models.Book
DEBUG 2022-09-08 19:44:43,099 [main][InFlightMetadataCollectorImpl.java:1798] : Resolving reference to class: org.example.models.Author
DEBUG 2022-09-08 19:44:43,099 [main][InFlightMetadataCollectorImpl.java:1798] : Resolving reference to class: org.example.models.Author
DEBUG 2022-09-08 19:44:43,099 [main][InFlightMetadataCollectorImpl.java:1798] : Resolving reference to class: org.example.models.Book
DEBUG 2022-09-08 19:44:43,100 [main][InFlightMetadataCollectorImpl.java:1798] : Resolving reference to class: org.example.models.Author
DEBUG 2022-09-08 19:44:43,100 [main][InFlightMetadataCollectorImpl.java:1798] : Resolving reference to class: org.example.models.Author
DEBUG 2022-09-08 19:44:43,119 [main][SessionFactoryImpl.java:197] : Building session factory
DEBUG 2022-09-08 19:44:43,119 [main][Settings.java:69] : SessionFactory name : null
DEBUG 2022-09-08 19:44:43,119 [main][Settings.java:70] : Automatic flush during beforeCompletion(): enabled
DEBUG 2022-09-08 19:44:43,119 [main][Settings.java:71] : Automatic session close at end of transaction: disabled
DEBUG 2022-09-08 19:44:43,120 [main][Settings.java:73] : Statistics: disabled
DEBUG 2022-09-08 19:44:43,120 [main][Settings.java:75] : Deleted entity synthetic identifier rollback: disabled
DEBUG 2022-09-08 19:44:43,120 [main][Settings.java:76] : Default entity-mode: pojo
DEBUG 2022-09-08 19:44:43,120 [main][Settings.java:77] : Check Nullability in Core (should be disabled when Bean Validation is on): enabled
DEBUG 2022-09-08 19:44:43,120 [main][Settings.java:78] : Allow initialization of lazy state outside session : disabled
DEBUG 2022-09-08 19:44:43,120 [main][Settings.java:80] : Using BatchFetchStyle : LEGACY
DEBUG 2022-09-08 19:44:43,120 [main][Settings.java:81] : Default batch fetch size: -1
DEBUG 2022-09-08 19:44:43,120 [main][Settings.java:82] : Maximum outer join fetch depth: 2
DEBUG 2022-09-08 19:44:43,120 [main][Settings.java:83] : Default null ordering: NONE
DEBUG 2022-09-08 19:44:43,121 [main][Settings.java:84] : Order SQL updates by primary key: disabled
DEBUG 2022-09-08 19:44:43,121 [main][Settings.java:85] : Order SQL inserts for batching: disabled
DEBUG 2022-09-08 19:44:43,121 [main][Settings.java:87] : multi-tenancy strategy : NONE
DEBUG 2022-09-08 19:44:43,121 [main][Settings.java:89] : JTA Track by Thread: enabled
DEBUG 2022-09-08 19:44:43,121 [main][Settings.java:91] : Query language substitutions: {}
DEBUG 2022-09-08 19:44:43,121 [main][Settings.java:92] : JPA query language strict compliance: disabled
DEBUG 2022-09-08 19:44:43,121 [main][Settings.java:93] : Named query checking : enabled
DEBUG 2022-09-08 19:44:43,121 [main][Settings.java:95] : Second-level cache: enabled
DEBUG 2022-09-08 19:44:43,121 [main][Settings.java:96] : Second-level query cache: disabled
DEBUG 2022-09-08 19:44:43,122 [main][Settings.java:97] : Second-level query cache factory: org.hibernate.cache.internal.StandardQueryCacheFactory@396b8e68
DEBUG 2022-09-08 19:44:43,122 [main][Settings.java:98] : Second-level cache region prefix: null
DEBUG 2022-09-08 19:44:43,122 [main][Settings.java:99] : Optimize second-level cache for minimal puts: disabled
DEBUG 2022-09-08 19:44:43,122 [main][Settings.java:100] : Structured second-level cache entries: disabled
DEBUG 2022-09-08 19:44:43,122 [main][Settings.java:101] : Second-level cache direct-reference entries: disabled
DEBUG 2022-09-08 19:44:43,122 [main][Settings.java:102] : Automatic eviction of collection cache: disabled
DEBUG 2022-09-08 19:44:43,122 [main][Settings.java:104] : JDBC batch size: 15
DEBUG 2022-09-08 19:44:43,123 [main][Settings.java:105] : JDBC batch updates for versioned data: enabled
DEBUG 2022-09-08 19:44:43,123 [main][Settings.java:106] : Scrollable result sets: enabled
DEBUG 2022-09-08 19:44:43,123 [main][Settings.java:107] : Wrap result sets: disabled
DEBUG 2022-09-08 19:44:43,123 [main][Settings.java:108] : JDBC3 getGeneratedKeys(): enabled
DEBUG 2022-09-08 19:44:43,123 [main][Settings.java:109] : JDBC result set fetch size: null
DEBUG 2022-09-08 19:44:43,123 [main][Settings.java:110] : Connection release mode: AFTER_TRANSACTION
DEBUG 2022-09-08 19:44:43,123 [main][Settings.java:111] : Generate SQL with comments: disabled
DEBUG 2022-09-08 19:44:43,148 [main][SessionFactoryImpl.java:252] : Session factory constructed with filter configurations : {}
DEBUG 2022-09-08 19:44:43,149 [main][SessionFactoryImpl.java:253] : Instantiating session factory with properties: {awt.toolkit=sun.lwawt.macosx.LWCToolkit, java.specification.version=11, file.encoding.pkg=sun.io, jdk.extensions.version=11.0.15.0, sun.jnu.encoding=UTF-8, hibernate.dialect=org.hibernate.dialect.MySQLDialect, java.class.path=/Users/vdonets/IdeaProjects/testmaven/target/classes:/Users/vdonets/.m2/repository/org/hibernate/hibernate-core/5.2.2.Final/hibernate-core-5.2.2.Final.jar:/Users/vdonets/.m2/repository/org/jboss/logging/jboss-logging/3.3.0.Final/jboss-logging-3.3.0.Final.jar:/Users/vdonets/.m2/repository/org/hibernate/javax/persistence/hibernate-jpa-2.1-api/1.0.0.Final/hibernate-jpa-2.1-api-1.0.0.Final.jar:/Users/vdonets/.m2/repository/org/javassist/javassist/3.20.0-GA/javassist-3.20.0-GA.jar:/Users/vdonets/.m2/repository/antlr/antlr/2.7.7/antlr-2.7.7.jar:/Users/vdonets/.m2/repository/org/apache/geronimo/specs/geronimo-jta_1.1_spec/1.1.1/geronimo-jta_1.1_spec-1.1.1.jar:/Users/vdonets/.m2/repository/org/jboss/jandex/2.0.0.Final/jandex-2.0.0.Final.jar:/Users/vdonets/.m2/repository/com/fasterxml/classmate/1.3.0/classmate-1.3.0.jar:/Users/vdonets/.m2/repository/dom4j/dom4j/1.6.1/dom4j-1.6.1.jar:/Users/vdonets/.m2/repository/org/hibernate/common/hibernate-commons-annotations/5.0.1.Final/hibernate-commons-annotations-5.0.1.Final.jar:/Users/vdonets/.m2/repository/javax/enterprise/cdi-api/1.1/cdi-api-1.1.jar:/Users/vdonets/.m2/repository/javax/el/el-api/2.2/el-api-2.2.jar:/Users/vdonets/.m2/repository/org/jboss/spec/javax/interceptor/jboss-interceptors-api_1.1_spec/1.0.0.Beta1/jboss-interceptors-api_1.1_spec-1.0.0.Beta1.jar:/Users/vdonets/.m2/repository/javax/annotation/jsr250-api/1.0/jsr250-api-1.0.jar:/Users/vdonets/.m2/repository/javax/inject/javax.inject/1/javax.inject-1.jar:/Users/vdonets/.m2/repository/mysql/mysql-connector-java/8.0.29/mysql-connector-java-8.0.29.jar:/Users/vdonets/.m2/repository/com/google/protobuf/protobuf-java/3.19.4/protobuf-java-3.19.4.jar:/Users/vdonets/.m2/repository/jakarta/xml/bind/jakarta.xml.bind-api/2.3.2/jakarta.xml.bind-api-2.3.2.jar:/Users/vdonets/.m2/repository/jakarta/activation/jakarta.activation-api/1.2.1/jakarta.activation-api-1.2.1.jar:/Users/vdonets/.m2/repository/org/glassfish/jaxb/jaxb-runtime/2.3.2/jaxb-runtime-2.3.2.jar:/Users/vdonets/.m2/repository/org/glassfish/jaxb/txw2/2.3.2/txw2-2.3.2.jar:/Users/vdonets/.m2/repository/com/sun/istack/istack-commons-runtime/3.0.8/istack-commons-runtime-3.0.8.jar:/Users/vdonets/.m2/repository/org/jvnet/staxex/stax-ex/1.8.1/stax-ex-1.8.1.jar:/Users/vdonets/.m2/repository/com/sun/xml/fastinfoset/FastInfoset/1.2.16/FastInfoset-1.2.16.jar:/Users/vdonets/.m2/repository/log4j/log4j/1.2.14/log4j-1.2.14.jar:/Applications/IntelliJ IDEA.app/Contents/lib/idea_rt.jar:/Users/vdonets/Library/Caches/JetBrains/IntelliJIdea2022.1/captureAgent/debugger-agent.jar, java.vm.vendor=Eclipse OpenJ9, sun.arch.data.model=64, com.ibm.vm.bitmode=64, hbm2ddl.auto=create, user.variant=, com.ibm.oti.vm.library.version=29, java.vendor.url=https://www.ibm.com/semeru-runtimes, user.timezone=Europe/Warsaw, java.vm.specification.version=11, os.name=Mac OS X, sun.java.launcher=SUN_STANDARD, user.country=US, sun.boot.library.path=/Users/vdonets/Library/Java/JavaVirtualMachines/semeru-11.0.15/Contents/Home/lib/default:/Users/vdonets/Library/Java/JavaVirtualMachines/semeru-11.0.15/Contents/Home/lib, sun.java.command=org.example.Main, sun.cpu.endian=little, user.home=/Users/vdonets, user.language=en, java.specification.vendor=Oracle Corporation, java.version.date=2022-04-19, java.home=/Users/vdonets/Library/Java/JavaVirtualMachines/semeru-11.0.15/Contents/Home, ibm.signalhandling.rs=false, jdk.extensions.name=Extensions for OpenJDK for Eclipse OpenJ9, file.separator=/, line.separator=
, java.specification.name=Java Platform API Specification, java.vm.specification.vendor=Oracle Corporation, intellij.debug.agent=true, java.compiler=j9jit29, com.ibm.util.extralibs.properties=, java.awt.graphicsenv=sun.awt.CGraphicsEnvironment, com.ibm.oti.configuration=scar, com.ibm.oti.shared.enabled=false, hibernate.hbm2ddl.auto=create, com.ibm.oti.vm.bootstrap.library.path=/Users/vdonets/Library/Java/JavaVirtualMachines/semeru-11.0.15/Contents/Home/lib/default:/Users/vdonets/Library/Java/JavaVirtualMachines/semeru-11.0.15/Contents/Home/lib, com.ibm.cpu.endian=little, java.fullversion=11.0.15-ea+10
JRE 11 Mac OS X aarch64-64-Bit 20220422_36 (JIT enabled, AOT enabled)
OpenJ9   - 9a84ec34e
OMR      - ab24b6666
JCL      - b7b5b42ea6 based on jdk-11.0.15+10, java.runtime.version=11.0.15-ea+10, user.name=vdonets, path.separator=:, hibernate.connection.username=root, os.version=12.5, java.runtime.name=IBM Semeru Runtime Open Edition, hibernate.connection.url=jdbc:mysql://localhost:3306/classicmodels?serverTimezone=UTC, connection.pool_size=5, ibm.signalhandling.sigint=true, file.encoding=UTF-8, java.vm.name=Eclipse OpenJ9 VM, hibernate.show_sql=true, java.vendor.version=11.0.15.0, ibm.signalhandling.sigchain=true, show_sql=true, hibernate.connection.driver_class=com.mysql.cj.jdbc.Driver, java.vendor.url.bug=https://github.com/ibmruntimes/Semeru-Runtimes/issues, java.io.tmpdir=/var/folders/wv/6c3_66yd6kq3r7z477kwz4lr0000gn/T/, java.version=11.0.15-ea, jboss.modules.system.pkgs=com.intellij.rt, com.ibm.system.agent.path=/Users/vdonets/Library/Java/JavaVirtualMachines/semeru-11.0.15/Contents/Home/lib, user.dir=/Users/vdonets/IdeaProjects/testmaven, os.arch=aarch64, java.vm.specification.name=Java Virtual Machine Specification, java.awt.printerjob=sun.lwawt.macosx.CPrinterJob, hibernate.connection.password=****, os.encoding=UTF-8, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@f0c6beb, java.library.path=/Users/vdonets/Library/Java/JavaVirtualMachines/semeru-11.0.15/Contents/Home/lib/default:/Users/vdonets/Library/Java/JavaVirtualMachines/semeru-11.0.15/Contents/Home/lib:/usr/lib, java.vendor=IBM Corporation, java.vm.info=JRE 11 Mac OS X aarch64-64-Bit 20220422_36 (JIT enabled, AOT enabled)
OpenJ9   - 9a84ec34e
OMR      - ab24b6666
JCL      - b7b5b42ea6 based on jdk-11.0.15+10, java.vm.version=openj9-0.32.0, ibm.system.encoding=UTF-8, hibernate.bytecode.use_reflection_optimizer=false, com.ibm.jcl.checkClassPath=, sun.io.unicode.encoding=UnicodeLittle, hibernate.connection.pool_size=5, java.class.version=55.0}
DEBUG 2022-09-08 19:44:43,154 [main][JaccIntegrator.java:80] : Skipping JACC integration as it was not enabled
DEBUG 2022-09-08 19:44:43,156 [main][SessionFactoryImpl.java:292] : Instantiated session factory
DEBUG 2022-09-08 19:44:43,176 [main][ClassLoaderAccessImpl.java:55] : Not known whether passed class name [org.example.models.Photo] is safe
DEBUG 2022-09-08 19:44:43,176 [main][ClassLoaderAccessImpl.java:57] : No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.models.Photo
DEBUG 2022-09-08 19:44:43,181 [main][ClassLoaderAccessImpl.java:55] : Not known whether passed class name [org.example.models.Photo] is safe
DEBUG 2022-09-08 19:44:43,182 [main][ClassLoaderAccessImpl.java:57] : No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.models.Photo
DEBUG 2022-09-08 19:44:43,213 [main][ClassLoaderAccessImpl.java:55] : Not known whether passed class name [org.example.models.Book] is safe
DEBUG 2022-09-08 19:44:43,214 [main][ClassLoaderAccessImpl.java:57] : No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.models.Book
DEBUG 2022-09-08 19:44:43,214 [main][ClassLoaderAccessImpl.java:55] : Not known whether passed class name [org.example.models.Book] is safe
DEBUG 2022-09-08 19:44:43,216 [main][ClassLoaderAccessImpl.java:57] : No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.models.Book
DEBUG 2022-09-08 19:44:43,218 [main][ClassLoaderAccessImpl.java:55] : Not known whether passed class name [org.example.models.Author] is safe
DEBUG 2022-09-08 19:44:43,219 [main][ClassLoaderAccessImpl.java:57] : No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.models.Author
DEBUG 2022-09-08 19:44:43,219 [main][ClassLoaderAccessImpl.java:55] : Not known whether passed class name [org.example.models.Author] is safe
DEBUG 2022-09-08 19:44:43,219 [main][ClassLoaderAccessImpl.java:57] : No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.models.Author
DEBUG 2022-09-08 19:44:43,226 [main][AbstractCollectionPersister.java:670] : Static SQL for collection: org.example.models.Book.authors
DEBUG 2022-09-08 19:44:43,226 [main][AbstractCollectionPersister.java:672] :  Row insert: insert into Authors_Books (author_id, book_id) values (?, ?)
DEBUG 2022-09-08 19:44:43,226 [main][AbstractCollectionPersister.java:675] :  Row update: update Authors_Books set book_id=? where author_id=? and book_id=?
DEBUG 2022-09-08 19:44:43,226 [main][AbstractCollectionPersister.java:678] :  Row delete: delete from Authors_Books where author_id=? and book_id=?
DEBUG 2022-09-08 19:44:43,226 [main][AbstractCollectionPersister.java:681] :  One-shot delete: delete from Authors_Books where author_id=?
DEBUG 2022-09-08 19:44:43,227 [main][AbstractCollectionPersister.java:670] : Static SQL for collection: org.example.models.Author.photos
DEBUG 2022-09-08 19:44:43,227 [main][AbstractCollectionPersister.java:672] :  Row insert: update Photo set author_id=? where id=?
DEBUG 2022-09-08 19:44:43,227 [main][AbstractCollectionPersister.java:675] :  Row update: update Photo set  where id=?
DEBUG 2022-09-08 19:44:43,227 [main][AbstractCollectionPersister.java:678] :  Row delete: update Photo set author_id=null where author_id=? and id=?
DEBUG 2022-09-08 19:44:43,227 [main][AbstractCollectionPersister.java:681] :  One-shot delete: update Photo set author_id=null where author_id=?
DEBUG 2022-09-08 19:44:43,228 [main][AbstractCollectionPersister.java:670] : Static SQL for collection: org.example.models.Author.books
DEBUG 2022-09-08 19:44:43,228 [main][AbstractCollectionPersister.java:672] :  Row insert: insert into Authors_Books (book_id, author_id) values (?, ?)
DEBUG 2022-09-08 19:44:43,228 [main][AbstractCollectionPersister.java:675] :  Row update: update Authors_Books set author_id=? where book_id=? and author_id=?
DEBUG 2022-09-08 19:44:43,228 [main][AbstractCollectionPersister.java:678] :  Row delete: delete from Authors_Books where book_id=? and author_id=?
DEBUG 2022-09-08 19:44:43,228 [main][AbstractCollectionPersister.java:681] :  One-shot delete: delete from Authors_Books where book_id=?
DEBUG 2022-09-08 19:44:43,230 [main][AbstractEntityPersister.java:3529] : Static SQL for entity: org.example.models.Photo
DEBUG 2022-09-08 19:44:43,230 [main][AbstractEntityPersister.java:3534] :  Version select: select id from Photo where id =?
DEBUG 2022-09-08 19:44:43,230 [main][AbstractEntityPersister.java:3537] :  Snapshot select: select photo_.id, photo_.author_id as author_i3_3_, photo_.file_name as file_nam2_3_ from Photo photo_ where photo_.id=?
DEBUG 2022-09-08 19:44:43,230 [main][DelegatingBasicLogger.java:394] :  Insert 0: insert into Photo (author_id, file_name, id) values (?, ?, ?)
DEBUG 2022-09-08 19:44:43,230 [main][DelegatingBasicLogger.java:394] :  Update 0: update Photo set author_id=?, file_name=? where id=?
DEBUG 2022-09-08 19:44:43,231 [main][DelegatingBasicLogger.java:394] :  Delete 0: delete from Photo where id=?
DEBUG 2022-09-08 19:44:43,231 [main][AbstractEntityPersister.java:3545] :  Identity insert: insert into Photo (author_id, file_name) values (?, ?)
DEBUG 2022-09-08 19:44:43,239 [main][QuerySpacesImpl.java:174] : Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@348c6641]
DEBUG 2022-09-08 19:44:43,239 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : author
DEBUG 2022-09-08 19:44:43,241 [main][QuerySpacesImpl.java:174] : Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@da9bf852]
DEBUG 2022-09-08 19:44:43,241 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : author.books
DEBUG 2022-09-08 19:44:43,242 [main][QuerySpacesImpl.java:174] : Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@2ccdeb63]
DEBUG 2022-09-08 19:44:43,242 [main][QuerySpacesImpl.java:174] : Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7179a6c5]
DEBUG 2022-09-08 19:44:43,243 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : author.name
DEBUG 2022-09-08 19:44:43,243 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : author.photos
DEBUG 2022-09-08 19:44:43,243 [main][MetamodelGraphWalker.java:145] : Property path deemed to be circular : author.photos
DEBUG 2022-09-08 19:44:43,244 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : author.salary
DEBUG 2022-09-08 19:44:43,244 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : fileName
DEBUG 2022-09-08 19:44:43,245 [main][FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150] : Building LoadPlan...
DEBUG 2022-09-08 19:44:43,249 [main][LoadQueryJoinAndFetchProcessor.java:100] : processing queryspace <gen:0>
DEBUG 2022-09-08 19:44:43,251 [main][LoadPlanTreePrinter.java:55] : LoadPlan(entity=org.example.models.Photo)
    - Returns
       - EntityReturnImpl(entity=org.example.models.Photo, querySpaceUid=<gen:0>, path=org.example.models.Photo)
          - EntityAttributeFetchImpl(entity=org.example.models.Author, querySpaceUid=<gen:1>, path=org.example.models.Photo.author)
             - CollectionAttributeFetchImpl(collection=org.example.models.Author.books, querySpaceUid=<gen:2>, path=org.example.models.Photo.author.books)
                - (collection element) CollectionFetchableElementEntityGraph(entity=org.example.models.Book, querySpaceUid=<gen:3>, path=org.example.models.Photo.author.books.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=org.example.models.Photo)
          - SQL table alias mapping - photo0_
          - alias suffix - 0_
          - suffixed key columns - {id1_3_0_}
          - JOIN (JoinDefinedByMetadata(author)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=org.example.models.Author)
                - SQL table alias mapping - author1_
                - alias suffix - 1_
                - suffixed key columns - {id1_0_1_}

DEBUG 2022-09-08 19:44:43,252 [main][EntityLoader.java:115] : Static select for entity org.example.models.Photo [NONE]: select photo0_.id as id1_3_0_, photo0_.author_id as author_i3_3_0_, photo0_.file_name as file_nam2_3_0_, author1_.id as id1_0_1_, author1_.name as name2_0_1_, author1_.salary as salary3_0_1_ from Photo photo0_ inner join Author author1_ on photo0_.author_id=author1_.id where photo0_.id=?
DEBUG 2022-09-08 19:44:43,252 [main][QuerySpacesImpl.java:174] : Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2be4d4dc]
DEBUG 2022-09-08 19:44:43,252 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : author
DEBUG 2022-09-08 19:44:43,253 [main][QuerySpacesImpl.java:174] : Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@c6dc82cf]
DEBUG 2022-09-08 19:44:43,253 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : author.books
DEBUG 2022-09-08 19:44:43,253 [main][QuerySpacesImpl.java:174] : Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@d61cec0]
DEBUG 2022-09-08 19:44:43,253 [main][QuerySpacesImpl.java:174] : Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@13b42046]
DEBUG 2022-09-08 19:44:43,253 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : author.name
DEBUG 2022-09-08 19:44:43,253 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : author.photos
DEBUG 2022-09-08 19:44:43,253 [main][MetamodelGraphWalker.java:145] : Property path deemed to be circular : author.photos
DEBUG 2022-09-08 19:44:43,254 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : author.salary
DEBUG 2022-09-08 19:44:43,254 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : fileName
DEBUG 2022-09-08 19:44:43,254 [main][FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150] : Building LoadPlan...
DEBUG 2022-09-08 19:44:43,254 [main][LoadQueryJoinAndFetchProcessor.java:100] : processing queryspace <gen:0>
DEBUG 2022-09-08 19:44:43,255 [main][LoadPlanTreePrinter.java:55] : LoadPlan(entity=org.example.models.Photo)
    - Returns
       - EntityReturnImpl(entity=org.example.models.Photo, querySpaceUid=<gen:0>, path=org.example.models.Photo)
          - EntityAttributeFetchImpl(entity=org.example.models.Author, querySpaceUid=<gen:1>, path=org.example.models.Photo.author)
             - CollectionAttributeFetchImpl(collection=org.example.models.Author.books, querySpaceUid=<gen:2>, path=org.example.models.Photo.author.books)
                - (collection element) CollectionFetchableElementEntityGraph(entity=org.example.models.Book, querySpaceUid=<gen:3>, path=org.example.models.Photo.author.books.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=org.example.models.Photo)
          - SQL table alias mapping - photo0_
          - alias suffix - 0_
          - suffixed key columns - {id1_3_0_}
          - JOIN (JoinDefinedByMetadata(author)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=org.example.models.Author)
                - SQL table alias mapping - author1_
                - alias suffix - 1_
                - suffixed key columns - {id1_0_1_}

DEBUG 2022-09-08 19:44:43,256 [main][EntityLoader.java:115] : Static select for entity org.example.models.Photo [READ]: select photo0_.id as id1_3_0_, photo0_.author_id as author_i3_3_0_, photo0_.file_name as file_nam2_3_0_, author1_.id as id1_0_1_, author1_.name as name2_0_1_, author1_.salary as salary3_0_1_ from Photo photo0_ inner join Author author1_ on photo0_.author_id=author1_.id where photo0_.id=?
DEBUG 2022-09-08 19:44:43,256 [main][QuerySpacesImpl.java:174] : Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@f48d4619]
DEBUG 2022-09-08 19:44:43,256 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : author
DEBUG 2022-09-08 19:44:43,256 [main][QuerySpacesImpl.java:174] : Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@55cc3c6c]
DEBUG 2022-09-08 19:44:43,256 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : fileName
DEBUG 2022-09-08 19:44:43,257 [main][FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150] : Building LoadPlan...
DEBUG 2022-09-08 19:44:43,257 [main][LoadQueryJoinAndFetchProcessor.java:100] : processing queryspace <gen:0>
DEBUG 2022-09-08 19:44:43,257 [main][LoadPlanTreePrinter.java:55] : LoadPlan(entity=org.example.models.Photo)
    - Returns
       - EntityReturnImpl(entity=org.example.models.Photo, querySpaceUid=<gen:0>, path=org.example.models.Photo)
          - EntityAttributeFetchImpl(entity=org.example.models.Author, querySpaceUid=<gen:1>, path=org.example.models.Photo.author)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=org.example.models.Photo)
          - SQL table alias mapping - photo0_
          - alias suffix - 0_
          - suffixed key columns - {id1_3_0_}

DEBUG 2022-09-08 19:44:43,257 [main][EntityLoader.java:115] : Static select for entity org.example.models.Photo [UPGRADE]: select photo0_.id as id1_3_0_, photo0_.author_id as author_i3_3_0_, photo0_.file_name as file_nam2_3_0_ from Photo photo0_ where photo0_.id=? for update
DEBUG 2022-09-08 19:44:43,258 [main][QuerySpacesImpl.java:174] : Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@faf4515c]
DEBUG 2022-09-08 19:44:43,258 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : author
DEBUG 2022-09-08 19:44:43,258 [main][QuerySpacesImpl.java:174] : Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2eb02035]
DEBUG 2022-09-08 19:44:43,258 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : fileName
DEBUG 2022-09-08 19:44:43,258 [main][FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150] : Building LoadPlan...
DEBUG 2022-09-08 19:44:43,259 [main][LoadQueryJoinAndFetchProcessor.java:100] : processing queryspace <gen:0>
DEBUG 2022-09-08 19:44:43,259 [main][LoadPlanTreePrinter.java:55] : LoadPlan(entity=org.example.models.Photo)
    - Returns
       - EntityReturnImpl(entity=org.example.models.Photo, querySpaceUid=<gen:0>, path=org.example.models.Photo)
          - EntityAttributeFetchImpl(entity=org.example.models.Author, querySpaceUid=<gen:1>, path=org.example.models.Photo.author)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=org.example.models.Photo)
          - SQL table alias mapping - photo0_
          - alias suffix - 0_
          - suffixed key columns - {id1_3_0_}

DEBUG 2022-09-08 19:44:43,259 [main][EntityLoader.java:115] : Static select for entity org.example.models.Photo [UPGRADE_NOWAIT]: select photo0_.id as id1_3_0_, photo0_.author_id as author_i3_3_0_, photo0_.file_name as file_nam2_3_0_ from Photo photo0_ where photo0_.id=? for update
DEBUG 2022-09-08 19:44:43,259 [main][QuerySpacesImpl.java:174] : Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@b36e192c]
DEBUG 2022-09-08 19:44:43,259 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : author
DEBUG 2022-09-08 19:44:43,260 [main][QuerySpacesImpl.java:174] : Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@c628ee00]
DEBUG 2022-09-08 19:44:43,260 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : fileName
DEBUG 2022-09-08 19:44:43,260 [main][FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150] : Building LoadPlan...
DEBUG 2022-09-08 19:44:43,260 [main][LoadQueryJoinAndFetchProcessor.java:100] : processing queryspace <gen:0>
DEBUG 2022-09-08 19:44:43,260 [main][LoadPlanTreePrinter.java:55] : LoadPlan(entity=org.example.models.Photo)
    - Returns
       - EntityReturnImpl(entity=org.example.models.Photo, querySpaceUid=<gen:0>, path=org.example.models.Photo)
          - EntityAttributeFetchImpl(entity=org.example.models.Author, querySpaceUid=<gen:1>, path=org.example.models.Photo.author)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=org.example.models.Photo)
          - SQL table alias mapping - photo0_
          - alias suffix - 0_
          - suffixed key columns - {id1_3_0_}

DEBUG 2022-09-08 19:44:43,261 [main][EntityLoader.java:115] : Static select for entity org.example.models.Photo [UPGRADE_SKIPLOCKED]: select photo0_.id as id1_3_0_, photo0_.author_id as author_i3_3_0_, photo0_.file_name as file_nam2_3_0_ from Photo photo0_ where photo0_.id=? for update
DEBUG 2022-09-08 19:44:43,261 [main][QuerySpacesImpl.java:174] : Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@827a1ee3]
DEBUG 2022-09-08 19:44:43,261 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : author
DEBUG 2022-09-08 19:44:43,261 [main][QuerySpacesImpl.java:174] : Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7bbf2537]
DEBUG 2022-09-08 19:44:43,261 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : fileName
DEBUG 2022-09-08 19:44:43,261 [main][FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150] : Building LoadPlan...
DEBUG 2022-09-08 19:44:43,262 [main][LoadQueryJoinAndFetchProcessor.java:100] : processing queryspace <gen:0>
DEBUG 2022-09-08 19:44:43,262 [main][LoadPlanTreePrinter.java:55] : LoadPlan(entity=org.example.models.Photo)
    - Returns
       - EntityReturnImpl(entity=org.example.models.Photo, querySpaceUid=<gen:0>, path=org.example.models.Photo)
          - EntityAttributeFetchImpl(entity=org.example.models.Author, querySpaceUid=<gen:1>, path=org.example.models.Photo.author)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=org.example.models.Photo)
          - SQL table alias mapping - photo0_
          - alias suffix - 0_
          - suffixed key columns - {id1_3_0_}

DEBUG 2022-09-08 19:44:43,262 [main][EntityLoader.java:115] : Static select for entity org.example.models.Photo [FORCE]: select photo0_.id as id1_3_0_, photo0_.author_id as author_i3_3_0_, photo0_.file_name as file_nam2_3_0_ from Photo photo0_ where photo0_.id=? for update
DEBUG 2022-09-08 19:44:43,262 [main][QuerySpacesImpl.java:174] : Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1e856e9d]
DEBUG 2022-09-08 19:44:43,262 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : author
DEBUG 2022-09-08 19:44:43,263 [main][QuerySpacesImpl.java:174] : Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@b77c189b]
DEBUG 2022-09-08 19:44:43,264 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : fileName
DEBUG 2022-09-08 19:44:43,264 [main][FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150] : Building LoadPlan...
DEBUG 2022-09-08 19:44:43,264 [main][LoadQueryJoinAndFetchProcessor.java:100] : processing queryspace <gen:0>
DEBUG 2022-09-08 19:44:43,264 [main][LoadPlanTreePrinter.java:55] : LoadPlan(entity=org.example.models.Photo)
    - Returns
       - EntityReturnImpl(entity=org.example.models.Photo, querySpaceUid=<gen:0>, path=org.example.models.Photo)
          - EntityAttributeFetchImpl(entity=org.example.models.Author, querySpaceUid=<gen:1>, path=org.example.models.Photo.author)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=org.example.models.Photo)
          - SQL table alias mapping - photo0_
          - alias suffix - 0_
          - suffixed key columns - {id1_3_0_}

DEBUG 2022-09-08 19:44:43,264 [main][EntityLoader.java:115] : Static select for entity org.example.models.Photo [PESSIMISTIC_READ]: select photo0_.id as id1_3_0_, photo0_.author_id as author_i3_3_0_, photo0_.file_name as file_nam2_3_0_ from Photo photo0_ where photo0_.id=? lock in share mode
DEBUG 2022-09-08 19:44:43,265 [main][QuerySpacesImpl.java:174] : Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@695c53d]
DEBUG 2022-09-08 19:44:43,265 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : author
DEBUG 2022-09-08 19:44:43,265 [main][QuerySpacesImpl.java:174] : Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@72fd5f8]
DEBUG 2022-09-08 19:44:43,265 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : fileName
DEBUG 2022-09-08 19:44:43,265 [main][FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150] : Building LoadPlan...
DEBUG 2022-09-08 19:44:43,265 [main][LoadQueryJoinAndFetchProcessor.java:100] : processing queryspace <gen:0>
DEBUG 2022-09-08 19:44:43,266 [main][LoadPlanTreePrinter.java:55] : LoadPlan(entity=org.example.models.Photo)
    - Returns
       - EntityReturnImpl(entity=org.example.models.Photo, querySpaceUid=<gen:0>, path=org.example.models.Photo)
          - EntityAttributeFetchImpl(entity=org.example.models.Author, querySpaceUid=<gen:1>, path=org.example.models.Photo.author)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=org.example.models.Photo)
          - SQL table alias mapping - photo0_
          - alias suffix - 0_
          - suffixed key columns - {id1_3_0_}

DEBUG 2022-09-08 19:44:43,266 [main][EntityLoader.java:115] : Static select for entity org.example.models.Photo [PESSIMISTIC_WRITE]: select photo0_.id as id1_3_0_, photo0_.author_id as author_i3_3_0_, photo0_.file_name as file_nam2_3_0_ from Photo photo0_ where photo0_.id=? for update
DEBUG 2022-09-08 19:44:43,266 [main][QuerySpacesImpl.java:174] : Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@bce521f]
DEBUG 2022-09-08 19:44:43,266 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : author
DEBUG 2022-09-08 19:44:43,266 [main][QuerySpacesImpl.java:174] : Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@31d6297d]
DEBUG 2022-09-08 19:44:43,267 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : fileName
DEBUG 2022-09-08 19:44:43,267 [main][FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150] : Building LoadPlan...
DEBUG 2022-09-08 19:44:43,267 [main][LoadQueryJoinAndFetchProcessor.java:100] : processing queryspace <gen:0>
DEBUG 2022-09-08 19:44:43,267 [main][LoadPlanTreePrinter.java:55] : LoadPlan(entity=org.example.models.Photo)
    - Returns
       - EntityReturnImpl(entity=org.example.models.Photo, querySpaceUid=<gen:0>, path=org.example.models.Photo)
          - EntityAttributeFetchImpl(entity=org.example.models.Author, querySpaceUid=<gen:1>, path=org.example.models.Photo.author)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=org.example.models.Photo)
          - SQL table alias mapping - photo0_
          - alias suffix - 0_
          - suffixed key columns - {id1_3_0_}

DEBUG 2022-09-08 19:44:43,268 [main][EntityLoader.java:115] : Static select for entity org.example.models.Photo [PESSIMISTIC_FORCE_INCREMENT]: select photo0_.id as id1_3_0_, photo0_.author_id as author_i3_3_0_, photo0_.file_name as file_nam2_3_0_ from Photo photo0_ where photo0_.id=? for update
DEBUG 2022-09-08 19:44:43,268 [main][QuerySpacesImpl.java:174] : Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@c9797588]
DEBUG 2022-09-08 19:44:43,268 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : author
DEBUG 2022-09-08 19:44:43,268 [main][QuerySpacesImpl.java:174] : Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6aab1b6e]
DEBUG 2022-09-08 19:44:43,268 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : fileName
DEBUG 2022-09-08 19:44:43,268 [main][FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150] : Building LoadPlan...
DEBUG 2022-09-08 19:44:43,269 [main][LoadQueryJoinAndFetchProcessor.java:100] : processing queryspace <gen:0>
DEBUG 2022-09-08 19:44:43,269 [main][LoadPlanTreePrinter.java:55] : LoadPlan(entity=org.example.models.Photo)
    - Returns
       - EntityReturnImpl(entity=org.example.models.Photo, querySpaceUid=<gen:0>, path=org.example.models.Photo)
          - EntityAttributeFetchImpl(entity=org.example.models.Author, querySpaceUid=<gen:1>, path=org.example.models.Photo.author)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=org.example.models.Photo)
          - SQL table alias mapping - photo0_
          - alias suffix - 0_
          - suffixed key columns - {id1_3_0_}

DEBUG 2022-09-08 19:44:43,269 [main][EntityLoader.java:115] : Static select for entity org.example.models.Photo [OPTIMISTIC]: select photo0_.id as id1_3_0_, photo0_.author_id as author_i3_3_0_, photo0_.file_name as file_nam2_3_0_ from Photo photo0_ where photo0_.id=?
DEBUG 2022-09-08 19:44:43,269 [main][QuerySpacesImpl.java:174] : Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@de8541b]
DEBUG 2022-09-08 19:44:43,269 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : author
DEBUG 2022-09-08 19:44:43,270 [main][QuerySpacesImpl.java:174] : Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@f5e18a3c]
DEBUG 2022-09-08 19:44:43,270 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : fileName
DEBUG 2022-09-08 19:44:43,270 [main][FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150] : Building LoadPlan...
DEBUG 2022-09-08 19:44:43,270 [main][LoadQueryJoinAndFetchProcessor.java:100] : processing queryspace <gen:0>
DEBUG 2022-09-08 19:44:43,270 [main][LoadPlanTreePrinter.java:55] : LoadPlan(entity=org.example.models.Photo)
    - Returns
       - EntityReturnImpl(entity=org.example.models.Photo, querySpaceUid=<gen:0>, path=org.example.models.Photo)
          - EntityAttributeFetchImpl(entity=org.example.models.Author, querySpaceUid=<gen:1>, path=org.example.models.Photo.author)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=org.example.models.Photo)
          - SQL table alias mapping - photo0_
          - alias suffix - 0_
          - suffixed key columns - {id1_3_0_}

DEBUG 2022-09-08 19:44:43,271 [main][EntityLoader.java:115] : Static select for entity org.example.models.Photo [OPTIMISTIC_FORCE_INCREMENT]: select photo0_.id as id1_3_0_, photo0_.author_id as author_i3_3_0_, photo0_.file_name as file_nam2_3_0_ from Photo photo0_ where photo0_.id=?
DEBUG 2022-09-08 19:44:43,277 [main][CascadeEntityLoader.java:38] : Static select for action ACTION_MERGE on entity org.example.models.Photo: select photo0_.id as id1_3_0_, photo0_.author_id as author_i3_3_0_, photo0_.file_name as file_nam2_3_0_ from Photo photo0_ where photo0_.id=?
DEBUG 2022-09-08 19:44:43,278 [main][CascadeEntityLoader.java:38] : Static select for action ACTION_REFRESH on entity org.example.models.Photo: select photo0_.id as id1_3_0_, photo0_.author_id as author_i3_3_0_, photo0_.file_name as file_nam2_3_0_ from Photo photo0_ where photo0_.id=?
DEBUG 2022-09-08 19:44:43,278 [main][AbstractEntityPersister.java:3529] : Static SQL for entity: org.example.models.Book
DEBUG 2022-09-08 19:44:43,278 [main][AbstractEntityPersister.java:3534] :  Version select: select id from Book where id =?
DEBUG 2022-09-08 19:44:43,278 [main][AbstractEntityPersister.java:3537] :  Snapshot select: select book_.id, book_.name as name2_2_ from Book book_ where book_.id=?
DEBUG 2022-09-08 19:44:43,278 [main][DelegatingBasicLogger.java:394] :  Insert 0: insert into Book (name, id) values (?, ?)
DEBUG 2022-09-08 19:44:43,278 [main][DelegatingBasicLogger.java:394] :  Update 0: update Book set name=? where id=?
DEBUG 2022-09-08 19:44:43,278 [main][DelegatingBasicLogger.java:394] :  Delete 0: delete from Book where id=?
DEBUG 2022-09-08 19:44:43,279 [main][QuerySpacesImpl.java:174] : Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@12551750]
DEBUG 2022-09-08 19:44:43,279 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : authors
DEBUG 2022-09-08 19:44:43,279 [main][QuerySpacesImpl.java:174] : Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@5e6c38a9]
DEBUG 2022-09-08 19:44:43,279 [main][QuerySpacesImpl.java:174] : Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@b2a252d8]
DEBUG 2022-09-08 19:44:43,279 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : name
DEBUG 2022-09-08 19:44:43,279 [main][FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150] : Building LoadPlan...
DEBUG 2022-09-08 19:44:43,279 [main][LoadQueryJoinAndFetchProcessor.java:100] : processing queryspace <gen:0>
DEBUG 2022-09-08 19:44:43,280 [main][LoadPlanTreePrinter.java:55] : LoadPlan(entity=org.example.models.Book)
    - Returns
       - EntityReturnImpl(entity=org.example.models.Book, querySpaceUid=<gen:0>, path=org.example.models.Book)
          - CollectionAttributeFetchImpl(collection=org.example.models.Book.authors, querySpaceUid=<gen:1>, path=org.example.models.Book.authors)
             - (collection element) CollectionFetchableElementEntityGraph(entity=org.example.models.Author, querySpaceUid=<gen:2>, path=org.example.models.Book.authors.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=org.example.models.Book)
          - SQL table alias mapping - book0_
          - alias suffix - 0_
          - suffixed key columns - {id1_2_0_}

DEBUG 2022-09-08 19:44:43,280 [main][EntityLoader.java:115] : Static select for entity org.example.models.Book [NONE]: select book0_.id as id1_2_0_, book0_.name as name2_2_0_ from Book book0_ where book0_.id=?
DEBUG 2022-09-08 19:44:43,280 [main][QuerySpacesImpl.java:174] : Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@b42d0117]
DEBUG 2022-09-08 19:44:43,280 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : authors
DEBUG 2022-09-08 19:44:43,280 [main][QuerySpacesImpl.java:174] : Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@93c5ea5b]
DEBUG 2022-09-08 19:44:43,280 [main][QuerySpacesImpl.java:174] : Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@c51a0303]
DEBUG 2022-09-08 19:44:43,281 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : name
DEBUG 2022-09-08 19:44:43,281 [main][FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150] : Building LoadPlan...
DEBUG 2022-09-08 19:44:43,281 [main][LoadQueryJoinAndFetchProcessor.java:100] : processing queryspace <gen:0>
DEBUG 2022-09-08 19:44:43,281 [main][LoadPlanTreePrinter.java:55] : LoadPlan(entity=org.example.models.Book)
    - Returns
       - EntityReturnImpl(entity=org.example.models.Book, querySpaceUid=<gen:0>, path=org.example.models.Book)
          - CollectionAttributeFetchImpl(collection=org.example.models.Book.authors, querySpaceUid=<gen:1>, path=org.example.models.Book.authors)
             - (collection element) CollectionFetchableElementEntityGraph(entity=org.example.models.Author, querySpaceUid=<gen:2>, path=org.example.models.Book.authors.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=org.example.models.Book)
          - SQL table alias mapping - book0_
          - alias suffix - 0_
          - suffixed key columns - {id1_2_0_}

DEBUG 2022-09-08 19:44:43,281 [main][EntityLoader.java:115] : Static select for entity org.example.models.Book [READ]: select book0_.id as id1_2_0_, book0_.name as name2_2_0_ from Book book0_ where book0_.id=?
DEBUG 2022-09-08 19:44:43,281 [main][QuerySpacesImpl.java:174] : Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@a790e67d]
DEBUG 2022-09-08 19:44:43,282 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : authors
DEBUG 2022-09-08 19:44:43,282 [main][QuerySpacesImpl.java:174] : Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@a2ea7193]
DEBUG 2022-09-08 19:44:43,282 [main][QuerySpacesImpl.java:174] : Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@b945422f]
DEBUG 2022-09-08 19:44:43,282 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : name
DEBUG 2022-09-08 19:44:43,282 [main][FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150] : Building LoadPlan...
DEBUG 2022-09-08 19:44:43,282 [main][LoadQueryJoinAndFetchProcessor.java:100] : processing queryspace <gen:0>
DEBUG 2022-09-08 19:44:43,283 [main][LoadPlanTreePrinter.java:55] : LoadPlan(entity=org.example.models.Book)
    - Returns
       - EntityReturnImpl(entity=org.example.models.Book, querySpaceUid=<gen:0>, path=org.example.models.Book)
          - CollectionAttributeFetchImpl(collection=org.example.models.Book.authors, querySpaceUid=<gen:1>, path=org.example.models.Book.authors)
             - (collection element) CollectionFetchableElementEntityGraph(entity=org.example.models.Author, querySpaceUid=<gen:2>, path=org.example.models.Book.authors.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=org.example.models.Book)
          - SQL table alias mapping - book0_
          - alias suffix - 0_
          - suffixed key columns - {id1_2_0_}

DEBUG 2022-09-08 19:44:43,284 [main][EntityLoader.java:115] : Static select for entity org.example.models.Book [UPGRADE]: select book0_.id as id1_2_0_, book0_.name as name2_2_0_ from Book book0_ where book0_.id=? for update
DEBUG 2022-09-08 19:44:43,284 [main][QuerySpacesImpl.java:174] : Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1e17334a]
DEBUG 2022-09-08 19:44:43,284 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : authors
DEBUG 2022-09-08 19:44:43,284 [main][QuerySpacesImpl.java:174] : Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@be8e84]
DEBUG 2022-09-08 19:44:43,284 [main][QuerySpacesImpl.java:174] : Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@732677e7]
DEBUG 2022-09-08 19:44:43,284 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : name
DEBUG 2022-09-08 19:44:43,284 [main][FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150] : Building LoadPlan...
DEBUG 2022-09-08 19:44:43,285 [main][LoadQueryJoinAndFetchProcessor.java:100] : processing queryspace <gen:0>
DEBUG 2022-09-08 19:44:43,285 [main][LoadPlanTreePrinter.java:55] : LoadPlan(entity=org.example.models.Book)
    - Returns
       - EntityReturnImpl(entity=org.example.models.Book, querySpaceUid=<gen:0>, path=org.example.models.Book)
          - CollectionAttributeFetchImpl(collection=org.example.models.Book.authors, querySpaceUid=<gen:1>, path=org.example.models.Book.authors)
             - (collection element) CollectionFetchableElementEntityGraph(entity=org.example.models.Author, querySpaceUid=<gen:2>, path=org.example.models.Book.authors.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=org.example.models.Book)
          - SQL table alias mapping - book0_
          - alias suffix - 0_
          - suffixed key columns - {id1_2_0_}

DEBUG 2022-09-08 19:44:43,285 [main][EntityLoader.java:115] : Static select for entity org.example.models.Book [UPGRADE_NOWAIT]: select book0_.id as id1_2_0_, book0_.name as name2_2_0_ from Book book0_ where book0_.id=? for update
DEBUG 2022-09-08 19:44:43,285 [main][QuerySpacesImpl.java:174] : Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@af5a387]
DEBUG 2022-09-08 19:44:43,285 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : authors
DEBUG 2022-09-08 19:44:43,285 [main][QuerySpacesImpl.java:174] : Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@a7604087]
DEBUG 2022-09-08 19:44:43,286 [main][QuerySpacesImpl.java:174] : Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@cb83a01d]
DEBUG 2022-09-08 19:44:43,286 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : name
DEBUG 2022-09-08 19:44:43,286 [main][FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150] : Building LoadPlan...
DEBUG 2022-09-08 19:44:43,286 [main][LoadQueryJoinAndFetchProcessor.java:100] : processing queryspace <gen:0>
DEBUG 2022-09-08 19:44:43,286 [main][LoadPlanTreePrinter.java:55] : LoadPlan(entity=org.example.models.Book)
    - Returns
       - EntityReturnImpl(entity=org.example.models.Book, querySpaceUid=<gen:0>, path=org.example.models.Book)
          - CollectionAttributeFetchImpl(collection=org.example.models.Book.authors, querySpaceUid=<gen:1>, path=org.example.models.Book.authors)
             - (collection element) CollectionFetchableElementEntityGraph(entity=org.example.models.Author, querySpaceUid=<gen:2>, path=org.example.models.Book.authors.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=org.example.models.Book)
          - SQL table alias mapping - book0_
          - alias suffix - 0_
          - suffixed key columns - {id1_2_0_}

DEBUG 2022-09-08 19:44:43,286 [main][EntityLoader.java:115] : Static select for entity org.example.models.Book [UPGRADE_SKIPLOCKED]: select book0_.id as id1_2_0_, book0_.name as name2_2_0_ from Book book0_ where book0_.id=? for update
DEBUG 2022-09-08 19:44:43,286 [main][QuerySpacesImpl.java:174] : Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@eb1a5072]
DEBUG 2022-09-08 19:44:43,287 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : authors
DEBUG 2022-09-08 19:44:43,287 [main][QuerySpacesImpl.java:174] : Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@9dd4acce]
DEBUG 2022-09-08 19:44:43,287 [main][QuerySpacesImpl.java:174] : Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7d164ba1]
DEBUG 2022-09-08 19:44:43,287 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : name
DEBUG 2022-09-08 19:44:43,287 [main][FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150] : Building LoadPlan...
DEBUG 2022-09-08 19:44:43,287 [main][LoadQueryJoinAndFetchProcessor.java:100] : processing queryspace <gen:0>
DEBUG 2022-09-08 19:44:43,288 [main][LoadPlanTreePrinter.java:55] : LoadPlan(entity=org.example.models.Book)
    - Returns
       - EntityReturnImpl(entity=org.example.models.Book, querySpaceUid=<gen:0>, path=org.example.models.Book)
          - CollectionAttributeFetchImpl(collection=org.example.models.Book.authors, querySpaceUid=<gen:1>, path=org.example.models.Book.authors)
             - (collection element) CollectionFetchableElementEntityGraph(entity=org.example.models.Author, querySpaceUid=<gen:2>, path=org.example.models.Book.authors.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=org.example.models.Book)
          - SQL table alias mapping - book0_
          - alias suffix - 0_
          - suffixed key columns - {id1_2_0_}

DEBUG 2022-09-08 19:44:43,288 [main][EntityLoader.java:115] : Static select for entity org.example.models.Book [FORCE]: select book0_.id as id1_2_0_, book0_.name as name2_2_0_ from Book book0_ where book0_.id=? for update
DEBUG 2022-09-08 19:44:43,288 [main][QuerySpacesImpl.java:174] : Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7f910aff]
DEBUG 2022-09-08 19:44:43,288 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : authors
DEBUG 2022-09-08 19:44:43,288 [main][QuerySpacesImpl.java:174] : Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@f2a09e38]
DEBUG 2022-09-08 19:44:43,288 [main][QuerySpacesImpl.java:174] : Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@9330e915]
DEBUG 2022-09-08 19:44:43,289 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : name
DEBUG 2022-09-08 19:44:43,289 [main][FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150] : Building LoadPlan...
DEBUG 2022-09-08 19:44:43,289 [main][LoadQueryJoinAndFetchProcessor.java:100] : processing queryspace <gen:0>
DEBUG 2022-09-08 19:44:43,289 [main][LoadPlanTreePrinter.java:55] : LoadPlan(entity=org.example.models.Book)
    - Returns
       - EntityReturnImpl(entity=org.example.models.Book, querySpaceUid=<gen:0>, path=org.example.models.Book)
          - CollectionAttributeFetchImpl(collection=org.example.models.Book.authors, querySpaceUid=<gen:1>, path=org.example.models.Book.authors)
             - (collection element) CollectionFetchableElementEntityGraph(entity=org.example.models.Author, querySpaceUid=<gen:2>, path=org.example.models.Book.authors.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=org.example.models.Book)
          - SQL table alias mapping - book0_
          - alias suffix - 0_
          - suffixed key columns - {id1_2_0_}

DEBUG 2022-09-08 19:44:43,289 [main][EntityLoader.java:115] : Static select for entity org.example.models.Book [PESSIMISTIC_READ]: select book0_.id as id1_2_0_, book0_.name as name2_2_0_ from Book book0_ where book0_.id=? lock in share mode
DEBUG 2022-09-08 19:44:43,289 [main][QuerySpacesImpl.java:174] : Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@cd8e0459]
DEBUG 2022-09-08 19:44:43,289 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : authors
DEBUG 2022-09-08 19:44:43,290 [main][QuerySpacesImpl.java:174] : Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@1075b97]
DEBUG 2022-09-08 19:44:43,291 [main][QuerySpacesImpl.java:174] : Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@9808e381]
DEBUG 2022-09-08 19:44:43,291 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : name
DEBUG 2022-09-08 19:44:43,291 [main][FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150] : Building LoadPlan...
DEBUG 2022-09-08 19:44:43,291 [main][LoadQueryJoinAndFetchProcessor.java:100] : processing queryspace <gen:0>
DEBUG 2022-09-08 19:44:43,291 [main][LoadPlanTreePrinter.java:55] : LoadPlan(entity=org.example.models.Book)
    - Returns
       - EntityReturnImpl(entity=org.example.models.Book, querySpaceUid=<gen:0>, path=org.example.models.Book)
          - CollectionAttributeFetchImpl(collection=org.example.models.Book.authors, querySpaceUid=<gen:1>, path=org.example.models.Book.authors)
             - (collection element) CollectionFetchableElementEntityGraph(entity=org.example.models.Author, querySpaceUid=<gen:2>, path=org.example.models.Book.authors.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=org.example.models.Book)
          - SQL table alias mapping - book0_
          - alias suffix - 0_
          - suffixed key columns - {id1_2_0_}

DEBUG 2022-09-08 19:44:43,291 [main][EntityLoader.java:115] : Static select for entity org.example.models.Book [PESSIMISTIC_WRITE]: select book0_.id as id1_2_0_, book0_.name as name2_2_0_ from Book book0_ where book0_.id=? for update
DEBUG 2022-09-08 19:44:43,292 [main][QuerySpacesImpl.java:174] : Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4cf5e4e6]
DEBUG 2022-09-08 19:44:43,292 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : authors
DEBUG 2022-09-08 19:44:43,292 [main][QuerySpacesImpl.java:174] : Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@e02096c6]
DEBUG 2022-09-08 19:44:43,292 [main][QuerySpacesImpl.java:174] : Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@e0466941]
DEBUG 2022-09-08 19:44:43,292 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : name
DEBUG 2022-09-08 19:44:43,292 [main][FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150] : Building LoadPlan...
DEBUG 2022-09-08 19:44:43,292 [main][LoadQueryJoinAndFetchProcessor.java:100] : processing queryspace <gen:0>
DEBUG 2022-09-08 19:44:43,293 [main][LoadPlanTreePrinter.java:55] : LoadPlan(entity=org.example.models.Book)
    - Returns
       - EntityReturnImpl(entity=org.example.models.Book, querySpaceUid=<gen:0>, path=org.example.models.Book)
          - CollectionAttributeFetchImpl(collection=org.example.models.Book.authors, querySpaceUid=<gen:1>, path=org.example.models.Book.authors)
             - (collection element) CollectionFetchableElementEntityGraph(entity=org.example.models.Author, querySpaceUid=<gen:2>, path=org.example.models.Book.authors.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=org.example.models.Book)
          - SQL table alias mapping - book0_
          - alias suffix - 0_
          - suffixed key columns - {id1_2_0_}

DEBUG 2022-09-08 19:44:43,293 [main][EntityLoader.java:115] : Static select for entity org.example.models.Book [PESSIMISTIC_FORCE_INCREMENT]: select book0_.id as id1_2_0_, book0_.name as name2_2_0_ from Book book0_ where book0_.id=? for update
DEBUG 2022-09-08 19:44:43,293 [main][QuerySpacesImpl.java:174] : Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@278e15ad]
DEBUG 2022-09-08 19:44:43,293 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : authors
DEBUG 2022-09-08 19:44:43,293 [main][QuerySpacesImpl.java:174] : Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@bdd1785a]
DEBUG 2022-09-08 19:44:43,293 [main][QuerySpacesImpl.java:174] : Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@f5237429]
DEBUG 2022-09-08 19:44:43,293 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : name
DEBUG 2022-09-08 19:44:43,293 [main][FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150] : Building LoadPlan...
DEBUG 2022-09-08 19:44:43,294 [main][LoadQueryJoinAndFetchProcessor.java:100] : processing queryspace <gen:0>
DEBUG 2022-09-08 19:44:43,294 [main][LoadPlanTreePrinter.java:55] : LoadPlan(entity=org.example.models.Book)
    - Returns
       - EntityReturnImpl(entity=org.example.models.Book, querySpaceUid=<gen:0>, path=org.example.models.Book)
          - CollectionAttributeFetchImpl(collection=org.example.models.Book.authors, querySpaceUid=<gen:1>, path=org.example.models.Book.authors)
             - (collection element) CollectionFetchableElementEntityGraph(entity=org.example.models.Author, querySpaceUid=<gen:2>, path=org.example.models.Book.authors.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=org.example.models.Book)
          - SQL table alias mapping - book0_
          - alias suffix - 0_
          - suffixed key columns - {id1_2_0_}

DEBUG 2022-09-08 19:44:43,294 [main][EntityLoader.java:115] : Static select for entity org.example.models.Book [OPTIMISTIC]: select book0_.id as id1_2_0_, book0_.name as name2_2_0_ from Book book0_ where book0_.id=?
DEBUG 2022-09-08 19:44:43,294 [main][QuerySpacesImpl.java:174] : Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3b41cbe5]
DEBUG 2022-09-08 19:44:43,294 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : authors
DEBUG 2022-09-08 19:44:43,294 [main][QuerySpacesImpl.java:174] : Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@f4bad4e4]
DEBUG 2022-09-08 19:44:43,295 [main][QuerySpacesImpl.java:174] : Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5a9913a5]
DEBUG 2022-09-08 19:44:43,295 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : name
DEBUG 2022-09-08 19:44:43,295 [main][FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150] : Building LoadPlan...
DEBUG 2022-09-08 19:44:43,295 [main][LoadQueryJoinAndFetchProcessor.java:100] : processing queryspace <gen:0>
DEBUG 2022-09-08 19:44:43,295 [main][LoadPlanTreePrinter.java:55] : LoadPlan(entity=org.example.models.Book)
    - Returns
       - EntityReturnImpl(entity=org.example.models.Book, querySpaceUid=<gen:0>, path=org.example.models.Book)
          - CollectionAttributeFetchImpl(collection=org.example.models.Book.authors, querySpaceUid=<gen:1>, path=org.example.models.Book.authors)
             - (collection element) CollectionFetchableElementEntityGraph(entity=org.example.models.Author, querySpaceUid=<gen:2>, path=org.example.models.Book.authors.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=org.example.models.Book)
          - SQL table alias mapping - book0_
          - alias suffix - 0_
          - suffixed key columns - {id1_2_0_}

DEBUG 2022-09-08 19:44:43,295 [main][EntityLoader.java:115] : Static select for entity org.example.models.Book [OPTIMISTIC_FORCE_INCREMENT]: select book0_.id as id1_2_0_, book0_.name as name2_2_0_ from Book book0_ where book0_.id=?
DEBUG 2022-09-08 19:44:43,296 [main][CascadeEntityLoader.java:38] : Static select for action ACTION_MERGE on entity org.example.models.Book: select book0_.id as id1_2_0_, book0_.name as name2_2_0_ from Book book0_ where book0_.id=?
DEBUG 2022-09-08 19:44:43,296 [main][CascadeEntityLoader.java:38] : Static select for action ACTION_REFRESH on entity org.example.models.Book: select book0_.id as id1_2_0_, book0_.name as name2_2_0_ from Book book0_ where book0_.id=?
DEBUG 2022-09-08 19:44:43,296 [main][AbstractEntityPersister.java:3529] : Static SQL for entity: org.example.models.Author
DEBUG 2022-09-08 19:44:43,296 [main][AbstractEntityPersister.java:3534] :  Version select: select id from Author where id =?
DEBUG 2022-09-08 19:44:43,296 [main][AbstractEntityPersister.java:3537] :  Snapshot select: select author_.id, author_.name as name2_0_, author_.salary as salary3_0_ from Author author_ where author_.id=?
DEBUG 2022-09-08 19:44:43,296 [main][DelegatingBasicLogger.java:394] :  Insert 0: insert into Author (name, salary, id) values (?, ?, ?)
DEBUG 2022-09-08 19:44:43,296 [main][DelegatingBasicLogger.java:394] :  Update 0: update Author set name=?, salary=? where id=?
DEBUG 2022-09-08 19:44:43,296 [main][DelegatingBasicLogger.java:394] :  Delete 0: delete from Author where id=?
DEBUG 2022-09-08 19:44:43,296 [main][AbstractEntityPersister.java:3545] :  Identity insert: insert into Author (name, salary) values (?, ?)
DEBUG 2022-09-08 19:44:43,297 [main][QuerySpacesImpl.java:174] : Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7334cf53]
DEBUG 2022-09-08 19:44:43,297 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : books
DEBUG 2022-09-08 19:44:43,297 [main][QuerySpacesImpl.java:174] : Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@f2c2fc16]
DEBUG 2022-09-08 19:44:43,297 [main][QuerySpacesImpl.java:174] : Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@ad59db4c]
DEBUG 2022-09-08 19:44:43,297 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : name
DEBUG 2022-09-08 19:44:43,297 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : photos
DEBUG 2022-09-08 19:44:43,297 [main][QuerySpacesImpl.java:174] : Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@efa3bc79]
DEBUG 2022-09-08 19:44:43,298 [main][QuerySpacesImpl.java:174] : Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@940b3c6e]
DEBUG 2022-09-08 19:44:43,298 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : salary
DEBUG 2022-09-08 19:44:43,298 [main][FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150] : Building LoadPlan...
DEBUG 2022-09-08 19:44:43,298 [main][LoadQueryJoinAndFetchProcessor.java:100] : processing queryspace <gen:0>
DEBUG 2022-09-08 19:44:43,299 [main][LoadPlanTreePrinter.java:55] : LoadPlan(entity=org.example.models.Author)
    - Returns
       - EntityReturnImpl(entity=org.example.models.Author, querySpaceUid=<gen:0>, path=org.example.models.Author)
          - CollectionAttributeFetchImpl(collection=org.example.models.Author.books, querySpaceUid=<gen:1>, path=org.example.models.Author.books)
             - (collection element) CollectionFetchableElementEntityGraph(entity=org.example.models.Book, querySpaceUid=<gen:2>, path=org.example.models.Author.books.<elements>)
          - CollectionAttributeFetchImpl(collection=org.example.models.Author.photos, querySpaceUid=<gen:3>, path=org.example.models.Author.photos)
             - (collection element) CollectionFetchableElementEntityGraph(entity=org.example.models.Photo, querySpaceUid=<gen:4>, path=org.example.models.Author.photos.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=org.example.models.Author)
          - SQL table alias mapping - author0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

DEBUG 2022-09-08 19:44:43,299 [main][EntityLoader.java:115] : Static select for entity org.example.models.Author [NONE]: select author0_.id as id1_0_0_, author0_.name as name2_0_0_, author0_.salary as salary3_0_0_ from Author author0_ where author0_.id=?
DEBUG 2022-09-08 19:44:43,299 [main][QuerySpacesImpl.java:174] : Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@15bbfb0d]
DEBUG 2022-09-08 19:44:43,299 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : books
DEBUG 2022-09-08 19:44:43,299 [main][QuerySpacesImpl.java:174] : Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@2b722c5d]
DEBUG 2022-09-08 19:44:43,299 [main][QuerySpacesImpl.java:174] : Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@b2bcd170]
DEBUG 2022-09-08 19:44:43,299 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : name
DEBUG 2022-09-08 19:44:43,300 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : photos
DEBUG 2022-09-08 19:44:43,300 [main][QuerySpacesImpl.java:174] : Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@d9d85eb4]
DEBUG 2022-09-08 19:44:43,300 [main][QuerySpacesImpl.java:174] : Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@d48e2457]
DEBUG 2022-09-08 19:44:43,300 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : salary
DEBUG 2022-09-08 19:44:43,300 [main][FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150] : Building LoadPlan...
DEBUG 2022-09-08 19:44:43,300 [main][LoadQueryJoinAndFetchProcessor.java:100] : processing queryspace <gen:0>
DEBUG 2022-09-08 19:44:43,300 [main][LoadPlanTreePrinter.java:55] : LoadPlan(entity=org.example.models.Author)
    - Returns
       - EntityReturnImpl(entity=org.example.models.Author, querySpaceUid=<gen:0>, path=org.example.models.Author)
          - CollectionAttributeFetchImpl(collection=org.example.models.Author.books, querySpaceUid=<gen:1>, path=org.example.models.Author.books)
             - (collection element) CollectionFetchableElementEntityGraph(entity=org.example.models.Book, querySpaceUid=<gen:2>, path=org.example.models.Author.books.<elements>)
          - CollectionAttributeFetchImpl(collection=org.example.models.Author.photos, querySpaceUid=<gen:3>, path=org.example.models.Author.photos)
             - (collection element) CollectionFetchableElementEntityGraph(entity=org.example.models.Photo, querySpaceUid=<gen:4>, path=org.example.models.Author.photos.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=org.example.models.Author)
          - SQL table alias mapping - author0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

DEBUG 2022-09-08 19:44:43,301 [main][EntityLoader.java:115] : Static select for entity org.example.models.Author [READ]: select author0_.id as id1_0_0_, author0_.name as name2_0_0_, author0_.salary as salary3_0_0_ from Author author0_ where author0_.id=?
DEBUG 2022-09-08 19:44:43,301 [main][QuerySpacesImpl.java:174] : Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@8f48d210]
DEBUG 2022-09-08 19:44:43,301 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : books
DEBUG 2022-09-08 19:44:43,301 [main][QuerySpacesImpl.java:174] : Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@d6687e5c]
DEBUG 2022-09-08 19:44:43,301 [main][QuerySpacesImpl.java:174] : Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@39139cfd]
DEBUG 2022-09-08 19:44:43,301 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : name
DEBUG 2022-09-08 19:44:43,301 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : photos
DEBUG 2022-09-08 19:44:43,301 [main][QuerySpacesImpl.java:174] : Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@e91990ee]
DEBUG 2022-09-08 19:44:43,301 [main][QuerySpacesImpl.java:174] : Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@b6f40576]
DEBUG 2022-09-08 19:44:43,302 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : salary
DEBUG 2022-09-08 19:44:43,302 [main][FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150] : Building LoadPlan...
DEBUG 2022-09-08 19:44:43,302 [main][LoadQueryJoinAndFetchProcessor.java:100] : processing queryspace <gen:0>
DEBUG 2022-09-08 19:44:43,302 [main][LoadPlanTreePrinter.java:55] : LoadPlan(entity=org.example.models.Author)
    - Returns
       - EntityReturnImpl(entity=org.example.models.Author, querySpaceUid=<gen:0>, path=org.example.models.Author)
          - CollectionAttributeFetchImpl(collection=org.example.models.Author.books, querySpaceUid=<gen:1>, path=org.example.models.Author.books)
             - (collection element) CollectionFetchableElementEntityGraph(entity=org.example.models.Book, querySpaceUid=<gen:2>, path=org.example.models.Author.books.<elements>)
          - CollectionAttributeFetchImpl(collection=org.example.models.Author.photos, querySpaceUid=<gen:3>, path=org.example.models.Author.photos)
             - (collection element) CollectionFetchableElementEntityGraph(entity=org.example.models.Photo, querySpaceUid=<gen:4>, path=org.example.models.Author.photos.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=org.example.models.Author)
          - SQL table alias mapping - author0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

DEBUG 2022-09-08 19:44:43,302 [main][EntityLoader.java:115] : Static select for entity org.example.models.Author [UPGRADE]: select author0_.id as id1_0_0_, author0_.name as name2_0_0_, author0_.salary as salary3_0_0_ from Author author0_ where author0_.id=? for update
DEBUG 2022-09-08 19:44:43,302 [main][QuerySpacesImpl.java:174] : Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1010835c]
DEBUG 2022-09-08 19:44:43,302 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : books
DEBUG 2022-09-08 19:44:43,303 [main][QuerySpacesImpl.java:174] : Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@effa6f73]
DEBUG 2022-09-08 19:44:43,303 [main][QuerySpacesImpl.java:174] : Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@c3617e1a]
DEBUG 2022-09-08 19:44:43,303 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : name
DEBUG 2022-09-08 19:44:43,303 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : photos
DEBUG 2022-09-08 19:44:43,303 [main][QuerySpacesImpl.java:174] : Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@a219d0dc]
DEBUG 2022-09-08 19:44:43,303 [main][QuerySpacesImpl.java:174] : Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4cbbd966]
DEBUG 2022-09-08 19:44:43,303 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : salary
DEBUG 2022-09-08 19:44:43,303 [main][FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150] : Building LoadPlan...
DEBUG 2022-09-08 19:44:43,304 [main][LoadQueryJoinAndFetchProcessor.java:100] : processing queryspace <gen:0>
DEBUG 2022-09-08 19:44:43,304 [main][LoadPlanTreePrinter.java:55] : LoadPlan(entity=org.example.models.Author)
    - Returns
       - EntityReturnImpl(entity=org.example.models.Author, querySpaceUid=<gen:0>, path=org.example.models.Author)
          - CollectionAttributeFetchImpl(collection=org.example.models.Author.books, querySpaceUid=<gen:1>, path=org.example.models.Author.books)
             - (collection element) CollectionFetchableElementEntityGraph(entity=org.example.models.Book, querySpaceUid=<gen:2>, path=org.example.models.Author.books.<elements>)
          - CollectionAttributeFetchImpl(collection=org.example.models.Author.photos, querySpaceUid=<gen:3>, path=org.example.models.Author.photos)
             - (collection element) CollectionFetchableElementEntityGraph(entity=org.example.models.Photo, querySpaceUid=<gen:4>, path=org.example.models.Author.photos.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=org.example.models.Author)
          - SQL table alias mapping - author0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

DEBUG 2022-09-08 19:44:43,305 [main][EntityLoader.java:115] : Static select for entity org.example.models.Author [UPGRADE_NOWAIT]: select author0_.id as id1_0_0_, author0_.name as name2_0_0_, author0_.salary as salary3_0_0_ from Author author0_ where author0_.id=? for update
DEBUG 2022-09-08 19:44:43,305 [main][QuerySpacesImpl.java:174] : Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@c6dc4f0e]
DEBUG 2022-09-08 19:44:43,305 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : books
DEBUG 2022-09-08 19:44:43,305 [main][QuerySpacesImpl.java:174] : Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@191cc672]
DEBUG 2022-09-08 19:44:43,305 [main][QuerySpacesImpl.java:174] : Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@8d2dcd8b]
DEBUG 2022-09-08 19:44:43,305 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : name
DEBUG 2022-09-08 19:44:43,305 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : photos
DEBUG 2022-09-08 19:44:43,306 [main][QuerySpacesImpl.java:174] : Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@2601f2e8]
DEBUG 2022-09-08 19:44:43,306 [main][QuerySpacesImpl.java:174] : Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@c1f67eb6]
DEBUG 2022-09-08 19:44:43,306 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : salary
DEBUG 2022-09-08 19:44:43,306 [main][FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150] : Building LoadPlan...
DEBUG 2022-09-08 19:44:43,306 [main][LoadQueryJoinAndFetchProcessor.java:100] : processing queryspace <gen:0>
DEBUG 2022-09-08 19:44:43,307 [main][LoadPlanTreePrinter.java:55] : LoadPlan(entity=org.example.models.Author)
    - Returns
       - EntityReturnImpl(entity=org.example.models.Author, querySpaceUid=<gen:0>, path=org.example.models.Author)
          - CollectionAttributeFetchImpl(collection=org.example.models.Author.books, querySpaceUid=<gen:1>, path=org.example.models.Author.books)
             - (collection element) CollectionFetchableElementEntityGraph(entity=org.example.models.Book, querySpaceUid=<gen:2>, path=org.example.models.Author.books.<elements>)
          - CollectionAttributeFetchImpl(collection=org.example.models.Author.photos, querySpaceUid=<gen:3>, path=org.example.models.Author.photos)
             - (collection element) CollectionFetchableElementEntityGraph(entity=org.example.models.Photo, querySpaceUid=<gen:4>, path=org.example.models.Author.photos.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=org.example.models.Author)
          - SQL table alias mapping - author0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

DEBUG 2022-09-08 19:44:43,307 [main][EntityLoader.java:115] : Static select for entity org.example.models.Author [UPGRADE_SKIPLOCKED]: select author0_.id as id1_0_0_, author0_.name as name2_0_0_, author0_.salary as salary3_0_0_ from Author author0_ where author0_.id=? for update
DEBUG 2022-09-08 19:44:43,307 [main][QuerySpacesImpl.java:174] : Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7f4a45d6]
DEBUG 2022-09-08 19:44:43,307 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : books
DEBUG 2022-09-08 19:44:43,307 [main][QuerySpacesImpl.java:174] : Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@622c1adb]
DEBUG 2022-09-08 19:44:43,307 [main][QuerySpacesImpl.java:174] : Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@fdf74357]
DEBUG 2022-09-08 19:44:43,307 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : name
DEBUG 2022-09-08 19:44:43,307 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : photos
DEBUG 2022-09-08 19:44:43,308 [main][QuerySpacesImpl.java:174] : Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@5eb33222]
DEBUG 2022-09-08 19:44:43,308 [main][QuerySpacesImpl.java:174] : Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4c609b33]
DEBUG 2022-09-08 19:44:43,308 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : salary
DEBUG 2022-09-08 19:44:43,308 [main][FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150] : Building LoadPlan...
DEBUG 2022-09-08 19:44:43,308 [main][LoadQueryJoinAndFetchProcessor.java:100] : processing queryspace <gen:0>
DEBUG 2022-09-08 19:44:43,308 [main][LoadPlanTreePrinter.java:55] : LoadPlan(entity=org.example.models.Author)
    - Returns
       - EntityReturnImpl(entity=org.example.models.Author, querySpaceUid=<gen:0>, path=org.example.models.Author)
          - CollectionAttributeFetchImpl(collection=org.example.models.Author.books, querySpaceUid=<gen:1>, path=org.example.models.Author.books)
             - (collection element) CollectionFetchableElementEntityGraph(entity=org.example.models.Book, querySpaceUid=<gen:2>, path=org.example.models.Author.books.<elements>)
          - CollectionAttributeFetchImpl(collection=org.example.models.Author.photos, querySpaceUid=<gen:3>, path=org.example.models.Author.photos)
             - (collection element) CollectionFetchableElementEntityGraph(entity=org.example.models.Photo, querySpaceUid=<gen:4>, path=org.example.models.Author.photos.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=org.example.models.Author)
          - SQL table alias mapping - author0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

DEBUG 2022-09-08 19:44:43,308 [main][EntityLoader.java:115] : Static select for entity org.example.models.Author [FORCE]: select author0_.id as id1_0_0_, author0_.name as name2_0_0_, author0_.salary as salary3_0_0_ from Author author0_ where author0_.id=? for update
DEBUG 2022-09-08 19:44:43,309 [main][QuerySpacesImpl.java:174] : Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@67fbf055]
DEBUG 2022-09-08 19:44:43,309 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : books
DEBUG 2022-09-08 19:44:43,309 [main][QuerySpacesImpl.java:174] : Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@cb4d451]
DEBUG 2022-09-08 19:44:43,309 [main][QuerySpacesImpl.java:174] : Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@17b3168b]
DEBUG 2022-09-08 19:44:43,309 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : name
DEBUG 2022-09-08 19:44:43,309 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : photos
DEBUG 2022-09-08 19:44:43,309 [main][QuerySpacesImpl.java:174] : Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@d08a5292]
DEBUG 2022-09-08 19:44:43,309 [main][QuerySpacesImpl.java:174] : Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@d82967a0]
DEBUG 2022-09-08 19:44:43,309 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : salary
DEBUG 2022-09-08 19:44:43,310 [main][FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150] : Building LoadPlan...
DEBUG 2022-09-08 19:44:43,310 [main][LoadQueryJoinAndFetchProcessor.java:100] : processing queryspace <gen:0>
DEBUG 2022-09-08 19:44:43,310 [main][LoadPlanTreePrinter.java:55] : LoadPlan(entity=org.example.models.Author)
    - Returns
       - EntityReturnImpl(entity=org.example.models.Author, querySpaceUid=<gen:0>, path=org.example.models.Author)
          - CollectionAttributeFetchImpl(collection=org.example.models.Author.books, querySpaceUid=<gen:1>, path=org.example.models.Author.books)
             - (collection element) CollectionFetchableElementEntityGraph(entity=org.example.models.Book, querySpaceUid=<gen:2>, path=org.example.models.Author.books.<elements>)
          - CollectionAttributeFetchImpl(collection=org.example.models.Author.photos, querySpaceUid=<gen:3>, path=org.example.models.Author.photos)
             - (collection element) CollectionFetchableElementEntityGraph(entity=org.example.models.Photo, querySpaceUid=<gen:4>, path=org.example.models.Author.photos.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=org.example.models.Author)
          - SQL table alias mapping - author0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

DEBUG 2022-09-08 19:44:43,310 [main][EntityLoader.java:115] : Static select for entity org.example.models.Author [PESSIMISTIC_READ]: select author0_.id as id1_0_0_, author0_.name as name2_0_0_, author0_.salary as salary3_0_0_ from Author author0_ where author0_.id=? lock in share mode
DEBUG 2022-09-08 19:44:43,310 [main][QuerySpacesImpl.java:174] : Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5accfa6f]
DEBUG 2022-09-08 19:44:43,310 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : books
DEBUG 2022-09-08 19:44:43,311 [main][QuerySpacesImpl.java:174] : Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@f429175]
DEBUG 2022-09-08 19:44:43,311 [main][QuerySpacesImpl.java:174] : Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@f686138c]
DEBUG 2022-09-08 19:44:43,311 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : name
DEBUG 2022-09-08 19:44:43,311 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : photos
DEBUG 2022-09-08 19:44:43,312 [main][QuerySpacesImpl.java:174] : Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@3cef1fa1]
DEBUG 2022-09-08 19:44:43,312 [main][QuerySpacesImpl.java:174] : Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1f9087b2]
DEBUG 2022-09-08 19:44:43,312 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : salary
DEBUG 2022-09-08 19:44:43,312 [main][FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150] : Building LoadPlan...
DEBUG 2022-09-08 19:44:43,312 [main][LoadQueryJoinAndFetchProcessor.java:100] : processing queryspace <gen:0>
DEBUG 2022-09-08 19:44:43,313 [main][LoadPlanTreePrinter.java:55] : LoadPlan(entity=org.example.models.Author)
    - Returns
       - EntityReturnImpl(entity=org.example.models.Author, querySpaceUid=<gen:0>, path=org.example.models.Author)
          - CollectionAttributeFetchImpl(collection=org.example.models.Author.books, querySpaceUid=<gen:1>, path=org.example.models.Author.books)
             - (collection element) CollectionFetchableElementEntityGraph(entity=org.example.models.Book, querySpaceUid=<gen:2>, path=org.example.models.Author.books.<elements>)
          - CollectionAttributeFetchImpl(collection=org.example.models.Author.photos, querySpaceUid=<gen:3>, path=org.example.models.Author.photos)
             - (collection element) CollectionFetchableElementEntityGraph(entity=org.example.models.Photo, querySpaceUid=<gen:4>, path=org.example.models.Author.photos.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=org.example.models.Author)
          - SQL table alias mapping - author0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

DEBUG 2022-09-08 19:44:43,313 [main][EntityLoader.java:115] : Static select for entity org.example.models.Author [PESSIMISTIC_WRITE]: select author0_.id as id1_0_0_, author0_.name as name2_0_0_, author0_.salary as salary3_0_0_ from Author author0_ where author0_.id=? for update
DEBUG 2022-09-08 19:44:43,313 [main][QuerySpacesImpl.java:174] : Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7040116b]
DEBUG 2022-09-08 19:44:43,313 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : books
DEBUG 2022-09-08 19:44:43,313 [main][QuerySpacesImpl.java:174] : Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@6bdc7327]
DEBUG 2022-09-08 19:44:43,313 [main][QuerySpacesImpl.java:174] : Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@168602f8]
DEBUG 2022-09-08 19:44:43,314 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : name
DEBUG 2022-09-08 19:44:43,314 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : photos
DEBUG 2022-09-08 19:44:43,314 [main][QuerySpacesImpl.java:174] : Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@edcab203]
DEBUG 2022-09-08 19:44:43,314 [main][QuerySpacesImpl.java:174] : Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@d3b11724]
DEBUG 2022-09-08 19:44:43,314 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : salary
DEBUG 2022-09-08 19:44:43,314 [main][FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150] : Building LoadPlan...
DEBUG 2022-09-08 19:44:43,314 [main][LoadQueryJoinAndFetchProcessor.java:100] : processing queryspace <gen:0>
DEBUG 2022-09-08 19:44:43,315 [main][LoadPlanTreePrinter.java:55] : LoadPlan(entity=org.example.models.Author)
    - Returns
       - EntityReturnImpl(entity=org.example.models.Author, querySpaceUid=<gen:0>, path=org.example.models.Author)
          - CollectionAttributeFetchImpl(collection=org.example.models.Author.books, querySpaceUid=<gen:1>, path=org.example.models.Author.books)
             - (collection element) CollectionFetchableElementEntityGraph(entity=org.example.models.Book, querySpaceUid=<gen:2>, path=org.example.models.Author.books.<elements>)
          - CollectionAttributeFetchImpl(collection=org.example.models.Author.photos, querySpaceUid=<gen:3>, path=org.example.models.Author.photos)
             - (collection element) CollectionFetchableElementEntityGraph(entity=org.example.models.Photo, querySpaceUid=<gen:4>, path=org.example.models.Author.photos.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=org.example.models.Author)
          - SQL table alias mapping - author0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

DEBUG 2022-09-08 19:44:43,315 [main][EntityLoader.java:115] : Static select for entity org.example.models.Author [PESSIMISTIC_FORCE_INCREMENT]: select author0_.id as id1_0_0_, author0_.name as name2_0_0_, author0_.salary as salary3_0_0_ from Author author0_ where author0_.id=? for update
DEBUG 2022-09-08 19:44:43,315 [main][QuerySpacesImpl.java:174] : Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@dcd7710a]
DEBUG 2022-09-08 19:44:43,315 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : books
DEBUG 2022-09-08 19:44:43,315 [main][QuerySpacesImpl.java:174] : Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@1af0ccbb]
DEBUG 2022-09-08 19:44:43,315 [main][QuerySpacesImpl.java:174] : Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@174b4fa]
DEBUG 2022-09-08 19:44:43,315 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : name
DEBUG 2022-09-08 19:44:43,315 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : photos
DEBUG 2022-09-08 19:44:43,316 [main][QuerySpacesImpl.java:174] : Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@fc92ad6a]
DEBUG 2022-09-08 19:44:43,316 [main][QuerySpacesImpl.java:174] : Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@551d66b9]
DEBUG 2022-09-08 19:44:43,316 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : salary
DEBUG 2022-09-08 19:44:43,316 [main][FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150] : Building LoadPlan...
DEBUG 2022-09-08 19:44:43,316 [main][LoadQueryJoinAndFetchProcessor.java:100] : processing queryspace <gen:0>
DEBUG 2022-09-08 19:44:43,316 [main][LoadPlanTreePrinter.java:55] : LoadPlan(entity=org.example.models.Author)
    - Returns
       - EntityReturnImpl(entity=org.example.models.Author, querySpaceUid=<gen:0>, path=org.example.models.Author)
          - CollectionAttributeFetchImpl(collection=org.example.models.Author.books, querySpaceUid=<gen:1>, path=org.example.models.Author.books)
             - (collection element) CollectionFetchableElementEntityGraph(entity=org.example.models.Book, querySpaceUid=<gen:2>, path=org.example.models.Author.books.<elements>)
          - CollectionAttributeFetchImpl(collection=org.example.models.Author.photos, querySpaceUid=<gen:3>, path=org.example.models.Author.photos)
             - (collection element) CollectionFetchableElementEntityGraph(entity=org.example.models.Photo, querySpaceUid=<gen:4>, path=org.example.models.Author.photos.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=org.example.models.Author)
          - SQL table alias mapping - author0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

DEBUG 2022-09-08 19:44:43,317 [main][EntityLoader.java:115] : Static select for entity org.example.models.Author [OPTIMISTIC]: select author0_.id as id1_0_0_, author0_.name as name2_0_0_, author0_.salary as salary3_0_0_ from Author author0_ where author0_.id=?
DEBUG 2022-09-08 19:44:43,317 [main][QuerySpacesImpl.java:174] : Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@a8b76883]
DEBUG 2022-09-08 19:44:43,317 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : books
DEBUG 2022-09-08 19:44:43,317 [main][QuerySpacesImpl.java:174] : Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@f0b8aa0e]
DEBUG 2022-09-08 19:44:43,317 [main][QuerySpacesImpl.java:174] : Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@f5962ad4]
DEBUG 2022-09-08 19:44:43,317 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : name
DEBUG 2022-09-08 19:44:43,317 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : photos
DEBUG 2022-09-08 19:44:43,318 [main][QuerySpacesImpl.java:174] : Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@e9e17638]
DEBUG 2022-09-08 19:44:43,318 [main][QuerySpacesImpl.java:174] : Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@110ab398]
DEBUG 2022-09-08 19:44:43,318 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : salary
DEBUG 2022-09-08 19:44:43,318 [main][FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150] : Building LoadPlan...
DEBUG 2022-09-08 19:44:43,318 [main][LoadQueryJoinAndFetchProcessor.java:100] : processing queryspace <gen:0>
DEBUG 2022-09-08 19:44:43,319 [main][LoadPlanTreePrinter.java:55] : LoadPlan(entity=org.example.models.Author)
    - Returns
       - EntityReturnImpl(entity=org.example.models.Author, querySpaceUid=<gen:0>, path=org.example.models.Author)
          - CollectionAttributeFetchImpl(collection=org.example.models.Author.books, querySpaceUid=<gen:1>, path=org.example.models.Author.books)
             - (collection element) CollectionFetchableElementEntityGraph(entity=org.example.models.Book, querySpaceUid=<gen:2>, path=org.example.models.Author.books.<elements>)
          - CollectionAttributeFetchImpl(collection=org.example.models.Author.photos, querySpaceUid=<gen:3>, path=org.example.models.Author.photos)
             - (collection element) CollectionFetchableElementEntityGraph(entity=org.example.models.Photo, querySpaceUid=<gen:4>, path=org.example.models.Author.photos.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=org.example.models.Author)
          - SQL table alias mapping - author0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

DEBUG 2022-09-08 19:44:43,319 [main][EntityLoader.java:115] : Static select for entity org.example.models.Author [OPTIMISTIC_FORCE_INCREMENT]: select author0_.id as id1_0_0_, author0_.name as name2_0_0_, author0_.salary as salary3_0_0_ from Author author0_ where author0_.id=?
DEBUG 2022-09-08 19:44:43,320 [main][CascadeEntityLoader.java:38] : Static select for action ACTION_MERGE on entity org.example.models.Author: select author0_.id as id1_0_0_, author0_.name as name2_0_0_, author0_.salary as salary3_0_0_ from Author author0_ where author0_.id=?
DEBUG 2022-09-08 19:44:43,320 [main][CascadeEntityLoader.java:38] : Static select for action ACTION_REFRESH on entity org.example.models.Author: select author0_.id as id1_0_0_, author0_.name as name2_0_0_, author0_.salary as salary3_0_0_ from Author author0_ where author0_.id=?
DEBUG 2022-09-08 19:44:43,323 [main][QuerySpacesImpl.java:174] : Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@ddc071e7]
DEBUG 2022-09-08 19:44:43,323 [main][QuerySpacesImpl.java:174] : Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@f47e7c5c]
DEBUG 2022-09-08 19:44:43,324 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : books
DEBUG 2022-09-08 19:44:43,324 [main][MetamodelGraphWalker.java:145] : Property path deemed to be circular : books
DEBUG 2022-09-08 19:44:43,324 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : name
DEBUG 2022-09-08 19:44:43,324 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : photos
DEBUG 2022-09-08 19:44:43,324 [main][QuerySpacesImpl.java:174] : Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@346d9097]
DEBUG 2022-09-08 19:44:43,324 [main][QuerySpacesImpl.java:174] : Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@56c01b7d]
DEBUG 2022-09-08 19:44:43,324 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : salary
DEBUG 2022-09-08 19:44:43,324 [main][FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150] : Building LoadPlan...
DEBUG 2022-09-08 19:44:43,326 [main][LoadQueryJoinAndFetchProcessor.java:100] : processing queryspace <gen:0>
DEBUG 2022-09-08 19:44:43,326 [main][LoadPlanTreePrinter.java:55] : LoadPlan(collection=org.example.models.Book.authors)
    - Returns
       - CollectionReturnImpl(collection=org.example.models.Book.authors, querySpaceUid=<gen:0>, path=[org.example.models.Book.authors])
          - (collection element) CollectionFetchableElementEntityGraph(entity=org.example.models.Author, querySpaceUid=<gen:1>, path=[org.example.models.Book.authors].<elements>)
             - CollectionAttributeFetchImpl(collection=org.example.models.Author.photos, querySpaceUid=<gen:2>, path=[org.example.models.Book.authors].<elements>.photos)
                - (collection element) CollectionFetchableElementEntityGraph(entity=org.example.models.Photo, querySpaceUid=<gen:3>, path=[org.example.models.Book.authors].<elements>.photos.<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=org.example.models.Book.authors)
          - SQL table alias mapping - authors0_
          - alias suffix - 0_
          - suffixed key columns - {author_i2_1_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - id1_0_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=org.example.models.Author)
                - SQL table alias mapping - author1_
                - alias suffix - 1_
                - suffixed key columns - {id1_0_1_}

DEBUG 2022-09-08 19:44:43,327 [main][CollectionLoader.java:83] : Static select for collection org.example.models.Book.authors: select authors0_.author_id as author_i2_1_0_, authors0_.book_id as book_id1_1_0_, author1_.id as id1_0_1_, author1_.name as name2_0_1_, author1_.salary as salary3_0_1_ from Authors_Books authors0_ inner join Author author1_ on authors0_.book_id=author1_.id where authors0_.author_id=?
DEBUG 2022-09-08 19:44:43,327 [main][QuerySpacesImpl.java:174] : Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@bf7996bb]
DEBUG 2022-09-08 19:44:43,327 [main][QuerySpacesImpl.java:174] : Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@a4804bbf]
DEBUG 2022-09-08 19:44:43,327 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : author
DEBUG 2022-09-08 19:44:43,327 [main][MetamodelGraphWalker.java:145] : Property path deemed to be circular : author
DEBUG 2022-09-08 19:44:43,327 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : fileName
DEBUG 2022-09-08 19:44:43,327 [main][FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150] : Building LoadPlan...
DEBUG 2022-09-08 19:44:43,328 [main][LoadQueryJoinAndFetchProcessor.java:100] : processing queryspace <gen:0>
DEBUG 2022-09-08 19:44:43,328 [main][LoadPlanTreePrinter.java:55] : LoadPlan(collection=org.example.models.Author.photos)
    - Returns
       - CollectionReturnImpl(collection=org.example.models.Author.photos, querySpaceUid=<gen:0>, path=[org.example.models.Author.photos])
          - (collection element) CollectionFetchableElementEntityGraph(entity=org.example.models.Photo, querySpaceUid=<gen:1>, path=[org.example.models.Author.photos].<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=org.example.models.Author.photos)
          - SQL table alias mapping - photos0_
          - alias suffix - 0_
          - suffixed key columns - {author_i3_3_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - id1_3_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=org.example.models.Photo)
                - SQL table alias mapping - photos0_
                - alias suffix - 1_
                - suffixed key columns - {id1_3_1_}

DEBUG 2022-09-08 19:44:43,328 [main][CollectionLoader.java:83] : Static select for collection org.example.models.Author.photos: select photos0_.author_id as author_i3_3_0_, photos0_.id as id1_3_0_, photos0_.id as id1_3_1_, photos0_.author_id as author_i3_3_1_, photos0_.file_name as file_nam2_3_1_ from Photo photos0_ where photos0_.author_id=?
DEBUG 2022-09-08 19:44:43,328 [main][QuerySpacesImpl.java:174] : Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@21026baa]
DEBUG 2022-09-08 19:44:43,329 [main][QuerySpacesImpl.java:174] : Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@8eddb13e]
DEBUG 2022-09-08 19:44:43,329 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : authors
DEBUG 2022-09-08 19:44:43,329 [main][MetamodelGraphWalker.java:145] : Property path deemed to be circular : authors
DEBUG 2022-09-08 19:44:43,329 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : name
DEBUG 2022-09-08 19:44:43,329 [main][FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150] : Building LoadPlan...
DEBUG 2022-09-08 19:44:43,329 [main][LoadQueryJoinAndFetchProcessor.java:100] : processing queryspace <gen:0>
DEBUG 2022-09-08 19:44:43,329 [main][LoadPlanTreePrinter.java:55] : LoadPlan(collection=org.example.models.Author.books)
    - Returns
       - CollectionReturnImpl(collection=org.example.models.Author.books, querySpaceUid=<gen:0>, path=[org.example.models.Author.books])
          - (collection element) CollectionFetchableElementEntityGraph(entity=org.example.models.Book, querySpaceUid=<gen:1>, path=[org.example.models.Author.books].<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=org.example.models.Author.books)
          - SQL table alias mapping - books0_
          - alias suffix - 0_
          - suffixed key columns - {book_id1_1_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - id1_2_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=org.example.models.Book)
                - SQL table alias mapping - book1_
                - alias suffix - 1_
                - suffixed key columns - {id1_2_1_}

DEBUG 2022-09-08 19:44:43,329 [main][CollectionLoader.java:83] : Static select for collection org.example.models.Author.books: select books0_.book_id as book_id1_1_0_, books0_.author_id as author_i2_1_0_, book1_.id as id1_2_1_, book1_.name as name2_2_1_ from Authors_Books books0_ inner join Book book1_ on books0_.author_id=book1_.id where books0_.book_id=?
DEBUG 2022-09-08 19:44:43,343 [main][SqlStatementLogger.java:92] : alter table Authors_Books drop foreign key FKs1vdbwf5okcxthhicku1hc93d
INFO  2022-09-08 19:44:43,345 [main][DdlTransactionIsolatorNonJtaImpl.java:48] : HHH10001501: Connection obtained from JdbcConnectionAccess [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess@f3215f7d] for (non-JTA) DDL execution was not in auto-commit mode; the Connection 'local transaction' will be committed and the Connection will be set into auto-commit mode.
DEBUG 2022-09-08 19:44:43,356 [main][SqlStatementLogger.java:92] : alter table Authors_Books drop foreign key FK1h5wgpewyadjq3lpqpjo0ylx4
DEBUG 2022-09-08 19:44:43,369 [main][SqlStatementLogger.java:92] : alter table Photo drop foreign key FKgn24n3tehgrddleetayyosgwh
WARN  2022-09-08 19:44:43,381 [main][ExceptionHandlerLoggedImpl.java:27] : GenerationTarget encountered exception accepting command : Error executing DDL via JDBC Statement
org.hibernate.tool.schema.spi.CommandAcceptanceException: Error executing DDL via JDBC Statement
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:62)
	at org.hibernate.tool.schema.internal.SchemaDropperImpl.applySqlString(SchemaDropperImpl.java:374)
	at org.hibernate.tool.schema.internal.SchemaDropperImpl.applySqlStrings(SchemaDropperImpl.java:359)
	at org.hibernate.tool.schema.internal.SchemaDropperImpl.applyConstraintDropping(SchemaDropperImpl.java:331)
	at org.hibernate.tool.schema.internal.SchemaDropperImpl.dropFromMetadata(SchemaDropperImpl.java:230)
	at org.hibernate.tool.schema.internal.SchemaDropperImpl.performDrop(SchemaDropperImpl.java:154)
	at org.hibernate.tool.schema.internal.SchemaDropperImpl.doDrop(SchemaDropperImpl.java:126)
	at org.hibernate.tool.schema.internal.SchemaDropperImpl.doDrop(SchemaDropperImpl.java:112)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.performDatabaseAction(SchemaManagementToolCoordinator.java:137)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.process(SchemaManagementToolCoordinator.java:65)
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:307)
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:490)
	at org.hibernate.cfg.Configuration.buildSessionFactory(Configuration.java:710)
	at org.hibernate.cfg.Configuration.buildSessionFactory(Configuration.java:726)
	at org.example.utils.HibernateUtil.<clinit>(HibernateUtil.java:16)
	at org.example.repos.AuthorRepository.<init>(AuthorRepository.java:23)
	at org.example.Main.main(Main.java:18)
Caused by: 
java.sql.SQLSyntaxErrorException: Table 'classicmodels.photo' doesn't exist
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:120)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.StatementImpl.executeInternal(StatementImpl.java:763)
	at com.mysql.cj.jdbc.StatementImpl.execute(StatementImpl.java:648)
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:49)
	... 16 more
DEBUG 2022-09-08 19:44:43,386 [main][SqlStatementLogger.java:92] : drop table if exists Author
DEBUG 2022-09-08 19:44:43,389 [main][SqlStatementLogger.java:92] : drop table if exists Authors_Books
DEBUG 2022-09-08 19:44:43,392 [main][SqlStatementLogger.java:92] : drop table if exists Book
DEBUG 2022-09-08 19:44:43,395 [main][SqlStatementLogger.java:92] : drop table if exists hibernate_sequence
DEBUG 2022-09-08 19:44:43,397 [main][SqlStatementLogger.java:92] : drop table if exists Photo
DEBUG 2022-09-08 19:44:43,402 [main][SqlStatementLogger.java:92] : create table Author (id bigint not null auto_increment, name varchar(255), salary integer, primary key (id))
INFO  2022-09-08 19:44:43,402 [main][DdlTransactionIsolatorNonJtaImpl.java:48] : HHH10001501: Connection obtained from JdbcConnectionAccess [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess@f5ee72b0] for (non-JTA) DDL execution was not in auto-commit mode; the Connection 'local transaction' will be committed and the Connection will be set into auto-commit mode.
DEBUG 2022-09-08 19:44:43,406 [main][SqlStatementLogger.java:92] : create table Authors_Books (book_id bigint not null, author_id bigint not null, primary key (book_id, author_id))
DEBUG 2022-09-08 19:44:43,410 [main][SqlStatementLogger.java:92] : create table Book (id bigint not null, name varchar(255), primary key (id))
DEBUG 2022-09-08 19:44:43,414 [main][SqlStatementLogger.java:92] : create table hibernate_sequence (next_val bigint)
DEBUG 2022-09-08 19:44:43,418 [main][SqlStatementLogger.java:92] : insert into hibernate_sequence values ( 1 )
DEBUG 2022-09-08 19:44:43,420 [main][SqlStatementLogger.java:92] : create table Photo (id bigint not null auto_increment, file_name varchar(255), author_id bigint not null, primary key (id))
DEBUG 2022-09-08 19:44:43,424 [main][SqlStatementLogger.java:92] : alter table Authors_Books add constraint FKs1vdbwf5okcxthhicku1hc93d foreign key (author_id) references Book (id)
DEBUG 2022-09-08 19:44:43,433 [main][SqlStatementLogger.java:92] : alter table Authors_Books add constraint FK1h5wgpewyadjq3lpqpjo0ylx4 foreign key (book_id) references Author (id)
DEBUG 2022-09-08 19:44:43,442 [main][SqlStatementLogger.java:92] : alter table Photo add constraint FKgn24n3tehgrddleetayyosgwh foreign key (author_id) references Author (id)
INFO  2022-09-08 19:44:43,452 [main][SchemaCreatorImpl.java:485] : HHH000476: Executing import script 'org.hibernate.tool.schema.internal.exec.ScriptSourceInputNonExistentImpl@ddc6827e'
DEBUG 2022-09-08 19:44:43,452 [main][JtaPlatformInitiator.java:42] : No JtaPlatform was specified, checking resolver
DEBUG 2022-09-08 19:44:43,453 [main][JtaPlatformResolverInitiator.java:33] : No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
DEBUG 2022-09-08 19:44:43,454 [main][StandardJtaPlatformResolver.java:101] : Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
DEBUG 2022-09-08 19:44:43,455 [main][NamedQueryRepository.java:151] : Checking 0 named HQL queries
DEBUG 2022-09-08 19:44:43,455 [main][NamedQueryRepository.java:167] : Checking 0 named SQL queries
DEBUG 2022-09-08 19:44:43,456 [main][SessionFactoryRegistry.java:52] : Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@6fc52e91
DEBUG 2022-09-08 19:44:43,457 [main][SessionFactoryRegistry.java:74] : Registering SessionFactory: c4912c12-ae55-4d62-a5cf-d34e23f1a04a (<unnamed>)
DEBUG 2022-09-08 19:44:43,457 [main][SessionFactoryRegistry.java:81] : Not binding SessionFactory to JNDI, no JNDI name configured
DEBUG 2022-09-08 19:44:43,484 [main][StatisticsInitiator.java:82] : Statistics initialized [enabled=false]
DEBUG 2022-09-08 19:44:43,487 [main][TransactionImpl.java:55] : begin
DEBUG 2022-09-08 19:44:43,493 [main][ActionQueue.java:272] : Executing identity-insert immediately
DEBUG 2022-09-08 19:44:43,494 [main][SqlStatementLogger.java:92] : insert into Author (name, salary) values (?, ?)
DEBUG 2022-09-08 19:44:43,501 [main][IdentifierGeneratorHelper.java:78] : Natively generated identity: 1
DEBUG 2022-09-08 19:44:43,502 [main][ResourceRegistryStandardImpl.java:104] : HHH000387: ResultSet's statement was not registered
DEBUG 2022-09-08 19:44:43,502 [main][TransactionImpl.java:66] : committing
DEBUG 2022-09-08 19:44:43,503 [main][AbstractFlushingEventListener.java:132] : Processing flush-time cascades
DEBUG 2022-09-08 19:44:43,503 [main][AbstractFlushingEventListener.java:174] : Dirty checking collections
DEBUG 2022-09-08 19:44:43,504 [main][AbstractFlushingEventListener.java:106] : Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
DEBUG 2022-09-08 19:44:43,504 [main][AbstractFlushingEventListener.java:113] : Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
DEBUG 2022-09-08 19:44:43,504 [main][EntityPrinter.java:102] : Listing entities:
DEBUG 2022-09-08 19:44:43,504 [main][EntityPrinter.java:109] : org.example.models.Author{books=null, name=David Baldacci, id=1, salary=4263, photos=null}
DEBUG 2022-09-08 19:44:43,506 [main][LogicalConnectionManagedImpl.java:154] : Initiating JDBC connection release from afterTransaction
DEBUG 2022-09-08 19:44:43,506 [main][LogicalConnectionManagedImpl.java:154] : Initiating JDBC connection release from afterTransaction
DEBUG 2022-09-08 19:44:43,521 [main][TransactionImpl.java:55] : begin
DEBUG 2022-09-08 19:44:43,522 [main][ActionQueue.java:272] : Executing identity-insert immediately
DEBUG 2022-09-08 19:44:43,522 [main][SqlStatementLogger.java:92] : insert into Author (name, salary) values (?, ?)
DEBUG 2022-09-08 19:44:43,523 [main][IdentifierGeneratorHelper.java:78] : Natively generated identity: 2
DEBUG 2022-09-08 19:44:43,523 [main][ResourceRegistryStandardImpl.java:104] : HHH000387: ResultSet's statement was not registered
DEBUG 2022-09-08 19:44:43,524 [main][TransactionImpl.java:66] : committing
DEBUG 2022-09-08 19:44:43,524 [main][AbstractFlushingEventListener.java:132] : Processing flush-time cascades
DEBUG 2022-09-08 19:44:43,524 [main][AbstractFlushingEventListener.java:174] : Dirty checking collections
DEBUG 2022-09-08 19:44:43,524 [main][AbstractFlushingEventListener.java:106] : Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
DEBUG 2022-09-08 19:44:43,524 [main][AbstractFlushingEventListener.java:113] : Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
DEBUG 2022-09-08 19:44:43,524 [main][EntityPrinter.java:102] : Listing entities:
DEBUG 2022-09-08 19:44:43,524 [main][EntityPrinter.java:109] : org.example.models.Author{books=null, name=Colleen Hoover, id=2, salary=3801, photos=null}
DEBUG 2022-09-08 19:44:43,525 [main][LogicalConnectionManagedImpl.java:154] : Initiating JDBC connection release from afterTransaction
DEBUG 2022-09-08 19:44:43,525 [main][LogicalConnectionManagedImpl.java:154] : Initiating JDBC connection release from afterTransaction
DEBUG 2022-09-08 19:44:43,527 [main][TransactionImpl.java:55] : begin
DEBUG 2022-09-08 19:44:43,528 [main][ActionQueue.java:272] : Executing identity-insert immediately
DEBUG 2022-09-08 19:44:43,528 [main][SqlStatementLogger.java:92] : insert into Author (name, salary) values (?, ?)
DEBUG 2022-09-08 19:44:43,529 [main][IdentifierGeneratorHelper.java:78] : Natively generated identity: 3
DEBUG 2022-09-08 19:44:43,529 [main][ResourceRegistryStandardImpl.java:104] : HHH000387: ResultSet's statement was not registered
DEBUG 2022-09-08 19:44:43,530 [main][TransactionImpl.java:66] : committing
DEBUG 2022-09-08 19:44:43,530 [main][AbstractFlushingEventListener.java:132] : Processing flush-time cascades
DEBUG 2022-09-08 19:44:43,530 [main][AbstractFlushingEventListener.java:174] : Dirty checking collections
DEBUG 2022-09-08 19:44:43,530 [main][AbstractFlushingEventListener.java:106] : Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
DEBUG 2022-09-08 19:44:43,530 [main][AbstractFlushingEventListener.java:113] : Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
DEBUG 2022-09-08 19:44:43,530 [main][EntityPrinter.java:102] : Listing entities:
DEBUG 2022-09-08 19:44:43,530 [main][EntityPrinter.java:109] : org.example.models.Author{books=null, name=Stuart Woods, id=3, salary=3728, photos=null}
DEBUG 2022-09-08 19:44:43,531 [main][LogicalConnectionManagedImpl.java:154] : Initiating JDBC connection release from afterTransaction
DEBUG 2022-09-08 19:44:43,531 [main][LogicalConnectionManagedImpl.java:154] : Initiating JDBC connection release from afterTransaction
DEBUG 2022-09-08 19:44:43,532 [main][TransactionImpl.java:55] : begin
DEBUG 2022-09-08 19:44:43,532 [main][ActionQueue.java:272] : Executing identity-insert immediately
DEBUG 2022-09-08 19:44:43,533 [main][SqlStatementLogger.java:92] : insert into Author (name, salary) values (?, ?)
DEBUG 2022-09-08 19:44:43,534 [main][IdentifierGeneratorHelper.java:78] : Natively generated identity: 4
DEBUG 2022-09-08 19:44:43,534 [main][ResourceRegistryStandardImpl.java:104] : HHH000387: ResultSet's statement was not registered
DEBUG 2022-09-08 19:44:43,534 [main][TransactionImpl.java:66] : committing
DEBUG 2022-09-08 19:44:43,534 [main][AbstractFlushingEventListener.java:132] : Processing flush-time cascades
DEBUG 2022-09-08 19:44:43,534 [main][AbstractFlushingEventListener.java:174] : Dirty checking collections
DEBUG 2022-09-08 19:44:43,535 [main][AbstractFlushingEventListener.java:106] : Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
DEBUG 2022-09-08 19:44:43,535 [main][AbstractFlushingEventListener.java:113] : Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
DEBUG 2022-09-08 19:44:43,535 [main][EntityPrinter.java:102] : Listing entities:
DEBUG 2022-09-08 19:44:43,535 [main][EntityPrinter.java:109] : org.example.models.Author{books=null, name=Nora Roberts, id=4, salary=3949, photos=null}
DEBUG 2022-09-08 19:44:43,536 [main][LogicalConnectionManagedImpl.java:154] : Initiating JDBC connection release from afterTransaction
DEBUG 2022-09-08 19:44:43,536 [main][LogicalConnectionManagedImpl.java:154] : Initiating JDBC connection release from afterTransaction
DEBUG 2022-09-08 19:44:43,537 [main][TransactionImpl.java:55] : begin
DEBUG 2022-09-08 19:44:43,537 [main][ActionQueue.java:272] : Executing identity-insert immediately
DEBUG 2022-09-08 19:44:43,537 [main][SqlStatementLogger.java:92] : insert into Author (name, salary) values (?, ?)
DEBUG 2022-09-08 19:44:43,538 [main][IdentifierGeneratorHelper.java:78] : Natively generated identity: 5
DEBUG 2022-09-08 19:44:43,538 [main][ResourceRegistryStandardImpl.java:104] : HHH000387: ResultSet's statement was not registered
DEBUG 2022-09-08 19:44:43,539 [main][TransactionImpl.java:66] : committing
DEBUG 2022-09-08 19:44:43,539 [main][AbstractFlushingEventListener.java:132] : Processing flush-time cascades
DEBUG 2022-09-08 19:44:43,539 [main][AbstractFlushingEventListener.java:174] : Dirty checking collections
DEBUG 2022-09-08 19:44:43,539 [main][AbstractFlushingEventListener.java:106] : Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
DEBUG 2022-09-08 19:44:43,539 [main][AbstractFlushingEventListener.java:113] : Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
DEBUG 2022-09-08 19:44:43,539 [main][EntityPrinter.java:102] : Listing entities:
DEBUG 2022-09-08 19:44:43,539 [main][EntityPrinter.java:109] : org.example.models.Author{books=null, name=Michael Connelly, id=5, salary=4566, photos=null}
DEBUG 2022-09-08 19:44:43,540 [main][LogicalConnectionManagedImpl.java:154] : Initiating JDBC connection release from afterTransaction
DEBUG 2022-09-08 19:44:43,541 [main][LogicalConnectionManagedImpl.java:154] : Initiating JDBC connection release from afterTransaction
DEBUG 2022-09-08 19:44:43,550 [main][CriteriaQueryImpl.java:307] : Rendered criteria query -> select generatedAlias0 from Author as generatedAlias0
DEBUG 2022-09-08 19:44:43,557 [main][QueryTranslatorFactoryInitiator.java:45] : QueryTranslatorFactory : org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory@74ac4ba2
INFO  2022-09-08 19:44:43,557 [main][QueryTranslatorFactoryInitiator.java:47] : HHH000397: Using ASTQueryTranslatorFactory
DEBUG 2022-09-08 19:44:43,574 [main][QueryTranslatorImpl.java:278] : parse() - HQL: select generatedAlias0 from org.example.models.Author as generatedAlias0
DEBUG 2022-09-08 19:44:43,578 [main][QueryTranslatorImpl.java:296] : --- HQL AST ---
 \-[QUERY] Node: 'query'
    \-[SELECT_FROM] Node: 'SELECT_FROM'
       +-[FROM] Node: 'from'
       |  \-[RANGE] Node: 'RANGE'
       |     +-[DOT] Node: '.'
       |     |  +-[DOT] Node: '.'
       |     |  |  +-[DOT] Node: '.'
       |     |  |  |  +-[IDENT] Node: 'org'
       |     |  |  |  \-[IDENT] Node: 'example'
       |     |  |  \-[IDENT] Node: 'models'
       |     |  \-[IDENT] Node: 'Author'
       |     \-[ALIAS] Node: 'generatedAlias0'
       \-[SELECT] Node: 'select'
          \-[IDENT] Node: 'generatedAlias0'

DEBUG 2022-09-08 19:44:43,578 [main][ErrorCounter.java:95] : throwQueryException() : no errors
DEBUG 2022-09-08 19:44:43,593 [main][HqlSqlBaseWalker.java:124] : select << begin [level=1, statement=select]
DEBUG 2022-09-08 19:44:43,598 [main][FromElement.java:148] : FromClause{level=1} : org.example.models.Author (generatedAlias0) -> author0_
DEBUG 2022-09-08 19:44:43,599 [main][FromReferenceNode.java:60] : Resolved : generatedAlias0 -> author0_.id
DEBUG 2022-09-08 19:44:43,599 [main][HqlSqlBaseWalker.java:128] : select : finishing up [level=1, statement=select]
DEBUG 2022-09-08 19:44:43,600 [main][HqlSqlWalker.java:725] : processQuery() :  ( SELECT ( {select clause} author0_.id ) ( FromClause{level=1} Author author0_ ) )
DEBUG 2022-09-08 19:44:43,604 [main][JoinProcessor.java:169] : Using FROM fragment [Author author0_]
DEBUG 2022-09-08 19:44:43,605 [main][HqlSqlBaseWalker.java:132] : select >> end [level=1, statement=select]
DEBUG 2022-09-08 19:44:43,605 [main][QueryTranslatorImpl.java:265] : --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (Author)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'author0_.id as id1_0_' {alias=generatedAlias0, className=org.example.models.Author, tableAlias=author0_}
    |  \-[SQL_TOKEN] SqlFragment: 'author0_.name as name2_0_, author0_.salary as salary3_0_'
    \-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[author0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'Author author0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=Author,tableAlias=author0_,origin=null,columns={,className=org.example.models.Author}}

DEBUG 2022-09-08 19:44:43,605 [main][ErrorCounter.java:95] : throwQueryException() : no errors
DEBUG 2022-09-08 19:44:43,608 [main][QueryTranslatorImpl.java:247] : HQL: select generatedAlias0 from org.example.models.Author as generatedAlias0
DEBUG 2022-09-08 19:44:43,608 [main][QueryTranslatorImpl.java:248] : SQL: select author0_.id as id1_0_, author0_.name as name2_0_, author0_.salary as salary3_0_ from Author author0_
DEBUG 2022-09-08 19:44:43,608 [main][ErrorCounter.java:95] : throwQueryException() : no errors
DEBUG 2022-09-08 19:44:43,615 [main][SqlStatementLogger.java:92] : select author0_.id as id1_0_, author0_.name as name2_0_, author0_.salary as salary3_0_ from Author author0_
DEBUG 2022-09-08 19:44:43,620 [main][DelegatingBasicLogger.java:384] : Result set row: 0
DEBUG 2022-09-08 19:44:43,621 [main][Loader.java:1527] : Result row: EntityKey[org.example.models.Author#1]
DEBUG 2022-09-08 19:44:43,623 [main][DelegatingBasicLogger.java:384] : Result set row: 1
DEBUG 2022-09-08 19:44:43,623 [main][Loader.java:1527] : Result row: EntityKey[org.example.models.Author#2]
DEBUG 2022-09-08 19:44:43,623 [main][DelegatingBasicLogger.java:384] : Result set row: 2
DEBUG 2022-09-08 19:44:43,624 [main][Loader.java:1527] : Result row: EntityKey[org.example.models.Author#3]
DEBUG 2022-09-08 19:44:43,624 [main][DelegatingBasicLogger.java:384] : Result set row: 3
DEBUG 2022-09-08 19:44:43,624 [main][Loader.java:1527] : Result row: EntityKey[org.example.models.Author#4]
DEBUG 2022-09-08 19:44:43,624 [main][DelegatingBasicLogger.java:384] : Result set row: 4
DEBUG 2022-09-08 19:44:43,624 [main][Loader.java:1527] : Result row: EntityKey[org.example.models.Author#5]
DEBUG 2022-09-08 19:44:43,625 [main][TwoPhaseLoad.java:141] : Resolving associations for [org.example.models.Author#1]
DEBUG 2022-09-08 19:44:43,629 [main][TwoPhaseLoad.java:267] : Done materializing entity [org.example.models.Author#1]
DEBUG 2022-09-08 19:44:43,629 [main][TwoPhaseLoad.java:141] : Resolving associations for [org.example.models.Author#2]
DEBUG 2022-09-08 19:44:43,629 [main][TwoPhaseLoad.java:267] : Done materializing entity [org.example.models.Author#2]
DEBUG 2022-09-08 19:44:43,630 [main][TwoPhaseLoad.java:141] : Resolving associations for [org.example.models.Author#3]
DEBUG 2022-09-08 19:44:43,630 [main][TwoPhaseLoad.java:267] : Done materializing entity [org.example.models.Author#3]
DEBUG 2022-09-08 19:44:43,630 [main][TwoPhaseLoad.java:141] : Resolving associations for [org.example.models.Author#4]
DEBUG 2022-09-08 19:44:43,630 [main][TwoPhaseLoad.java:267] : Done materializing entity [org.example.models.Author#4]
DEBUG 2022-09-08 19:44:43,630 [main][TwoPhaseLoad.java:141] : Resolving associations for [org.example.models.Author#5]
DEBUG 2022-09-08 19:44:43,630 [main][TwoPhaseLoad.java:267] : Done materializing entity [org.example.models.Author#5]
DEBUG 2022-09-08 19:44:43,631 [main][LogicalConnectionManagedImpl.java:154] : Initiating JDBC connection release from afterTransaction
DEBUG 2022-09-08 19:44:43,639 [main][SqlStatementLogger.java:92] : SELECT * FROM Author
DEBUG 2022-09-08 19:44:43,641 [main][DelegatingBasicLogger.java:384] : Result set row: 0
DEBUG 2022-09-08 19:44:43,641 [main][Loader.java:1527] : Result row: EntityKey[org.example.models.Author#1]
DEBUG 2022-09-08 19:44:43,642 [main][DelegatingBasicLogger.java:384] : Result set row: 1
DEBUG 2022-09-08 19:44:43,642 [main][Loader.java:1527] : Result row: EntityKey[org.example.models.Author#2]
DEBUG 2022-09-08 19:44:43,642 [main][DelegatingBasicLogger.java:384] : Result set row: 2
DEBUG 2022-09-08 19:44:43,642 [main][Loader.java:1527] : Result row: EntityKey[org.example.models.Author#3]
DEBUG 2022-09-08 19:44:43,642 [main][DelegatingBasicLogger.java:384] : Result set row: 3
DEBUG 2022-09-08 19:44:43,642 [main][Loader.java:1527] : Result row: EntityKey[org.example.models.Author#4]
DEBUG 2022-09-08 19:44:43,642 [main][DelegatingBasicLogger.java:384] : Result set row: 4
DEBUG 2022-09-08 19:44:43,642 [main][Loader.java:1527] : Result row: EntityKey[org.example.models.Author#5]
DEBUG 2022-09-08 19:44:43,642 [main][TwoPhaseLoad.java:141] : Resolving associations for [org.example.models.Author#1]
DEBUG 2022-09-08 19:44:43,643 [main][TwoPhaseLoad.java:267] : Done materializing entity [org.example.models.Author#1]
DEBUG 2022-09-08 19:44:43,643 [main][TwoPhaseLoad.java:141] : Resolving associations for [org.example.models.Author#2]
DEBUG 2022-09-08 19:44:43,643 [main][TwoPhaseLoad.java:267] : Done materializing entity [org.example.models.Author#2]
DEBUG 2022-09-08 19:44:43,643 [main][TwoPhaseLoad.java:141] : Resolving associations for [org.example.models.Author#3]
DEBUG 2022-09-08 19:44:43,643 [main][TwoPhaseLoad.java:267] : Done materializing entity [org.example.models.Author#3]
DEBUG 2022-09-08 19:44:43,643 [main][TwoPhaseLoad.java:141] : Resolving associations for [org.example.models.Author#4]
DEBUG 2022-09-08 19:44:43,643 [main][TwoPhaseLoad.java:267] : Done materializing entity [org.example.models.Author#4]
DEBUG 2022-09-08 19:44:43,644 [main][TwoPhaseLoad.java:141] : Resolving associations for [org.example.models.Author#5]
DEBUG 2022-09-08 19:44:43,644 [main][TwoPhaseLoad.java:267] : Done materializing entity [org.example.models.Author#5]
DEBUG 2022-09-08 19:44:43,644 [main][LogicalConnectionManagedImpl.java:154] : Initiating JDBC connection release from afterTransaction
DEBUG 2022-09-08 19:44:43,646 [main][SqlStatementLogger.java:92] : select author0_.id as id1_0_0_, author0_.name as name2_0_0_, author0_.salary as salary3_0_0_ from Author author0_ where author0_.id=?
DEBUG 2022-09-08 19:44:43,650 [main][ResultSetProcessorImpl.java:120] : Starting ResultSet row #0
DEBUG 2022-09-08 19:44:43,651 [main][EntityReferenceInitializerImpl.java:126] : On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
DEBUG 2022-09-08 19:44:43,652 [main][TwoPhaseLoad.java:141] : Resolving associations for [org.example.models.Author#2]
DEBUG 2022-09-08 19:44:43,652 [main][TwoPhaseLoad.java:267] : Done materializing entity [org.example.models.Author#2]
DEBUG 2022-09-08 19:44:43,652 [main][ResourceRegistryStandardImpl.java:73] : HHH000387: ResultSet's statement was not registered
DEBUG 2022-09-08 19:44:43,653 [main][AbstractLoadPlanBasedEntityLoader.java:189] : Done entity load : org.example.models.Author#2
DEBUG 2022-09-08 19:44:43,653 [main][LogicalConnectionManagedImpl.java:154] : Initiating JDBC connection release from afterTransaction
DEBUG 2022-09-08 19:44:43,654 [main][QueryTranslatorImpl.java:278] : parse() - HQL: select a from org.example.models.Author a where a.salary between :minSalary and :maxSalary
DEBUG 2022-09-08 19:44:43,656 [main][QueryTranslatorImpl.java:296] : --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[IDENT] Node: 'org'
    |  |     |  |  |  \-[IDENT] Node: 'example'
    |  |     |  |  \-[IDENT] Node: 'models'
    |  |     |  \-[IDENT] Node: 'Author'
    |  |     \-[ALIAS] Node: 'a'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'a'
    \-[WHERE] Node: 'where'
       \-[BETWEEN] Node: 'between'
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'a'
          |  \-[IDENT] Node: 'salary'
          +-[COLON] Node: ':'
          |  \-[IDENT] Node: 'minSalary'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'maxSalary'

DEBUG 2022-09-08 19:44:43,656 [main][ErrorCounter.java:95] : throwQueryException() : no errors
DEBUG 2022-09-08 19:44:43,656 [main][HqlSqlBaseWalker.java:124] : select << begin [level=1, statement=select]
DEBUG 2022-09-08 19:44:43,657 [main][FromElement.java:148] : FromClause{level=1} : org.example.models.Author (a) -> author0_
DEBUG 2022-09-08 19:44:43,657 [main][FromReferenceNode.java:60] : Resolved : a -> author0_.id
DEBUG 2022-09-08 19:44:43,657 [main][FromReferenceNode.java:60] : Resolved : a -> author0_.id
DEBUG 2022-09-08 19:44:43,658 [main][DotNode.java:661] : getDataType() : salary -> org.hibernate.type.IntegerType@6e121d46
DEBUG 2022-09-08 19:44:43,658 [main][FromReferenceNode.java:60] : Resolved : a.salary -> author0_.salary
DEBUG 2022-09-08 19:44:43,659 [main][HqlSqlBaseWalker.java:128] : select : finishing up [level=1, statement=select]
DEBUG 2022-09-08 19:44:43,659 [main][HqlSqlWalker.java:725] : processQuery() :  ( SELECT ( {select clause} author0_.id ) ( FromClause{level=1} Author author0_ ) ( where ( between ( author0_.salary author0_.id salary ) ? ? ) ) )
DEBUG 2022-09-08 19:44:43,659 [main][JoinProcessor.java:169] : Using FROM fragment [Author author0_]
DEBUG 2022-09-08 19:44:43,659 [main][HqlSqlBaseWalker.java:132] : select >> end [level=1, statement=select]
DEBUG 2022-09-08 19:44:43,659 [main][QueryTranslatorImpl.java:265] : --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (Author)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'author0_.id as id1_0_' {alias=a, className=org.example.models.Author, tableAlias=author0_}
    |  \-[SQL_TOKEN] SqlFragment: 'author0_.name as name2_0_, author0_.salary as salary3_0_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[a], fromElementByTableAlias=[author0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'Author author0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=a,role=null,tableName=Author,tableAlias=author0_,origin=null,columns={,className=org.example.models.Author}}
    \-[WHERE] SqlNode: 'where'
       \-[BETWEEN] BetweenOperatorNode: 'between'
          +-[DOT] DotNode: 'author0_.salary' {propertyName=salary,dereferenceType=PRIMITIVE,getPropertyPath=salary,path=a.salary,tableAlias=author0_,className=org.example.models.Author,classAlias=a}
          |  +-[ALIAS_REF] IdentNode: 'author0_.id' {alias=a, className=org.example.models.Author, tableAlias=author0_}
          |  \-[IDENT] IdentNode: 'salary' {originalText=salary}
          +-[NAMED_PARAM] ParameterNode: '?' {name=minSalary, expectedType=org.hibernate.type.IntegerType@6e121d46}
          \-[NAMED_PARAM] ParameterNode: '?' {name=maxSalary, expectedType=org.hibernate.type.IntegerType@6e121d46}

DEBUG 2022-09-08 19:44:43,660 [main][ErrorCounter.java:95] : throwQueryException() : no errors
DEBUG 2022-09-08 19:44:43,660 [main][QueryTranslatorImpl.java:247] : HQL: select a from org.example.models.Author a where a.salary between :minSalary and :maxSalary
DEBUG 2022-09-08 19:44:43,660 [main][QueryTranslatorImpl.java:248] : SQL: select author0_.id as id1_0_, author0_.name as name2_0_, author0_.salary as salary3_0_ from Author author0_ where author0_.salary between ? and ?
DEBUG 2022-09-08 19:44:43,660 [main][ErrorCounter.java:95] : throwQueryException() : no errors
DEBUG 2022-09-08 19:44:43,662 [main][SqlStatementLogger.java:92] : select author0_.id as id1_0_, author0_.name as name2_0_, author0_.salary as salary3_0_ from Author author0_ where author0_.salary between ? and ?
DEBUG 2022-09-08 19:44:43,664 [main][DelegatingBasicLogger.java:384] : Result set row: 0
DEBUG 2022-09-08 19:44:43,664 [main][Loader.java:1527] : Result row: EntityKey[org.example.models.Author#2]
DEBUG 2022-09-08 19:44:43,664 [main][DelegatingBasicLogger.java:384] : Result set row: 1
DEBUG 2022-09-08 19:44:43,664 [main][Loader.java:1527] : Result row: EntityKey[org.example.models.Author#3]
DEBUG 2022-09-08 19:44:43,664 [main][DelegatingBasicLogger.java:384] : Result set row: 2
DEBUG 2022-09-08 19:44:43,665 [main][Loader.java:1527] : Result row: EntityKey[org.example.models.Author#4]
DEBUG 2022-09-08 19:44:43,665 [main][TwoPhaseLoad.java:141] : Resolving associations for [org.example.models.Author#2]
DEBUG 2022-09-08 19:44:43,665 [main][TwoPhaseLoad.java:267] : Done materializing entity [org.example.models.Author#2]
DEBUG 2022-09-08 19:44:43,665 [main][TwoPhaseLoad.java:141] : Resolving associations for [org.example.models.Author#3]
DEBUG 2022-09-08 19:44:43,665 [main][TwoPhaseLoad.java:267] : Done materializing entity [org.example.models.Author#3]
DEBUG 2022-09-08 19:44:43,665 [main][TwoPhaseLoad.java:141] : Resolving associations for [org.example.models.Author#4]
DEBUG 2022-09-08 19:44:43,665 [main][TwoPhaseLoad.java:267] : Done materializing entity [org.example.models.Author#4]
DEBUG 2022-09-08 19:44:43,665 [main][LogicalConnectionManagedImpl.java:154] : Initiating JDBC connection release from afterTransaction
DEBUG 2022-09-08 19:44:43,666 [main][SqlStatementLogger.java:92] : select author0_.id as id1_0_0_, author0_.name as name2_0_0_, author0_.salary as salary3_0_0_ from Author author0_ where author0_.id=?
DEBUG 2022-09-08 19:44:43,667 [main][ResultSetProcessorImpl.java:120] : Starting ResultSet row #0
DEBUG 2022-09-08 19:44:43,667 [main][EntityReferenceInitializerImpl.java:126] : On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
DEBUG 2022-09-08 19:44:43,668 [main][TwoPhaseLoad.java:141] : Resolving associations for [org.example.models.Author#2]
DEBUG 2022-09-08 19:44:43,668 [main][TwoPhaseLoad.java:267] : Done materializing entity [org.example.models.Author#2]
DEBUG 2022-09-08 19:44:43,669 [main][ResourceRegistryStandardImpl.java:73] : HHH000387: ResultSet's statement was not registered
DEBUG 2022-09-08 19:44:43,669 [main][AbstractLoadPlanBasedEntityLoader.java:189] : Done entity load : org.example.models.Author#2
DEBUG 2022-09-08 19:44:43,669 [main][LogicalConnectionManagedImpl.java:154] : Initiating JDBC connection release from afterTransaction
DEBUG 2022-09-08 19:44:43,669 [main][TransactionImpl.java:55] : begin
DEBUG 2022-09-08 19:44:43,670 [main][TransactionImpl.java:66] : committing
DEBUG 2022-09-08 19:44:43,670 [main][AbstractFlushingEventListener.java:132] : Processing flush-time cascades
DEBUG 2022-09-08 19:44:43,670 [main][AbstractFlushingEventListener.java:174] : Dirty checking collections
DEBUG 2022-09-08 19:44:43,671 [main][Collections.java:206] : Collection found: [org.example.models.Author.books#2], was: [org.example.models.Author.books#2] (uninitialized)
DEBUG 2022-09-08 19:44:43,672 [main][Collections.java:206] : Collection found: [org.example.models.Author.photos#2], was: [org.example.models.Author.photos#2] (uninitialized)
DEBUG 2022-09-08 19:44:43,672 [main][AbstractFlushingEventListener.java:106] : Flushed: 0 insertions, 1 updates, 0 deletions to 1 objects
DEBUG 2022-09-08 19:44:43,672 [main][AbstractFlushingEventListener.java:113] : Flushed: 0 (re)creations, 0 updates, 0 removals to 2 collections
DEBUG 2022-09-08 19:44:43,672 [main][EntityPrinter.java:102] : Listing entities:
DEBUG 2022-09-08 19:44:43,672 [main][EntityPrinter.java:109] : org.example.models.Author{books=<uninitialized>, name=Ihor Kosolapow, id=2, salary=3801, photos=<uninitialized>}
DEBUG 2022-09-08 19:44:43,677 [main][SqlStatementLogger.java:92] : update Author set name=? where id=?
DEBUG 2022-09-08 19:44:43,679 [main][LogicalConnectionManagedImpl.java:154] : Initiating JDBC connection release from afterTransaction
DEBUG 2022-09-08 19:44:43,680 [main][LogicalConnectionManagedImpl.java:154] : Initiating JDBC connection release from afterTransaction
DEBUG 2022-09-08 19:44:43,680 [main][JdbcCoordinatorImpl.java:177] : HHH000420: Closing un-released batch
DEBUG 2022-09-08 19:44:43,681 [main][SqlStatementLogger.java:92] : select author0_.id as id1_0_0_, author0_.name as name2_0_0_, author0_.salary as salary3_0_0_ from Author author0_ where author0_.id=?
DEBUG 2022-09-08 19:44:43,682 [main][ResultSetProcessorImpl.java:120] : Starting ResultSet row #0
DEBUG 2022-09-08 19:44:43,683 [main][EntityReferenceInitializerImpl.java:126] : On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
DEBUG 2022-09-08 19:44:43,683 [main][TwoPhaseLoad.java:141] : Resolving associations for [org.example.models.Author#2]
DEBUG 2022-09-08 19:44:43,683 [main][TwoPhaseLoad.java:267] : Done materializing entity [org.example.models.Author#2]
DEBUG 2022-09-08 19:44:43,683 [main][ResourceRegistryStandardImpl.java:73] : HHH000387: ResultSet's statement was not registered
DEBUG 2022-09-08 19:44:43,683 [main][AbstractLoadPlanBasedEntityLoader.java:189] : Done entity load : org.example.models.Author#2
DEBUG 2022-09-08 19:44:43,683 [main][LogicalConnectionManagedImpl.java:154] : Initiating JDBC connection release from afterTransaction
DEBUG 2022-09-08 19:44:43,685 [main][CriteriaQueryImpl.java:307] : Rendered criteria query -> select avg(generatedAlias0.salary) from Author as generatedAlias0
DEBUG 2022-09-08 19:44:43,686 [main][QueryTranslatorImpl.java:278] : parse() - HQL: select avg(generatedAlias0.salary) from org.example.models.Author as generatedAlias0
DEBUG 2022-09-08 19:44:43,687 [main][QueryTranslatorImpl.java:296] : --- HQL AST ---
 \-[QUERY] Node: 'query'
    \-[SELECT_FROM] Node: 'SELECT_FROM'
       +-[FROM] Node: 'from'
       |  \-[RANGE] Node: 'RANGE'
       |     +-[DOT] Node: '.'
       |     |  +-[DOT] Node: '.'
       |     |  |  +-[DOT] Node: '.'
       |     |  |  |  +-[IDENT] Node: 'org'
       |     |  |  |  \-[IDENT] Node: 'example'
       |     |  |  \-[IDENT] Node: 'models'
       |     |  \-[IDENT] Node: 'Author'
       |     \-[ALIAS] Node: 'generatedAlias0'
       \-[SELECT] Node: 'select'
          \-[AGGREGATE] Node: 'avg'
             \-[DOT] Node: '.'
                +-[IDENT] Node: 'generatedAlias0'
                \-[IDENT] Node: 'salary'

DEBUG 2022-09-08 19:44:43,688 [main][ErrorCounter.java:95] : throwQueryException() : no errors
DEBUG 2022-09-08 19:44:43,688 [main][HqlSqlBaseWalker.java:124] : select << begin [level=1, statement=select]
DEBUG 2022-09-08 19:44:43,688 [main][FromElement.java:148] : FromClause{level=1} : org.example.models.Author (generatedAlias0) -> author0_
DEBUG 2022-09-08 19:44:43,689 [main][FromReferenceNode.java:60] : Resolved : generatedAlias0 -> author0_.id
DEBUG 2022-09-08 19:44:43,689 [main][DotNode.java:661] : getDataType() : salary -> org.hibernate.type.IntegerType@6e121d46
DEBUG 2022-09-08 19:44:43,689 [main][FromReferenceNode.java:60] : Resolved : generatedAlias0.salary -> author0_.salary
DEBUG 2022-09-08 19:44:43,689 [main][HqlSqlBaseWalker.java:128] : select : finishing up [level=1, statement=select]
DEBUG 2022-09-08 19:44:43,690 [main][HqlSqlWalker.java:725] : processQuery() :  ( SELECT ( {select clause} ( avg ( author0_.salary author0_.id salary ) ) ) ( FromClause{level=1} Author author0_ ) )
DEBUG 2022-09-08 19:44:43,690 [main][JoinProcessor.java:169] : Using FROM fragment [Author author0_]
DEBUG 2022-09-08 19:44:43,690 [main][HqlSqlBaseWalker.java:132] : select >> end [level=1, statement=select]
DEBUG 2022-09-08 19:44:43,690 [main][QueryTranslatorImpl.java:265] : --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (Author)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[AGGREGATE] AggregateNode: 'avg'
    |  |  \-[DOT] DotNode: 'author0_.salary' {propertyName=salary,dereferenceType=PRIMITIVE,getPropertyPath=salary,path=generatedAlias0.salary,tableAlias=author0_,className=org.example.models.Author,classAlias=generatedAlias0}
    |  |     +-[ALIAS_REF] IdentNode: 'author0_.id' {alias=generatedAlias0, className=org.example.models.Author, tableAlias=author0_}
    |  |     \-[IDENT] IdentNode: 'salary' {originalText=salary}
    |  \-[SELECT_COLUMNS] SqlNode: ' as col_0_0_'
    \-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[author0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'Author author0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=Author,tableAlias=author0_,origin=null,columns={,className=org.example.models.Author}}

DEBUG 2022-09-08 19:44:43,690 [main][ErrorCounter.java:95] : throwQueryException() : no errors
DEBUG 2022-09-08 19:44:43,691 [main][QueryTranslatorImpl.java:247] : HQL: select avg(generatedAlias0.salary) from org.example.models.Author as generatedAlias0
DEBUG 2022-09-08 19:44:43,692 [main][QueryTranslatorImpl.java:248] : SQL: select avg(author0_.salary) as col_0_0_ from Author author0_
DEBUG 2022-09-08 19:44:43,692 [main][ErrorCounter.java:95] : throwQueryException() : no errors
DEBUG 2022-09-08 19:44:43,692 [main][SqlStatementLogger.java:92] : select avg(author0_.salary) as col_0_0_ from Author author0_
DEBUG 2022-09-08 19:44:43,694 [main][DelegatingBasicLogger.java:384] : Result set row: 0
DEBUG 2022-09-08 19:44:43,694 [main][Loader.java:1527] : Result row: 
DEBUG 2022-09-08 19:44:43,695 [main][LogicalConnectionManagedImpl.java:154] : Initiating JDBC connection release from afterTransaction
DEBUG 2022-09-08 19:44:43,698 [main][CriteriaQueryImpl.java:307] : Rendered criteria query -> select generatedAlias0 from Author as generatedAlias0 where generatedAlias0.salary>3000
DEBUG 2022-09-08 19:44:43,699 [main][QueryTranslatorImpl.java:278] : parse() - HQL: select generatedAlias0 from org.example.models.Author as generatedAlias0 where generatedAlias0.salary>3000
DEBUG 2022-09-08 19:44:43,700 [main][QueryTranslatorImpl.java:296] : --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[IDENT] Node: 'org'
    |  |     |  |  |  \-[IDENT] Node: 'example'
    |  |     |  |  \-[IDENT] Node: 'models'
    |  |     |  \-[IDENT] Node: 'Author'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[GT] Node: '>'
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'salary'
          \-[NUM_INT] Node: '3000'

DEBUG 2022-09-08 19:44:43,700 [main][ErrorCounter.java:95] : throwQueryException() : no errors
DEBUG 2022-09-08 19:44:43,701 [main][HqlSqlBaseWalker.java:124] : select << begin [level=1, statement=select]
DEBUG 2022-09-08 19:44:43,701 [main][FromElement.java:148] : FromClause{level=1} : org.example.models.Author (generatedAlias0) -> author0_
DEBUG 2022-09-08 19:44:43,702 [main][FromReferenceNode.java:60] : Resolved : generatedAlias0 -> author0_.id
DEBUG 2022-09-08 19:44:43,703 [main][FromReferenceNode.java:60] : Resolved : generatedAlias0 -> author0_.id
DEBUG 2022-09-08 19:44:43,703 [main][DotNode.java:661] : getDataType() : salary -> org.hibernate.type.IntegerType@6e121d46
DEBUG 2022-09-08 19:44:43,703 [main][FromReferenceNode.java:60] : Resolved : generatedAlias0.salary -> author0_.salary
DEBUG 2022-09-08 19:44:43,704 [main][HqlSqlBaseWalker.java:128] : select : finishing up [level=1, statement=select]
DEBUG 2022-09-08 19:44:43,704 [main][HqlSqlWalker.java:725] : processQuery() :  ( SELECT ( {select clause} author0_.id ) ( FromClause{level=1} Author author0_ ) ( where ( > ( author0_.salary author0_.id salary ) 3000 ) ) )
DEBUG 2022-09-08 19:44:43,704 [main][JoinProcessor.java:169] : Using FROM fragment [Author author0_]
DEBUG 2022-09-08 19:44:43,704 [main][HqlSqlBaseWalker.java:132] : select >> end [level=1, statement=select]
DEBUG 2022-09-08 19:44:43,704 [main][QueryTranslatorImpl.java:265] : --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (Author)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'author0_.id as id1_0_' {alias=generatedAlias0, className=org.example.models.Author, tableAlias=author0_}
    |  \-[SQL_TOKEN] SqlFragment: 'author0_.name as name2_0_, author0_.salary as salary3_0_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[author0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'Author author0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=Author,tableAlias=author0_,origin=null,columns={,className=org.example.models.Author}}
    \-[WHERE] SqlNode: 'where'
       \-[GT] BinaryLogicOperatorNode: '>'
          +-[DOT] DotNode: 'author0_.salary' {propertyName=salary,dereferenceType=PRIMITIVE,getPropertyPath=salary,path=generatedAlias0.salary,tableAlias=author0_,className=org.example.models.Author,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'author0_.id' {alias=generatedAlias0, className=org.example.models.Author, tableAlias=author0_}
          |  \-[IDENT] IdentNode: 'salary' {originalText=salary}
          \-[NUM_INT] LiteralNode: '3000'

DEBUG 2022-09-08 19:44:43,704 [main][ErrorCounter.java:95] : throwQueryException() : no errors
DEBUG 2022-09-08 19:44:43,705 [main][QueryTranslatorImpl.java:247] : HQL: select generatedAlias0 from org.example.models.Author as generatedAlias0 where generatedAlias0.salary>3000
DEBUG 2022-09-08 19:44:43,705 [main][QueryTranslatorImpl.java:248] : SQL: select author0_.id as id1_0_, author0_.name as name2_0_, author0_.salary as salary3_0_ from Author author0_ where author0_.salary>3000
DEBUG 2022-09-08 19:44:43,705 [main][ErrorCounter.java:95] : throwQueryException() : no errors
DEBUG 2022-09-08 19:44:43,706 [main][SqlStatementLogger.java:92] : select author0_.id as id1_0_, author0_.name as name2_0_, author0_.salary as salary3_0_ from Author author0_ where author0_.salary>3000
DEBUG 2022-09-08 19:44:43,707 [main][DelegatingBasicLogger.java:384] : Result set row: 0
DEBUG 2022-09-08 19:44:43,707 [main][Loader.java:1527] : Result row: EntityKey[org.example.models.Author#1]
DEBUG 2022-09-08 19:44:43,708 [main][DelegatingBasicLogger.java:384] : Result set row: 1
DEBUG 2022-09-08 19:44:43,708 [main][Loader.java:1527] : Result row: EntityKey[org.example.models.Author#2]
DEBUG 2022-09-08 19:44:43,708 [main][DelegatingBasicLogger.java:384] : Result set row: 2
DEBUG 2022-09-08 19:44:43,708 [main][Loader.java:1527] : Result row: EntityKey[org.example.models.Author#3]
DEBUG 2022-09-08 19:44:43,708 [main][DelegatingBasicLogger.java:384] : Result set row: 3
DEBUG 2022-09-08 19:44:43,708 [main][Loader.java:1527] : Result row: EntityKey[org.example.models.Author#4]
DEBUG 2022-09-08 19:44:43,708 [main][DelegatingBasicLogger.java:384] : Result set row: 4
DEBUG 2022-09-08 19:44:43,708 [main][Loader.java:1527] : Result row: EntityKey[org.example.models.Author#5]
DEBUG 2022-09-08 19:44:43,708 [main][TwoPhaseLoad.java:141] : Resolving associations for [org.example.models.Author#1]
DEBUG 2022-09-08 19:44:43,709 [main][TwoPhaseLoad.java:267] : Done materializing entity [org.example.models.Author#1]
DEBUG 2022-09-08 19:44:43,709 [main][TwoPhaseLoad.java:141] : Resolving associations for [org.example.models.Author#2]
DEBUG 2022-09-08 19:44:43,709 [main][TwoPhaseLoad.java:267] : Done materializing entity [org.example.models.Author#2]
DEBUG 2022-09-08 19:44:43,709 [main][TwoPhaseLoad.java:141] : Resolving associations for [org.example.models.Author#3]
DEBUG 2022-09-08 19:44:43,709 [main][TwoPhaseLoad.java:267] : Done materializing entity [org.example.models.Author#3]
DEBUG 2022-09-08 19:44:43,709 [main][TwoPhaseLoad.java:141] : Resolving associations for [org.example.models.Author#4]
DEBUG 2022-09-08 19:44:43,709 [main][TwoPhaseLoad.java:267] : Done materializing entity [org.example.models.Author#4]
DEBUG 2022-09-08 19:44:43,710 [main][TwoPhaseLoad.java:141] : Resolving associations for [org.example.models.Author#5]
DEBUG 2022-09-08 19:44:43,710 [main][TwoPhaseLoad.java:267] : Done materializing entity [org.example.models.Author#5]
DEBUG 2022-09-08 19:44:43,710 [main][LogicalConnectionManagedImpl.java:154] : Initiating JDBC connection release from afterTransaction
DEBUG 2022-09-08 19:45:12,917 [pool-1-thread-1][PooledConnections.java:51] : Connection pool now considered primed; min-size will be maintained
WARN  2022-09-08 19:52:44,426 [main][Main.java:17] : TEST
DEBUG 2022-09-08 19:52:44,484 [main][CoreLogging.java:28] : Logging Provider: org.jboss.logging.Log4jLoggerProvider
DEBUG 2022-09-08 19:52:44,491 [main][IntegratorServiceImpl.java:46] : Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
DEBUG 2022-09-08 19:52:44,494 [main][IntegratorServiceImpl.java:46] : Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
DEBUG 2022-09-08 19:52:44,498 [main][IntegratorServiceImpl.java:46] : Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
INFO  2022-09-08 19:52:44,580 [main][Version.java:45] : HHH000412: Hibernate Core {5.2.2.Final}
INFO  2022-09-08 19:52:44,583 [main][Environment.java:213] : HHH000206: hibernate.properties not found
INFO  2022-09-08 19:52:44,584 [main][Environment.java:318] : HHH000021: Bytecode provider name : javassist
DEBUG 2022-09-08 19:52:44,608 [main][LocalXmlResourceResolver.java:57] : Interpreting public/system identifier : [null] - [http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd]
DEBUG 2022-09-08 19:52:44,609 [main][LocalXmlResourceResolver.java:85] : Recognized hibernate-configuration identifier; attempting to resolve on classpath under org/hibernate/
DEBUG 2022-09-08 19:52:44,617 [main][JaxbCfgProcessor.java:116] : cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
DEBUG 2022-09-08 19:52:44,847 [main][Configuration.java:724] : Building session factory using internal StandardServiceRegistryBuilder
DEBUG 2022-09-08 19:52:44,851 [main][ServiceBinding.java:68] : Overriding existing service binding [org.hibernate.secure.spi.JaccService]
DEBUG 2022-09-08 19:52:44,852 [main][Configuration.java:652] : Building session factory using provided StandardServiceRegistry
DEBUG 2022-09-08 19:52:44,862 [main][RegionFactoryInitiator.java:75] : Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
INFO  2022-09-08 19:52:44,871 [main][JavaReflectionManager.java:66] : HCANN000001: Hibernate Commons Annotations {5.0.1.Final}
DEBUG 2022-09-08 19:52:44,887 [main][BasicTypeRegistry.java:145] : Adding type registration boolean -> org.hibernate.type.BooleanType@526a01ef
DEBUG 2022-09-08 19:52:44,888 [main][BasicTypeRegistry.java:145] : Adding type registration boolean -> org.hibernate.type.BooleanType@526a01ef
DEBUG 2022-09-08 19:52:44,888 [main][BasicTypeRegistry.java:145] : Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@526a01ef
DEBUG 2022-09-08 19:52:44,889 [main][BasicTypeRegistry.java:145] : Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@910a2a78
DEBUG 2022-09-08 19:52:44,890 [main][BasicTypeRegistry.java:145] : Adding type registration true_false -> org.hibernate.type.TrueFalseType@33fa67de
DEBUG 2022-09-08 19:52:44,891 [main][BasicTypeRegistry.java:145] : Adding type registration yes_no -> org.hibernate.type.YesNoType@763b5573
DEBUG 2022-09-08 19:52:44,892 [main][BasicTypeRegistry.java:145] : Adding type registration byte -> org.hibernate.type.ByteType@b26e5ad2
DEBUG 2022-09-08 19:52:44,893 [main][BasicTypeRegistry.java:145] : Adding type registration byte -> org.hibernate.type.ByteType@b26e5ad2
DEBUG 2022-09-08 19:52:44,894 [main][BasicTypeRegistry.java:145] : Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@b26e5ad2
DEBUG 2022-09-08 19:52:44,895 [main][BasicTypeRegistry.java:145] : Adding type registration character -> org.hibernate.type.CharacterType@f0ecaad5
DEBUG 2022-09-08 19:52:44,896 [main][BasicTypeRegistry.java:145] : Adding type registration char -> org.hibernate.type.CharacterType@f0ecaad5
DEBUG 2022-09-08 19:52:44,897 [main][BasicTypeRegistry.java:145] : Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@f0ecaad5
DEBUG 2022-09-08 19:52:44,898 [main][BasicTypeRegistry.java:145] : Adding type registration short -> org.hibernate.type.ShortType@9014c3be
DEBUG 2022-09-08 19:52:44,899 [main][BasicTypeRegistry.java:145] : Adding type registration short -> org.hibernate.type.ShortType@9014c3be
DEBUG 2022-09-08 19:52:44,900 [main][BasicTypeRegistry.java:145] : Adding type registration java.lang.Short -> org.hibernate.type.ShortType@9014c3be
DEBUG 2022-09-08 19:52:44,902 [main][BasicTypeRegistry.java:145] : Adding type registration integer -> org.hibernate.type.IntegerType@7be6d12
DEBUG 2022-09-08 19:52:44,903 [main][BasicTypeRegistry.java:145] : Adding type registration int -> org.hibernate.type.IntegerType@7be6d12
DEBUG 2022-09-08 19:52:44,904 [main][BasicTypeRegistry.java:145] : Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@7be6d12
DEBUG 2022-09-08 19:52:44,905 [main][BasicTypeRegistry.java:145] : Adding type registration long -> org.hibernate.type.LongType@17bc503
DEBUG 2022-09-08 19:52:44,906 [main][BasicTypeRegistry.java:145] : Adding type registration long -> org.hibernate.type.LongType@17bc503
DEBUG 2022-09-08 19:52:44,907 [main][BasicTypeRegistry.java:145] : Adding type registration java.lang.Long -> org.hibernate.type.LongType@17bc503
DEBUG 2022-09-08 19:52:44,908 [main][BasicTypeRegistry.java:145] : Adding type registration float -> org.hibernate.type.FloatType@96c00e05
DEBUG 2022-09-08 19:52:44,908 [main][BasicTypeRegistry.java:145] : Adding type registration float -> org.hibernate.type.FloatType@96c00e05
DEBUG 2022-09-08 19:52:44,909 [main][BasicTypeRegistry.java:145] : Adding type registration java.lang.Float -> org.hibernate.type.FloatType@96c00e05
DEBUG 2022-09-08 19:52:44,910 [main][BasicTypeRegistry.java:145] : Adding type registration double -> org.hibernate.type.DoubleType@42f974a7
DEBUG 2022-09-08 19:52:44,911 [main][BasicTypeRegistry.java:145] : Adding type registration double -> org.hibernate.type.DoubleType@42f974a7
DEBUG 2022-09-08 19:52:44,911 [main][BasicTypeRegistry.java:145] : Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@42f974a7
DEBUG 2022-09-08 19:52:44,913 [main][BasicTypeRegistry.java:145] : Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@696fedfc
DEBUG 2022-09-08 19:52:44,913 [main][BasicTypeRegistry.java:145] : Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@696fedfc
DEBUG 2022-09-08 19:52:44,914 [main][BasicTypeRegistry.java:145] : Adding type registration big_integer -> org.hibernate.type.BigIntegerType@aac7de46
DEBUG 2022-09-08 19:52:44,915 [main][BasicTypeRegistry.java:145] : Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@aac7de46
DEBUG 2022-09-08 19:52:44,916 [main][BasicTypeRegistry.java:145] : Adding type registration string -> org.hibernate.type.StringType@337e2fd6
DEBUG 2022-09-08 19:52:44,916 [main][BasicTypeRegistry.java:145] : Adding type registration java.lang.String -> org.hibernate.type.StringType@337e2fd6
DEBUG 2022-09-08 19:52:44,917 [main][BasicTypeRegistry.java:145] : Adding type registration nstring -> org.hibernate.type.StringNVarcharType@c649bead
DEBUG 2022-09-08 19:52:44,919 [main][BasicTypeRegistry.java:145] : Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@5a524b23
DEBUG 2022-09-08 19:52:44,920 [main][BasicTypeRegistry.java:145] : Adding type registration url -> org.hibernate.type.UrlType@e5e6157c
DEBUG 2022-09-08 19:52:44,920 [main][BasicTypeRegistry.java:145] : Adding type registration java.net.URL -> org.hibernate.type.UrlType@e5e6157c
DEBUG 2022-09-08 19:52:44,922 [main][BasicTypeRegistry.java:145] : Adding type registration Duration -> org.hibernate.type.DurationType@6989c08c
DEBUG 2022-09-08 19:52:44,923 [main][BasicTypeRegistry.java:145] : Adding type registration java.time.Duration -> org.hibernate.type.DurationType@6989c08c
DEBUG 2022-09-08 19:52:44,930 [main][BasicTypeRegistry.java:145] : Adding type registration Instant -> org.hibernate.type.InstantType@1715df6d
DEBUG 2022-09-08 19:52:44,931 [main][BasicTypeRegistry.java:145] : Adding type registration java.time.Instant -> org.hibernate.type.InstantType@1715df6d
DEBUG 2022-09-08 19:52:44,932 [main][BasicTypeRegistry.java:145] : Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@615259fe
DEBUG 2022-09-08 19:52:44,933 [main][BasicTypeRegistry.java:145] : Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@615259fe
DEBUG 2022-09-08 19:52:44,934 [main][BasicTypeRegistry.java:145] : Adding type registration LocalDate -> org.hibernate.type.LocalDateType@38647f30
DEBUG 2022-09-08 19:52:44,934 [main][BasicTypeRegistry.java:145] : Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@38647f30
DEBUG 2022-09-08 19:52:44,936 [main][BasicTypeRegistry.java:145] : Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@32bfe0ab
DEBUG 2022-09-08 19:52:44,936 [main][BasicTypeRegistry.java:145] : Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@32bfe0ab
DEBUG 2022-09-08 19:52:44,937 [main][BasicTypeRegistry.java:145] : Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@3e80389d
DEBUG 2022-09-08 19:52:44,937 [main][BasicTypeRegistry.java:145] : Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@3e80389d
DEBUG 2022-09-08 19:52:44,938 [main][BasicTypeRegistry.java:145] : Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@3f8fc3cb
DEBUG 2022-09-08 19:52:44,939 [main][BasicTypeRegistry.java:145] : Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@3f8fc3cb
DEBUG 2022-09-08 19:52:44,940 [main][BasicTypeRegistry.java:145] : Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@91ba1ab2
DEBUG 2022-09-08 19:52:44,941 [main][BasicTypeRegistry.java:145] : Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@91ba1ab2
DEBUG 2022-09-08 19:52:44,942 [main][BasicTypeRegistry.java:145] : Adding type registration date -> org.hibernate.type.DateType@c364d681
DEBUG 2022-09-08 19:52:44,942 [main][BasicTypeRegistry.java:145] : Adding type registration java.sql.Date -> org.hibernate.type.DateType@c364d681
DEBUG 2022-09-08 19:52:44,943 [main][BasicTypeRegistry.java:145] : Adding type registration time -> org.hibernate.type.TimeType@871521b3
DEBUG 2022-09-08 19:52:44,944 [main][BasicTypeRegistry.java:145] : Adding type registration java.sql.Time -> org.hibernate.type.TimeType@871521b3
DEBUG 2022-09-08 19:52:44,945 [main][BasicTypeRegistry.java:145] : Adding type registration timestamp -> org.hibernate.type.TimestampType@baea5f1e
DEBUG 2022-09-08 19:52:44,945 [main][BasicTypeRegistry.java:145] : Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@baea5f1e
DEBUG 2022-09-08 19:52:44,946 [main][BasicTypeRegistry.java:145] : Adding type registration java.util.Date -> org.hibernate.type.TimestampType@baea5f1e
DEBUG 2022-09-08 19:52:44,948 [main][BasicTypeRegistry.java:145] : Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@54cc5a1d
DEBUG 2022-09-08 19:52:44,949 [main][BasicTypeRegistry.java:145] : Adding type registration calendar -> org.hibernate.type.CalendarType@55ede435
DEBUG 2022-09-08 19:52:44,949 [main][BasicTypeRegistry.java:145] : Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@55ede435
DEBUG 2022-09-08 19:52:44,950 [main][BasicTypeRegistry.java:145] : Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@55ede435
DEBUG 2022-09-08 19:52:44,950 [main][BasicTypeRegistry.java:145] : Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@1e1caaf1
DEBUG 2022-09-08 19:52:44,951 [main][BasicTypeRegistry.java:145] : Adding type registration locale -> org.hibernate.type.LocaleType@b6234c79
DEBUG 2022-09-08 19:52:44,951 [main][BasicTypeRegistry.java:145] : Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@b6234c79
DEBUG 2022-09-08 19:52:44,952 [main][BasicTypeRegistry.java:145] : Adding type registration currency -> org.hibernate.type.CurrencyType@5cb27738
DEBUG 2022-09-08 19:52:44,952 [main][BasicTypeRegistry.java:145] : Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@5cb27738
DEBUG 2022-09-08 19:52:44,953 [main][BasicTypeRegistry.java:145] : Adding type registration timezone -> org.hibernate.type.TimeZoneType@b7bb0073
DEBUG 2022-09-08 19:52:44,953 [main][BasicTypeRegistry.java:145] : Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@b7bb0073
DEBUG 2022-09-08 19:52:44,954 [main][BasicTypeRegistry.java:145] : Adding type registration class -> org.hibernate.type.ClassType@3b9a748f
DEBUG 2022-09-08 19:52:44,954 [main][BasicTypeRegistry.java:145] : Adding type registration java.lang.Class -> org.hibernate.type.ClassType@3b9a748f
DEBUG 2022-09-08 19:52:44,959 [main][BasicTypeRegistry.java:145] : Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@822138c9
DEBUG 2022-09-08 19:52:44,959 [main][BasicTypeRegistry.java:145] : Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@822138c9
DEBUG 2022-09-08 19:52:44,959 [main][BasicTypeRegistry.java:145] : Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@2e7dac26
DEBUG 2022-09-08 19:52:44,960 [main][BasicTypeRegistry.java:145] : Adding type registration binary -> org.hibernate.type.BinaryType@538c7fd5
DEBUG 2022-09-08 19:52:44,960 [main][BasicTypeRegistry.java:145] : Adding type registration byte[] -> org.hibernate.type.BinaryType@538c7fd5
DEBUG 2022-09-08 19:52:44,961 [main][BasicTypeRegistry.java:145] : Adding type registration [B -> org.hibernate.type.BinaryType@538c7fd5
DEBUG 2022-09-08 19:52:44,961 [main][BasicTypeRegistry.java:145] : Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@b715b595
DEBUG 2022-09-08 19:52:44,962 [main][BasicTypeRegistry.java:145] : Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@b715b595
DEBUG 2022-09-08 19:52:44,962 [main][BasicTypeRegistry.java:145] : Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@b715b595
DEBUG 2022-09-08 19:52:44,963 [main][BasicTypeRegistry.java:145] : Adding type registration row_version -> org.hibernate.type.RowVersionType@8d5b8331
DEBUG 2022-09-08 19:52:44,963 [main][BasicTypeRegistry.java:145] : Adding type registration image -> org.hibernate.type.ImageType@1d60e8c3
DEBUG 2022-09-08 19:52:44,964 [main][BasicTypeRegistry.java:145] : Adding type registration characters -> org.hibernate.type.CharArrayType@309c10aa
DEBUG 2022-09-08 19:52:44,964 [main][BasicTypeRegistry.java:145] : Adding type registration char[] -> org.hibernate.type.CharArrayType@309c10aa
DEBUG 2022-09-08 19:52:44,965 [main][BasicTypeRegistry.java:145] : Adding type registration [C -> org.hibernate.type.CharArrayType@309c10aa
DEBUG 2022-09-08 19:52:44,965 [main][BasicTypeRegistry.java:145] : Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@b1380592
DEBUG 2022-09-08 19:52:44,965 [main][BasicTypeRegistry.java:145] : Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@b1380592
DEBUG 2022-09-08 19:52:44,966 [main][BasicTypeRegistry.java:145] : Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@b1380592
DEBUG 2022-09-08 19:52:44,966 [main][BasicTypeRegistry.java:145] : Adding type registration text -> org.hibernate.type.TextType@5f70e839
DEBUG 2022-09-08 19:52:44,968 [main][BasicTypeRegistry.java:145] : Adding type registration ntext -> org.hibernate.type.NTextType@8fa820bc
DEBUG 2022-09-08 19:52:44,970 [main][BasicTypeRegistry.java:145] : Adding type registration blob -> org.hibernate.type.BlobType@cc37e18d
DEBUG 2022-09-08 19:52:44,971 [main][BasicTypeRegistry.java:145] : Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@cc37e18d
DEBUG 2022-09-08 19:52:44,971 [main][BasicTypeRegistry.java:145] : Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@571d9105
DEBUG 2022-09-08 19:52:44,973 [main][BasicTypeRegistry.java:145] : Adding type registration clob -> org.hibernate.type.ClobType@8f00a837
DEBUG 2022-09-08 19:52:44,973 [main][BasicTypeRegistry.java:145] : Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@8f00a837
DEBUG 2022-09-08 19:52:44,975 [main][BasicTypeRegistry.java:145] : Adding type registration nclob -> org.hibernate.type.NClobType@afc430b9
DEBUG 2022-09-08 19:52:44,976 [main][BasicTypeRegistry.java:145] : Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@afc430b9
DEBUG 2022-09-08 19:52:44,976 [main][BasicTypeRegistry.java:145] : Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@50f0eacf
DEBUG 2022-09-08 19:52:44,976 [main][BasicTypeRegistry.java:145] : Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@eb89ece4
DEBUG 2022-09-08 19:52:44,977 [main][BasicTypeRegistry.java:145] : Adding type registration serializable -> org.hibernate.type.SerializableType@c33fbd6c
DEBUG 2022-09-08 19:52:44,979 [main][BasicTypeRegistry.java:145] : Adding type registration object -> org.hibernate.type.ObjectType@c8b8944e
DEBUG 2022-09-08 19:52:44,979 [main][BasicTypeRegistry.java:145] : Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@c8b8944e
DEBUG 2022-09-08 19:52:44,979 [main][BasicTypeRegistry.java:145] : Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@f9210e02
DEBUG 2022-09-08 19:52:44,980 [main][BasicTypeRegistry.java:145] : Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@8b27400d
DEBUG 2022-09-08 19:52:44,980 [main][BasicTypeRegistry.java:145] : Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@5746340d
DEBUG 2022-09-08 19:52:44,980 [main][BasicTypeRegistry.java:145] : Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@a8509a33
DEBUG 2022-09-08 19:52:44,980 [main][BasicTypeRegistry.java:145] : Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@7b6fb0b
DEBUG 2022-09-08 19:52:44,980 [main][BasicTypeRegistry.java:145] : Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@66ed1d77
DEBUG 2022-09-08 19:52:44,981 [main][BasicTypeRegistry.java:145] : Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@58348320
DEBUG 2022-09-08 19:52:44,981 [main][BasicTypeRegistry.java:145] : Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@626d6cc9
WARN  2022-09-08 19:52:44,988 [main][DriverManagerConnectionProviderImpl.java:70] : HHH10001002: Using Hibernate built-in connection pool (not for production use!)
INFO  2022-09-08 19:52:44,995 [main][DriverManagerConnectionProviderImpl.java:126] : HHH10001005: using driver [com.mysql.cj.jdbc.Driver] at URL [jdbc:mysql://localhost:3306/classicmodels?serverTimezone=UTC]
INFO  2022-09-08 19:52:44,995 [main][DriverManagerConnectionProviderImpl.java:132] : HHH10001001: Connection properties: {password=rootroot, user=root}
INFO  2022-09-08 19:52:44,996 [main][DriverManagerConnectionProviderImpl.java:140] : HHH10001003: Autocommit mode: false
DEBUG 2022-09-08 19:52:44,998 [main][DelegatingBasicLogger.java:384] : Initializing Connection pool with 1 Connections
INFO  2022-09-08 19:52:44,999 [main][PooledConnections.java:41] : HHH000115: Hibernate connection pool size: 5 (min=1)
DEBUG 2022-09-08 19:52:45,433 [main][JdbcEnvironmentInitiator.java:72] : Database ->
       name : MySQL
    version : 8.0.29
      major : 8
      minor : 0
DEBUG 2022-09-08 19:52:45,434 [main][JdbcEnvironmentInitiator.java:83] : Driver ->
       name : MySQL Connector/J
    version : mysql-connector-java-8.0.29 (Revision: dd61577595edad45c398af508cf91ad26fc4144f)
      major : 8
      minor : 0
DEBUG 2022-09-08 19:52:45,434 [main][DelegatingBasicLogger.java:389] : JDBC version : 4.2
INFO  2022-09-08 19:52:45,441 [main][Dialect.java:153] : HHH000400: Using dialect: org.hibernate.dialect.MySQLDialect
DEBUG 2022-09-08 19:52:45,480 [main][IdentifierHelperBuilder.java:117] : JDBC driver metadata reported database stores quoted identifiers in more than one case
DEBUG 2022-09-08 19:52:45,481 [main][IdentifierHelperBuilder.java:191] : IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [MIXED]; that will likely lead to problems in schema update and validation if using quoted identifiers
DEBUG 2022-09-08 19:52:45,505 [main][DefaultIdentifierGeneratorFactory.java:81] : Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
DEBUG 2022-09-08 19:52:45,505 [main][DefaultIdentifierGeneratorFactory.java:81] : Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
DEBUG 2022-09-08 19:52:45,506 [main][DefaultIdentifierGeneratorFactory.java:81] : Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
DEBUG 2022-09-08 19:52:45,506 [main][DefaultIdentifierGeneratorFactory.java:81] : Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
DEBUG 2022-09-08 19:52:45,506 [main][DefaultIdentifierGeneratorFactory.java:81] : Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
DEBUG 2022-09-08 19:52:45,507 [main][DefaultIdentifierGeneratorFactory.java:81] : Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
DEBUG 2022-09-08 19:52:45,507 [main][DefaultIdentifierGeneratorFactory.java:81] : Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
DEBUG 2022-09-08 19:52:45,508 [main][DefaultIdentifierGeneratorFactory.java:81] : Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
DEBUG 2022-09-08 19:52:45,508 [main][DefaultIdentifierGeneratorFactory.java:81] : Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
DEBUG 2022-09-08 19:52:45,509 [main][DefaultIdentifierGeneratorFactory.java:81] : Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
DEBUG 2022-09-08 19:52:45,509 [main][DefaultIdentifierGeneratorFactory.java:81] : Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
DEBUG 2022-09-08 19:52:45,509 [main][DefaultIdentifierGeneratorFactory.java:81] : Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
DEBUG 2022-09-08 19:52:45,509 [main][DefaultIdentifierGeneratorFactory.java:81] : Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
DEBUG 2022-09-08 19:52:45,510 [main][DefaultIdentifierGeneratorFactory.java:81] : Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
DEBUG 2022-09-08 19:52:45,527 [main][Namespace.java:47] : Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
DEBUG 2022-09-08 19:52:45,540 [main][AnnotationBinder.java:511] : Binding entity from annotated class: org.example.models.Author
DEBUG 2022-09-08 19:52:45,549 [main][Ejb3Column.java:213] : Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
DEBUG 2022-09-08 19:52:45,551 [main][EntityBinder.java:416] : Import with entity name Author
DEBUG 2022-09-08 19:52:45,554 [main][EntityBinder.java:692] : Bind entity org.example.models.Author on table Author
DEBUG 2022-09-08 19:52:45,572 [main][Ejb3Column.java:213] : Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Author), mappingColumn=id, insertable=true, updatable=true, unique=false}
DEBUG 2022-09-08 19:52:45,574 [main][PropertyBinder.java:174] : MetadataSourceProcessor property id with lazy=false
DEBUG 2022-09-08 19:52:45,574 [main][AbstractPropertyHolder.java:89] : Attempting to locate auto-apply AttributeConverter for property [org.example.models.Author:id]
DEBUG 2022-09-08 19:52:45,575 [main][SimpleValueBinder.java:398] : building SimpleValue for id
DEBUG 2022-09-08 19:52:45,576 [main][PropertyBinder.java:265] : Building property id
DEBUG 2022-09-08 19:52:45,578 [main][Ejb3Column.java:213] : Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='author'}
DEBUG 2022-09-08 19:52:45,578 [main][Ejb3Column.java:213] : Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Author), mappingColumn=address, insertable=true, updatable=true, unique=false}
DEBUG 2022-09-08 19:52:45,580 [main][Ejb3Column.java:213] : Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Author), mappingColumn=null, insertable=true, updatable=true, unique=false}
DEBUG 2022-09-08 19:52:45,585 [main][Ejb3Column.java:213] : Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Author), mappingColumn=element, insertable=true, updatable=true, unique=false}
DEBUG 2022-09-08 19:52:45,586 [main][Ejb3Column.java:213] : Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Author), mappingColumn=books_KEY, insertable=true, updatable=true, unique=false}
DEBUG 2022-09-08 19:52:45,586 [main][Ejb3Column.java:213] : Binding column: Ejb3JoinColumn{logicalColumnName='books_KEY', referencedColumn='null', mappedBy='null'}
DEBUG 2022-09-08 19:52:45,586 [main][Ejb3Column.java:213] : Binding column: Ejb3JoinColumn{logicalColumnName='book_id', referencedColumn='', mappedBy=''}
DEBUG 2022-09-08 19:52:45,586 [main][Ejb3Column.java:213] : Binding column: Ejb3JoinColumn{logicalColumnName='author_id', referencedColumn='', mappedBy=''}
DEBUG 2022-09-08 19:52:45,587 [main][CollectionBinder.java:388] : Collection role: org.example.models.Author.books
DEBUG 2022-09-08 19:52:45,588 [main][PropertyBinder.java:265] : Building property books
DEBUG 2022-09-08 19:52:45,588 [main][Ejb3Column.java:213] : Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Author), mappingColumn=name, insertable=true, updatable=true, unique=false}
DEBUG 2022-09-08 19:52:45,588 [main][PropertyBinder.java:174] : MetadataSourceProcessor property name with lazy=false
DEBUG 2022-09-08 19:52:45,588 [main][AbstractPropertyHolder.java:89] : Attempting to locate auto-apply AttributeConverter for property [org.example.models.Author:name]
DEBUG 2022-09-08 19:52:45,588 [main][SimpleValueBinder.java:398] : building SimpleValue for name
DEBUG 2022-09-08 19:52:45,589 [main][PropertyBinder.java:265] : Building property name
DEBUG 2022-09-08 19:52:45,589 [main][Ejb3Column.java:213] : Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='author'}
DEBUG 2022-09-08 19:52:45,589 [main][Ejb3Column.java:213] : Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Author), mappingColumn=photos, insertable=true, updatable=true, unique=false}
DEBUG 2022-09-08 19:52:45,589 [main][Ejb3Column.java:213] : Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Author), mappingColumn=null, insertable=true, updatable=true, unique=false}
DEBUG 2022-09-08 19:52:45,589 [main][Ejb3Column.java:213] : Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Author), mappingColumn=element, insertable=true, updatable=true, unique=false}
DEBUG 2022-09-08 19:52:45,589 [main][Ejb3Column.java:213] : Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Author), mappingColumn=photos_KEY, insertable=true, updatable=true, unique=false}
DEBUG 2022-09-08 19:52:45,590 [main][Ejb3Column.java:213] : Binding column: Ejb3JoinColumn{logicalColumnName='photos_KEY', referencedColumn='null', mappedBy='null'}
DEBUG 2022-09-08 19:52:45,590 [main][Ejb3Column.java:213] : Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='author'}
DEBUG 2022-09-08 19:52:45,590 [main][Ejb3Column.java:213] : Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='author'}
DEBUG 2022-09-08 19:52:45,590 [main][CollectionBinder.java:388] : Collection role: org.example.models.Author.photos
DEBUG 2022-09-08 19:52:45,590 [main][PropertyBinder.java:265] : Building property photos
DEBUG 2022-09-08 19:52:45,591 [main][Ejb3Column.java:213] : Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Author), mappingColumn=salary, insertable=true, updatable=true, unique=false}
DEBUG 2022-09-08 19:52:45,591 [main][PropertyBinder.java:174] : MetadataSourceProcessor property salary with lazy=false
DEBUG 2022-09-08 19:52:45,591 [main][AbstractPropertyHolder.java:89] : Attempting to locate auto-apply AttributeConverter for property [org.example.models.Author:salary]
DEBUG 2022-09-08 19:52:45,591 [main][SimpleValueBinder.java:398] : building SimpleValue for salary
DEBUG 2022-09-08 19:52:45,591 [main][PropertyBinder.java:265] : Building property salary
DEBUG 2022-09-08 19:52:45,592 [main][AnnotationBinder.java:511] : Binding entity from annotated class: org.example.models.Book
DEBUG 2022-09-08 19:52:45,592 [main][Ejb3Column.java:213] : Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
DEBUG 2022-09-08 19:52:45,592 [main][EntityBinder.java:416] : Import with entity name Book
DEBUG 2022-09-08 19:52:45,592 [main][EntityBinder.java:692] : Bind entity org.example.models.Book on table Book
DEBUG 2022-09-08 19:52:45,593 [main][Ejb3Column.java:213] : Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Book), mappingColumn=id, insertable=true, updatable=true, unique=false}
DEBUG 2022-09-08 19:52:45,593 [main][PropertyBinder.java:174] : MetadataSourceProcessor property id with lazy=false
DEBUG 2022-09-08 19:52:45,594 [main][AbstractPropertyHolder.java:89] : Attempting to locate auto-apply AttributeConverter for property [org.example.models.Book:id]
DEBUG 2022-09-08 19:52:45,594 [main][SimpleValueBinder.java:398] : building SimpleValue for id
DEBUG 2022-09-08 19:52:45,594 [main][PropertyBinder.java:265] : Building property id
DEBUG 2022-09-08 19:52:45,595 [main][Ejb3Column.java:213] : Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Book), mappingColumn=null, insertable=true, updatable=true, unique=false}
DEBUG 2022-09-08 19:52:45,595 [main][Ejb3Column.java:213] : Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Book), mappingColumn=element, insertable=true, updatable=true, unique=false}
DEBUG 2022-09-08 19:52:45,596 [main][Ejb3Column.java:213] : Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Book), mappingColumn=authors_KEY, insertable=true, updatable=true, unique=false}
DEBUG 2022-09-08 19:52:45,596 [main][Ejb3Column.java:213] : Binding column: Ejb3JoinColumn{logicalColumnName='authors_KEY', referencedColumn='null', mappedBy='null'}
DEBUG 2022-09-08 19:52:45,596 [main][Ejb3Column.java:213] : Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='books'}
DEBUG 2022-09-08 19:52:45,596 [main][Ejb3Column.java:213] : Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='books'}
DEBUG 2022-09-08 19:52:45,596 [main][CollectionBinder.java:388] : Collection role: org.example.models.Book.authors
DEBUG 2022-09-08 19:52:45,596 [main][PropertyBinder.java:265] : Building property authors
DEBUG 2022-09-08 19:52:45,597 [main][Ejb3Column.java:213] : Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Book), mappingColumn=name, insertable=true, updatable=true, unique=false}
DEBUG 2022-09-08 19:52:45,597 [main][PropertyBinder.java:174] : MetadataSourceProcessor property name with lazy=false
DEBUG 2022-09-08 19:52:45,597 [main][AbstractPropertyHolder.java:89] : Attempting to locate auto-apply AttributeConverter for property [org.example.models.Book:name]
DEBUG 2022-09-08 19:52:45,597 [main][SimpleValueBinder.java:398] : building SimpleValue for name
DEBUG 2022-09-08 19:52:45,597 [main][PropertyBinder.java:265] : Building property name
DEBUG 2022-09-08 19:52:45,598 [main][AnnotationBinder.java:511] : Binding entity from annotated class: org.example.models.Photo
DEBUG 2022-09-08 19:52:45,598 [main][Ejb3Column.java:213] : Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
DEBUG 2022-09-08 19:52:45,598 [main][EntityBinder.java:416] : Import with entity name Photo
DEBUG 2022-09-08 19:52:45,598 [main][EntityBinder.java:692] : Bind entity org.example.models.Photo on table Photo
DEBUG 2022-09-08 19:52:45,601 [main][Ejb3Column.java:213] : Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Photo), mappingColumn=id, insertable=true, updatable=true, unique=false}
DEBUG 2022-09-08 19:52:45,601 [main][PropertyBinder.java:174] : MetadataSourceProcessor property id with lazy=false
DEBUG 2022-09-08 19:52:45,601 [main][AbstractPropertyHolder.java:89] : Attempting to locate auto-apply AttributeConverter for property [org.example.models.Photo:id]
DEBUG 2022-09-08 19:52:45,601 [main][SimpleValueBinder.java:398] : building SimpleValue for id
DEBUG 2022-09-08 19:52:45,602 [main][PropertyBinder.java:265] : Building property id
DEBUG 2022-09-08 19:52:45,602 [main][Ejb3Column.java:213] : Binding column: Ejb3JoinColumn{logicalColumnName='author_id', referencedColumn='', mappedBy=''}
DEBUG 2022-09-08 19:52:45,602 [main][Ejb3Column.java:213] : Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Photo), mappingColumn=author, insertable=true, updatable=true, unique=false}
DEBUG 2022-09-08 19:52:45,603 [main][PropertyBinder.java:265] : Building property author
DEBUG 2022-09-08 19:52:45,603 [main][Ejb3Column.java:213] : Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Photo), mappingColumn=file_name, insertable=true, updatable=true, unique=false}
DEBUG 2022-09-08 19:52:45,603 [main][PropertyBinder.java:174] : MetadataSourceProcessor property fileName with lazy=false
DEBUG 2022-09-08 19:52:45,603 [main][AbstractPropertyHolder.java:89] : Attempting to locate auto-apply AttributeConverter for property [org.example.models.Photo:fileName]
DEBUG 2022-09-08 19:52:45,604 [main][SimpleValueBinder.java:398] : building SimpleValue for fileName
DEBUG 2022-09-08 19:52:45,604 [main][PropertyBinder.java:265] : Building property fileName
DEBUG 2022-09-08 19:52:45,604 [main][SimpleValueBinder.java:443] : Starting fillSimpleValue for id
DEBUG 2022-09-08 19:52:45,605 [main][SimpleValueBinder.java:443] : Starting fillSimpleValue for name
DEBUG 2022-09-08 19:52:45,605 [main][SimpleValueBinder.java:443] : Starting fillSimpleValue for salary
DEBUG 2022-09-08 19:52:45,605 [main][SimpleValueBinder.java:443] : Starting fillSimpleValue for id
DEBUG 2022-09-08 19:52:45,605 [main][SimpleValueBinder.java:443] : Starting fillSimpleValue for name
DEBUG 2022-09-08 19:52:45,605 [main][SimpleValueBinder.java:443] : Starting fillSimpleValue for id
DEBUG 2022-09-08 19:52:45,605 [main][SimpleValueBinder.java:443] : Starting fillSimpleValue for fileName
DEBUG 2022-09-08 19:52:45,607 [main][PrimaryKey.java:35] : Forcing column [id] to be non-null as it is part of the primary key for table [author]
DEBUG 2022-09-08 19:52:45,607 [main][PrimaryKey.java:35] : Forcing column [id] to be non-null as it is part of the primary key for table [book]
DEBUG 2022-09-08 19:52:45,607 [main][PrimaryKey.java:35] : Forcing column [id] to be non-null as it is part of the primary key for table [photo]
DEBUG 2022-09-08 19:52:45,607 [main][CollectionSecondPass.java:51] : Second pass for collection: org.example.models.Author.books
DEBUG 2022-09-08 19:52:45,608 [main][CollectionBinder.java:1210] : Binding as ManyToMany: org.example.models.Author.books
DEBUG 2022-09-08 19:52:45,610 [main][PrimaryKey.java:35] : Forcing column [book_id] to be non-null as it is part of the primary key for table [authors_books]
DEBUG 2022-09-08 19:52:45,610 [main][PrimaryKey.java:35] : Forcing column [author_id] to be non-null as it is part of the primary key for table [authors_books]
DEBUG 2022-09-08 19:52:45,610 [main][CollectionSecondPass.java:68] : Mapped collection key: book_id, element: author_id
DEBUG 2022-09-08 19:52:45,610 [main][PropertyBinder.java:265] : Building property address
WARN  2022-09-08 19:53:01,528 [main][Main.java:17] : TEST
DEBUG 2022-09-08 19:53:01,585 [main][CoreLogging.java:28] : Logging Provider: org.jboss.logging.Log4jLoggerProvider
DEBUG 2022-09-08 19:53:01,593 [main][IntegratorServiceImpl.java:46] : Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
DEBUG 2022-09-08 19:53:01,595 [main][IntegratorServiceImpl.java:46] : Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
DEBUG 2022-09-08 19:53:01,600 [main][IntegratorServiceImpl.java:46] : Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
INFO  2022-09-08 19:53:01,694 [main][Version.java:45] : HHH000412: Hibernate Core {5.2.2.Final}
INFO  2022-09-08 19:53:01,699 [main][Environment.java:213] : HHH000206: hibernate.properties not found
INFO  2022-09-08 19:53:01,701 [main][Environment.java:318] : HHH000021: Bytecode provider name : javassist
DEBUG 2022-09-08 19:53:01,727 [main][LocalXmlResourceResolver.java:57] : Interpreting public/system identifier : [null] - [http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd]
DEBUG 2022-09-08 19:53:01,728 [main][LocalXmlResourceResolver.java:85] : Recognized hibernate-configuration identifier; attempting to resolve on classpath under org/hibernate/
DEBUG 2022-09-08 19:53:01,734 [main][JaxbCfgProcessor.java:116] : cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
DEBUG 2022-09-08 19:53:01,973 [main][Configuration.java:724] : Building session factory using internal StandardServiceRegistryBuilder
DEBUG 2022-09-08 19:53:01,977 [main][ServiceBinding.java:68] : Overriding existing service binding [org.hibernate.secure.spi.JaccService]
DEBUG 2022-09-08 19:53:01,978 [main][Configuration.java:652] : Building session factory using provided StandardServiceRegistry
DEBUG 2022-09-08 19:53:01,988 [main][RegionFactoryInitiator.java:75] : Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
INFO  2022-09-08 19:53:02,001 [main][JavaReflectionManager.java:66] : HCANN000001: Hibernate Commons Annotations {5.0.1.Final}
DEBUG 2022-09-08 19:53:02,020 [main][BasicTypeRegistry.java:145] : Adding type registration boolean -> org.hibernate.type.BooleanType@6201efc7
DEBUG 2022-09-08 19:53:02,021 [main][BasicTypeRegistry.java:145] : Adding type registration boolean -> org.hibernate.type.BooleanType@6201efc7
DEBUG 2022-09-08 19:53:02,022 [main][BasicTypeRegistry.java:145] : Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@6201efc7
DEBUG 2022-09-08 19:53:02,024 [main][BasicTypeRegistry.java:145] : Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@a241479b
DEBUG 2022-09-08 19:53:02,026 [main][BasicTypeRegistry.java:145] : Adding type registration true_false -> org.hibernate.type.TrueFalseType@d8647fc1
DEBUG 2022-09-08 19:53:02,027 [main][BasicTypeRegistry.java:145] : Adding type registration yes_no -> org.hibernate.type.YesNoType@a8c6fc23
DEBUG 2022-09-08 19:53:02,029 [main][BasicTypeRegistry.java:145] : Adding type registration byte -> org.hibernate.type.ByteType@490bb2a7
DEBUG 2022-09-08 19:53:02,030 [main][BasicTypeRegistry.java:145] : Adding type registration byte -> org.hibernate.type.ByteType@490bb2a7
DEBUG 2022-09-08 19:53:02,030 [main][BasicTypeRegistry.java:145] : Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@490bb2a7
DEBUG 2022-09-08 19:53:02,032 [main][BasicTypeRegistry.java:145] : Adding type registration character -> org.hibernate.type.CharacterType@5df64d95
DEBUG 2022-09-08 19:53:02,033 [main][BasicTypeRegistry.java:145] : Adding type registration char -> org.hibernate.type.CharacterType@5df64d95
DEBUG 2022-09-08 19:53:02,033 [main][BasicTypeRegistry.java:145] : Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@5df64d95
DEBUG 2022-09-08 19:53:02,035 [main][BasicTypeRegistry.java:145] : Adding type registration short -> org.hibernate.type.ShortType@2ab63b75
DEBUG 2022-09-08 19:53:02,035 [main][BasicTypeRegistry.java:145] : Adding type registration short -> org.hibernate.type.ShortType@2ab63b75
DEBUG 2022-09-08 19:53:02,036 [main][BasicTypeRegistry.java:145] : Adding type registration java.lang.Short -> org.hibernate.type.ShortType@2ab63b75
DEBUG 2022-09-08 19:53:02,037 [main][BasicTypeRegistry.java:145] : Adding type registration integer -> org.hibernate.type.IntegerType@b0a664a6
DEBUG 2022-09-08 19:53:02,038 [main][BasicTypeRegistry.java:145] : Adding type registration int -> org.hibernate.type.IntegerType@b0a664a6
DEBUG 2022-09-08 19:53:02,039 [main][BasicTypeRegistry.java:145] : Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@b0a664a6
DEBUG 2022-09-08 19:53:02,040 [main][BasicTypeRegistry.java:145] : Adding type registration long -> org.hibernate.type.LongType@4201b0c7
DEBUG 2022-09-08 19:53:02,041 [main][BasicTypeRegistry.java:145] : Adding type registration long -> org.hibernate.type.LongType@4201b0c7
DEBUG 2022-09-08 19:53:02,042 [main][BasicTypeRegistry.java:145] : Adding type registration java.lang.Long -> org.hibernate.type.LongType@4201b0c7
DEBUG 2022-09-08 19:53:02,043 [main][BasicTypeRegistry.java:145] : Adding type registration float -> org.hibernate.type.FloatType@9ff3044a
DEBUG 2022-09-08 19:53:02,044 [main][BasicTypeRegistry.java:145] : Adding type registration float -> org.hibernate.type.FloatType@9ff3044a
DEBUG 2022-09-08 19:53:02,044 [main][BasicTypeRegistry.java:145] : Adding type registration java.lang.Float -> org.hibernate.type.FloatType@9ff3044a
DEBUG 2022-09-08 19:53:02,045 [main][BasicTypeRegistry.java:145] : Adding type registration double -> org.hibernate.type.DoubleType@336873a
DEBUG 2022-09-08 19:53:02,046 [main][BasicTypeRegistry.java:145] : Adding type registration double -> org.hibernate.type.DoubleType@336873a
DEBUG 2022-09-08 19:53:02,047 [main][BasicTypeRegistry.java:145] : Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@336873a
DEBUG 2022-09-08 19:53:02,048 [main][BasicTypeRegistry.java:145] : Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@833e02bf
DEBUG 2022-09-08 19:53:02,048 [main][BasicTypeRegistry.java:145] : Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@833e02bf
DEBUG 2022-09-08 19:53:02,049 [main][BasicTypeRegistry.java:145] : Adding type registration big_integer -> org.hibernate.type.BigIntegerType@c2902d23
DEBUG 2022-09-08 19:53:02,050 [main][BasicTypeRegistry.java:145] : Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@c2902d23
DEBUG 2022-09-08 19:53:02,051 [main][BasicTypeRegistry.java:145] : Adding type registration string -> org.hibernate.type.StringType@2e244fc2
DEBUG 2022-09-08 19:53:02,052 [main][BasicTypeRegistry.java:145] : Adding type registration java.lang.String -> org.hibernate.type.StringType@2e244fc2
DEBUG 2022-09-08 19:53:02,052 [main][BasicTypeRegistry.java:145] : Adding type registration nstring -> org.hibernate.type.StringNVarcharType@fa785fe9
DEBUG 2022-09-08 19:53:02,053 [main][BasicTypeRegistry.java:145] : Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@45ec8cb2
DEBUG 2022-09-08 19:53:02,055 [main][BasicTypeRegistry.java:145] : Adding type registration url -> org.hibernate.type.UrlType@3c792b4d
DEBUG 2022-09-08 19:53:02,056 [main][BasicTypeRegistry.java:145] : Adding type registration java.net.URL -> org.hibernate.type.UrlType@3c792b4d
DEBUG 2022-09-08 19:53:02,057 [main][BasicTypeRegistry.java:145] : Adding type registration Duration -> org.hibernate.type.DurationType@8123279
DEBUG 2022-09-08 19:53:02,058 [main][BasicTypeRegistry.java:145] : Adding type registration java.time.Duration -> org.hibernate.type.DurationType@8123279
DEBUG 2022-09-08 19:53:02,065 [main][BasicTypeRegistry.java:145] : Adding type registration Instant -> org.hibernate.type.InstantType@f1b3a784
DEBUG 2022-09-08 19:53:02,066 [main][BasicTypeRegistry.java:145] : Adding type registration java.time.Instant -> org.hibernate.type.InstantType@f1b3a784
DEBUG 2022-09-08 19:53:02,067 [main][BasicTypeRegistry.java:145] : Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@98179f2
DEBUG 2022-09-08 19:53:02,068 [main][BasicTypeRegistry.java:145] : Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@98179f2
DEBUG 2022-09-08 19:53:02,069 [main][BasicTypeRegistry.java:145] : Adding type registration LocalDate -> org.hibernate.type.LocalDateType@2197960
DEBUG 2022-09-08 19:53:02,070 [main][BasicTypeRegistry.java:145] : Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@2197960
DEBUG 2022-09-08 19:53:02,071 [main][BasicTypeRegistry.java:145] : Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@68a3e5ef
DEBUG 2022-09-08 19:53:02,071 [main][BasicTypeRegistry.java:145] : Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@68a3e5ef
DEBUG 2022-09-08 19:53:02,072 [main][BasicTypeRegistry.java:145] : Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@4b9dbc07
DEBUG 2022-09-08 19:53:02,073 [main][BasicTypeRegistry.java:145] : Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@4b9dbc07
DEBUG 2022-09-08 19:53:02,074 [main][BasicTypeRegistry.java:145] : Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@5e24dcdd
DEBUG 2022-09-08 19:53:02,074 [main][BasicTypeRegistry.java:145] : Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@5e24dcdd
DEBUG 2022-09-08 19:53:02,075 [main][BasicTypeRegistry.java:145] : Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@e0a85e0d
DEBUG 2022-09-08 19:53:02,076 [main][BasicTypeRegistry.java:145] : Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@e0a85e0d
DEBUG 2022-09-08 19:53:02,083 [main][BasicTypeRegistry.java:145] : Adding type registration date -> org.hibernate.type.DateType@4466cfa3
DEBUG 2022-09-08 19:53:02,084 [main][BasicTypeRegistry.java:145] : Adding type registration java.sql.Date -> org.hibernate.type.DateType@4466cfa3
DEBUG 2022-09-08 19:53:02,085 [main][BasicTypeRegistry.java:145] : Adding type registration time -> org.hibernate.type.TimeType@59c1e49e
DEBUG 2022-09-08 19:53:02,085 [main][BasicTypeRegistry.java:145] : Adding type registration java.sql.Time -> org.hibernate.type.TimeType@59c1e49e
DEBUG 2022-09-08 19:53:02,086 [main][BasicTypeRegistry.java:145] : Adding type registration timestamp -> org.hibernate.type.TimestampType@9e044ffa
DEBUG 2022-09-08 19:53:02,087 [main][BasicTypeRegistry.java:145] : Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@9e044ffa
DEBUG 2022-09-08 19:53:02,088 [main][BasicTypeRegistry.java:145] : Adding type registration java.util.Date -> org.hibernate.type.TimestampType@9e044ffa
DEBUG 2022-09-08 19:53:02,089 [main][BasicTypeRegistry.java:145] : Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@d8d7e122
DEBUG 2022-09-08 19:53:02,090 [main][BasicTypeRegistry.java:145] : Adding type registration calendar -> org.hibernate.type.CalendarType@9fbf797e
DEBUG 2022-09-08 19:53:02,091 [main][BasicTypeRegistry.java:145] : Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@9fbf797e
DEBUG 2022-09-08 19:53:02,091 [main][BasicTypeRegistry.java:145] : Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@9fbf797e
DEBUG 2022-09-08 19:53:02,092 [main][BasicTypeRegistry.java:145] : Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@1512ffdf
DEBUG 2022-09-08 19:53:02,093 [main][BasicTypeRegistry.java:145] : Adding type registration locale -> org.hibernate.type.LocaleType@89d37953
DEBUG 2022-09-08 19:53:02,093 [main][BasicTypeRegistry.java:145] : Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@89d37953
DEBUG 2022-09-08 19:53:02,094 [main][BasicTypeRegistry.java:145] : Adding type registration currency -> org.hibernate.type.CurrencyType@c2e3ebb2
DEBUG 2022-09-08 19:53:02,095 [main][BasicTypeRegistry.java:145] : Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@c2e3ebb2
DEBUG 2022-09-08 19:53:02,096 [main][BasicTypeRegistry.java:145] : Adding type registration timezone -> org.hibernate.type.TimeZoneType@d1fb31b1
DEBUG 2022-09-08 19:53:02,096 [main][BasicTypeRegistry.java:145] : Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@d1fb31b1
DEBUG 2022-09-08 19:53:02,097 [main][BasicTypeRegistry.java:145] : Adding type registration class -> org.hibernate.type.ClassType@15a1af5e
DEBUG 2022-09-08 19:53:02,097 [main][BasicTypeRegistry.java:145] : Adding type registration java.lang.Class -> org.hibernate.type.ClassType@15a1af5e
DEBUG 2022-09-08 19:53:02,098 [main][BasicTypeRegistry.java:145] : Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@3f4b193b
DEBUG 2022-09-08 19:53:02,099 [main][BasicTypeRegistry.java:145] : Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@3f4b193b
DEBUG 2022-09-08 19:53:02,099 [main][BasicTypeRegistry.java:145] : Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@b922915d
DEBUG 2022-09-08 19:53:02,100 [main][BasicTypeRegistry.java:145] : Adding type registration binary -> org.hibernate.type.BinaryType@54212759
DEBUG 2022-09-08 19:53:02,101 [main][BasicTypeRegistry.java:145] : Adding type registration byte[] -> org.hibernate.type.BinaryType@54212759
DEBUG 2022-09-08 19:53:02,101 [main][BasicTypeRegistry.java:145] : Adding type registration [B -> org.hibernate.type.BinaryType@54212759
DEBUG 2022-09-08 19:53:02,102 [main][BasicTypeRegistry.java:145] : Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@e5b40ebc
DEBUG 2022-09-08 19:53:02,102 [main][BasicTypeRegistry.java:145] : Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@e5b40ebc
DEBUG 2022-09-08 19:53:02,103 [main][BasicTypeRegistry.java:145] : Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@e5b40ebc
DEBUG 2022-09-08 19:53:02,104 [main][BasicTypeRegistry.java:145] : Adding type registration row_version -> org.hibernate.type.RowVersionType@dc4cb769
DEBUG 2022-09-08 19:53:02,104 [main][BasicTypeRegistry.java:145] : Adding type registration image -> org.hibernate.type.ImageType@ae719b50
DEBUG 2022-09-08 19:53:02,105 [main][BasicTypeRegistry.java:145] : Adding type registration characters -> org.hibernate.type.CharArrayType@8552cd1e
DEBUG 2022-09-08 19:53:02,105 [main][BasicTypeRegistry.java:145] : Adding type registration char[] -> org.hibernate.type.CharArrayType@8552cd1e
DEBUG 2022-09-08 19:53:02,106 [main][BasicTypeRegistry.java:145] : Adding type registration [C -> org.hibernate.type.CharArrayType@8552cd1e
DEBUG 2022-09-08 19:53:02,106 [main][BasicTypeRegistry.java:145] : Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@c584dce0
DEBUG 2022-09-08 19:53:02,107 [main][BasicTypeRegistry.java:145] : Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@c584dce0
DEBUG 2022-09-08 19:53:02,107 [main][BasicTypeRegistry.java:145] : Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@c584dce0
DEBUG 2022-09-08 19:53:02,108 [main][BasicTypeRegistry.java:145] : Adding type registration text -> org.hibernate.type.TextType@ec7ee85e
DEBUG 2022-09-08 19:53:02,109 [main][BasicTypeRegistry.java:145] : Adding type registration ntext -> org.hibernate.type.NTextType@2887194
DEBUG 2022-09-08 19:53:02,111 [main][BasicTypeRegistry.java:145] : Adding type registration blob -> org.hibernate.type.BlobType@4d93ae3c
DEBUG 2022-09-08 19:53:02,112 [main][BasicTypeRegistry.java:145] : Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@4d93ae3c
DEBUG 2022-09-08 19:53:02,113 [main][BasicTypeRegistry.java:145] : Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@6e8047a8
DEBUG 2022-09-08 19:53:02,115 [main][BasicTypeRegistry.java:145] : Adding type registration clob -> org.hibernate.type.ClobType@8ac056a9
DEBUG 2022-09-08 19:53:02,115 [main][BasicTypeRegistry.java:145] : Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@8ac056a9
DEBUG 2022-09-08 19:53:02,117 [main][BasicTypeRegistry.java:145] : Adding type registration nclob -> org.hibernate.type.NClobType@abdb1ed3
DEBUG 2022-09-08 19:53:02,117 [main][BasicTypeRegistry.java:145] : Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@abdb1ed3
DEBUG 2022-09-08 19:53:02,118 [main][BasicTypeRegistry.java:145] : Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@2811ce6f
DEBUG 2022-09-08 19:53:02,118 [main][BasicTypeRegistry.java:145] : Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@9dd04056
DEBUG 2022-09-08 19:53:02,119 [main][BasicTypeRegistry.java:145] : Adding type registration serializable -> org.hibernate.type.SerializableType@d873a27c
DEBUG 2022-09-08 19:53:02,121 [main][BasicTypeRegistry.java:145] : Adding type registration object -> org.hibernate.type.ObjectType@33266aa5
DEBUG 2022-09-08 19:53:02,121 [main][BasicTypeRegistry.java:145] : Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@33266aa5
DEBUG 2022-09-08 19:53:02,122 [main][BasicTypeRegistry.java:145] : Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@34174109
DEBUG 2022-09-08 19:53:02,122 [main][BasicTypeRegistry.java:145] : Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@27633f50
DEBUG 2022-09-08 19:53:02,123 [main][BasicTypeRegistry.java:145] : Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@218e430c
DEBUG 2022-09-08 19:53:02,123 [main][BasicTypeRegistry.java:145] : Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@6bd799fa
DEBUG 2022-09-08 19:53:02,124 [main][BasicTypeRegistry.java:145] : Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@480d3297
DEBUG 2022-09-08 19:53:02,124 [main][BasicTypeRegistry.java:145] : Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@e3ceeb08
DEBUG 2022-09-08 19:53:02,124 [main][BasicTypeRegistry.java:145] : Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@17e0b0e7
DEBUG 2022-09-08 19:53:02,125 [main][BasicTypeRegistry.java:145] : Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@d5feefe7
WARN  2022-09-08 19:53:02,131 [main][DriverManagerConnectionProviderImpl.java:70] : HHH10001002: Using Hibernate built-in connection pool (not for production use!)
INFO  2022-09-08 19:53:02,137 [main][DriverManagerConnectionProviderImpl.java:126] : HHH10001005: using driver [com.mysql.cj.jdbc.Driver] at URL [jdbc:mysql://localhost:3306/classicmodels?serverTimezone=UTC]
INFO  2022-09-08 19:53:02,138 [main][DriverManagerConnectionProviderImpl.java:132] : HHH10001001: Connection properties: {password=rootroot, user=root}
INFO  2022-09-08 19:53:02,138 [main][DriverManagerConnectionProviderImpl.java:140] : HHH10001003: Autocommit mode: false
DEBUG 2022-09-08 19:53:02,141 [main][DelegatingBasicLogger.java:384] : Initializing Connection pool with 1 Connections
INFO  2022-09-08 19:53:02,142 [main][PooledConnections.java:41] : HHH000115: Hibernate connection pool size: 5 (min=1)
DEBUG 2022-09-08 19:53:02,564 [main][JdbcEnvironmentInitiator.java:72] : Database ->
       name : MySQL
    version : 8.0.29
      major : 8
      minor : 0
DEBUG 2022-09-08 19:53:02,564 [main][JdbcEnvironmentInitiator.java:83] : Driver ->
       name : MySQL Connector/J
    version : mysql-connector-java-8.0.29 (Revision: dd61577595edad45c398af508cf91ad26fc4144f)
      major : 8
      minor : 0
DEBUG 2022-09-08 19:53:02,565 [main][DelegatingBasicLogger.java:389] : JDBC version : 4.2
INFO  2022-09-08 19:53:02,575 [main][Dialect.java:153] : HHH000400: Using dialect: org.hibernate.dialect.MySQLDialect
DEBUG 2022-09-08 19:53:02,616 [main][IdentifierHelperBuilder.java:117] : JDBC driver metadata reported database stores quoted identifiers in more than one case
DEBUG 2022-09-08 19:53:02,617 [main][IdentifierHelperBuilder.java:191] : IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [MIXED]; that will likely lead to problems in schema update and validation if using quoted identifiers
DEBUG 2022-09-08 19:53:02,646 [main][DefaultIdentifierGeneratorFactory.java:81] : Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
DEBUG 2022-09-08 19:53:02,646 [main][DefaultIdentifierGeneratorFactory.java:81] : Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
DEBUG 2022-09-08 19:53:02,647 [main][DefaultIdentifierGeneratorFactory.java:81] : Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
DEBUG 2022-09-08 19:53:02,647 [main][DefaultIdentifierGeneratorFactory.java:81] : Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
DEBUG 2022-09-08 19:53:02,648 [main][DefaultIdentifierGeneratorFactory.java:81] : Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
DEBUG 2022-09-08 19:53:02,649 [main][DefaultIdentifierGeneratorFactory.java:81] : Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
DEBUG 2022-09-08 19:53:02,650 [main][DefaultIdentifierGeneratorFactory.java:81] : Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
DEBUG 2022-09-08 19:53:02,650 [main][DefaultIdentifierGeneratorFactory.java:81] : Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
DEBUG 2022-09-08 19:53:02,652 [main][DefaultIdentifierGeneratorFactory.java:81] : Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
DEBUG 2022-09-08 19:53:02,653 [main][DefaultIdentifierGeneratorFactory.java:81] : Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
DEBUG 2022-09-08 19:53:02,653 [main][DefaultIdentifierGeneratorFactory.java:81] : Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
DEBUG 2022-09-08 19:53:02,654 [main][DefaultIdentifierGeneratorFactory.java:81] : Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
DEBUG 2022-09-08 19:53:02,654 [main][DefaultIdentifierGeneratorFactory.java:81] : Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
DEBUG 2022-09-08 19:53:02,655 [main][DefaultIdentifierGeneratorFactory.java:81] : Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
DEBUG 2022-09-08 19:53:02,671 [main][Namespace.java:47] : Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
DEBUG 2022-09-08 19:53:02,684 [main][AnnotationBinder.java:511] : Binding entity from annotated class: org.example.models.Author
DEBUG 2022-09-08 19:53:02,693 [main][Ejb3Column.java:213] : Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
DEBUG 2022-09-08 19:53:02,696 [main][EntityBinder.java:416] : Import with entity name Author
DEBUG 2022-09-08 19:53:02,698 [main][EntityBinder.java:692] : Bind entity org.example.models.Author on table Author
DEBUG 2022-09-08 19:53:02,716 [main][Ejb3Column.java:213] : Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Author), mappingColumn=id, insertable=true, updatable=true, unique=false}
DEBUG 2022-09-08 19:53:02,717 [main][PropertyBinder.java:174] : MetadataSourceProcessor property id with lazy=false
DEBUG 2022-09-08 19:53:02,718 [main][AbstractPropertyHolder.java:89] : Attempting to locate auto-apply AttributeConverter for property [org.example.models.Author:id]
DEBUG 2022-09-08 19:53:02,719 [main][SimpleValueBinder.java:398] : building SimpleValue for id
DEBUG 2022-09-08 19:53:02,719 [main][PropertyBinder.java:265] : Building property id
DEBUG 2022-09-08 19:53:02,722 [main][Ejb3Column.java:213] : Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='author'}
DEBUG 2022-09-08 19:53:02,722 [main][Ejb3Column.java:213] : Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Author), mappingColumn=address, insertable=true, updatable=true, unique=false}
DEBUG 2022-09-08 19:53:02,724 [main][Ejb3Column.java:213] : Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Author), mappingColumn=null, insertable=true, updatable=true, unique=false}
DEBUG 2022-09-08 19:53:02,729 [main][Ejb3Column.java:213] : Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Author), mappingColumn=element, insertable=true, updatable=true, unique=false}
DEBUG 2022-09-08 19:53:02,730 [main][Ejb3Column.java:213] : Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Author), mappingColumn=books_KEY, insertable=true, updatable=true, unique=false}
DEBUG 2022-09-08 19:53:02,730 [main][Ejb3Column.java:213] : Binding column: Ejb3JoinColumn{logicalColumnName='books_KEY', referencedColumn='null', mappedBy='null'}
DEBUG 2022-09-08 19:53:02,730 [main][Ejb3Column.java:213] : Binding column: Ejb3JoinColumn{logicalColumnName='book_id', referencedColumn='', mappedBy=''}
DEBUG 2022-09-08 19:53:02,730 [main][Ejb3Column.java:213] : Binding column: Ejb3JoinColumn{logicalColumnName='author_id', referencedColumn='', mappedBy=''}
DEBUG 2022-09-08 19:53:02,731 [main][CollectionBinder.java:388] : Collection role: org.example.models.Author.books
DEBUG 2022-09-08 19:53:02,732 [main][PropertyBinder.java:265] : Building property books
DEBUG 2022-09-08 19:53:02,732 [main][Ejb3Column.java:213] : Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Author), mappingColumn=name, insertable=true, updatable=true, unique=false}
DEBUG 2022-09-08 19:53:02,732 [main][PropertyBinder.java:174] : MetadataSourceProcessor property name with lazy=false
DEBUG 2022-09-08 19:53:02,732 [main][AbstractPropertyHolder.java:89] : Attempting to locate auto-apply AttributeConverter for property [org.example.models.Author:name]
DEBUG 2022-09-08 19:53:02,732 [main][SimpleValueBinder.java:398] : building SimpleValue for name
DEBUG 2022-09-08 19:53:02,733 [main][PropertyBinder.java:265] : Building property name
DEBUG 2022-09-08 19:53:02,733 [main][Ejb3Column.java:213] : Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='author'}
DEBUG 2022-09-08 19:53:02,733 [main][Ejb3Column.java:213] : Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Author), mappingColumn=photos, insertable=true, updatable=true, unique=false}
DEBUG 2022-09-08 19:53:02,733 [main][Ejb3Column.java:213] : Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Author), mappingColumn=null, insertable=true, updatable=true, unique=false}
DEBUG 2022-09-08 19:53:02,733 [main][Ejb3Column.java:213] : Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Author), mappingColumn=element, insertable=true, updatable=true, unique=false}
DEBUG 2022-09-08 19:53:02,733 [main][Ejb3Column.java:213] : Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Author), mappingColumn=photos_KEY, insertable=true, updatable=true, unique=false}
DEBUG 2022-09-08 19:53:02,734 [main][Ejb3Column.java:213] : Binding column: Ejb3JoinColumn{logicalColumnName='photos_KEY', referencedColumn='null', mappedBy='null'}
DEBUG 2022-09-08 19:53:02,734 [main][Ejb3Column.java:213] : Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='author'}
DEBUG 2022-09-08 19:53:02,734 [main][Ejb3Column.java:213] : Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='author'}
DEBUG 2022-09-08 19:53:02,734 [main][CollectionBinder.java:388] : Collection role: org.example.models.Author.photos
DEBUG 2022-09-08 19:53:02,734 [main][PropertyBinder.java:265] : Building property photos
DEBUG 2022-09-08 19:53:02,734 [main][Ejb3Column.java:213] : Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Author), mappingColumn=salary, insertable=true, updatable=true, unique=false}
DEBUG 2022-09-08 19:53:02,735 [main][PropertyBinder.java:174] : MetadataSourceProcessor property salary with lazy=false
DEBUG 2022-09-08 19:53:02,735 [main][AbstractPropertyHolder.java:89] : Attempting to locate auto-apply AttributeConverter for property [org.example.models.Author:salary]
DEBUG 2022-09-08 19:53:02,735 [main][SimpleValueBinder.java:398] : building SimpleValue for salary
DEBUG 2022-09-08 19:53:02,735 [main][PropertyBinder.java:265] : Building property salary
DEBUG 2022-09-08 19:53:02,736 [main][AnnotationBinder.java:511] : Binding entity from annotated class: org.example.models.Book
DEBUG 2022-09-08 19:53:02,736 [main][Ejb3Column.java:213] : Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
DEBUG 2022-09-08 19:53:02,736 [main][EntityBinder.java:416] : Import with entity name Book
DEBUG 2022-09-08 19:53:02,736 [main][EntityBinder.java:692] : Bind entity org.example.models.Book on table Book
DEBUG 2022-09-08 19:53:02,737 [main][Ejb3Column.java:213] : Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Book), mappingColumn=id, insertable=true, updatable=true, unique=false}
DEBUG 2022-09-08 19:53:02,737 [main][PropertyBinder.java:174] : MetadataSourceProcessor property id with lazy=false
DEBUG 2022-09-08 19:53:02,737 [main][AbstractPropertyHolder.java:89] : Attempting to locate auto-apply AttributeConverter for property [org.example.models.Book:id]
DEBUG 2022-09-08 19:53:02,738 [main][SimpleValueBinder.java:398] : building SimpleValue for id
DEBUG 2022-09-08 19:53:02,738 [main][PropertyBinder.java:265] : Building property id
DEBUG 2022-09-08 19:53:02,738 [main][Ejb3Column.java:213] : Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Book), mappingColumn=null, insertable=true, updatable=true, unique=false}
DEBUG 2022-09-08 19:53:02,738 [main][Ejb3Column.java:213] : Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Book), mappingColumn=element, insertable=true, updatable=true, unique=false}
DEBUG 2022-09-08 19:53:02,738 [main][Ejb3Column.java:213] : Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Book), mappingColumn=authors_KEY, insertable=true, updatable=true, unique=false}
DEBUG 2022-09-08 19:53:02,738 [main][Ejb3Column.java:213] : Binding column: Ejb3JoinColumn{logicalColumnName='authors_KEY', referencedColumn='null', mappedBy='null'}
DEBUG 2022-09-08 19:53:02,739 [main][Ejb3Column.java:213] : Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='books'}
DEBUG 2022-09-08 19:53:02,739 [main][Ejb3Column.java:213] : Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='books'}
DEBUG 2022-09-08 19:53:02,739 [main][CollectionBinder.java:388] : Collection role: org.example.models.Book.authors
DEBUG 2022-09-08 19:53:02,740 [main][PropertyBinder.java:265] : Building property authors
DEBUG 2022-09-08 19:53:02,740 [main][Ejb3Column.java:213] : Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Book), mappingColumn=name, insertable=true, updatable=true, unique=false}
DEBUG 2022-09-08 19:53:02,740 [main][PropertyBinder.java:174] : MetadataSourceProcessor property name with lazy=false
DEBUG 2022-09-08 19:53:02,740 [main][AbstractPropertyHolder.java:89] : Attempting to locate auto-apply AttributeConverter for property [org.example.models.Book:name]
DEBUG 2022-09-08 19:53:02,741 [main][SimpleValueBinder.java:398] : building SimpleValue for name
DEBUG 2022-09-08 19:53:02,741 [main][PropertyBinder.java:265] : Building property name
DEBUG 2022-09-08 19:53:02,741 [main][AnnotationBinder.java:511] : Binding entity from annotated class: org.example.models.Photo
DEBUG 2022-09-08 19:53:02,741 [main][Ejb3Column.java:213] : Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
DEBUG 2022-09-08 19:53:02,741 [main][EntityBinder.java:416] : Import with entity name Photo
DEBUG 2022-09-08 19:53:02,741 [main][EntityBinder.java:692] : Bind entity org.example.models.Photo on table Photo
DEBUG 2022-09-08 19:53:02,744 [main][Ejb3Column.java:213] : Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Photo), mappingColumn=id, insertable=true, updatable=true, unique=false}
DEBUG 2022-09-08 19:53:02,744 [main][PropertyBinder.java:174] : MetadataSourceProcessor property id with lazy=false
DEBUG 2022-09-08 19:53:02,744 [main][AbstractPropertyHolder.java:89] : Attempting to locate auto-apply AttributeConverter for property [org.example.models.Photo:id]
DEBUG 2022-09-08 19:53:02,744 [main][SimpleValueBinder.java:398] : building SimpleValue for id
DEBUG 2022-09-08 19:53:02,744 [main][PropertyBinder.java:265] : Building property id
DEBUG 2022-09-08 19:53:02,745 [main][Ejb3Column.java:213] : Binding column: Ejb3JoinColumn{logicalColumnName='author_id', referencedColumn='', mappedBy=''}
DEBUG 2022-09-08 19:53:02,745 [main][Ejb3Column.java:213] : Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Photo), mappingColumn=author, insertable=true, updatable=true, unique=false}
DEBUG 2022-09-08 19:53:02,745 [main][PropertyBinder.java:265] : Building property author
DEBUG 2022-09-08 19:53:02,746 [main][Ejb3Column.java:213] : Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Photo), mappingColumn=file_name, insertable=true, updatable=true, unique=false}
DEBUG 2022-09-08 19:53:02,746 [main][PropertyBinder.java:174] : MetadataSourceProcessor property fileName with lazy=false
DEBUG 2022-09-08 19:53:02,746 [main][AbstractPropertyHolder.java:89] : Attempting to locate auto-apply AttributeConverter for property [org.example.models.Photo:fileName]
DEBUG 2022-09-08 19:53:02,746 [main][SimpleValueBinder.java:398] : building SimpleValue for fileName
DEBUG 2022-09-08 19:53:02,746 [main][PropertyBinder.java:265] : Building property fileName
DEBUG 2022-09-08 19:53:02,747 [main][AnnotationBinder.java:511] : Binding entity from annotated class: org.example.models.Address
DEBUG 2022-09-08 19:53:02,747 [main][Ejb3Column.java:213] : Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
DEBUG 2022-09-08 19:53:02,747 [main][EntityBinder.java:416] : Import with entity name Address
DEBUG 2022-09-08 19:53:02,747 [main][EntityBinder.java:692] : Bind entity org.example.models.Address on table Address
DEBUG 2022-09-08 19:53:02,747 [main][Ejb3Column.java:213] : Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Address), mappingColumn=id, insertable=true, updatable=true, unique=false}
DEBUG 2022-09-08 19:53:02,748 [main][PropertyBinder.java:174] : MetadataSourceProcessor property id with lazy=false
DEBUG 2022-09-08 19:53:02,748 [main][AbstractPropertyHolder.java:89] : Attempting to locate auto-apply AttributeConverter for property [org.example.models.Address:id]
DEBUG 2022-09-08 19:53:02,748 [main][SimpleValueBinder.java:398] : building SimpleValue for id
DEBUG 2022-09-08 19:53:02,748 [main][PropertyBinder.java:265] : Building property id
DEBUG 2022-09-08 19:53:02,748 [main][Ejb3Column.java:213] : Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy=''}
DEBUG 2022-09-08 19:53:02,748 [main][Ejb3Column.java:213] : Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Address), mappingColumn=author, insertable=true, updatable=true, unique=false}
DEBUG 2022-09-08 19:53:02,748 [main][PropertyBinder.java:265] : Building property author
DEBUG 2022-09-08 19:53:02,749 [main][Ejb3Column.java:213] : Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Address), mappingColumn=street, insertable=true, updatable=true, unique=false}
DEBUG 2022-09-08 19:53:02,749 [main][PropertyBinder.java:174] : MetadataSourceProcessor property street with lazy=false
DEBUG 2022-09-08 19:53:02,749 [main][AbstractPropertyHolder.java:89] : Attempting to locate auto-apply AttributeConverter for property [org.example.models.Address:street]
DEBUG 2022-09-08 19:53:02,749 [main][SimpleValueBinder.java:398] : building SimpleValue for street
DEBUG 2022-09-08 19:53:02,749 [main][PropertyBinder.java:265] : Building property street
DEBUG 2022-09-08 19:53:02,750 [main][SimpleValueBinder.java:443] : Starting fillSimpleValue for id
DEBUG 2022-09-08 19:53:02,750 [main][SimpleValueBinder.java:443] : Starting fillSimpleValue for name
DEBUG 2022-09-08 19:53:02,750 [main][SimpleValueBinder.java:443] : Starting fillSimpleValue for salary
DEBUG 2022-09-08 19:53:02,750 [main][SimpleValueBinder.java:443] : Starting fillSimpleValue for id
DEBUG 2022-09-08 19:53:02,750 [main][SimpleValueBinder.java:443] : Starting fillSimpleValue for name
DEBUG 2022-09-08 19:53:02,751 [main][SimpleValueBinder.java:443] : Starting fillSimpleValue for id
DEBUG 2022-09-08 19:53:02,751 [main][SimpleValueBinder.java:443] : Starting fillSimpleValue for fileName
DEBUG 2022-09-08 19:53:02,751 [main][SimpleValueBinder.java:443] : Starting fillSimpleValue for id
DEBUG 2022-09-08 19:53:02,751 [main][SimpleValueBinder.java:443] : Starting fillSimpleValue for street
DEBUG 2022-09-08 19:53:02,753 [main][PrimaryKey.java:35] : Forcing column [id] to be non-null as it is part of the primary key for table [author]
DEBUG 2022-09-08 19:53:02,753 [main][PrimaryKey.java:35] : Forcing column [id] to be non-null as it is part of the primary key for table [book]
DEBUG 2022-09-08 19:53:02,753 [main][PrimaryKey.java:35] : Forcing column [id] to be non-null as it is part of the primary key for table [photo]
DEBUG 2022-09-08 19:53:02,753 [main][PrimaryKey.java:35] : Forcing column [id] to be non-null as it is part of the primary key for table [address]
DEBUG 2022-09-08 19:53:02,754 [main][CollectionSecondPass.java:51] : Second pass for collection: org.example.models.Author.books
DEBUG 2022-09-08 19:53:02,754 [main][CollectionBinder.java:1210] : Binding as ManyToMany: org.example.models.Author.books
DEBUG 2022-09-08 19:53:02,755 [main][PrimaryKey.java:35] : Forcing column [book_id] to be non-null as it is part of the primary key for table [authors_books]
DEBUG 2022-09-08 19:53:02,756 [main][PrimaryKey.java:35] : Forcing column [author_id] to be non-null as it is part of the primary key for table [authors_books]
DEBUG 2022-09-08 19:53:02,756 [main][CollectionSecondPass.java:68] : Mapped collection key: book_id, element: author_id
DEBUG 2022-09-08 19:53:02,756 [main][PropertyBinder.java:265] : Building property address
DEBUG 2022-09-08 19:53:02,757 [main][CollectionSecondPass.java:51] : Second pass for collection: org.example.models.Author.photos
DEBUG 2022-09-08 19:53:02,757 [main][CollectionBinder.java:830] : Binding a OneToMany: org.example.models.Author.photos through a foreign key
DEBUG 2022-09-08 19:53:02,757 [main][CollectionBinder.java:868] : Mapping collection: org.example.models.Author.photos -> Photo
DEBUG 2022-09-08 19:53:02,757 [main][TableBinder.java:565] : Retrieving property org.example.models.Photo.author
DEBUG 2022-09-08 19:53:02,757 [main][CollectionSecondPass.java:68] : Mapped collection key: author_id, one-to-many: org.example.models.Photo
DEBUG 2022-09-08 19:53:02,757 [main][CollectionSecondPass.java:51] : Second pass for collection: org.example.models.Book.authors
DEBUG 2022-09-08 19:53:02,758 [main][CollectionBinder.java:1210] : Binding as ManyToMany: org.example.models.Book.authors
DEBUG 2022-09-08 19:53:02,758 [main][TableBinder.java:565] : Retrieving property org.example.models.Author.books
DEBUG 2022-09-08 19:53:02,758 [main][CollectionSecondPass.java:68] : Mapped collection key: author_id, element: book_id
DEBUG 2022-09-08 19:53:02,758 [main][InFlightMetadataCollectorImpl.java:1901] : Processing association property references
DEBUG 2022-09-08 19:53:02,758 [main][InFlightMetadataCollectorImpl.java:1798] : Resolving reference to class: org.example.models.Author
DEBUG 2022-09-08 19:53:02,759 [main][InFlightMetadataCollectorImpl.java:1798] : Resolving reference to class: org.example.models.Book
DEBUG 2022-09-08 19:53:02,760 [main][InFlightMetadataCollectorImpl.java:1798] : Resolving reference to class: org.example.models.Author
DEBUG 2022-09-08 19:53:02,760 [main][InFlightMetadataCollectorImpl.java:1798] : Resolving reference to class: org.example.models.Author
DEBUG 2022-09-08 19:53:02,761 [main][InFlightMetadataCollectorImpl.java:1901] : Processing association property references
DEBUG 2022-09-08 19:53:02,761 [main][InFlightMetadataCollectorImpl.java:1798] : Resolving reference to class: org.example.models.Author
DEBUG 2022-09-08 19:53:02,761 [main][InFlightMetadataCollectorImpl.java:1798] : Resolving reference to class: org.example.models.Book
DEBUG 2022-09-08 19:53:02,761 [main][InFlightMetadataCollectorImpl.java:1798] : Resolving reference to class: org.example.models.Author
DEBUG 2022-09-08 19:53:02,761 [main][InFlightMetadataCollectorImpl.java:1798] : Resolving reference to class: org.example.models.Author
DEBUG 2022-09-08 19:53:02,780 [main][SessionFactoryImpl.java:197] : Building session factory
DEBUG 2022-09-08 19:53:02,780 [main][Settings.java:69] : SessionFactory name : null
DEBUG 2022-09-08 19:53:02,781 [main][Settings.java:70] : Automatic flush during beforeCompletion(): enabled
DEBUG 2022-09-08 19:53:02,781 [main][Settings.java:71] : Automatic session close at end of transaction: disabled
DEBUG 2022-09-08 19:53:02,781 [main][Settings.java:73] : Statistics: disabled
DEBUG 2022-09-08 19:53:02,781 [main][Settings.java:75] : Deleted entity synthetic identifier rollback: disabled
DEBUG 2022-09-08 19:53:02,781 [main][Settings.java:76] : Default entity-mode: pojo
DEBUG 2022-09-08 19:53:02,781 [main][Settings.java:77] : Check Nullability in Core (should be disabled when Bean Validation is on): enabled
DEBUG 2022-09-08 19:53:02,781 [main][Settings.java:78] : Allow initialization of lazy state outside session : disabled
DEBUG 2022-09-08 19:53:02,781 [main][Settings.java:80] : Using BatchFetchStyle : LEGACY
DEBUG 2022-09-08 19:53:02,781 [main][Settings.java:81] : Default batch fetch size: -1
DEBUG 2022-09-08 19:53:02,782 [main][Settings.java:82] : Maximum outer join fetch depth: 2
DEBUG 2022-09-08 19:53:02,782 [main][Settings.java:83] : Default null ordering: NONE
DEBUG 2022-09-08 19:53:02,782 [main][Settings.java:84] : Order SQL updates by primary key: disabled
DEBUG 2022-09-08 19:53:02,782 [main][Settings.java:85] : Order SQL inserts for batching: disabled
DEBUG 2022-09-08 19:53:02,782 [main][Settings.java:87] : multi-tenancy strategy : NONE
DEBUG 2022-09-08 19:53:02,782 [main][Settings.java:89] : JTA Track by Thread: enabled
DEBUG 2022-09-08 19:53:02,782 [main][Settings.java:91] : Query language substitutions: {}
DEBUG 2022-09-08 19:53:02,782 [main][Settings.java:92] : JPA query language strict compliance: disabled
DEBUG 2022-09-08 19:53:02,782 [main][Settings.java:93] : Named query checking : enabled
DEBUG 2022-09-08 19:53:02,783 [main][Settings.java:95] : Second-level cache: enabled
DEBUG 2022-09-08 19:53:02,783 [main][Settings.java:96] : Second-level query cache: disabled
DEBUG 2022-09-08 19:53:02,783 [main][Settings.java:97] : Second-level query cache factory: org.hibernate.cache.internal.StandardQueryCacheFactory@b6fab065
DEBUG 2022-09-08 19:53:02,783 [main][Settings.java:98] : Second-level cache region prefix: null
DEBUG 2022-09-08 19:53:02,783 [main][Settings.java:99] : Optimize second-level cache for minimal puts: disabled
DEBUG 2022-09-08 19:53:02,783 [main][Settings.java:100] : Structured second-level cache entries: disabled
DEBUG 2022-09-08 19:53:02,783 [main][Settings.java:101] : Second-level cache direct-reference entries: disabled
DEBUG 2022-09-08 19:53:02,783 [main][Settings.java:102] : Automatic eviction of collection cache: disabled
DEBUG 2022-09-08 19:53:02,784 [main][Settings.java:104] : JDBC batch size: 15
DEBUG 2022-09-08 19:53:02,784 [main][Settings.java:105] : JDBC batch updates for versioned data: enabled
DEBUG 2022-09-08 19:53:02,784 [main][Settings.java:106] : Scrollable result sets: enabled
DEBUG 2022-09-08 19:53:02,784 [main][Settings.java:107] : Wrap result sets: disabled
DEBUG 2022-09-08 19:53:02,784 [main][Settings.java:108] : JDBC3 getGeneratedKeys(): enabled
DEBUG 2022-09-08 19:53:02,784 [main][Settings.java:109] : JDBC result set fetch size: null
DEBUG 2022-09-08 19:53:02,784 [main][Settings.java:110] : Connection release mode: AFTER_TRANSACTION
DEBUG 2022-09-08 19:53:02,784 [main][Settings.java:111] : Generate SQL with comments: disabled
DEBUG 2022-09-08 19:53:02,808 [main][SessionFactoryImpl.java:252] : Session factory constructed with filter configurations : {}
DEBUG 2022-09-08 19:53:02,809 [main][SessionFactoryImpl.java:253] : Instantiating session factory with properties: {awt.toolkit=sun.lwawt.macosx.LWCToolkit, java.specification.version=11, file.encoding.pkg=sun.io, jdk.extensions.version=11.0.15.0, sun.jnu.encoding=UTF-8, hibernate.dialect=org.hibernate.dialect.MySQLDialect, java.class.path=/Users/vdonets/IdeaProjects/testmaven/target/classes:/Users/vdonets/.m2/repository/org/hibernate/hibernate-core/5.2.2.Final/hibernate-core-5.2.2.Final.jar:/Users/vdonets/.m2/repository/org/jboss/logging/jboss-logging/3.3.0.Final/jboss-logging-3.3.0.Final.jar:/Users/vdonets/.m2/repository/org/hibernate/javax/persistence/hibernate-jpa-2.1-api/1.0.0.Final/hibernate-jpa-2.1-api-1.0.0.Final.jar:/Users/vdonets/.m2/repository/org/javassist/javassist/3.20.0-GA/javassist-3.20.0-GA.jar:/Users/vdonets/.m2/repository/antlr/antlr/2.7.7/antlr-2.7.7.jar:/Users/vdonets/.m2/repository/org/apache/geronimo/specs/geronimo-jta_1.1_spec/1.1.1/geronimo-jta_1.1_spec-1.1.1.jar:/Users/vdonets/.m2/repository/org/jboss/jandex/2.0.0.Final/jandex-2.0.0.Final.jar:/Users/vdonets/.m2/repository/com/fasterxml/classmate/1.3.0/classmate-1.3.0.jar:/Users/vdonets/.m2/repository/dom4j/dom4j/1.6.1/dom4j-1.6.1.jar:/Users/vdonets/.m2/repository/org/hibernate/common/hibernate-commons-annotations/5.0.1.Final/hibernate-commons-annotations-5.0.1.Final.jar:/Users/vdonets/.m2/repository/javax/enterprise/cdi-api/1.1/cdi-api-1.1.jar:/Users/vdonets/.m2/repository/javax/el/el-api/2.2/el-api-2.2.jar:/Users/vdonets/.m2/repository/org/jboss/spec/javax/interceptor/jboss-interceptors-api_1.1_spec/1.0.0.Beta1/jboss-interceptors-api_1.1_spec-1.0.0.Beta1.jar:/Users/vdonets/.m2/repository/javax/annotation/jsr250-api/1.0/jsr250-api-1.0.jar:/Users/vdonets/.m2/repository/javax/inject/javax.inject/1/javax.inject-1.jar:/Users/vdonets/.m2/repository/mysql/mysql-connector-java/8.0.29/mysql-connector-java-8.0.29.jar:/Users/vdonets/.m2/repository/com/google/protobuf/protobuf-java/3.19.4/protobuf-java-3.19.4.jar:/Users/vdonets/.m2/repository/jakarta/xml/bind/jakarta.xml.bind-api/2.3.2/jakarta.xml.bind-api-2.3.2.jar:/Users/vdonets/.m2/repository/jakarta/activation/jakarta.activation-api/1.2.1/jakarta.activation-api-1.2.1.jar:/Users/vdonets/.m2/repository/org/glassfish/jaxb/jaxb-runtime/2.3.2/jaxb-runtime-2.3.2.jar:/Users/vdonets/.m2/repository/org/glassfish/jaxb/txw2/2.3.2/txw2-2.3.2.jar:/Users/vdonets/.m2/repository/com/sun/istack/istack-commons-runtime/3.0.8/istack-commons-runtime-3.0.8.jar:/Users/vdonets/.m2/repository/org/jvnet/staxex/stax-ex/1.8.1/stax-ex-1.8.1.jar:/Users/vdonets/.m2/repository/com/sun/xml/fastinfoset/FastInfoset/1.2.16/FastInfoset-1.2.16.jar:/Users/vdonets/.m2/repository/log4j/log4j/1.2.14/log4j-1.2.14.jar:/Applications/IntelliJ IDEA.app/Contents/lib/idea_rt.jar:/Users/vdonets/Library/Caches/JetBrains/IntelliJIdea2022.1/captureAgent/debugger-agent.jar, java.vm.vendor=Eclipse OpenJ9, sun.arch.data.model=64, com.ibm.vm.bitmode=64, hbm2ddl.auto=create, user.variant=, com.ibm.oti.vm.library.version=29, java.vendor.url=https://www.ibm.com/semeru-runtimes, user.timezone=Europe/Warsaw, java.vm.specification.version=11, os.name=Mac OS X, sun.java.launcher=SUN_STANDARD, user.country=US, sun.boot.library.path=/Users/vdonets/Library/Java/JavaVirtualMachines/semeru-11.0.15/Contents/Home/lib/default:/Users/vdonets/Library/Java/JavaVirtualMachines/semeru-11.0.15/Contents/Home/lib, sun.java.command=org.example.Main, sun.cpu.endian=little, user.home=/Users/vdonets, user.language=en, java.specification.vendor=Oracle Corporation, java.version.date=2022-04-19, java.home=/Users/vdonets/Library/Java/JavaVirtualMachines/semeru-11.0.15/Contents/Home, ibm.signalhandling.rs=false, jdk.extensions.name=Extensions for OpenJDK for Eclipse OpenJ9, file.separator=/, line.separator=
, java.specification.name=Java Platform API Specification, java.vm.specification.vendor=Oracle Corporation, intellij.debug.agent=true, java.compiler=j9jit29, com.ibm.util.extralibs.properties=, java.awt.graphicsenv=sun.awt.CGraphicsEnvironment, com.ibm.oti.configuration=scar, com.ibm.oti.shared.enabled=false, hibernate.hbm2ddl.auto=create, com.ibm.oti.vm.bootstrap.library.path=/Users/vdonets/Library/Java/JavaVirtualMachines/semeru-11.0.15/Contents/Home/lib/default:/Users/vdonets/Library/Java/JavaVirtualMachines/semeru-11.0.15/Contents/Home/lib, com.ibm.cpu.endian=little, java.fullversion=11.0.15-ea+10
JRE 11 Mac OS X aarch64-64-Bit 20220422_36 (JIT enabled, AOT enabled)
OpenJ9   - 9a84ec34e
OMR      - ab24b6666
JCL      - b7b5b42ea6 based on jdk-11.0.15+10, java.runtime.version=11.0.15-ea+10, user.name=vdonets, path.separator=:, hibernate.connection.username=root, os.version=12.5, java.runtime.name=IBM Semeru Runtime Open Edition, hibernate.connection.url=jdbc:mysql://localhost:3306/classicmodels?serverTimezone=UTC, connection.pool_size=5, ibm.signalhandling.sigint=true, file.encoding=UTF-8, java.vm.name=Eclipse OpenJ9 VM, hibernate.show_sql=true, java.vendor.version=11.0.15.0, ibm.signalhandling.sigchain=true, show_sql=true, hibernate.connection.driver_class=com.mysql.cj.jdbc.Driver, java.vendor.url.bug=https://github.com/ibmruntimes/Semeru-Runtimes/issues, java.io.tmpdir=/var/folders/wv/6c3_66yd6kq3r7z477kwz4lr0000gn/T/, java.version=11.0.15-ea, jboss.modules.system.pkgs=com.intellij.rt, com.ibm.system.agent.path=/Users/vdonets/Library/Java/JavaVirtualMachines/semeru-11.0.15/Contents/Home/lib, user.dir=/Users/vdonets/IdeaProjects/testmaven, os.arch=aarch64, java.vm.specification.name=Java Virtual Machine Specification, java.awt.printerjob=sun.lwawt.macosx.CPrinterJob, hibernate.connection.password=****, os.encoding=UTF-8, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@6cf87e5a, java.library.path=/Users/vdonets/Library/Java/JavaVirtualMachines/semeru-11.0.15/Contents/Home/lib/default:/Users/vdonets/Library/Java/JavaVirtualMachines/semeru-11.0.15/Contents/Home/lib:/usr/lib, java.vendor=IBM Corporation, java.vm.info=JRE 11 Mac OS X aarch64-64-Bit 20220422_36 (JIT enabled, AOT enabled)
OpenJ9   - 9a84ec34e
OMR      - ab24b6666
JCL      - b7b5b42ea6 based on jdk-11.0.15+10, java.vm.version=openj9-0.32.0, ibm.system.encoding=UTF-8, hibernate.bytecode.use_reflection_optimizer=false, com.ibm.jcl.checkClassPath=, sun.io.unicode.encoding=UnicodeLittle, hibernate.connection.pool_size=5, java.class.version=55.0}
DEBUG 2022-09-08 19:53:02,814 [main][JaccIntegrator.java:80] : Skipping JACC integration as it was not enabled
DEBUG 2022-09-08 19:53:02,815 [main][SessionFactoryImpl.java:292] : Instantiated session factory
DEBUG 2022-09-08 19:53:02,834 [main][ClassLoaderAccessImpl.java:55] : Not known whether passed class name [org.example.models.Photo] is safe
DEBUG 2022-09-08 19:53:02,834 [main][ClassLoaderAccessImpl.java:57] : No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.models.Photo
DEBUG 2022-09-08 19:53:02,839 [main][ClassLoaderAccessImpl.java:55] : Not known whether passed class name [org.example.models.Photo] is safe
DEBUG 2022-09-08 19:53:02,840 [main][ClassLoaderAccessImpl.java:57] : No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.models.Photo
DEBUG 2022-09-08 19:53:02,864 [main][ClassLoaderAccessImpl.java:55] : Not known whether passed class name [org.example.models.Address] is safe
DEBUG 2022-09-08 19:53:02,864 [main][ClassLoaderAccessImpl.java:57] : No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.models.Address
DEBUG 2022-09-08 19:53:02,865 [main][ClassLoaderAccessImpl.java:55] : Not known whether passed class name [org.example.models.Address] is safe
DEBUG 2022-09-08 19:53:02,865 [main][ClassLoaderAccessImpl.java:57] : No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.models.Address
DEBUG 2022-09-08 19:53:02,867 [main][ClassLoaderAccessImpl.java:55] : Not known whether passed class name [org.example.models.Book] is safe
DEBUG 2022-09-08 19:53:02,867 [main][ClassLoaderAccessImpl.java:57] : No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.models.Book
DEBUG 2022-09-08 19:53:02,868 [main][ClassLoaderAccessImpl.java:55] : Not known whether passed class name [org.example.models.Book] is safe
DEBUG 2022-09-08 19:53:02,868 [main][ClassLoaderAccessImpl.java:57] : No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.models.Book
DEBUG 2022-09-08 19:53:02,871 [main][ClassLoaderAccessImpl.java:55] : Not known whether passed class name [org.example.models.Author] is safe
DEBUG 2022-09-08 19:53:02,871 [main][ClassLoaderAccessImpl.java:57] : No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.models.Author
DEBUG 2022-09-08 19:53:02,871 [main][ClassLoaderAccessImpl.java:55] : Not known whether passed class name [org.example.models.Author] is safe
DEBUG 2022-09-08 19:53:02,872 [main][ClassLoaderAccessImpl.java:57] : No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.models.Author
DEBUG 2022-09-08 19:53:02,879 [main][AbstractCollectionPersister.java:670] : Static SQL for collection: org.example.models.Book.authors
DEBUG 2022-09-08 19:53:02,879 [main][AbstractCollectionPersister.java:672] :  Row insert: insert into Authors_Books (author_id, book_id) values (?, ?)
DEBUG 2022-09-08 19:53:02,880 [main][AbstractCollectionPersister.java:675] :  Row update: update Authors_Books set book_id=? where author_id=? and book_id=?
DEBUG 2022-09-08 19:53:02,880 [main][AbstractCollectionPersister.java:678] :  Row delete: delete from Authors_Books where author_id=? and book_id=?
DEBUG 2022-09-08 19:53:02,880 [main][AbstractCollectionPersister.java:681] :  One-shot delete: delete from Authors_Books where author_id=?
DEBUG 2022-09-08 19:53:02,881 [main][AbstractCollectionPersister.java:670] : Static SQL for collection: org.example.models.Author.photos
DEBUG 2022-09-08 19:53:02,881 [main][AbstractCollectionPersister.java:672] :  Row insert: update Photo set author_id=? where id=?
DEBUG 2022-09-08 19:53:02,881 [main][AbstractCollectionPersister.java:675] :  Row update: update Photo set  where id=?
DEBUG 2022-09-08 19:53:02,881 [main][AbstractCollectionPersister.java:678] :  Row delete: update Photo set author_id=null where author_id=? and id=?
DEBUG 2022-09-08 19:53:02,881 [main][AbstractCollectionPersister.java:681] :  One-shot delete: update Photo set author_id=null where author_id=?
DEBUG 2022-09-08 19:53:02,881 [main][AbstractCollectionPersister.java:670] : Static SQL for collection: org.example.models.Author.books
DEBUG 2022-09-08 19:53:02,882 [main][AbstractCollectionPersister.java:672] :  Row insert: insert into Authors_Books (book_id, author_id) values (?, ?)
DEBUG 2022-09-08 19:53:02,882 [main][AbstractCollectionPersister.java:675] :  Row update: update Authors_Books set author_id=? where book_id=? and author_id=?
DEBUG 2022-09-08 19:53:02,882 [main][AbstractCollectionPersister.java:678] :  Row delete: delete from Authors_Books where book_id=? and author_id=?
DEBUG 2022-09-08 19:53:02,882 [main][AbstractCollectionPersister.java:681] :  One-shot delete: delete from Authors_Books where book_id=?
DEBUG 2022-09-08 19:53:02,885 [main][AbstractEntityPersister.java:3529] : Static SQL for entity: org.example.models.Photo
DEBUG 2022-09-08 19:53:02,885 [main][AbstractEntityPersister.java:3534] :  Version select: select id from Photo where id =?
DEBUG 2022-09-08 19:53:02,885 [main][AbstractEntityPersister.java:3537] :  Snapshot select: select photo_.id, photo_.author_id as author_i3_4_, photo_.file_name as file_nam2_4_ from Photo photo_ where photo_.id=?
DEBUG 2022-09-08 19:53:02,885 [main][DelegatingBasicLogger.java:394] :  Insert 0: insert into Photo (author_id, file_name, id) values (?, ?, ?)
DEBUG 2022-09-08 19:53:02,885 [main][DelegatingBasicLogger.java:394] :  Update 0: update Photo set author_id=?, file_name=? where id=?
DEBUG 2022-09-08 19:53:02,886 [main][DelegatingBasicLogger.java:394] :  Delete 0: delete from Photo where id=?
DEBUG 2022-09-08 19:53:02,886 [main][AbstractEntityPersister.java:3545] :  Identity insert: insert into Photo (author_id, file_name) values (?, ?)
DEBUG 2022-09-08 19:53:02,893 [main][QuerySpacesImpl.java:174] : Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2e2143b4]
DEBUG 2022-09-08 19:53:02,894 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : author
DEBUG 2022-09-08 19:53:02,895 [main][QuerySpacesImpl.java:174] : Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@11aa07a3]
DEBUG 2022-09-08 19:53:02,896 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : author.books
DEBUG 2022-09-08 19:53:02,896 [main][QuerySpacesImpl.java:174] : Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@293db4ac]
DEBUG 2022-09-08 19:53:02,897 [main][QuerySpacesImpl.java:174] : Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2d4f532e]
DEBUG 2022-09-08 19:53:02,897 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : author.name
DEBUG 2022-09-08 19:53:02,897 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : author.photos
DEBUG 2022-09-08 19:53:02,897 [main][MetamodelGraphWalker.java:145] : Property path deemed to be circular : author.photos
DEBUG 2022-09-08 19:53:02,897 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : author.salary
DEBUG 2022-09-08 19:53:02,897 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : author.address
DEBUG 2022-09-08 19:53:02,898 [main][QuerySpacesImpl.java:174] : Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@cb470aba]
DEBUG 2022-09-08 19:53:02,899 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : author.address.author
DEBUG 2022-09-08 19:53:02,899 [main][MetamodelGraphWalker.java:145] : Property path deemed to be circular : author.address.author
DEBUG 2022-09-08 19:53:02,899 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : author.address.street
DEBUG 2022-09-08 19:53:02,899 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : fileName
DEBUG 2022-09-08 19:53:02,899 [main][FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150] : Building LoadPlan...
DEBUG 2022-09-08 19:53:02,904 [main][LoadQueryJoinAndFetchProcessor.java:100] : processing queryspace <gen:0>
DEBUG 2022-09-08 19:53:02,906 [main][LoadPlanTreePrinter.java:55] : LoadPlan(entity=org.example.models.Photo)
    - Returns
       - EntityReturnImpl(entity=org.example.models.Photo, querySpaceUid=<gen:0>, path=org.example.models.Photo)
          - EntityAttributeFetchImpl(entity=org.example.models.Author, querySpaceUid=<gen:1>, path=org.example.models.Photo.author)
             - CollectionAttributeFetchImpl(collection=org.example.models.Author.books, querySpaceUid=<gen:2>, path=org.example.models.Photo.author.books)
                - (collection element) CollectionFetchableElementEntityGraph(entity=org.example.models.Book, querySpaceUid=<gen:3>, path=org.example.models.Photo.author.books.<elements>)
             - EntityAttributeFetchImpl(entity=org.example.models.Address, querySpaceUid=<gen:4>, path=org.example.models.Photo.author.address)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=org.example.models.Photo)
          - SQL table alias mapping - photo0_
          - alias suffix - 0_
          - suffixed key columns - {id1_4_0_}
          - JOIN (JoinDefinedByMetadata(author)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=org.example.models.Author)
                - SQL table alias mapping - author1_
                - alias suffix - 1_
                - suffixed key columns - {id1_1_1_}
                - JOIN (JoinDefinedByMetadata(address)) : <gen:1> -> <gen:4>
                   - EntityQuerySpaceImpl(uid=<gen:4>, entity=org.example.models.Address)
                      - SQL table alias mapping - address2_
                      - alias suffix - 2_
                      - suffixed key columns - {id1_0_2_}

DEBUG 2022-09-08 19:53:02,907 [main][EntityLoader.java:115] : Static select for entity org.example.models.Photo [NONE]: select photo0_.id as id1_4_0_, photo0_.author_id as author_i3_4_0_, photo0_.file_name as file_nam2_4_0_, author1_.id as id1_1_1_, author1_.name as name2_1_1_, author1_.salary as salary3_1_1_, address2_.id as id1_0_2_, address2_.author_id as author_i3_0_2_, address2_.street as street2_0_2_ from Photo photo0_ inner join Author author1_ on photo0_.author_id=author1_.id left outer join Address address2_ on author1_.id=address2_.author_id where photo0_.id=?
DEBUG 2022-09-08 19:53:02,908 [main][QuerySpacesImpl.java:174] : Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@23c9ca20]
DEBUG 2022-09-08 19:53:02,908 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : author
DEBUG 2022-09-08 19:53:02,908 [main][QuerySpacesImpl.java:174] : Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@9c8ad3b6]
DEBUG 2022-09-08 19:53:02,908 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : author.books
DEBUG 2022-09-08 19:53:02,909 [main][QuerySpacesImpl.java:174] : Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@4e0af45e]
DEBUG 2022-09-08 19:53:02,909 [main][QuerySpacesImpl.java:174] : Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@46754088]
DEBUG 2022-09-08 19:53:02,909 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : author.name
DEBUG 2022-09-08 19:53:02,909 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : author.photos
DEBUG 2022-09-08 19:53:02,909 [main][MetamodelGraphWalker.java:145] : Property path deemed to be circular : author.photos
DEBUG 2022-09-08 19:53:02,909 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : author.salary
DEBUG 2022-09-08 19:53:02,909 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : author.address
DEBUG 2022-09-08 19:53:02,910 [main][QuerySpacesImpl.java:174] : Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@908f3707]
DEBUG 2022-09-08 19:53:02,910 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : author.address.author
DEBUG 2022-09-08 19:53:02,910 [main][MetamodelGraphWalker.java:145] : Property path deemed to be circular : author.address.author
DEBUG 2022-09-08 19:53:02,910 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : author.address.street
DEBUG 2022-09-08 19:53:02,910 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : fileName
DEBUG 2022-09-08 19:53:02,910 [main][FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150] : Building LoadPlan...
DEBUG 2022-09-08 19:53:02,911 [main][LoadQueryJoinAndFetchProcessor.java:100] : processing queryspace <gen:0>
DEBUG 2022-09-08 19:53:02,912 [main][LoadPlanTreePrinter.java:55] : LoadPlan(entity=org.example.models.Photo)
    - Returns
       - EntityReturnImpl(entity=org.example.models.Photo, querySpaceUid=<gen:0>, path=org.example.models.Photo)
          - EntityAttributeFetchImpl(entity=org.example.models.Author, querySpaceUid=<gen:1>, path=org.example.models.Photo.author)
             - CollectionAttributeFetchImpl(collection=org.example.models.Author.books, querySpaceUid=<gen:2>, path=org.example.models.Photo.author.books)
                - (collection element) CollectionFetchableElementEntityGraph(entity=org.example.models.Book, querySpaceUid=<gen:3>, path=org.example.models.Photo.author.books.<elements>)
             - EntityAttributeFetchImpl(entity=org.example.models.Address, querySpaceUid=<gen:4>, path=org.example.models.Photo.author.address)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=org.example.models.Photo)
          - SQL table alias mapping - photo0_
          - alias suffix - 0_
          - suffixed key columns - {id1_4_0_}
          - JOIN (JoinDefinedByMetadata(author)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=org.example.models.Author)
                - SQL table alias mapping - author1_
                - alias suffix - 1_
                - suffixed key columns - {id1_1_1_}
                - JOIN (JoinDefinedByMetadata(address)) : <gen:1> -> <gen:4>
                   - EntityQuerySpaceImpl(uid=<gen:4>, entity=org.example.models.Address)
                      - SQL table alias mapping - address2_
                      - alias suffix - 2_
                      - suffixed key columns - {id1_0_2_}

DEBUG 2022-09-08 19:53:02,913 [main][EntityLoader.java:115] : Static select for entity org.example.models.Photo [READ]: select photo0_.id as id1_4_0_, photo0_.author_id as author_i3_4_0_, photo0_.file_name as file_nam2_4_0_, author1_.id as id1_1_1_, author1_.name as name2_1_1_, author1_.salary as salary3_1_1_, address2_.id as id1_0_2_, address2_.author_id as author_i3_0_2_, address2_.street as street2_0_2_ from Photo photo0_ inner join Author author1_ on photo0_.author_id=author1_.id left outer join Address address2_ on author1_.id=address2_.author_id where photo0_.id=?
DEBUG 2022-09-08 19:53:02,913 [main][QuerySpacesImpl.java:174] : Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@b2c2c3cb]
DEBUG 2022-09-08 19:53:02,913 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : author
DEBUG 2022-09-08 19:53:02,914 [main][QuerySpacesImpl.java:174] : Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@ba9b9127]
DEBUG 2022-09-08 19:53:02,914 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : fileName
DEBUG 2022-09-08 19:53:02,914 [main][FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150] : Building LoadPlan...
DEBUG 2022-09-08 19:53:02,914 [main][LoadQueryJoinAndFetchProcessor.java:100] : processing queryspace <gen:0>
DEBUG 2022-09-08 19:53:02,915 [main][LoadPlanTreePrinter.java:55] : LoadPlan(entity=org.example.models.Photo)
    - Returns
       - EntityReturnImpl(entity=org.example.models.Photo, querySpaceUid=<gen:0>, path=org.example.models.Photo)
          - EntityAttributeFetchImpl(entity=org.example.models.Author, querySpaceUid=<gen:1>, path=org.example.models.Photo.author)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=org.example.models.Photo)
          - SQL table alias mapping - photo0_
          - alias suffix - 0_
          - suffixed key columns - {id1_4_0_}

DEBUG 2022-09-08 19:53:02,915 [main][EntityLoader.java:115] : Static select for entity org.example.models.Photo [UPGRADE]: select photo0_.id as id1_4_0_, photo0_.author_id as author_i3_4_0_, photo0_.file_name as file_nam2_4_0_ from Photo photo0_ where photo0_.id=? for update
DEBUG 2022-09-08 19:53:02,915 [main][QuerySpacesImpl.java:174] : Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@fd00ba08]
DEBUG 2022-09-08 19:53:02,915 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : author
DEBUG 2022-09-08 19:53:02,915 [main][QuerySpacesImpl.java:174] : Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6095a964]
DEBUG 2022-09-08 19:53:02,915 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : fileName
DEBUG 2022-09-08 19:53:02,916 [main][FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150] : Building LoadPlan...
DEBUG 2022-09-08 19:53:02,916 [main][LoadQueryJoinAndFetchProcessor.java:100] : processing queryspace <gen:0>
DEBUG 2022-09-08 19:53:02,916 [main][LoadPlanTreePrinter.java:55] : LoadPlan(entity=org.example.models.Photo)
    - Returns
       - EntityReturnImpl(entity=org.example.models.Photo, querySpaceUid=<gen:0>, path=org.example.models.Photo)
          - EntityAttributeFetchImpl(entity=org.example.models.Author, querySpaceUid=<gen:1>, path=org.example.models.Photo.author)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=org.example.models.Photo)
          - SQL table alias mapping - photo0_
          - alias suffix - 0_
          - suffixed key columns - {id1_4_0_}

DEBUG 2022-09-08 19:53:02,916 [main][EntityLoader.java:115] : Static select for entity org.example.models.Photo [UPGRADE_NOWAIT]: select photo0_.id as id1_4_0_, photo0_.author_id as author_i3_4_0_, photo0_.file_name as file_nam2_4_0_ from Photo photo0_ where photo0_.id=? for update
DEBUG 2022-09-08 19:53:02,916 [main][QuerySpacesImpl.java:174] : Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@90a81fe7]
DEBUG 2022-09-08 19:53:02,917 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : author
DEBUG 2022-09-08 19:53:02,917 [main][QuerySpacesImpl.java:174] : Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3ab64a50]
DEBUG 2022-09-08 19:53:02,917 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : fileName
DEBUG 2022-09-08 19:53:02,917 [main][FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150] : Building LoadPlan...
DEBUG 2022-09-08 19:53:02,917 [main][LoadQueryJoinAndFetchProcessor.java:100] : processing queryspace <gen:0>
DEBUG 2022-09-08 19:53:02,917 [main][LoadPlanTreePrinter.java:55] : LoadPlan(entity=org.example.models.Photo)
    - Returns
       - EntityReturnImpl(entity=org.example.models.Photo, querySpaceUid=<gen:0>, path=org.example.models.Photo)
          - EntityAttributeFetchImpl(entity=org.example.models.Author, querySpaceUid=<gen:1>, path=org.example.models.Photo.author)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=org.example.models.Photo)
          - SQL table alias mapping - photo0_
          - alias suffix - 0_
          - suffixed key columns - {id1_4_0_}

DEBUG 2022-09-08 19:53:02,918 [main][EntityLoader.java:115] : Static select for entity org.example.models.Photo [UPGRADE_SKIPLOCKED]: select photo0_.id as id1_4_0_, photo0_.author_id as author_i3_4_0_, photo0_.file_name as file_nam2_4_0_ from Photo photo0_ where photo0_.id=? for update
DEBUG 2022-09-08 19:53:02,918 [main][QuerySpacesImpl.java:174] : Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@b35680ca]
DEBUG 2022-09-08 19:53:02,918 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : author
DEBUG 2022-09-08 19:53:02,918 [main][QuerySpacesImpl.java:174] : Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@72c34186]
DEBUG 2022-09-08 19:53:02,918 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : fileName
DEBUG 2022-09-08 19:53:02,918 [main][FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150] : Building LoadPlan...
DEBUG 2022-09-08 19:53:02,918 [main][LoadQueryJoinAndFetchProcessor.java:100] : processing queryspace <gen:0>
DEBUG 2022-09-08 19:53:02,919 [main][LoadPlanTreePrinter.java:55] : LoadPlan(entity=org.example.models.Photo)
    - Returns
       - EntityReturnImpl(entity=org.example.models.Photo, querySpaceUid=<gen:0>, path=org.example.models.Photo)
          - EntityAttributeFetchImpl(entity=org.example.models.Author, querySpaceUid=<gen:1>, path=org.example.models.Photo.author)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=org.example.models.Photo)
          - SQL table alias mapping - photo0_
          - alias suffix - 0_
          - suffixed key columns - {id1_4_0_}

DEBUG 2022-09-08 19:53:02,919 [main][EntityLoader.java:115] : Static select for entity org.example.models.Photo [FORCE]: select photo0_.id as id1_4_0_, photo0_.author_id as author_i3_4_0_, photo0_.file_name as file_nam2_4_0_ from Photo photo0_ where photo0_.id=? for update
DEBUG 2022-09-08 19:53:02,919 [main][QuerySpacesImpl.java:174] : Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@79f811d6]
DEBUG 2022-09-08 19:53:02,919 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : author
DEBUG 2022-09-08 19:53:02,920 [main][QuerySpacesImpl.java:174] : Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2ea561f5]
DEBUG 2022-09-08 19:53:02,920 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : fileName
DEBUG 2022-09-08 19:53:02,920 [main][FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150] : Building LoadPlan...
DEBUG 2022-09-08 19:53:02,920 [main][LoadQueryJoinAndFetchProcessor.java:100] : processing queryspace <gen:0>
DEBUG 2022-09-08 19:53:02,920 [main][LoadPlanTreePrinter.java:55] : LoadPlan(entity=org.example.models.Photo)
    - Returns
       - EntityReturnImpl(entity=org.example.models.Photo, querySpaceUid=<gen:0>, path=org.example.models.Photo)
          - EntityAttributeFetchImpl(entity=org.example.models.Author, querySpaceUid=<gen:1>, path=org.example.models.Photo.author)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=org.example.models.Photo)
          - SQL table alias mapping - photo0_
          - alias suffix - 0_
          - suffixed key columns - {id1_4_0_}

DEBUG 2022-09-08 19:53:02,920 [main][EntityLoader.java:115] : Static select for entity org.example.models.Photo [PESSIMISTIC_READ]: select photo0_.id as id1_4_0_, photo0_.author_id as author_i3_4_0_, photo0_.file_name as file_nam2_4_0_ from Photo photo0_ where photo0_.id=? lock in share mode
DEBUG 2022-09-08 19:53:02,921 [main][QuerySpacesImpl.java:174] : Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1279ae2c]
DEBUG 2022-09-08 19:53:02,922 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : author
DEBUG 2022-09-08 19:53:02,922 [main][QuerySpacesImpl.java:174] : Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6a045882]
DEBUG 2022-09-08 19:53:02,922 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : fileName
DEBUG 2022-09-08 19:53:02,922 [main][FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150] : Building LoadPlan...
DEBUG 2022-09-08 19:53:02,922 [main][LoadQueryJoinAndFetchProcessor.java:100] : processing queryspace <gen:0>
DEBUG 2022-09-08 19:53:02,923 [main][LoadPlanTreePrinter.java:55] : LoadPlan(entity=org.example.models.Photo)
    - Returns
       - EntityReturnImpl(entity=org.example.models.Photo, querySpaceUid=<gen:0>, path=org.example.models.Photo)
          - EntityAttributeFetchImpl(entity=org.example.models.Author, querySpaceUid=<gen:1>, path=org.example.models.Photo.author)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=org.example.models.Photo)
          - SQL table alias mapping - photo0_
          - alias suffix - 0_
          - suffixed key columns - {id1_4_0_}

DEBUG 2022-09-08 19:53:02,923 [main][EntityLoader.java:115] : Static select for entity org.example.models.Photo [PESSIMISTIC_WRITE]: select photo0_.id as id1_4_0_, photo0_.author_id as author_i3_4_0_, photo0_.file_name as file_nam2_4_0_ from Photo photo0_ where photo0_.id=? for update
DEBUG 2022-09-08 19:53:02,923 [main][QuerySpacesImpl.java:174] : Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@ed7a862c]
DEBUG 2022-09-08 19:53:02,923 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : author
DEBUG 2022-09-08 19:53:02,923 [main][QuerySpacesImpl.java:174] : Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@e7c3e219]
DEBUG 2022-09-08 19:53:02,924 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : fileName
DEBUG 2022-09-08 19:53:02,924 [main][FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150] : Building LoadPlan...
DEBUG 2022-09-08 19:53:02,924 [main][LoadQueryJoinAndFetchProcessor.java:100] : processing queryspace <gen:0>
DEBUG 2022-09-08 19:53:02,924 [main][LoadPlanTreePrinter.java:55] : LoadPlan(entity=org.example.models.Photo)
    - Returns
       - EntityReturnImpl(entity=org.example.models.Photo, querySpaceUid=<gen:0>, path=org.example.models.Photo)
          - EntityAttributeFetchImpl(entity=org.example.models.Author, querySpaceUid=<gen:1>, path=org.example.models.Photo.author)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=org.example.models.Photo)
          - SQL table alias mapping - photo0_
          - alias suffix - 0_
          - suffixed key columns - {id1_4_0_}

DEBUG 2022-09-08 19:53:02,924 [main][EntityLoader.java:115] : Static select for entity org.example.models.Photo [PESSIMISTIC_FORCE_INCREMENT]: select photo0_.id as id1_4_0_, photo0_.author_id as author_i3_4_0_, photo0_.file_name as file_nam2_4_0_ from Photo photo0_ where photo0_.id=? for update
DEBUG 2022-09-08 19:53:02,924 [main][QuerySpacesImpl.java:174] : Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2f40902]
DEBUG 2022-09-08 19:53:02,925 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : author
DEBUG 2022-09-08 19:53:02,925 [main][QuerySpacesImpl.java:174] : Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@ad1c5e64]
DEBUG 2022-09-08 19:53:02,925 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : fileName
DEBUG 2022-09-08 19:53:02,925 [main][FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150] : Building LoadPlan...
DEBUG 2022-09-08 19:53:02,925 [main][LoadQueryJoinAndFetchProcessor.java:100] : processing queryspace <gen:0>
DEBUG 2022-09-08 19:53:02,926 [main][LoadPlanTreePrinter.java:55] : LoadPlan(entity=org.example.models.Photo)
    - Returns
       - EntityReturnImpl(entity=org.example.models.Photo, querySpaceUid=<gen:0>, path=org.example.models.Photo)
          - EntityAttributeFetchImpl(entity=org.example.models.Author, querySpaceUid=<gen:1>, path=org.example.models.Photo.author)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=org.example.models.Photo)
          - SQL table alias mapping - photo0_
          - alias suffix - 0_
          - suffixed key columns - {id1_4_0_}

DEBUG 2022-09-08 19:53:02,926 [main][EntityLoader.java:115] : Static select for entity org.example.models.Photo [OPTIMISTIC]: select photo0_.id as id1_4_0_, photo0_.author_id as author_i3_4_0_, photo0_.file_name as file_nam2_4_0_ from Photo photo0_ where photo0_.id=?
DEBUG 2022-09-08 19:53:02,926 [main][QuerySpacesImpl.java:174] : Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@e923ed76]
DEBUG 2022-09-08 19:53:02,926 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : author
DEBUG 2022-09-08 19:53:02,926 [main][QuerySpacesImpl.java:174] : Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@d6130069]
DEBUG 2022-09-08 19:53:02,926 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : fileName
DEBUG 2022-09-08 19:53:02,926 [main][FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150] : Building LoadPlan...
DEBUG 2022-09-08 19:53:02,927 [main][LoadQueryJoinAndFetchProcessor.java:100] : processing queryspace <gen:0>
DEBUG 2022-09-08 19:53:02,927 [main][LoadPlanTreePrinter.java:55] : LoadPlan(entity=org.example.models.Photo)
    - Returns
       - EntityReturnImpl(entity=org.example.models.Photo, querySpaceUid=<gen:0>, path=org.example.models.Photo)
          - EntityAttributeFetchImpl(entity=org.example.models.Author, querySpaceUid=<gen:1>, path=org.example.models.Photo.author)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=org.example.models.Photo)
          - SQL table alias mapping - photo0_
          - alias suffix - 0_
          - suffixed key columns - {id1_4_0_}

DEBUG 2022-09-08 19:53:02,927 [main][EntityLoader.java:115] : Static select for entity org.example.models.Photo [OPTIMISTIC_FORCE_INCREMENT]: select photo0_.id as id1_4_0_, photo0_.author_id as author_i3_4_0_, photo0_.file_name as file_nam2_4_0_ from Photo photo0_ where photo0_.id=?
DEBUG 2022-09-08 19:53:02,933 [main][CascadeEntityLoader.java:38] : Static select for action ACTION_MERGE on entity org.example.models.Photo: select photo0_.id as id1_4_0_, photo0_.author_id as author_i3_4_0_, photo0_.file_name as file_nam2_4_0_ from Photo photo0_ where photo0_.id=?
DEBUG 2022-09-08 19:53:02,934 [main][CascadeEntityLoader.java:38] : Static select for action ACTION_REFRESH on entity org.example.models.Photo: select photo0_.id as id1_4_0_, photo0_.author_id as author_i3_4_0_, photo0_.file_name as file_nam2_4_0_ from Photo photo0_ where photo0_.id=?
DEBUG 2022-09-08 19:53:02,935 [main][AbstractEntityPersister.java:3529] : Static SQL for entity: org.example.models.Address
DEBUG 2022-09-08 19:53:02,935 [main][AbstractEntityPersister.java:3534] :  Version select: select id from Address where id =?
DEBUG 2022-09-08 19:53:02,935 [main][AbstractEntityPersister.java:3537] :  Snapshot select: select address_.id, address_.author_id as author_i3_0_, address_.street as street2_0_ from Address address_ where address_.id=?
DEBUG 2022-09-08 19:53:02,935 [main][DelegatingBasicLogger.java:394] :  Insert 0: insert into Address (author_id, street, id) values (?, ?, ?)
DEBUG 2022-09-08 19:53:02,935 [main][DelegatingBasicLogger.java:394] :  Update 0: update Address set author_id=?, street=? where id=?
DEBUG 2022-09-08 19:53:02,935 [main][DelegatingBasicLogger.java:394] :  Delete 0: delete from Address where id=?
DEBUG 2022-09-08 19:53:02,935 [main][AbstractEntityPersister.java:3545] :  Identity insert: insert into Address (author_id, street) values (?, ?)
DEBUG 2022-09-08 19:53:02,935 [main][QuerySpacesImpl.java:174] : Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@45680a23]
DEBUG 2022-09-08 19:53:02,936 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : author
DEBUG 2022-09-08 19:53:02,936 [main][QuerySpacesImpl.java:174] : Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@98de994f]
DEBUG 2022-09-08 19:53:02,936 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : author.books
DEBUG 2022-09-08 19:53:02,936 [main][QuerySpacesImpl.java:174] : Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@67979c0a]
DEBUG 2022-09-08 19:53:02,936 [main][QuerySpacesImpl.java:174] : Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@e8598f06]
DEBUG 2022-09-08 19:53:02,936 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : author.name
DEBUG 2022-09-08 19:53:02,937 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : author.photos
DEBUG 2022-09-08 19:53:02,937 [main][QuerySpacesImpl.java:174] : Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@2eb917b1]
DEBUG 2022-09-08 19:53:02,937 [main][QuerySpacesImpl.java:174] : Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@50a92f6d]
DEBUG 2022-09-08 19:53:02,937 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : author.salary
DEBUG 2022-09-08 19:53:02,937 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : author.address
DEBUG 2022-09-08 19:53:02,937 [main][MetamodelGraphWalker.java:145] : Property path deemed to be circular : author.address
DEBUG 2022-09-08 19:53:02,938 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : street
DEBUG 2022-09-08 19:53:02,938 [main][FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150] : Building LoadPlan...
DEBUG 2022-09-08 19:53:02,938 [main][LoadQueryJoinAndFetchProcessor.java:100] : processing queryspace <gen:0>
DEBUG 2022-09-08 19:53:02,939 [main][LoadPlanTreePrinter.java:55] : LoadPlan(entity=org.example.models.Address)
    - Returns
       - EntityReturnImpl(entity=org.example.models.Address, querySpaceUid=<gen:0>, path=org.example.models.Address)
          - EntityAttributeFetchImpl(entity=org.example.models.Author, querySpaceUid=<gen:1>, path=org.example.models.Address.author)
             - CollectionAttributeFetchImpl(collection=org.example.models.Author.books, querySpaceUid=<gen:2>, path=org.example.models.Address.author.books)
                - (collection element) CollectionFetchableElementEntityGraph(entity=org.example.models.Book, querySpaceUid=<gen:3>, path=org.example.models.Address.author.books.<elements>)
             - CollectionAttributeFetchImpl(collection=org.example.models.Author.photos, querySpaceUid=<gen:4>, path=org.example.models.Address.author.photos)
                - (collection element) CollectionFetchableElementEntityGraph(entity=org.example.models.Photo, querySpaceUid=<gen:5>, path=org.example.models.Address.author.photos.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=org.example.models.Address)
          - SQL table alias mapping - address0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}
          - JOIN (JoinDefinedByMetadata(author)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=org.example.models.Author)
                - SQL table alias mapping - author1_
                - alias suffix - 1_
                - suffixed key columns - {id1_1_1_}

DEBUG 2022-09-08 19:53:02,939 [main][EntityLoader.java:115] : Static select for entity org.example.models.Address [NONE]: select address0_.id as id1_0_0_, address0_.author_id as author_i3_0_0_, address0_.street as street2_0_0_, author1_.id as id1_1_1_, author1_.name as name2_1_1_, author1_.salary as salary3_1_1_ from Address address0_ left outer join Author author1_ on address0_.author_id=author1_.id where address0_.id=?
DEBUG 2022-09-08 19:53:02,939 [main][QuerySpacesImpl.java:174] : Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@19630c2c]
DEBUG 2022-09-08 19:53:02,939 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : author
DEBUG 2022-09-08 19:53:02,940 [main][QuerySpacesImpl.java:174] : Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6d216ea5]
DEBUG 2022-09-08 19:53:02,940 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : author.books
DEBUG 2022-09-08 19:53:02,940 [main][QuerySpacesImpl.java:174] : Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@fc83f1b6]
DEBUG 2022-09-08 19:53:02,940 [main][QuerySpacesImpl.java:174] : Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@dab26ff2]
DEBUG 2022-09-08 19:53:02,940 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : author.name
DEBUG 2022-09-08 19:53:02,941 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : author.photos
DEBUG 2022-09-08 19:53:02,941 [main][QuerySpacesImpl.java:174] : Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@1ce3357]
DEBUG 2022-09-08 19:53:02,941 [main][QuerySpacesImpl.java:174] : Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@d3fb0265]
DEBUG 2022-09-08 19:53:02,941 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : author.salary
DEBUG 2022-09-08 19:53:02,941 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : author.address
DEBUG 2022-09-08 19:53:02,941 [main][MetamodelGraphWalker.java:145] : Property path deemed to be circular : author.address
DEBUG 2022-09-08 19:53:02,941 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : street
DEBUG 2022-09-08 19:53:02,942 [main][FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150] : Building LoadPlan...
DEBUG 2022-09-08 19:53:02,942 [main][LoadQueryJoinAndFetchProcessor.java:100] : processing queryspace <gen:0>
DEBUG 2022-09-08 19:53:02,942 [main][LoadPlanTreePrinter.java:55] : LoadPlan(entity=org.example.models.Address)
    - Returns
       - EntityReturnImpl(entity=org.example.models.Address, querySpaceUid=<gen:0>, path=org.example.models.Address)
          - EntityAttributeFetchImpl(entity=org.example.models.Author, querySpaceUid=<gen:1>, path=org.example.models.Address.author)
             - CollectionAttributeFetchImpl(collection=org.example.models.Author.books, querySpaceUid=<gen:2>, path=org.example.models.Address.author.books)
                - (collection element) CollectionFetchableElementEntityGraph(entity=org.example.models.Book, querySpaceUid=<gen:3>, path=org.example.models.Address.author.books.<elements>)
             - CollectionAttributeFetchImpl(collection=org.example.models.Author.photos, querySpaceUid=<gen:4>, path=org.example.models.Address.author.photos)
                - (collection element) CollectionFetchableElementEntityGraph(entity=org.example.models.Photo, querySpaceUid=<gen:5>, path=org.example.models.Address.author.photos.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=org.example.models.Address)
          - SQL table alias mapping - address0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}
          - JOIN (JoinDefinedByMetadata(author)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=org.example.models.Author)
                - SQL table alias mapping - author1_
                - alias suffix - 1_
                - suffixed key columns - {id1_1_1_}

DEBUG 2022-09-08 19:53:02,943 [main][EntityLoader.java:115] : Static select for entity org.example.models.Address [READ]: select address0_.id as id1_0_0_, address0_.author_id as author_i3_0_0_, address0_.street as street2_0_0_, author1_.id as id1_1_1_, author1_.name as name2_1_1_, author1_.salary as salary3_1_1_ from Address address0_ left outer join Author author1_ on address0_.author_id=author1_.id where address0_.id=?
DEBUG 2022-09-08 19:53:02,943 [main][QuerySpacesImpl.java:174] : Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@90012311]
DEBUG 2022-09-08 19:53:02,943 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : author
DEBUG 2022-09-08 19:53:02,944 [main][QuerySpacesImpl.java:174] : Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@43d3ee49]
DEBUG 2022-09-08 19:53:02,944 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : street
DEBUG 2022-09-08 19:53:02,944 [main][FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150] : Building LoadPlan...
DEBUG 2022-09-08 19:53:02,944 [main][LoadQueryJoinAndFetchProcessor.java:100] : processing queryspace <gen:0>
DEBUG 2022-09-08 19:53:02,945 [main][LoadPlanTreePrinter.java:55] : LoadPlan(entity=org.example.models.Address)
    - Returns
       - EntityReturnImpl(entity=org.example.models.Address, querySpaceUid=<gen:0>, path=org.example.models.Address)
          - EntityAttributeFetchImpl(entity=org.example.models.Author, querySpaceUid=<gen:1>, path=org.example.models.Address.author)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=org.example.models.Address)
          - SQL table alias mapping - address0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

DEBUG 2022-09-08 19:53:02,945 [main][EntityLoader.java:115] : Static select for entity org.example.models.Address [UPGRADE]: select address0_.id as id1_0_0_, address0_.author_id as author_i3_0_0_, address0_.street as street2_0_0_ from Address address0_ where address0_.id=? for update
DEBUG 2022-09-08 19:53:02,945 [main][QuerySpacesImpl.java:174] : Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@c6f738de]
DEBUG 2022-09-08 19:53:02,945 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : author
DEBUG 2022-09-08 19:53:02,945 [main][QuerySpacesImpl.java:174] : Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6201419f]
DEBUG 2022-09-08 19:53:02,945 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : street
DEBUG 2022-09-08 19:53:02,945 [main][FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150] : Building LoadPlan...
DEBUG 2022-09-08 19:53:02,946 [main][LoadQueryJoinAndFetchProcessor.java:100] : processing queryspace <gen:0>
DEBUG 2022-09-08 19:53:02,946 [main][LoadPlanTreePrinter.java:55] : LoadPlan(entity=org.example.models.Address)
    - Returns
       - EntityReturnImpl(entity=org.example.models.Address, querySpaceUid=<gen:0>, path=org.example.models.Address)
          - EntityAttributeFetchImpl(entity=org.example.models.Author, querySpaceUid=<gen:1>, path=org.example.models.Address.author)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=org.example.models.Address)
          - SQL table alias mapping - address0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

DEBUG 2022-09-08 19:53:02,946 [main][EntityLoader.java:115] : Static select for entity org.example.models.Address [UPGRADE_NOWAIT]: select address0_.id as id1_0_0_, address0_.author_id as author_i3_0_0_, address0_.street as street2_0_0_ from Address address0_ where address0_.id=? for update
DEBUG 2022-09-08 19:53:02,946 [main][QuerySpacesImpl.java:174] : Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4a950fbb]
DEBUG 2022-09-08 19:53:02,946 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : author
DEBUG 2022-09-08 19:53:02,947 [main][QuerySpacesImpl.java:174] : Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@213fd475]
DEBUG 2022-09-08 19:53:02,947 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : street
DEBUG 2022-09-08 19:53:02,947 [main][FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150] : Building LoadPlan...
DEBUG 2022-09-08 19:53:02,947 [main][LoadQueryJoinAndFetchProcessor.java:100] : processing queryspace <gen:0>
DEBUG 2022-09-08 19:53:02,947 [main][LoadPlanTreePrinter.java:55] : LoadPlan(entity=org.example.models.Address)
    - Returns
       - EntityReturnImpl(entity=org.example.models.Address, querySpaceUid=<gen:0>, path=org.example.models.Address)
          - EntityAttributeFetchImpl(entity=org.example.models.Author, querySpaceUid=<gen:1>, path=org.example.models.Address.author)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=org.example.models.Address)
          - SQL table alias mapping - address0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

DEBUG 2022-09-08 19:53:02,947 [main][EntityLoader.java:115] : Static select for entity org.example.models.Address [UPGRADE_SKIPLOCKED]: select address0_.id as id1_0_0_, address0_.author_id as author_i3_0_0_, address0_.street as street2_0_0_ from Address address0_ where address0_.id=? for update
DEBUG 2022-09-08 19:53:02,948 [main][QuerySpacesImpl.java:174] : Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@f5960076]
DEBUG 2022-09-08 19:53:02,948 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : author
DEBUG 2022-09-08 19:53:02,948 [main][QuerySpacesImpl.java:174] : Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@14390e59]
DEBUG 2022-09-08 19:53:02,948 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : street
DEBUG 2022-09-08 19:53:02,948 [main][FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150] : Building LoadPlan...
DEBUG 2022-09-08 19:53:02,948 [main][LoadQueryJoinAndFetchProcessor.java:100] : processing queryspace <gen:0>
DEBUG 2022-09-08 19:53:02,949 [main][LoadPlanTreePrinter.java:55] : LoadPlan(entity=org.example.models.Address)
    - Returns
       - EntityReturnImpl(entity=org.example.models.Address, querySpaceUid=<gen:0>, path=org.example.models.Address)
          - EntityAttributeFetchImpl(entity=org.example.models.Author, querySpaceUid=<gen:1>, path=org.example.models.Address.author)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=org.example.models.Address)
          - SQL table alias mapping - address0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

DEBUG 2022-09-08 19:53:02,949 [main][EntityLoader.java:115] : Static select for entity org.example.models.Address [FORCE]: select address0_.id as id1_0_0_, address0_.author_id as author_i3_0_0_, address0_.street as street2_0_0_ from Address address0_ where address0_.id=? for update
DEBUG 2022-09-08 19:53:02,949 [main][QuerySpacesImpl.java:174] : Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@c0001ec4]
DEBUG 2022-09-08 19:53:02,949 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : author
DEBUG 2022-09-08 19:53:02,949 [main][QuerySpacesImpl.java:174] : Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5c9338ef]
DEBUG 2022-09-08 19:53:02,949 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : street
DEBUG 2022-09-08 19:53:02,949 [main][FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150] : Building LoadPlan...
DEBUG 2022-09-08 19:53:02,950 [main][LoadQueryJoinAndFetchProcessor.java:100] : processing queryspace <gen:0>
DEBUG 2022-09-08 19:53:02,950 [main][LoadPlanTreePrinter.java:55] : LoadPlan(entity=org.example.models.Address)
    - Returns
       - EntityReturnImpl(entity=org.example.models.Address, querySpaceUid=<gen:0>, path=org.example.models.Address)
          - EntityAttributeFetchImpl(entity=org.example.models.Author, querySpaceUid=<gen:1>, path=org.example.models.Address.author)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=org.example.models.Address)
          - SQL table alias mapping - address0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

DEBUG 2022-09-08 19:53:02,950 [main][EntityLoader.java:115] : Static select for entity org.example.models.Address [PESSIMISTIC_READ]: select address0_.id as id1_0_0_, address0_.author_id as author_i3_0_0_, address0_.street as street2_0_0_ from Address address0_ where address0_.id=? lock in share mode
DEBUG 2022-09-08 19:53:02,950 [main][QuerySpacesImpl.java:174] : Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@45f474fe]
DEBUG 2022-09-08 19:53:02,950 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : author
DEBUG 2022-09-08 19:53:02,950 [main][QuerySpacesImpl.java:174] : Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@88f1d6e6]
DEBUG 2022-09-08 19:53:02,951 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : street
DEBUG 2022-09-08 19:53:02,951 [main][FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150] : Building LoadPlan...
DEBUG 2022-09-08 19:53:02,951 [main][LoadQueryJoinAndFetchProcessor.java:100] : processing queryspace <gen:0>
DEBUG 2022-09-08 19:53:02,951 [main][LoadPlanTreePrinter.java:55] : LoadPlan(entity=org.example.models.Address)
    - Returns
       - EntityReturnImpl(entity=org.example.models.Address, querySpaceUid=<gen:0>, path=org.example.models.Address)
          - EntityAttributeFetchImpl(entity=org.example.models.Author, querySpaceUid=<gen:1>, path=org.example.models.Address.author)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=org.example.models.Address)
          - SQL table alias mapping - address0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

DEBUG 2022-09-08 19:53:02,951 [main][EntityLoader.java:115] : Static select for entity org.example.models.Address [PESSIMISTIC_WRITE]: select address0_.id as id1_0_0_, address0_.author_id as author_i3_0_0_, address0_.street as street2_0_0_ from Address address0_ where address0_.id=? for update
DEBUG 2022-09-08 19:53:02,951 [main][QuerySpacesImpl.java:174] : Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@8d236de6]
DEBUG 2022-09-08 19:53:02,952 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : author
DEBUG 2022-09-08 19:53:02,953 [main][QuerySpacesImpl.java:174] : Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@f0404f66]
DEBUG 2022-09-08 19:53:02,953 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : street
DEBUG 2022-09-08 19:53:02,953 [main][FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150] : Building LoadPlan...
DEBUG 2022-09-08 19:53:02,953 [main][LoadQueryJoinAndFetchProcessor.java:100] : processing queryspace <gen:0>
DEBUG 2022-09-08 19:53:02,953 [main][LoadPlanTreePrinter.java:55] : LoadPlan(entity=org.example.models.Address)
    - Returns
       - EntityReturnImpl(entity=org.example.models.Address, querySpaceUid=<gen:0>, path=org.example.models.Address)
          - EntityAttributeFetchImpl(entity=org.example.models.Author, querySpaceUid=<gen:1>, path=org.example.models.Address.author)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=org.example.models.Address)
          - SQL table alias mapping - address0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

DEBUG 2022-09-08 19:53:02,953 [main][EntityLoader.java:115] : Static select for entity org.example.models.Address [PESSIMISTIC_FORCE_INCREMENT]: select address0_.id as id1_0_0_, address0_.author_id as author_i3_0_0_, address0_.street as street2_0_0_ from Address address0_ where address0_.id=? for update
DEBUG 2022-09-08 19:53:02,954 [main][QuerySpacesImpl.java:174] : Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@ed76cdef]
DEBUG 2022-09-08 19:53:02,954 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : author
DEBUG 2022-09-08 19:53:02,954 [main][QuerySpacesImpl.java:174] : Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@82c97b47]
DEBUG 2022-09-08 19:53:02,954 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : street
DEBUG 2022-09-08 19:53:02,954 [main][FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150] : Building LoadPlan...
DEBUG 2022-09-08 19:53:02,954 [main][LoadQueryJoinAndFetchProcessor.java:100] : processing queryspace <gen:0>
DEBUG 2022-09-08 19:53:02,955 [main][LoadPlanTreePrinter.java:55] : LoadPlan(entity=org.example.models.Address)
    - Returns
       - EntityReturnImpl(entity=org.example.models.Address, querySpaceUid=<gen:0>, path=org.example.models.Address)
          - EntityAttributeFetchImpl(entity=org.example.models.Author, querySpaceUid=<gen:1>, path=org.example.models.Address.author)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=org.example.models.Address)
          - SQL table alias mapping - address0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

DEBUG 2022-09-08 19:53:02,955 [main][EntityLoader.java:115] : Static select for entity org.example.models.Address [OPTIMISTIC]: select address0_.id as id1_0_0_, address0_.author_id as author_i3_0_0_, address0_.street as street2_0_0_ from Address address0_ where address0_.id=?
DEBUG 2022-09-08 19:53:02,955 [main][QuerySpacesImpl.java:174] : Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5651629f]
DEBUG 2022-09-08 19:53:02,955 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : author
DEBUG 2022-09-08 19:53:02,955 [main][QuerySpacesImpl.java:174] : Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@93fc6204]
DEBUG 2022-09-08 19:53:02,955 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : street
DEBUG 2022-09-08 19:53:02,955 [main][FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150] : Building LoadPlan...
DEBUG 2022-09-08 19:53:02,956 [main][LoadQueryJoinAndFetchProcessor.java:100] : processing queryspace <gen:0>
DEBUG 2022-09-08 19:53:02,956 [main][LoadPlanTreePrinter.java:55] : LoadPlan(entity=org.example.models.Address)
    - Returns
       - EntityReturnImpl(entity=org.example.models.Address, querySpaceUid=<gen:0>, path=org.example.models.Address)
          - EntityAttributeFetchImpl(entity=org.example.models.Author, querySpaceUid=<gen:1>, path=org.example.models.Address.author)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=org.example.models.Address)
          - SQL table alias mapping - address0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

DEBUG 2022-09-08 19:53:02,956 [main][EntityLoader.java:115] : Static select for entity org.example.models.Address [OPTIMISTIC_FORCE_INCREMENT]: select address0_.id as id1_0_0_, address0_.author_id as author_i3_0_0_, address0_.street as street2_0_0_ from Address address0_ where address0_.id=?
DEBUG 2022-09-08 19:53:02,956 [main][CascadeEntityLoader.java:38] : Static select for action ACTION_MERGE on entity org.example.models.Address: select address0_.id as id1_0_0_, address0_.author_id as author_i3_0_0_, address0_.street as street2_0_0_ from Address address0_ where address0_.id=?
DEBUG 2022-09-08 19:53:02,956 [main][CascadeEntityLoader.java:38] : Static select for action ACTION_REFRESH on entity org.example.models.Address: select address0_.id as id1_0_0_, address0_.author_id as author_i3_0_0_, address0_.street as street2_0_0_ from Address address0_ where address0_.id=?
DEBUG 2022-09-08 19:53:02,958 [main][EntityLoader.java:106] : Static select for entity org.example.models.Address [NONE]: select address0_.id as id1_0_1_, address0_.author_id as author_i3_0_1_, address0_.street as street2_0_1_, author1_.id as id1_1_0_, author1_.name as name2_1_0_, author1_.salary as salary3_1_0_ from Address address0_ left outer join Author author1_ on address0_.author_id=author1_.id where address0_.author_id=?
DEBUG 2022-09-08 19:53:02,958 [main][AbstractEntityPersister.java:3529] : Static SQL for entity: org.example.models.Book
DEBUG 2022-09-08 19:53:02,958 [main][AbstractEntityPersister.java:3534] :  Version select: select id from Book where id =?
DEBUG 2022-09-08 19:53:02,958 [main][AbstractEntityPersister.java:3537] :  Snapshot select: select book_.id, book_.name as name2_3_ from Book book_ where book_.id=?
DEBUG 2022-09-08 19:53:02,958 [main][DelegatingBasicLogger.java:394] :  Insert 0: insert into Book (name, id) values (?, ?)
DEBUG 2022-09-08 19:53:02,958 [main][DelegatingBasicLogger.java:394] :  Update 0: update Book set name=? where id=?
DEBUG 2022-09-08 19:53:02,958 [main][DelegatingBasicLogger.java:394] :  Delete 0: delete from Book where id=?
DEBUG 2022-09-08 19:53:02,958 [main][QuerySpacesImpl.java:174] : Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@dcaca156]
DEBUG 2022-09-08 19:53:02,959 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : authors
DEBUG 2022-09-08 19:53:02,959 [main][QuerySpacesImpl.java:174] : Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@d4fced43]
DEBUG 2022-09-08 19:53:02,959 [main][QuerySpacesImpl.java:174] : Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@b0daa519]
DEBUG 2022-09-08 19:53:02,959 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : name
DEBUG 2022-09-08 19:53:02,959 [main][FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150] : Building LoadPlan...
DEBUG 2022-09-08 19:53:02,959 [main][LoadQueryJoinAndFetchProcessor.java:100] : processing queryspace <gen:0>
DEBUG 2022-09-08 19:53:02,959 [main][LoadPlanTreePrinter.java:55] : LoadPlan(entity=org.example.models.Book)
    - Returns
       - EntityReturnImpl(entity=org.example.models.Book, querySpaceUid=<gen:0>, path=org.example.models.Book)
          - CollectionAttributeFetchImpl(collection=org.example.models.Book.authors, querySpaceUid=<gen:1>, path=org.example.models.Book.authors)
             - (collection element) CollectionFetchableElementEntityGraph(entity=org.example.models.Author, querySpaceUid=<gen:2>, path=org.example.models.Book.authors.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=org.example.models.Book)
          - SQL table alias mapping - book0_
          - alias suffix - 0_
          - suffixed key columns - {id1_3_0_}

DEBUG 2022-09-08 19:53:02,960 [main][EntityLoader.java:115] : Static select for entity org.example.models.Book [NONE]: select book0_.id as id1_3_0_, book0_.name as name2_3_0_ from Book book0_ where book0_.id=?
DEBUG 2022-09-08 19:53:02,960 [main][QuerySpacesImpl.java:174] : Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@58bd88e]
DEBUG 2022-09-08 19:53:02,960 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : authors
DEBUG 2022-09-08 19:53:02,960 [main][QuerySpacesImpl.java:174] : Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@e5da1173]
DEBUG 2022-09-08 19:53:02,960 [main][QuerySpacesImpl.java:174] : Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@ffeb894f]
DEBUG 2022-09-08 19:53:02,960 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : name
DEBUG 2022-09-08 19:53:02,960 [main][FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150] : Building LoadPlan...
DEBUG 2022-09-08 19:53:02,960 [main][LoadQueryJoinAndFetchProcessor.java:100] : processing queryspace <gen:0>
DEBUG 2022-09-08 19:53:02,961 [main][LoadPlanTreePrinter.java:55] : LoadPlan(entity=org.example.models.Book)
    - Returns
       - EntityReturnImpl(entity=org.example.models.Book, querySpaceUid=<gen:0>, path=org.example.models.Book)
          - CollectionAttributeFetchImpl(collection=org.example.models.Book.authors, querySpaceUid=<gen:1>, path=org.example.models.Book.authors)
             - (collection element) CollectionFetchableElementEntityGraph(entity=org.example.models.Author, querySpaceUid=<gen:2>, path=org.example.models.Book.authors.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=org.example.models.Book)
          - SQL table alias mapping - book0_
          - alias suffix - 0_
          - suffixed key columns - {id1_3_0_}

DEBUG 2022-09-08 19:53:02,961 [main][EntityLoader.java:115] : Static select for entity org.example.models.Book [READ]: select book0_.id as id1_3_0_, book0_.name as name2_3_0_ from Book book0_ where book0_.id=?
DEBUG 2022-09-08 19:53:02,962 [main][QuerySpacesImpl.java:174] : Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@81f48831]
DEBUG 2022-09-08 19:53:02,962 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : authors
DEBUG 2022-09-08 19:53:02,962 [main][QuerySpacesImpl.java:174] : Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@699ab631]
DEBUG 2022-09-08 19:53:02,962 [main][QuerySpacesImpl.java:174] : Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@f41f2f1]
DEBUG 2022-09-08 19:53:02,962 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : name
DEBUG 2022-09-08 19:53:02,962 [main][FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150] : Building LoadPlan...
DEBUG 2022-09-08 19:53:02,962 [main][LoadQueryJoinAndFetchProcessor.java:100] : processing queryspace <gen:0>
DEBUG 2022-09-08 19:53:02,963 [main][LoadPlanTreePrinter.java:55] : LoadPlan(entity=org.example.models.Book)
    - Returns
       - EntityReturnImpl(entity=org.example.models.Book, querySpaceUid=<gen:0>, path=org.example.models.Book)
          - CollectionAttributeFetchImpl(collection=org.example.models.Book.authors, querySpaceUid=<gen:1>, path=org.example.models.Book.authors)
             - (collection element) CollectionFetchableElementEntityGraph(entity=org.example.models.Author, querySpaceUid=<gen:2>, path=org.example.models.Book.authors.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=org.example.models.Book)
          - SQL table alias mapping - book0_
          - alias suffix - 0_
          - suffixed key columns - {id1_3_0_}

DEBUG 2022-09-08 19:53:02,963 [main][EntityLoader.java:115] : Static select for entity org.example.models.Book [UPGRADE]: select book0_.id as id1_3_0_, book0_.name as name2_3_0_ from Book book0_ where book0_.id=? for update
DEBUG 2022-09-08 19:53:02,963 [main][QuerySpacesImpl.java:174] : Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@e20578ae]
DEBUG 2022-09-08 19:53:02,963 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : authors
DEBUG 2022-09-08 19:53:02,963 [main][QuerySpacesImpl.java:174] : Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@e7cecf35]
DEBUG 2022-09-08 19:53:02,963 [main][QuerySpacesImpl.java:174] : Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@ed420093]
DEBUG 2022-09-08 19:53:02,963 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : name
DEBUG 2022-09-08 19:53:02,963 [main][FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150] : Building LoadPlan...
DEBUG 2022-09-08 19:53:02,964 [main][LoadQueryJoinAndFetchProcessor.java:100] : processing queryspace <gen:0>
DEBUG 2022-09-08 19:53:02,964 [main][LoadPlanTreePrinter.java:55] : LoadPlan(entity=org.example.models.Book)
    - Returns
       - EntityReturnImpl(entity=org.example.models.Book, querySpaceUid=<gen:0>, path=org.example.models.Book)
          - CollectionAttributeFetchImpl(collection=org.example.models.Book.authors, querySpaceUid=<gen:1>, path=org.example.models.Book.authors)
             - (collection element) CollectionFetchableElementEntityGraph(entity=org.example.models.Author, querySpaceUid=<gen:2>, path=org.example.models.Book.authors.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=org.example.models.Book)
          - SQL table alias mapping - book0_
          - alias suffix - 0_
          - suffixed key columns - {id1_3_0_}

DEBUG 2022-09-08 19:53:02,964 [main][EntityLoader.java:115] : Static select for entity org.example.models.Book [UPGRADE_NOWAIT]: select book0_.id as id1_3_0_, book0_.name as name2_3_0_ from Book book0_ where book0_.id=? for update
DEBUG 2022-09-08 19:53:02,964 [main][QuerySpacesImpl.java:174] : Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@add7a5ef]
DEBUG 2022-09-08 19:53:02,964 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : authors
DEBUG 2022-09-08 19:53:02,964 [main][QuerySpacesImpl.java:174] : Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@a2f3da6c]
DEBUG 2022-09-08 19:53:02,964 [main][QuerySpacesImpl.java:174] : Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@f472240d]
DEBUG 2022-09-08 19:53:02,964 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : name
DEBUG 2022-09-08 19:53:02,965 [main][FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150] : Building LoadPlan...
DEBUG 2022-09-08 19:53:02,965 [main][LoadQueryJoinAndFetchProcessor.java:100] : processing queryspace <gen:0>
DEBUG 2022-09-08 19:53:02,965 [main][LoadPlanTreePrinter.java:55] : LoadPlan(entity=org.example.models.Book)
    - Returns
       - EntityReturnImpl(entity=org.example.models.Book, querySpaceUid=<gen:0>, path=org.example.models.Book)
          - CollectionAttributeFetchImpl(collection=org.example.models.Book.authors, querySpaceUid=<gen:1>, path=org.example.models.Book.authors)
             - (collection element) CollectionFetchableElementEntityGraph(entity=org.example.models.Author, querySpaceUid=<gen:2>, path=org.example.models.Book.authors.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=org.example.models.Book)
          - SQL table alias mapping - book0_
          - alias suffix - 0_
          - suffixed key columns - {id1_3_0_}

DEBUG 2022-09-08 19:53:02,965 [main][EntityLoader.java:115] : Static select for entity org.example.models.Book [UPGRADE_SKIPLOCKED]: select book0_.id as id1_3_0_, book0_.name as name2_3_0_ from Book book0_ where book0_.id=? for update
DEBUG 2022-09-08 19:53:02,965 [main][QuerySpacesImpl.java:174] : Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@827be34]
DEBUG 2022-09-08 19:53:02,965 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : authors
DEBUG 2022-09-08 19:53:02,965 [main][QuerySpacesImpl.java:174] : Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@eac8328e]
DEBUG 2022-09-08 19:53:02,966 [main][QuerySpacesImpl.java:174] : Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@9d5536a3]
DEBUG 2022-09-08 19:53:02,966 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : name
DEBUG 2022-09-08 19:53:02,966 [main][FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150] : Building LoadPlan...
DEBUG 2022-09-08 19:53:02,966 [main][LoadQueryJoinAndFetchProcessor.java:100] : processing queryspace <gen:0>
DEBUG 2022-09-08 19:53:02,966 [main][LoadPlanTreePrinter.java:55] : LoadPlan(entity=org.example.models.Book)
    - Returns
       - EntityReturnImpl(entity=org.example.models.Book, querySpaceUid=<gen:0>, path=org.example.models.Book)
          - CollectionAttributeFetchImpl(collection=org.example.models.Book.authors, querySpaceUid=<gen:1>, path=org.example.models.Book.authors)
             - (collection element) CollectionFetchableElementEntityGraph(entity=org.example.models.Author, querySpaceUid=<gen:2>, path=org.example.models.Book.authors.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=org.example.models.Book)
          - SQL table alias mapping - book0_
          - alias suffix - 0_
          - suffixed key columns - {id1_3_0_}

DEBUG 2022-09-08 19:53:02,966 [main][EntityLoader.java:115] : Static select for entity org.example.models.Book [FORCE]: select book0_.id as id1_3_0_, book0_.name as name2_3_0_ from Book book0_ where book0_.id=? for update
DEBUG 2022-09-08 19:53:02,966 [main][QuerySpacesImpl.java:174] : Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@957a529b]
DEBUG 2022-09-08 19:53:02,967 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : authors
DEBUG 2022-09-08 19:53:02,967 [main][QuerySpacesImpl.java:174] : Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@99b4afb6]
DEBUG 2022-09-08 19:53:02,967 [main][QuerySpacesImpl.java:174] : Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@af44dd2c]
DEBUG 2022-09-08 19:53:02,967 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : name
DEBUG 2022-09-08 19:53:02,967 [main][FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150] : Building LoadPlan...
DEBUG 2022-09-08 19:53:02,967 [main][LoadQueryJoinAndFetchProcessor.java:100] : processing queryspace <gen:0>
DEBUG 2022-09-08 19:53:02,968 [main][LoadPlanTreePrinter.java:55] : LoadPlan(entity=org.example.models.Book)
    - Returns
       - EntityReturnImpl(entity=org.example.models.Book, querySpaceUid=<gen:0>, path=org.example.models.Book)
          - CollectionAttributeFetchImpl(collection=org.example.models.Book.authors, querySpaceUid=<gen:1>, path=org.example.models.Book.authors)
             - (collection element) CollectionFetchableElementEntityGraph(entity=org.example.models.Author, querySpaceUid=<gen:2>, path=org.example.models.Book.authors.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=org.example.models.Book)
          - SQL table alias mapping - book0_
          - alias suffix - 0_
          - suffixed key columns - {id1_3_0_}

DEBUG 2022-09-08 19:53:02,968 [main][EntityLoader.java:115] : Static select for entity org.example.models.Book [PESSIMISTIC_READ]: select book0_.id as id1_3_0_, book0_.name as name2_3_0_ from Book book0_ where book0_.id=? lock in share mode
DEBUG 2022-09-08 19:53:02,968 [main][QuerySpacesImpl.java:174] : Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@d91f2329]
DEBUG 2022-09-08 19:53:02,968 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : authors
DEBUG 2022-09-08 19:53:02,968 [main][QuerySpacesImpl.java:174] : Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@aeaa1031]
DEBUG 2022-09-08 19:53:02,969 [main][QuerySpacesImpl.java:174] : Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4f45506e]
DEBUG 2022-09-08 19:53:02,969 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : name
DEBUG 2022-09-08 19:53:02,969 [main][FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150] : Building LoadPlan...
DEBUG 2022-09-08 19:53:02,969 [main][LoadQueryJoinAndFetchProcessor.java:100] : processing queryspace <gen:0>
DEBUG 2022-09-08 19:53:02,969 [main][LoadPlanTreePrinter.java:55] : LoadPlan(entity=org.example.models.Book)
    - Returns
       - EntityReturnImpl(entity=org.example.models.Book, querySpaceUid=<gen:0>, path=org.example.models.Book)
          - CollectionAttributeFetchImpl(collection=org.example.models.Book.authors, querySpaceUid=<gen:1>, path=org.example.models.Book.authors)
             - (collection element) CollectionFetchableElementEntityGraph(entity=org.example.models.Author, querySpaceUid=<gen:2>, path=org.example.models.Book.authors.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=org.example.models.Book)
          - SQL table alias mapping - book0_
          - alias suffix - 0_
          - suffixed key columns - {id1_3_0_}

DEBUG 2022-09-08 19:53:02,969 [main][EntityLoader.java:115] : Static select for entity org.example.models.Book [PESSIMISTIC_WRITE]: select book0_.id as id1_3_0_, book0_.name as name2_3_0_ from Book book0_ where book0_.id=? for update
DEBUG 2022-09-08 19:53:02,970 [main][QuerySpacesImpl.java:174] : Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2c26cc03]
DEBUG 2022-09-08 19:53:02,970 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : authors
DEBUG 2022-09-08 19:53:02,970 [main][QuerySpacesImpl.java:174] : Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@d9b061c5]
DEBUG 2022-09-08 19:53:02,970 [main][QuerySpacesImpl.java:174] : Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@e408be96]
DEBUG 2022-09-08 19:53:02,970 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : name
DEBUG 2022-09-08 19:53:02,970 [main][FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150] : Building LoadPlan...
DEBUG 2022-09-08 19:53:02,970 [main][LoadQueryJoinAndFetchProcessor.java:100] : processing queryspace <gen:0>
DEBUG 2022-09-08 19:53:02,971 [main][LoadPlanTreePrinter.java:55] : LoadPlan(entity=org.example.models.Book)
    - Returns
       - EntityReturnImpl(entity=org.example.models.Book, querySpaceUid=<gen:0>, path=org.example.models.Book)
          - CollectionAttributeFetchImpl(collection=org.example.models.Book.authors, querySpaceUid=<gen:1>, path=org.example.models.Book.authors)
             - (collection element) CollectionFetchableElementEntityGraph(entity=org.example.models.Author, querySpaceUid=<gen:2>, path=org.example.models.Book.authors.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=org.example.models.Book)
          - SQL table alias mapping - book0_
          - alias suffix - 0_
          - suffixed key columns - {id1_3_0_}

DEBUG 2022-09-08 19:53:02,971 [main][EntityLoader.java:115] : Static select for entity org.example.models.Book [PESSIMISTIC_FORCE_INCREMENT]: select book0_.id as id1_3_0_, book0_.name as name2_3_0_ from Book book0_ where book0_.id=? for update
DEBUG 2022-09-08 19:53:02,971 [main][QuerySpacesImpl.java:174] : Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@47394167]
DEBUG 2022-09-08 19:53:02,971 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : authors
DEBUG 2022-09-08 19:53:02,971 [main][QuerySpacesImpl.java:174] : Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@3388cfd8]
DEBUG 2022-09-08 19:53:02,971 [main][QuerySpacesImpl.java:174] : Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3825b25e]
DEBUG 2022-09-08 19:53:02,971 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : name
DEBUG 2022-09-08 19:53:02,971 [main][FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150] : Building LoadPlan...
DEBUG 2022-09-08 19:53:02,971 [main][LoadQueryJoinAndFetchProcessor.java:100] : processing queryspace <gen:0>
DEBUG 2022-09-08 19:53:02,972 [main][LoadPlanTreePrinter.java:55] : LoadPlan(entity=org.example.models.Book)
    - Returns
       - EntityReturnImpl(entity=org.example.models.Book, querySpaceUid=<gen:0>, path=org.example.models.Book)
          - CollectionAttributeFetchImpl(collection=org.example.models.Book.authors, querySpaceUid=<gen:1>, path=org.example.models.Book.authors)
             - (collection element) CollectionFetchableElementEntityGraph(entity=org.example.models.Author, querySpaceUid=<gen:2>, path=org.example.models.Book.authors.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=org.example.models.Book)
          - SQL table alias mapping - book0_
          - alias suffix - 0_
          - suffixed key columns - {id1_3_0_}

DEBUG 2022-09-08 19:53:02,972 [main][EntityLoader.java:115] : Static select for entity org.example.models.Book [OPTIMISTIC]: select book0_.id as id1_3_0_, book0_.name as name2_3_0_ from Book book0_ where book0_.id=?
DEBUG 2022-09-08 19:53:02,972 [main][QuerySpacesImpl.java:174] : Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@787e970c]
DEBUG 2022-09-08 19:53:02,972 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : authors
DEBUG 2022-09-08 19:53:02,972 [main][QuerySpacesImpl.java:174] : Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@317e636a]
DEBUG 2022-09-08 19:53:02,972 [main][QuerySpacesImpl.java:174] : Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7549278f]
DEBUG 2022-09-08 19:53:02,972 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : name
DEBUG 2022-09-08 19:53:02,972 [main][FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150] : Building LoadPlan...
DEBUG 2022-09-08 19:53:02,973 [main][LoadQueryJoinAndFetchProcessor.java:100] : processing queryspace <gen:0>
DEBUG 2022-09-08 19:53:02,973 [main][LoadPlanTreePrinter.java:55] : LoadPlan(entity=org.example.models.Book)
    - Returns
       - EntityReturnImpl(entity=org.example.models.Book, querySpaceUid=<gen:0>, path=org.example.models.Book)
          - CollectionAttributeFetchImpl(collection=org.example.models.Book.authors, querySpaceUid=<gen:1>, path=org.example.models.Book.authors)
             - (collection element) CollectionFetchableElementEntityGraph(entity=org.example.models.Author, querySpaceUid=<gen:2>, path=org.example.models.Book.authors.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=org.example.models.Book)
          - SQL table alias mapping - book0_
          - alias suffix - 0_
          - suffixed key columns - {id1_3_0_}

DEBUG 2022-09-08 19:53:02,973 [main][EntityLoader.java:115] : Static select for entity org.example.models.Book [OPTIMISTIC_FORCE_INCREMENT]: select book0_.id as id1_3_0_, book0_.name as name2_3_0_ from Book book0_ where book0_.id=?
DEBUG 2022-09-08 19:53:02,973 [main][CascadeEntityLoader.java:38] : Static select for action ACTION_MERGE on entity org.example.models.Book: select book0_.id as id1_3_0_, book0_.name as name2_3_0_ from Book book0_ where book0_.id=?
DEBUG 2022-09-08 19:53:02,973 [main][CascadeEntityLoader.java:38] : Static select for action ACTION_REFRESH on entity org.example.models.Book: select book0_.id as id1_3_0_, book0_.name as name2_3_0_ from Book book0_ where book0_.id=?
DEBUG 2022-09-08 19:53:02,973 [main][AbstractEntityPersister.java:3529] : Static SQL for entity: org.example.models.Author
DEBUG 2022-09-08 19:53:02,973 [main][AbstractEntityPersister.java:3534] :  Version select: select id from Author where id =?
DEBUG 2022-09-08 19:53:02,974 [main][AbstractEntityPersister.java:3537] :  Snapshot select: select author_.id, author_.name as name2_1_, author_.salary as salary3_1_ from Author author_ where author_.id=?
DEBUG 2022-09-08 19:53:02,974 [main][DelegatingBasicLogger.java:394] :  Insert 0: insert into Author (name, salary, id) values (?, ?, ?)
DEBUG 2022-09-08 19:53:02,974 [main][DelegatingBasicLogger.java:394] :  Update 0: update Author set name=?, salary=? where id=?
DEBUG 2022-09-08 19:53:02,974 [main][DelegatingBasicLogger.java:394] :  Delete 0: delete from Author where id=?
DEBUG 2022-09-08 19:53:02,974 [main][AbstractEntityPersister.java:3545] :  Identity insert: insert into Author (name, salary) values (?, ?)
DEBUG 2022-09-08 19:53:02,974 [main][QuerySpacesImpl.java:174] : Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@ffc8cac7]
DEBUG 2022-09-08 19:53:02,974 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : books
DEBUG 2022-09-08 19:53:02,975 [main][QuerySpacesImpl.java:174] : Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@b34abe87]
DEBUG 2022-09-08 19:53:02,975 [main][QuerySpacesImpl.java:174] : Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6f0fc491]
DEBUG 2022-09-08 19:53:02,975 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : name
DEBUG 2022-09-08 19:53:02,975 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : photos
DEBUG 2022-09-08 19:53:02,975 [main][QuerySpacesImpl.java:174] : Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@a3944c3c]
DEBUG 2022-09-08 19:53:02,975 [main][QuerySpacesImpl.java:174] : Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@f68aaf8d]
DEBUG 2022-09-08 19:53:02,975 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : salary
DEBUG 2022-09-08 19:53:02,975 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : address
DEBUG 2022-09-08 19:53:02,976 [main][QuerySpacesImpl.java:174] : Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@58373135]
DEBUG 2022-09-08 19:53:02,976 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : address.author
DEBUG 2022-09-08 19:53:02,976 [main][MetamodelGraphWalker.java:145] : Property path deemed to be circular : address.author
DEBUG 2022-09-08 19:53:02,976 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : address.street
DEBUG 2022-09-08 19:53:02,976 [main][FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150] : Building LoadPlan...
DEBUG 2022-09-08 19:53:02,976 [main][LoadQueryJoinAndFetchProcessor.java:100] : processing queryspace <gen:0>
DEBUG 2022-09-08 19:53:02,977 [main][LoadPlanTreePrinter.java:55] : LoadPlan(entity=org.example.models.Author)
    - Returns
       - EntityReturnImpl(entity=org.example.models.Author, querySpaceUid=<gen:0>, path=org.example.models.Author)
          - CollectionAttributeFetchImpl(collection=org.example.models.Author.books, querySpaceUid=<gen:1>, path=org.example.models.Author.books)
             - (collection element) CollectionFetchableElementEntityGraph(entity=org.example.models.Book, querySpaceUid=<gen:2>, path=org.example.models.Author.books.<elements>)
          - CollectionAttributeFetchImpl(collection=org.example.models.Author.photos, querySpaceUid=<gen:3>, path=org.example.models.Author.photos)
             - (collection element) CollectionFetchableElementEntityGraph(entity=org.example.models.Photo, querySpaceUid=<gen:4>, path=org.example.models.Author.photos.<elements>)
          - EntityAttributeFetchImpl(entity=org.example.models.Address, querySpaceUid=<gen:5>, path=org.example.models.Author.address)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=org.example.models.Author)
          - SQL table alias mapping - author0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}
          - JOIN (JoinDefinedByMetadata(address)) : <gen:0> -> <gen:5>
             - EntityQuerySpaceImpl(uid=<gen:5>, entity=org.example.models.Address)
                - SQL table alias mapping - address1_
                - alias suffix - 1_
                - suffixed key columns - {id1_0_1_}

DEBUG 2022-09-08 19:53:02,977 [main][EntityLoader.java:115] : Static select for entity org.example.models.Author [NONE]: select author0_.id as id1_1_0_, author0_.name as name2_1_0_, author0_.salary as salary3_1_0_, address1_.id as id1_0_1_, address1_.author_id as author_i3_0_1_, address1_.street as street2_0_1_ from Author author0_ left outer join Address address1_ on author0_.id=address1_.author_id where author0_.id=?
DEBUG 2022-09-08 19:53:02,977 [main][QuerySpacesImpl.java:174] : Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@8212a9fc]
DEBUG 2022-09-08 19:53:02,977 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : books
DEBUG 2022-09-08 19:53:02,977 [main][QuerySpacesImpl.java:174] : Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@1bb4b476]
DEBUG 2022-09-08 19:53:02,977 [main][QuerySpacesImpl.java:174] : Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@69587d8]
DEBUG 2022-09-08 19:53:02,977 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : name
DEBUG 2022-09-08 19:53:02,977 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : photos
DEBUG 2022-09-08 19:53:02,977 [main][QuerySpacesImpl.java:174] : Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@55e5ae98]
DEBUG 2022-09-08 19:53:02,978 [main][QuerySpacesImpl.java:174] : Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@a7edae82]
DEBUG 2022-09-08 19:53:02,978 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : salary
DEBUG 2022-09-08 19:53:02,978 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : address
DEBUG 2022-09-08 19:53:02,978 [main][QuerySpacesImpl.java:174] : Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@c0ecfd59]
DEBUG 2022-09-08 19:53:02,978 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : address.author
DEBUG 2022-09-08 19:53:02,978 [main][MetamodelGraphWalker.java:145] : Property path deemed to be circular : address.author
DEBUG 2022-09-08 19:53:02,978 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : address.street
DEBUG 2022-09-08 19:53:02,978 [main][FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150] : Building LoadPlan...
DEBUG 2022-09-08 19:53:02,979 [main][LoadQueryJoinAndFetchProcessor.java:100] : processing queryspace <gen:0>
DEBUG 2022-09-08 19:53:02,979 [main][LoadPlanTreePrinter.java:55] : LoadPlan(entity=org.example.models.Author)
    - Returns
       - EntityReturnImpl(entity=org.example.models.Author, querySpaceUid=<gen:0>, path=org.example.models.Author)
          - CollectionAttributeFetchImpl(collection=org.example.models.Author.books, querySpaceUid=<gen:1>, path=org.example.models.Author.books)
             - (collection element) CollectionFetchableElementEntityGraph(entity=org.example.models.Book, querySpaceUid=<gen:2>, path=org.example.models.Author.books.<elements>)
          - CollectionAttributeFetchImpl(collection=org.example.models.Author.photos, querySpaceUid=<gen:3>, path=org.example.models.Author.photos)
             - (collection element) CollectionFetchableElementEntityGraph(entity=org.example.models.Photo, querySpaceUid=<gen:4>, path=org.example.models.Author.photos.<elements>)
          - EntityAttributeFetchImpl(entity=org.example.models.Address, querySpaceUid=<gen:5>, path=org.example.models.Author.address)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=org.example.models.Author)
          - SQL table alias mapping - author0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}
          - JOIN (JoinDefinedByMetadata(address)) : <gen:0> -> <gen:5>
             - EntityQuerySpaceImpl(uid=<gen:5>, entity=org.example.models.Address)
                - SQL table alias mapping - address1_
                - alias suffix - 1_
                - suffixed key columns - {id1_0_1_}

DEBUG 2022-09-08 19:53:02,979 [main][EntityLoader.java:115] : Static select for entity org.example.models.Author [READ]: select author0_.id as id1_1_0_, author0_.name as name2_1_0_, author0_.salary as salary3_1_0_, address1_.id as id1_0_1_, address1_.author_id as author_i3_0_1_, address1_.street as street2_0_1_ from Author author0_ left outer join Address address1_ on author0_.id=address1_.author_id where author0_.id=?
DEBUG 2022-09-08 19:53:02,979 [main][QuerySpacesImpl.java:174] : Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@485dd446]
DEBUG 2022-09-08 19:53:02,979 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : books
DEBUG 2022-09-08 19:53:02,979 [main][QuerySpacesImpl.java:174] : Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@efb3976e]
DEBUG 2022-09-08 19:53:02,980 [main][QuerySpacesImpl.java:174] : Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@763a1ee0]
DEBUG 2022-09-08 19:53:02,980 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : name
DEBUG 2022-09-08 19:53:02,980 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : photos
DEBUG 2022-09-08 19:53:02,980 [main][QuerySpacesImpl.java:174] : Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@1d577514]
DEBUG 2022-09-08 19:53:02,980 [main][QuerySpacesImpl.java:174] : Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@508f32c1]
DEBUG 2022-09-08 19:53:02,980 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : salary
DEBUG 2022-09-08 19:53:02,980 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : address
DEBUG 2022-09-08 19:53:02,980 [main][QuerySpacesImpl.java:174] : Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@78cc9bc0]
DEBUG 2022-09-08 19:53:02,980 [main][FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150] : Building LoadPlan...
DEBUG 2022-09-08 19:53:02,981 [main][LoadQueryJoinAndFetchProcessor.java:100] : processing queryspace <gen:0>
DEBUG 2022-09-08 19:53:02,982 [main][LoadPlanTreePrinter.java:55] : LoadPlan(entity=org.example.models.Author)
    - Returns
       - EntityReturnImpl(entity=org.example.models.Author, querySpaceUid=<gen:0>, path=org.example.models.Author)
          - CollectionAttributeFetchImpl(collection=org.example.models.Author.books, querySpaceUid=<gen:1>, path=org.example.models.Author.books)
             - (collection element) CollectionFetchableElementEntityGraph(entity=org.example.models.Book, querySpaceUid=<gen:2>, path=org.example.models.Author.books.<elements>)
          - CollectionAttributeFetchImpl(collection=org.example.models.Author.photos, querySpaceUid=<gen:3>, path=org.example.models.Author.photos)
             - (collection element) CollectionFetchableElementEntityGraph(entity=org.example.models.Photo, querySpaceUid=<gen:4>, path=org.example.models.Author.photos.<elements>)
          - EntityAttributeFetchImpl(entity=org.example.models.Address, querySpaceUid=<gen:5>, path=org.example.models.Author.address)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=org.example.models.Author)
          - SQL table alias mapping - author0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

DEBUG 2022-09-08 19:53:02,982 [main][EntityLoader.java:115] : Static select for entity org.example.models.Author [UPGRADE]: select author0_.id as id1_1_0_, author0_.name as name2_1_0_, author0_.salary as salary3_1_0_ from Author author0_ where author0_.id=? for update
DEBUG 2022-09-08 19:53:02,982 [main][QuerySpacesImpl.java:174] : Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@43c04332]
DEBUG 2022-09-08 19:53:02,982 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : books
DEBUG 2022-09-08 19:53:02,982 [main][QuerySpacesImpl.java:174] : Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@4a235c76]
DEBUG 2022-09-08 19:53:02,982 [main][QuerySpacesImpl.java:174] : Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@93852288]
DEBUG 2022-09-08 19:53:02,982 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : name
DEBUG 2022-09-08 19:53:02,983 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : photos
DEBUG 2022-09-08 19:53:02,983 [main][QuerySpacesImpl.java:174] : Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@d5f589f6]
DEBUG 2022-09-08 19:53:02,983 [main][QuerySpacesImpl.java:174] : Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@8cd9cbb8]
DEBUG 2022-09-08 19:53:02,983 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : salary
DEBUG 2022-09-08 19:53:02,983 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : address
DEBUG 2022-09-08 19:53:02,983 [main][QuerySpacesImpl.java:174] : Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@e0340aa4]
DEBUG 2022-09-08 19:53:02,983 [main][FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150] : Building LoadPlan...
DEBUG 2022-09-08 19:53:02,983 [main][LoadQueryJoinAndFetchProcessor.java:100] : processing queryspace <gen:0>
DEBUG 2022-09-08 19:53:02,984 [main][LoadPlanTreePrinter.java:55] : LoadPlan(entity=org.example.models.Author)
    - Returns
       - EntityReturnImpl(entity=org.example.models.Author, querySpaceUid=<gen:0>, path=org.example.models.Author)
          - CollectionAttributeFetchImpl(collection=org.example.models.Author.books, querySpaceUid=<gen:1>, path=org.example.models.Author.books)
             - (collection element) CollectionFetchableElementEntityGraph(entity=org.example.models.Book, querySpaceUid=<gen:2>, path=org.example.models.Author.books.<elements>)
          - CollectionAttributeFetchImpl(collection=org.example.models.Author.photos, querySpaceUid=<gen:3>, path=org.example.models.Author.photos)
             - (collection element) CollectionFetchableElementEntityGraph(entity=org.example.models.Photo, querySpaceUid=<gen:4>, path=org.example.models.Author.photos.<elements>)
          - EntityAttributeFetchImpl(entity=org.example.models.Address, querySpaceUid=<gen:5>, path=org.example.models.Author.address)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=org.example.models.Author)
          - SQL table alias mapping - author0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

DEBUG 2022-09-08 19:53:02,984 [main][EntityLoader.java:115] : Static select for entity org.example.models.Author [UPGRADE_NOWAIT]: select author0_.id as id1_1_0_, author0_.name as name2_1_0_, author0_.salary as salary3_1_0_ from Author author0_ where author0_.id=? for update
DEBUG 2022-09-08 19:53:02,984 [main][QuerySpacesImpl.java:174] : Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@df10bc13]
DEBUG 2022-09-08 19:53:02,984 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : books
DEBUG 2022-09-08 19:53:02,984 [main][QuerySpacesImpl.java:174] : Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@bbc64604]
DEBUG 2022-09-08 19:53:02,984 [main][QuerySpacesImpl.java:174] : Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@aa39cb92]
DEBUG 2022-09-08 19:53:02,985 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : name
DEBUG 2022-09-08 19:53:02,985 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : photos
DEBUG 2022-09-08 19:53:02,985 [main][QuerySpacesImpl.java:174] : Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@ad30c32d]
DEBUG 2022-09-08 19:53:02,985 [main][QuerySpacesImpl.java:174] : Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5d8f25d5]
DEBUG 2022-09-08 19:53:02,985 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : salary
DEBUG 2022-09-08 19:53:02,985 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : address
DEBUG 2022-09-08 19:53:02,985 [main][QuerySpacesImpl.java:174] : Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@b71aefdb]
DEBUG 2022-09-08 19:53:02,985 [main][FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150] : Building LoadPlan...
DEBUG 2022-09-08 19:53:02,985 [main][LoadQueryJoinAndFetchProcessor.java:100] : processing queryspace <gen:0>
DEBUG 2022-09-08 19:53:02,986 [main][LoadPlanTreePrinter.java:55] : LoadPlan(entity=org.example.models.Author)
    - Returns
       - EntityReturnImpl(entity=org.example.models.Author, querySpaceUid=<gen:0>, path=org.example.models.Author)
          - CollectionAttributeFetchImpl(collection=org.example.models.Author.books, querySpaceUid=<gen:1>, path=org.example.models.Author.books)
             - (collection element) CollectionFetchableElementEntityGraph(entity=org.example.models.Book, querySpaceUid=<gen:2>, path=org.example.models.Author.books.<elements>)
          - CollectionAttributeFetchImpl(collection=org.example.models.Author.photos, querySpaceUid=<gen:3>, path=org.example.models.Author.photos)
             - (collection element) CollectionFetchableElementEntityGraph(entity=org.example.models.Photo, querySpaceUid=<gen:4>, path=org.example.models.Author.photos.<elements>)
          - EntityAttributeFetchImpl(entity=org.example.models.Address, querySpaceUid=<gen:5>, path=org.example.models.Author.address)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=org.example.models.Author)
          - SQL table alias mapping - author0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

DEBUG 2022-09-08 19:53:02,986 [main][EntityLoader.java:115] : Static select for entity org.example.models.Author [UPGRADE_SKIPLOCKED]: select author0_.id as id1_1_0_, author0_.name as name2_1_0_, author0_.salary as salary3_1_0_ from Author author0_ where author0_.id=? for update
DEBUG 2022-09-08 19:53:02,986 [main][QuerySpacesImpl.java:174] : Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@56d23d0a]
DEBUG 2022-09-08 19:53:02,986 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : books
DEBUG 2022-09-08 19:53:02,986 [main][QuerySpacesImpl.java:174] : Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@17773dfd]
DEBUG 2022-09-08 19:53:02,986 [main][QuerySpacesImpl.java:174] : Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@24fd165b]
DEBUG 2022-09-08 19:53:02,986 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : name
DEBUG 2022-09-08 19:53:02,986 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : photos
DEBUG 2022-09-08 19:53:02,987 [main][QuerySpacesImpl.java:174] : Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@323eff13]
DEBUG 2022-09-08 19:53:02,987 [main][QuerySpacesImpl.java:174] : Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@e477e61a]
DEBUG 2022-09-08 19:53:02,987 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : salary
DEBUG 2022-09-08 19:53:02,987 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : address
DEBUG 2022-09-08 19:53:02,987 [main][QuerySpacesImpl.java:174] : Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@c99a3801]
DEBUG 2022-09-08 19:53:02,987 [main][FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150] : Building LoadPlan...
DEBUG 2022-09-08 19:53:02,987 [main][LoadQueryJoinAndFetchProcessor.java:100] : processing queryspace <gen:0>
DEBUG 2022-09-08 19:53:02,988 [main][LoadPlanTreePrinter.java:55] : LoadPlan(entity=org.example.models.Author)
    - Returns
       - EntityReturnImpl(entity=org.example.models.Author, querySpaceUid=<gen:0>, path=org.example.models.Author)
          - CollectionAttributeFetchImpl(collection=org.example.models.Author.books, querySpaceUid=<gen:1>, path=org.example.models.Author.books)
             - (collection element) CollectionFetchableElementEntityGraph(entity=org.example.models.Book, querySpaceUid=<gen:2>, path=org.example.models.Author.books.<elements>)
          - CollectionAttributeFetchImpl(collection=org.example.models.Author.photos, querySpaceUid=<gen:3>, path=org.example.models.Author.photos)
             - (collection element) CollectionFetchableElementEntityGraph(entity=org.example.models.Photo, querySpaceUid=<gen:4>, path=org.example.models.Author.photos.<elements>)
          - EntityAttributeFetchImpl(entity=org.example.models.Address, querySpaceUid=<gen:5>, path=org.example.models.Author.address)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=org.example.models.Author)
          - SQL table alias mapping - author0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

DEBUG 2022-09-08 19:53:02,988 [main][EntityLoader.java:115] : Static select for entity org.example.models.Author [FORCE]: select author0_.id as id1_1_0_, author0_.name as name2_1_0_, author0_.salary as salary3_1_0_ from Author author0_ where author0_.id=? for update
DEBUG 2022-09-08 19:53:02,988 [main][QuerySpacesImpl.java:174] : Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@55838800]
DEBUG 2022-09-08 19:53:02,989 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : books
DEBUG 2022-09-08 19:53:02,989 [main][QuerySpacesImpl.java:174] : Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@2398c6cf]
DEBUG 2022-09-08 19:53:02,989 [main][QuerySpacesImpl.java:174] : Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@54907ed5]
DEBUG 2022-09-08 19:53:02,989 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : name
DEBUG 2022-09-08 19:53:02,989 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : photos
DEBUG 2022-09-08 19:53:02,989 [main][QuerySpacesImpl.java:174] : Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@52c7ef70]
DEBUG 2022-09-08 19:53:02,989 [main][QuerySpacesImpl.java:174] : Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@a99208d9]
DEBUG 2022-09-08 19:53:02,989 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : salary
DEBUG 2022-09-08 19:53:02,989 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : address
DEBUG 2022-09-08 19:53:02,990 [main][QuerySpacesImpl.java:174] : Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@bb6221a0]
DEBUG 2022-09-08 19:53:02,990 [main][FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150] : Building LoadPlan...
DEBUG 2022-09-08 19:53:02,990 [main][LoadQueryJoinAndFetchProcessor.java:100] : processing queryspace <gen:0>
DEBUG 2022-09-08 19:53:02,990 [main][LoadPlanTreePrinter.java:55] : LoadPlan(entity=org.example.models.Author)
    - Returns
       - EntityReturnImpl(entity=org.example.models.Author, querySpaceUid=<gen:0>, path=org.example.models.Author)
          - CollectionAttributeFetchImpl(collection=org.example.models.Author.books, querySpaceUid=<gen:1>, path=org.example.models.Author.books)
             - (collection element) CollectionFetchableElementEntityGraph(entity=org.example.models.Book, querySpaceUid=<gen:2>, path=org.example.models.Author.books.<elements>)
          - CollectionAttributeFetchImpl(collection=org.example.models.Author.photos, querySpaceUid=<gen:3>, path=org.example.models.Author.photos)
             - (collection element) CollectionFetchableElementEntityGraph(entity=org.example.models.Photo, querySpaceUid=<gen:4>, path=org.example.models.Author.photos.<elements>)
          - EntityAttributeFetchImpl(entity=org.example.models.Address, querySpaceUid=<gen:5>, path=org.example.models.Author.address)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=org.example.models.Author)
          - SQL table alias mapping - author0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

DEBUG 2022-09-08 19:53:02,990 [main][EntityLoader.java:115] : Static select for entity org.example.models.Author [PESSIMISTIC_READ]: select author0_.id as id1_1_0_, author0_.name as name2_1_0_, author0_.salary as salary3_1_0_ from Author author0_ where author0_.id=? lock in share mode
DEBUG 2022-09-08 19:53:02,990 [main][QuerySpacesImpl.java:174] : Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@e1545849]
DEBUG 2022-09-08 19:53:02,991 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : books
DEBUG 2022-09-08 19:53:02,991 [main][QuerySpacesImpl.java:174] : Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@ea120572]
DEBUG 2022-09-08 19:53:02,991 [main][QuerySpacesImpl.java:174] : Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@97380ab0]
DEBUG 2022-09-08 19:53:02,991 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : name
DEBUG 2022-09-08 19:53:02,991 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : photos
DEBUG 2022-09-08 19:53:02,991 [main][QuerySpacesImpl.java:174] : Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@48c0b26f]
DEBUG 2022-09-08 19:53:02,991 [main][QuerySpacesImpl.java:174] : Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@352abd7b]
DEBUG 2022-09-08 19:53:02,991 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : salary
DEBUG 2022-09-08 19:53:02,992 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : address
DEBUG 2022-09-08 19:53:02,992 [main][QuerySpacesImpl.java:174] : Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@f815e779]
DEBUG 2022-09-08 19:53:02,992 [main][FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150] : Building LoadPlan...
DEBUG 2022-09-08 19:53:02,992 [main][LoadQueryJoinAndFetchProcessor.java:100] : processing queryspace <gen:0>
DEBUG 2022-09-08 19:53:02,992 [main][LoadPlanTreePrinter.java:55] : LoadPlan(entity=org.example.models.Author)
    - Returns
       - EntityReturnImpl(entity=org.example.models.Author, querySpaceUid=<gen:0>, path=org.example.models.Author)
          - CollectionAttributeFetchImpl(collection=org.example.models.Author.books, querySpaceUid=<gen:1>, path=org.example.models.Author.books)
             - (collection element) CollectionFetchableElementEntityGraph(entity=org.example.models.Book, querySpaceUid=<gen:2>, path=org.example.models.Author.books.<elements>)
          - CollectionAttributeFetchImpl(collection=org.example.models.Author.photos, querySpaceUid=<gen:3>, path=org.example.models.Author.photos)
             - (collection element) CollectionFetchableElementEntityGraph(entity=org.example.models.Photo, querySpaceUid=<gen:4>, path=org.example.models.Author.photos.<elements>)
          - EntityAttributeFetchImpl(entity=org.example.models.Address, querySpaceUid=<gen:5>, path=org.example.models.Author.address)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=org.example.models.Author)
          - SQL table alias mapping - author0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

DEBUG 2022-09-08 19:53:02,992 [main][EntityLoader.java:115] : Static select for entity org.example.models.Author [PESSIMISTIC_WRITE]: select author0_.id as id1_1_0_, author0_.name as name2_1_0_, author0_.salary as salary3_1_0_ from Author author0_ where author0_.id=? for update
DEBUG 2022-09-08 19:53:02,993 [main][QuerySpacesImpl.java:174] : Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@84034f26]
DEBUG 2022-09-08 19:53:02,993 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : books
DEBUG 2022-09-08 19:53:02,993 [main][QuerySpacesImpl.java:174] : Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@899e950a]
DEBUG 2022-09-08 19:53:02,993 [main][QuerySpacesImpl.java:174] : Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2dd0030f]
DEBUG 2022-09-08 19:53:02,993 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : name
DEBUG 2022-09-08 19:53:02,993 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : photos
DEBUG 2022-09-08 19:53:02,993 [main][QuerySpacesImpl.java:174] : Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@d032fc9c]
DEBUG 2022-09-08 19:53:02,993 [main][QuerySpacesImpl.java:174] : Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@88a2b4f9]
DEBUG 2022-09-08 19:53:02,994 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : salary
DEBUG 2022-09-08 19:53:02,994 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : address
DEBUG 2022-09-08 19:53:02,994 [main][QuerySpacesImpl.java:174] : Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6b195782]
DEBUG 2022-09-08 19:53:02,994 [main][FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150] : Building LoadPlan...
DEBUG 2022-09-08 19:53:02,994 [main][LoadQueryJoinAndFetchProcessor.java:100] : processing queryspace <gen:0>
DEBUG 2022-09-08 19:53:02,994 [main][LoadPlanTreePrinter.java:55] : LoadPlan(entity=org.example.models.Author)
    - Returns
       - EntityReturnImpl(entity=org.example.models.Author, querySpaceUid=<gen:0>, path=org.example.models.Author)
          - CollectionAttributeFetchImpl(collection=org.example.models.Author.books, querySpaceUid=<gen:1>, path=org.example.models.Author.books)
             - (collection element) CollectionFetchableElementEntityGraph(entity=org.example.models.Book, querySpaceUid=<gen:2>, path=org.example.models.Author.books.<elements>)
          - CollectionAttributeFetchImpl(collection=org.example.models.Author.photos, querySpaceUid=<gen:3>, path=org.example.models.Author.photos)
             - (collection element) CollectionFetchableElementEntityGraph(entity=org.example.models.Photo, querySpaceUid=<gen:4>, path=org.example.models.Author.photos.<elements>)
          - EntityAttributeFetchImpl(entity=org.example.models.Address, querySpaceUid=<gen:5>, path=org.example.models.Author.address)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=org.example.models.Author)
          - SQL table alias mapping - author0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

DEBUG 2022-09-08 19:53:02,994 [main][EntityLoader.java:115] : Static select for entity org.example.models.Author [PESSIMISTIC_FORCE_INCREMENT]: select author0_.id as id1_1_0_, author0_.name as name2_1_0_, author0_.salary as salary3_1_0_ from Author author0_ where author0_.id=? for update
DEBUG 2022-09-08 19:53:02,994 [main][QuerySpacesImpl.java:174] : Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@fc77fb6a]
DEBUG 2022-09-08 19:53:02,995 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : books
DEBUG 2022-09-08 19:53:02,995 [main][QuerySpacesImpl.java:174] : Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@371b6ab]
DEBUG 2022-09-08 19:53:02,996 [main][QuerySpacesImpl.java:174] : Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@ac9cd30c]
DEBUG 2022-09-08 19:53:02,996 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : name
DEBUG 2022-09-08 19:53:02,996 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : photos
DEBUG 2022-09-08 19:53:02,996 [main][QuerySpacesImpl.java:174] : Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@5b79a68]
DEBUG 2022-09-08 19:53:02,996 [main][QuerySpacesImpl.java:174] : Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@f6dc9077]
DEBUG 2022-09-08 19:53:02,996 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : salary
DEBUG 2022-09-08 19:53:02,996 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : address
DEBUG 2022-09-08 19:53:02,996 [main][QuerySpacesImpl.java:174] : Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@14ff19c4]
DEBUG 2022-09-08 19:53:02,996 [main][FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150] : Building LoadPlan...
DEBUG 2022-09-08 19:53:02,997 [main][LoadQueryJoinAndFetchProcessor.java:100] : processing queryspace <gen:0>
DEBUG 2022-09-08 19:53:02,997 [main][LoadPlanTreePrinter.java:55] : LoadPlan(entity=org.example.models.Author)
    - Returns
       - EntityReturnImpl(entity=org.example.models.Author, querySpaceUid=<gen:0>, path=org.example.models.Author)
          - CollectionAttributeFetchImpl(collection=org.example.models.Author.books, querySpaceUid=<gen:1>, path=org.example.models.Author.books)
             - (collection element) CollectionFetchableElementEntityGraph(entity=org.example.models.Book, querySpaceUid=<gen:2>, path=org.example.models.Author.books.<elements>)
          - CollectionAttributeFetchImpl(collection=org.example.models.Author.photos, querySpaceUid=<gen:3>, path=org.example.models.Author.photos)
             - (collection element) CollectionFetchableElementEntityGraph(entity=org.example.models.Photo, querySpaceUid=<gen:4>, path=org.example.models.Author.photos.<elements>)
          - EntityAttributeFetchImpl(entity=org.example.models.Address, querySpaceUid=<gen:5>, path=org.example.models.Author.address)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=org.example.models.Author)
          - SQL table alias mapping - author0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

DEBUG 2022-09-08 19:53:02,997 [main][EntityLoader.java:115] : Static select for entity org.example.models.Author [OPTIMISTIC]: select author0_.id as id1_1_0_, author0_.name as name2_1_0_, author0_.salary as salary3_1_0_ from Author author0_ where author0_.id=?
DEBUG 2022-09-08 19:53:02,997 [main][QuerySpacesImpl.java:174] : Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@e80e926d]
DEBUG 2022-09-08 19:53:02,997 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : books
DEBUG 2022-09-08 19:53:02,997 [main][QuerySpacesImpl.java:174] : Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@c9e0f939]
DEBUG 2022-09-08 19:53:02,998 [main][QuerySpacesImpl.java:174] : Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@52fd8482]
DEBUG 2022-09-08 19:53:02,998 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : name
DEBUG 2022-09-08 19:53:02,998 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : photos
DEBUG 2022-09-08 19:53:02,998 [main][QuerySpacesImpl.java:174] : Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@1584926e]
DEBUG 2022-09-08 19:53:02,998 [main][QuerySpacesImpl.java:174] : Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@913ed61c]
DEBUG 2022-09-08 19:53:02,998 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : salary
DEBUG 2022-09-08 19:53:02,998 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : address
DEBUG 2022-09-08 19:53:02,998 [main][QuerySpacesImpl.java:174] : Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@350c0bf7]
DEBUG 2022-09-08 19:53:02,998 [main][FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150] : Building LoadPlan...
DEBUG 2022-09-08 19:53:02,999 [main][LoadQueryJoinAndFetchProcessor.java:100] : processing queryspace <gen:0>
DEBUG 2022-09-08 19:53:02,999 [main][LoadPlanTreePrinter.java:55] : LoadPlan(entity=org.example.models.Author)
    - Returns
       - EntityReturnImpl(entity=org.example.models.Author, querySpaceUid=<gen:0>, path=org.example.models.Author)
          - CollectionAttributeFetchImpl(collection=org.example.models.Author.books, querySpaceUid=<gen:1>, path=org.example.models.Author.books)
             - (collection element) CollectionFetchableElementEntityGraph(entity=org.example.models.Book, querySpaceUid=<gen:2>, path=org.example.models.Author.books.<elements>)
          - CollectionAttributeFetchImpl(collection=org.example.models.Author.photos, querySpaceUid=<gen:3>, path=org.example.models.Author.photos)
             - (collection element) CollectionFetchableElementEntityGraph(entity=org.example.models.Photo, querySpaceUid=<gen:4>, path=org.example.models.Author.photos.<elements>)
          - EntityAttributeFetchImpl(entity=org.example.models.Address, querySpaceUid=<gen:5>, path=org.example.models.Author.address)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=org.example.models.Author)
          - SQL table alias mapping - author0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

DEBUG 2022-09-08 19:53:02,999 [main][EntityLoader.java:115] : Static select for entity org.example.models.Author [OPTIMISTIC_FORCE_INCREMENT]: select author0_.id as id1_1_0_, author0_.name as name2_1_0_, author0_.salary as salary3_1_0_ from Author author0_ where author0_.id=?
DEBUG 2022-09-08 19:53:02,999 [main][CascadeEntityLoader.java:38] : Static select for action ACTION_MERGE on entity org.example.models.Author: select author0_.id as id1_1_0_, author0_.name as name2_1_0_, author0_.salary as salary3_1_0_ from Author author0_ where author0_.id=?
DEBUG 2022-09-08 19:53:02,999 [main][CascadeEntityLoader.java:38] : Static select for action ACTION_REFRESH on entity org.example.models.Author: select author0_.id as id1_1_0_, author0_.name as name2_1_0_, author0_.salary as salary3_1_0_ from Author author0_ where author0_.id=?
DEBUG 2022-09-08 19:53:03,003 [main][QuerySpacesImpl.java:174] : Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@a3a16a33]
DEBUG 2022-09-08 19:53:03,003 [main][QuerySpacesImpl.java:174] : Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@8611fce8]
DEBUG 2022-09-08 19:53:03,004 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : books
DEBUG 2022-09-08 19:53:03,004 [main][MetamodelGraphWalker.java:145] : Property path deemed to be circular : books
DEBUG 2022-09-08 19:53:03,004 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : name
DEBUG 2022-09-08 19:53:03,004 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : photos
DEBUG 2022-09-08 19:53:03,004 [main][QuerySpacesImpl.java:174] : Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@224e1aa6]
DEBUG 2022-09-08 19:53:03,004 [main][QuerySpacesImpl.java:174] : Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1936fc43]
DEBUG 2022-09-08 19:53:03,004 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : salary
DEBUG 2022-09-08 19:53:03,004 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : address
DEBUG 2022-09-08 19:53:03,005 [main][QuerySpacesImpl.java:174] : Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@9519c152]
DEBUG 2022-09-08 19:53:03,005 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : address.author
DEBUG 2022-09-08 19:53:03,005 [main][MetamodelGraphWalker.java:145] : Property path deemed to be circular : address.author
DEBUG 2022-09-08 19:53:03,005 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : address.street
DEBUG 2022-09-08 19:53:03,005 [main][FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150] : Building LoadPlan...
DEBUG 2022-09-08 19:53:03,007 [main][LoadQueryJoinAndFetchProcessor.java:100] : processing queryspace <gen:0>
DEBUG 2022-09-08 19:53:03,008 [main][LoadPlanTreePrinter.java:55] : LoadPlan(collection=org.example.models.Book.authors)
    - Returns
       - CollectionReturnImpl(collection=org.example.models.Book.authors, querySpaceUid=<gen:0>, path=[org.example.models.Book.authors])
          - (collection element) CollectionFetchableElementEntityGraph(entity=org.example.models.Author, querySpaceUid=<gen:1>, path=[org.example.models.Book.authors].<elements>)
             - CollectionAttributeFetchImpl(collection=org.example.models.Author.photos, querySpaceUid=<gen:2>, path=[org.example.models.Book.authors].<elements>.photos)
                - (collection element) CollectionFetchableElementEntityGraph(entity=org.example.models.Photo, querySpaceUid=<gen:3>, path=[org.example.models.Book.authors].<elements>.photos.<elements>)
             - EntityAttributeFetchImpl(entity=org.example.models.Address, querySpaceUid=<gen:4>, path=[org.example.models.Book.authors].<elements>.address)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=org.example.models.Book.authors)
          - SQL table alias mapping - authors0_
          - alias suffix - 0_
          - suffixed key columns - {author_i2_2_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - id1_1_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=org.example.models.Author)
                - SQL table alias mapping - author1_
                - alias suffix - 1_
                - suffixed key columns - {id1_1_1_}
                - JOIN (JoinDefinedByMetadata(address)) : <gen:1> -> <gen:4>
                   - EntityQuerySpaceImpl(uid=<gen:4>, entity=org.example.models.Address)
                      - SQL table alias mapping - address2_
                      - alias suffix - 2_
                      - suffixed key columns - {id1_0_2_}

DEBUG 2022-09-08 19:53:03,008 [main][CollectionLoader.java:83] : Static select for collection org.example.models.Book.authors: select authors0_.author_id as author_i2_2_0_, authors0_.book_id as book_id1_2_0_, author1_.id as id1_1_1_, author1_.name as name2_1_1_, author1_.salary as salary3_1_1_, address2_.id as id1_0_2_, address2_.author_id as author_i3_0_2_, address2_.street as street2_0_2_ from Authors_Books authors0_ inner join Author author1_ on authors0_.book_id=author1_.id left outer join Address address2_ on author1_.id=address2_.author_id where authors0_.author_id=?
DEBUG 2022-09-08 19:53:03,009 [main][QuerySpacesImpl.java:174] : Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@4f5d995b]
DEBUG 2022-09-08 19:53:03,009 [main][QuerySpacesImpl.java:174] : Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@ae6281ce]
DEBUG 2022-09-08 19:53:03,009 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : author
DEBUG 2022-09-08 19:53:03,009 [main][MetamodelGraphWalker.java:145] : Property path deemed to be circular : author
DEBUG 2022-09-08 19:53:03,009 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : fileName
DEBUG 2022-09-08 19:53:03,009 [main][FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150] : Building LoadPlan...
DEBUG 2022-09-08 19:53:03,009 [main][LoadQueryJoinAndFetchProcessor.java:100] : processing queryspace <gen:0>
DEBUG 2022-09-08 19:53:03,010 [main][LoadPlanTreePrinter.java:55] : LoadPlan(collection=org.example.models.Author.photos)
    - Returns
       - CollectionReturnImpl(collection=org.example.models.Author.photos, querySpaceUid=<gen:0>, path=[org.example.models.Author.photos])
          - (collection element) CollectionFetchableElementEntityGraph(entity=org.example.models.Photo, querySpaceUid=<gen:1>, path=[org.example.models.Author.photos].<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=org.example.models.Author.photos)
          - SQL table alias mapping - photos0_
          - alias suffix - 0_
          - suffixed key columns - {author_i3_4_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - id1_4_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=org.example.models.Photo)
                - SQL table alias mapping - photos0_
                - alias suffix - 1_
                - suffixed key columns - {id1_4_1_}

DEBUG 2022-09-08 19:53:03,010 [main][CollectionLoader.java:83] : Static select for collection org.example.models.Author.photos: select photos0_.author_id as author_i3_4_0_, photos0_.id as id1_4_0_, photos0_.id as id1_4_1_, photos0_.author_id as author_i3_4_1_, photos0_.file_name as file_nam2_4_1_ from Photo photos0_ where photos0_.author_id=?
DEBUG 2022-09-08 19:53:03,010 [main][QuerySpacesImpl.java:174] : Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@b3327875]
DEBUG 2022-09-08 19:53:03,010 [main][QuerySpacesImpl.java:174] : Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4128df3]
DEBUG 2022-09-08 19:53:03,010 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : authors
DEBUG 2022-09-08 19:53:03,010 [main][MetamodelGraphWalker.java:145] : Property path deemed to be circular : authors
DEBUG 2022-09-08 19:53:03,010 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : name
DEBUG 2022-09-08 19:53:03,010 [main][FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150] : Building LoadPlan...
DEBUG 2022-09-08 19:53:03,011 [main][LoadQueryJoinAndFetchProcessor.java:100] : processing queryspace <gen:0>
DEBUG 2022-09-08 19:53:03,011 [main][LoadPlanTreePrinter.java:55] : LoadPlan(collection=org.example.models.Author.books)
    - Returns
       - CollectionReturnImpl(collection=org.example.models.Author.books, querySpaceUid=<gen:0>, path=[org.example.models.Author.books])
          - (collection element) CollectionFetchableElementEntityGraph(entity=org.example.models.Book, querySpaceUid=<gen:1>, path=[org.example.models.Author.books].<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=org.example.models.Author.books)
          - SQL table alias mapping - books0_
          - alias suffix - 0_
          - suffixed key columns - {book_id1_2_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - id1_3_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=org.example.models.Book)
                - SQL table alias mapping - book1_
                - alias suffix - 1_
                - suffixed key columns - {id1_3_1_}

DEBUG 2022-09-08 19:53:03,011 [main][CollectionLoader.java:83] : Static select for collection org.example.models.Author.books: select books0_.book_id as book_id1_2_0_, books0_.author_id as author_i2_2_0_, book1_.id as id1_3_1_, book1_.name as name2_3_1_ from Authors_Books books0_ inner join Book book1_ on books0_.author_id=book1_.id where books0_.book_id=?
DEBUG 2022-09-08 19:53:03,027 [main][SqlStatementLogger.java:92] : alter table Address drop foreign key FK3yaqo8irsoqsutq5hg9fivhx6
INFO  2022-09-08 19:53:03,028 [main][DdlTransactionIsolatorNonJtaImpl.java:48] : HHH10001501: Connection obtained from JdbcConnectionAccess [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess@82b872e5] for (non-JTA) DDL execution was not in auto-commit mode; the Connection 'local transaction' will be committed and the Connection will be set into auto-commit mode.
WARN  2022-09-08 19:53:03,041 [main][ExceptionHandlerLoggedImpl.java:27] : GenerationTarget encountered exception accepting command : Error executing DDL via JDBC Statement
org.hibernate.tool.schema.spi.CommandAcceptanceException: Error executing DDL via JDBC Statement
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:62)
	at org.hibernate.tool.schema.internal.SchemaDropperImpl.applySqlString(SchemaDropperImpl.java:374)
	at org.hibernate.tool.schema.internal.SchemaDropperImpl.applySqlStrings(SchemaDropperImpl.java:359)
	at org.hibernate.tool.schema.internal.SchemaDropperImpl.applyConstraintDropping(SchemaDropperImpl.java:331)
	at org.hibernate.tool.schema.internal.SchemaDropperImpl.dropFromMetadata(SchemaDropperImpl.java:230)
	at org.hibernate.tool.schema.internal.SchemaDropperImpl.performDrop(SchemaDropperImpl.java:154)
	at org.hibernate.tool.schema.internal.SchemaDropperImpl.doDrop(SchemaDropperImpl.java:126)
	at org.hibernate.tool.schema.internal.SchemaDropperImpl.doDrop(SchemaDropperImpl.java:112)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.performDatabaseAction(SchemaManagementToolCoordinator.java:137)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.process(SchemaManagementToolCoordinator.java:65)
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:307)
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:490)
	at org.hibernate.cfg.Configuration.buildSessionFactory(Configuration.java:710)
	at org.hibernate.cfg.Configuration.buildSessionFactory(Configuration.java:726)
	at org.example.utils.HibernateUtil.<clinit>(HibernateUtil.java:16)
	at org.example.repos.AuthorRepository.<init>(AuthorRepository.java:23)
	at org.example.Main.main(Main.java:18)
Caused by: 
java.sql.SQLSyntaxErrorException: Table 'classicmodels.address' doesn't exist
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:120)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.StatementImpl.executeInternal(StatementImpl.java:763)
	at com.mysql.cj.jdbc.StatementImpl.execute(StatementImpl.java:648)
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:49)
	... 16 more
DEBUG 2022-09-08 19:53:03,046 [main][SqlStatementLogger.java:92] : alter table Authors_Books drop foreign key FKs1vdbwf5okcxthhicku1hc93d
DEBUG 2022-09-08 19:53:03,057 [main][SqlStatementLogger.java:92] : alter table Authors_Books drop foreign key FK1h5wgpewyadjq3lpqpjo0ylx4
DEBUG 2022-09-08 19:53:03,068 [main][SqlStatementLogger.java:92] : alter table Photo drop foreign key FKgn24n3tehgrddleetayyosgwh
DEBUG 2022-09-08 19:53:03,073 [main][SqlStatementLogger.java:92] : drop table if exists Address
DEBUG 2022-09-08 19:53:03,075 [main][SqlStatementLogger.java:92] : drop table if exists Author
DEBUG 2022-09-08 19:53:03,077 [main][SqlStatementLogger.java:92] : drop table if exists Authors_Books
DEBUG 2022-09-08 19:53:03,079 [main][SqlStatementLogger.java:92] : drop table if exists Book
DEBUG 2022-09-08 19:53:03,081 [main][SqlStatementLogger.java:92] : drop table if exists hibernate_sequence
DEBUG 2022-09-08 19:53:03,082 [main][SqlStatementLogger.java:92] : drop table if exists Photo
DEBUG 2022-09-08 19:53:03,085 [main][SqlStatementLogger.java:92] : create table Address (id bigint not null auto_increment, street varchar(255), author_id bigint, primary key (id))
INFO  2022-09-08 19:53:03,086 [main][DdlTransactionIsolatorNonJtaImpl.java:48] : HHH10001501: Connection obtained from JdbcConnectionAccess [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess@12166664] for (non-JTA) DDL execution was not in auto-commit mode; the Connection 'local transaction' will be committed and the Connection will be set into auto-commit mode.
DEBUG 2022-09-08 19:53:03,089 [main][SqlStatementLogger.java:92] : create table Author (id bigint not null auto_increment, name varchar(255), salary integer, primary key (id))
DEBUG 2022-09-08 19:53:03,092 [main][SqlStatementLogger.java:92] : create table Authors_Books (book_id bigint not null, author_id bigint not null, primary key (book_id, author_id))
DEBUG 2022-09-08 19:53:03,096 [main][SqlStatementLogger.java:92] : create table Book (id bigint not null, name varchar(255), primary key (id))
DEBUG 2022-09-08 19:53:03,099 [main][SqlStatementLogger.java:92] : create table hibernate_sequence (next_val bigint)
DEBUG 2022-09-08 19:53:03,103 [main][SqlStatementLogger.java:92] : insert into hibernate_sequence values ( 1 )
DEBUG 2022-09-08 19:53:03,104 [main][SqlStatementLogger.java:92] : create table Photo (id bigint not null auto_increment, file_name varchar(255), author_id bigint not null, primary key (id))
DEBUG 2022-09-08 19:53:03,107 [main][SqlStatementLogger.java:92] : alter table Address add constraint FK3yaqo8irsoqsutq5hg9fivhx6 foreign key (author_id) references Author (id)
DEBUG 2022-09-08 19:53:03,113 [main][SqlStatementLogger.java:92] : alter table Authors_Books add constraint FKs1vdbwf5okcxthhicku1hc93d foreign key (author_id) references Book (id)
DEBUG 2022-09-08 19:53:03,119 [main][SqlStatementLogger.java:92] : alter table Authors_Books add constraint FK1h5wgpewyadjq3lpqpjo0ylx4 foreign key (book_id) references Author (id)
DEBUG 2022-09-08 19:53:03,126 [main][SqlStatementLogger.java:92] : alter table Photo add constraint FKgn24n3tehgrddleetayyosgwh foreign key (author_id) references Author (id)
INFO  2022-09-08 19:53:03,134 [main][SchemaCreatorImpl.java:485] : HHH000476: Executing import script 'org.hibernate.tool.schema.internal.exec.ScriptSourceInputNonExistentImpl@60b152e9'
DEBUG 2022-09-08 19:53:03,135 [main][JtaPlatformInitiator.java:42] : No JtaPlatform was specified, checking resolver
DEBUG 2022-09-08 19:53:03,135 [main][JtaPlatformResolverInitiator.java:33] : No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
DEBUG 2022-09-08 19:53:03,136 [main][StandardJtaPlatformResolver.java:101] : Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
DEBUG 2022-09-08 19:53:03,137 [main][NamedQueryRepository.java:151] : Checking 0 named HQL queries
DEBUG 2022-09-08 19:53:03,137 [main][NamedQueryRepository.java:167] : Checking 0 named SQL queries
DEBUG 2022-09-08 19:53:03,137 [main][SessionFactoryRegistry.java:52] : Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@f1167b5d
DEBUG 2022-09-08 19:53:03,138 [main][SessionFactoryRegistry.java:74] : Registering SessionFactory: a9ffb4a5-15f6-4c7a-bba3-12465e558c28 (<unnamed>)
DEBUG 2022-09-08 19:53:03,138 [main][SessionFactoryRegistry.java:81] : Not binding SessionFactory to JNDI, no JNDI name configured
DEBUG 2022-09-08 19:53:03,162 [main][StatisticsInitiator.java:82] : Statistics initialized [enabled=false]
DEBUG 2022-09-08 19:53:03,165 [main][TransactionImpl.java:55] : begin
DEBUG 2022-09-08 19:53:03,170 [main][ActionQueue.java:272] : Executing identity-insert immediately
DEBUG 2022-09-08 19:53:03,172 [main][SqlStatementLogger.java:92] : insert into Author (name, salary) values (?, ?)
DEBUG 2022-09-08 19:53:03,178 [main][IdentifierGeneratorHelper.java:78] : Natively generated identity: 1
DEBUG 2022-09-08 19:53:03,178 [main][ResourceRegistryStandardImpl.java:104] : HHH000387: ResultSet's statement was not registered
DEBUG 2022-09-08 19:53:03,179 [main][TransactionImpl.java:66] : committing
DEBUG 2022-09-08 19:53:03,179 [main][AbstractFlushingEventListener.java:132] : Processing flush-time cascades
DEBUG 2022-09-08 19:53:03,179 [main][AbstractFlushingEventListener.java:174] : Dirty checking collections
DEBUG 2022-09-08 19:53:03,180 [main][AbstractFlushingEventListener.java:106] : Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
DEBUG 2022-09-08 19:53:03,180 [main][AbstractFlushingEventListener.java:113] : Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
DEBUG 2022-09-08 19:53:03,180 [main][EntityPrinter.java:102] : Listing entities:
DEBUG 2022-09-08 19:53:03,181 [main][EntityPrinter.java:109] : org.example.models.Author{books=null, address=null, name=David Baldacci, id=1, salary=4489, photos=null}
DEBUG 2022-09-08 19:53:03,181 [main][LogicalConnectionManagedImpl.java:154] : Initiating JDBC connection release from afterTransaction
DEBUG 2022-09-08 19:53:03,182 [main][LogicalConnectionManagedImpl.java:154] : Initiating JDBC connection release from afterTransaction
DEBUG 2022-09-08 19:53:03,195 [main][TransactionImpl.java:55] : begin
DEBUG 2022-09-08 19:53:03,196 [main][ActionQueue.java:272] : Executing identity-insert immediately
DEBUG 2022-09-08 19:53:03,196 [main][SqlStatementLogger.java:92] : insert into Author (name, salary) values (?, ?)
DEBUG 2022-09-08 19:53:03,197 [main][IdentifierGeneratorHelper.java:78] : Natively generated identity: 2
DEBUG 2022-09-08 19:53:03,197 [main][ResourceRegistryStandardImpl.java:104] : HHH000387: ResultSet's statement was not registered
DEBUG 2022-09-08 19:53:03,197 [main][TransactionImpl.java:66] : committing
DEBUG 2022-09-08 19:53:03,197 [main][AbstractFlushingEventListener.java:132] : Processing flush-time cascades
DEBUG 2022-09-08 19:53:03,197 [main][AbstractFlushingEventListener.java:174] : Dirty checking collections
DEBUG 2022-09-08 19:53:03,197 [main][AbstractFlushingEventListener.java:106] : Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
DEBUG 2022-09-08 19:53:03,197 [main][AbstractFlushingEventListener.java:113] : Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
DEBUG 2022-09-08 19:53:03,199 [main][EntityPrinter.java:102] : Listing entities:
DEBUG 2022-09-08 19:53:03,199 [main][EntityPrinter.java:109] : org.example.models.Author{books=null, address=null, name=Colleen Hoover, id=2, salary=3278, photos=null}
DEBUG 2022-09-08 19:53:03,199 [main][LogicalConnectionManagedImpl.java:154] : Initiating JDBC connection release from afterTransaction
DEBUG 2022-09-08 19:53:03,200 [main][LogicalConnectionManagedImpl.java:154] : Initiating JDBC connection release from afterTransaction
DEBUG 2022-09-08 19:53:03,200 [main][TransactionImpl.java:55] : begin
DEBUG 2022-09-08 19:53:03,201 [main][ActionQueue.java:272] : Executing identity-insert immediately
DEBUG 2022-09-08 19:53:03,201 [main][SqlStatementLogger.java:92] : insert into Author (name, salary) values (?, ?)
DEBUG 2022-09-08 19:53:03,202 [main][IdentifierGeneratorHelper.java:78] : Natively generated identity: 3
DEBUG 2022-09-08 19:53:03,202 [main][ResourceRegistryStandardImpl.java:104] : HHH000387: ResultSet's statement was not registered
DEBUG 2022-09-08 19:53:03,202 [main][TransactionImpl.java:66] : committing
DEBUG 2022-09-08 19:53:03,202 [main][AbstractFlushingEventListener.java:132] : Processing flush-time cascades
DEBUG 2022-09-08 19:53:03,202 [main][AbstractFlushingEventListener.java:174] : Dirty checking collections
DEBUG 2022-09-08 19:53:03,202 [main][AbstractFlushingEventListener.java:106] : Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
DEBUG 2022-09-08 19:53:03,202 [main][AbstractFlushingEventListener.java:113] : Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
DEBUG 2022-09-08 19:53:03,203 [main][EntityPrinter.java:102] : Listing entities:
DEBUG 2022-09-08 19:53:03,203 [main][EntityPrinter.java:109] : org.example.models.Author{books=null, address=null, name=Stuart Woods, id=3, salary=1599, photos=null}
DEBUG 2022-09-08 19:53:03,203 [main][LogicalConnectionManagedImpl.java:154] : Initiating JDBC connection release from afterTransaction
DEBUG 2022-09-08 19:53:03,204 [main][LogicalConnectionManagedImpl.java:154] : Initiating JDBC connection release from afterTransaction
DEBUG 2022-09-08 19:53:03,204 [main][TransactionImpl.java:55] : begin
DEBUG 2022-09-08 19:53:03,205 [main][ActionQueue.java:272] : Executing identity-insert immediately
DEBUG 2022-09-08 19:53:03,205 [main][SqlStatementLogger.java:92] : insert into Author (name, salary) values (?, ?)
DEBUG 2022-09-08 19:53:03,206 [main][IdentifierGeneratorHelper.java:78] : Natively generated identity: 4
DEBUG 2022-09-08 19:53:03,206 [main][ResourceRegistryStandardImpl.java:104] : HHH000387: ResultSet's statement was not registered
DEBUG 2022-09-08 19:53:03,206 [main][TransactionImpl.java:66] : committing
DEBUG 2022-09-08 19:53:03,206 [main][AbstractFlushingEventListener.java:132] : Processing flush-time cascades
DEBUG 2022-09-08 19:53:03,206 [main][AbstractFlushingEventListener.java:174] : Dirty checking collections
DEBUG 2022-09-08 19:53:03,206 [main][AbstractFlushingEventListener.java:106] : Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
DEBUG 2022-09-08 19:53:03,207 [main][AbstractFlushingEventListener.java:113] : Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
DEBUG 2022-09-08 19:53:03,207 [main][EntityPrinter.java:102] : Listing entities:
DEBUG 2022-09-08 19:53:03,207 [main][EntityPrinter.java:109] : org.example.models.Author{books=null, address=null, name=Nora Roberts, id=4, salary=821, photos=null}
DEBUG 2022-09-08 19:53:03,207 [main][LogicalConnectionManagedImpl.java:154] : Initiating JDBC connection release from afterTransaction
DEBUG 2022-09-08 19:53:03,208 [main][LogicalConnectionManagedImpl.java:154] : Initiating JDBC connection release from afterTransaction
DEBUG 2022-09-08 19:53:03,208 [main][TransactionImpl.java:55] : begin
DEBUG 2022-09-08 19:53:03,209 [main][ActionQueue.java:272] : Executing identity-insert immediately
DEBUG 2022-09-08 19:53:03,209 [main][SqlStatementLogger.java:92] : insert into Author (name, salary) values (?, ?)
DEBUG 2022-09-08 19:53:03,210 [main][IdentifierGeneratorHelper.java:78] : Natively generated identity: 5
DEBUG 2022-09-08 19:53:03,210 [main][ResourceRegistryStandardImpl.java:104] : HHH000387: ResultSet's statement was not registered
DEBUG 2022-09-08 19:53:03,210 [main][TransactionImpl.java:66] : committing
DEBUG 2022-09-08 19:53:03,210 [main][AbstractFlushingEventListener.java:132] : Processing flush-time cascades
DEBUG 2022-09-08 19:53:03,210 [main][AbstractFlushingEventListener.java:174] : Dirty checking collections
DEBUG 2022-09-08 19:53:03,210 [main][AbstractFlushingEventListener.java:106] : Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
DEBUG 2022-09-08 19:53:03,211 [main][AbstractFlushingEventListener.java:113] : Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
DEBUG 2022-09-08 19:53:03,211 [main][EntityPrinter.java:102] : Listing entities:
DEBUG 2022-09-08 19:53:03,211 [main][EntityPrinter.java:109] : org.example.models.Author{books=null, address=null, name=Michael Connelly, id=5, salary=611, photos=null}
DEBUG 2022-09-08 19:53:03,211 [main][LogicalConnectionManagedImpl.java:154] : Initiating JDBC connection release from afterTransaction
DEBUG 2022-09-08 19:53:03,212 [main][LogicalConnectionManagedImpl.java:154] : Initiating JDBC connection release from afterTransaction
DEBUG 2022-09-08 19:53:03,219 [main][CriteriaQueryImpl.java:307] : Rendered criteria query -> select generatedAlias0 from Author as generatedAlias0
DEBUG 2022-09-08 19:53:03,225 [main][QueryTranslatorFactoryInitiator.java:45] : QueryTranslatorFactory : org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory@307a8480
INFO  2022-09-08 19:53:03,225 [main][QueryTranslatorFactoryInitiator.java:47] : HHH000397: Using ASTQueryTranslatorFactory
DEBUG 2022-09-08 19:53:03,240 [main][QueryTranslatorImpl.java:278] : parse() - HQL: select generatedAlias0 from org.example.models.Author as generatedAlias0
DEBUG 2022-09-08 19:53:03,243 [main][QueryTranslatorImpl.java:296] : --- HQL AST ---
 \-[QUERY] Node: 'query'
    \-[SELECT_FROM] Node: 'SELECT_FROM'
       +-[FROM] Node: 'from'
       |  \-[RANGE] Node: 'RANGE'
       |     +-[DOT] Node: '.'
       |     |  +-[DOT] Node: '.'
       |     |  |  +-[DOT] Node: '.'
       |     |  |  |  +-[IDENT] Node: 'org'
       |     |  |  |  \-[IDENT] Node: 'example'
       |     |  |  \-[IDENT] Node: 'models'
       |     |  \-[IDENT] Node: 'Author'
       |     \-[ALIAS] Node: 'generatedAlias0'
       \-[SELECT] Node: 'select'
          \-[IDENT] Node: 'generatedAlias0'

DEBUG 2022-09-08 19:53:03,244 [main][ErrorCounter.java:95] : throwQueryException() : no errors
DEBUG 2022-09-08 19:53:03,252 [main][HqlSqlBaseWalker.java:124] : select << begin [level=1, statement=select]
DEBUG 2022-09-08 19:53:03,261 [main][FromElement.java:148] : FromClause{level=1} : org.example.models.Author (generatedAlias0) -> author0_
DEBUG 2022-09-08 19:53:03,262 [main][FromReferenceNode.java:60] : Resolved : generatedAlias0 -> author0_.id
DEBUG 2022-09-08 19:53:03,266 [main][HqlSqlBaseWalker.java:128] : select : finishing up [level=1, statement=select]
DEBUG 2022-09-08 19:53:03,266 [main][HqlSqlWalker.java:725] : processQuery() :  ( SELECT ( {select clause} author0_.id ) ( FromClause{level=1} Author author0_ ) )
DEBUG 2022-09-08 19:53:03,269 [main][JoinProcessor.java:169] : Using FROM fragment [Author author0_]
DEBUG 2022-09-08 19:53:03,269 [main][HqlSqlBaseWalker.java:132] : select >> end [level=1, statement=select]
DEBUG 2022-09-08 19:53:03,270 [main][QueryTranslatorImpl.java:265] : --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (Author)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'author0_.id as id1_1_' {alias=generatedAlias0, className=org.example.models.Author, tableAlias=author0_}
    |  \-[SQL_TOKEN] SqlFragment: 'author0_.name as name2_1_, author0_.salary as salary3_1_'
    \-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[author0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'Author author0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=Author,tableAlias=author0_,origin=null,columns={,className=org.example.models.Author}}

DEBUG 2022-09-08 19:53:03,270 [main][ErrorCounter.java:95] : throwQueryException() : no errors
DEBUG 2022-09-08 19:53:03,272 [main][QueryTranslatorImpl.java:247] : HQL: select generatedAlias0 from org.example.models.Author as generatedAlias0
DEBUG 2022-09-08 19:53:03,272 [main][QueryTranslatorImpl.java:248] : SQL: select author0_.id as id1_1_, author0_.name as name2_1_, author0_.salary as salary3_1_ from Author author0_
DEBUG 2022-09-08 19:53:03,272 [main][ErrorCounter.java:95] : throwQueryException() : no errors
DEBUG 2022-09-08 19:53:03,277 [main][SqlStatementLogger.java:92] : select author0_.id as id1_1_, author0_.name as name2_1_, author0_.salary as salary3_1_ from Author author0_
DEBUG 2022-09-08 19:53:03,279 [main][DelegatingBasicLogger.java:384] : Result set row: 0
DEBUG 2022-09-08 19:53:03,281 [main][Loader.java:1527] : Result row: EntityKey[org.example.models.Author#1]
DEBUG 2022-09-08 19:53:03,282 [main][DelegatingBasicLogger.java:384] : Result set row: 1
DEBUG 2022-09-08 19:53:03,283 [main][Loader.java:1527] : Result row: EntityKey[org.example.models.Author#2]
DEBUG 2022-09-08 19:53:03,283 [main][DelegatingBasicLogger.java:384] : Result set row: 2
DEBUG 2022-09-08 19:53:03,284 [main][Loader.java:1527] : Result row: EntityKey[org.example.models.Author#3]
DEBUG 2022-09-08 19:53:03,284 [main][DelegatingBasicLogger.java:384] : Result set row: 3
DEBUG 2022-09-08 19:53:03,284 [main][Loader.java:1527] : Result row: EntityKey[org.example.models.Author#4]
DEBUG 2022-09-08 19:53:03,284 [main][DelegatingBasicLogger.java:384] : Result set row: 4
DEBUG 2022-09-08 19:53:03,284 [main][Loader.java:1527] : Result row: EntityKey[org.example.models.Author#5]
DEBUG 2022-09-08 19:53:03,285 [main][TwoPhaseLoad.java:141] : Resolving associations for [org.example.models.Author#1]
DEBUG 2022-09-08 19:53:03,288 [main][Loader.java:2193] : Loading entity: [org.example.models.Address#1]
DEBUG 2022-09-08 19:53:03,289 [main][SqlStatementLogger.java:92] : select address0_.id as id1_0_1_, address0_.author_id as author_i3_0_1_, address0_.street as street2_0_1_, author1_.id as id1_1_0_, author1_.name as name2_1_0_, author1_.salary as salary3_1_0_ from Address address0_ left outer join Author author1_ on address0_.author_id=author1_.id where address0_.author_id=?
DEBUG 2022-09-08 19:53:03,291 [main][Loader.java:2222] : Done entity load
DEBUG 2022-09-08 19:53:03,291 [main][TwoPhaseLoad.java:267] : Done materializing entity [org.example.models.Author#1]
DEBUG 2022-09-08 19:53:03,291 [main][TwoPhaseLoad.java:141] : Resolving associations for [org.example.models.Author#2]
DEBUG 2022-09-08 19:53:03,291 [main][Loader.java:2193] : Loading entity: [org.example.models.Address#2]
DEBUG 2022-09-08 19:53:03,291 [main][SqlStatementLogger.java:92] : select address0_.id as id1_0_1_, address0_.author_id as author_i3_0_1_, address0_.street as street2_0_1_, author1_.id as id1_1_0_, author1_.name as name2_1_0_, author1_.salary as salary3_1_0_ from Address address0_ left outer join Author author1_ on address0_.author_id=author1_.id where address0_.author_id=?
DEBUG 2022-09-08 19:53:03,293 [main][Loader.java:2222] : Done entity load
DEBUG 2022-09-08 19:53:03,293 [main][TwoPhaseLoad.java:267] : Done materializing entity [org.example.models.Author#2]
DEBUG 2022-09-08 19:53:03,293 [main][TwoPhaseLoad.java:141] : Resolving associations for [org.example.models.Author#3]
DEBUG 2022-09-08 19:53:03,294 [main][Loader.java:2193] : Loading entity: [org.example.models.Address#3]
DEBUG 2022-09-08 19:53:03,294 [main][SqlStatementLogger.java:92] : select address0_.id as id1_0_1_, address0_.author_id as author_i3_0_1_, address0_.street as street2_0_1_, author1_.id as id1_1_0_, author1_.name as name2_1_0_, author1_.salary as salary3_1_0_ from Address address0_ left outer join Author author1_ on address0_.author_id=author1_.id where address0_.author_id=?
DEBUG 2022-09-08 19:53:03,295 [main][Loader.java:2222] : Done entity load
DEBUG 2022-09-08 19:53:03,295 [main][TwoPhaseLoad.java:267] : Done materializing entity [org.example.models.Author#3]
DEBUG 2022-09-08 19:53:03,296 [main][TwoPhaseLoad.java:141] : Resolving associations for [org.example.models.Author#4]
DEBUG 2022-09-08 19:53:03,296 [main][Loader.java:2193] : Loading entity: [org.example.models.Address#4]
DEBUG 2022-09-08 19:53:03,296 [main][SqlStatementLogger.java:92] : select address0_.id as id1_0_1_, address0_.author_id as author_i3_0_1_, address0_.street as street2_0_1_, author1_.id as id1_1_0_, author1_.name as name2_1_0_, author1_.salary as salary3_1_0_ from Address address0_ left outer join Author author1_ on address0_.author_id=author1_.id where address0_.author_id=?
DEBUG 2022-09-08 19:53:03,297 [main][Loader.java:2222] : Done entity load
DEBUG 2022-09-08 19:53:03,298 [main][TwoPhaseLoad.java:267] : Done materializing entity [org.example.models.Author#4]
DEBUG 2022-09-08 19:53:03,298 [main][TwoPhaseLoad.java:141] : Resolving associations for [org.example.models.Author#5]
DEBUG 2022-09-08 19:53:03,298 [main][Loader.java:2193] : Loading entity: [org.example.models.Address#5]
DEBUG 2022-09-08 19:53:03,298 [main][SqlStatementLogger.java:92] : select address0_.id as id1_0_1_, address0_.author_id as author_i3_0_1_, address0_.street as street2_0_1_, author1_.id as id1_1_0_, author1_.name as name2_1_0_, author1_.salary as salary3_1_0_ from Address address0_ left outer join Author author1_ on address0_.author_id=author1_.id where address0_.author_id=?
DEBUG 2022-09-08 19:53:03,299 [main][Loader.java:2222] : Done entity load
DEBUG 2022-09-08 19:53:03,300 [main][TwoPhaseLoad.java:267] : Done materializing entity [org.example.models.Author#5]
DEBUG 2022-09-08 19:53:03,300 [main][LogicalConnectionManagedImpl.java:154] : Initiating JDBC connection release from afterTransaction
DEBUG 2022-09-08 19:53:03,310 [main][SqlStatementLogger.java:92] : SELECT * FROM Author
DEBUG 2022-09-08 19:53:03,311 [main][DelegatingBasicLogger.java:384] : Result set row: 0
DEBUG 2022-09-08 19:53:03,311 [main][Loader.java:1527] : Result row: EntityKey[org.example.models.Author#1]
DEBUG 2022-09-08 19:53:03,311 [main][DelegatingBasicLogger.java:384] : Result set row: 1
DEBUG 2022-09-08 19:53:03,312 [main][Loader.java:1527] : Result row: EntityKey[org.example.models.Author#2]
DEBUG 2022-09-08 19:53:03,312 [main][DelegatingBasicLogger.java:384] : Result set row: 2
DEBUG 2022-09-08 19:53:03,312 [main][Loader.java:1527] : Result row: EntityKey[org.example.models.Author#3]
DEBUG 2022-09-08 19:53:03,312 [main][DelegatingBasicLogger.java:384] : Result set row: 3
DEBUG 2022-09-08 19:53:03,312 [main][Loader.java:1527] : Result row: EntityKey[org.example.models.Author#4]
DEBUG 2022-09-08 19:53:03,312 [main][DelegatingBasicLogger.java:384] : Result set row: 4
DEBUG 2022-09-08 19:53:03,312 [main][Loader.java:1527] : Result row: EntityKey[org.example.models.Author#5]
DEBUG 2022-09-08 19:53:03,312 [main][TwoPhaseLoad.java:141] : Resolving associations for [org.example.models.Author#1]
DEBUG 2022-09-08 19:53:03,312 [main][Loader.java:2193] : Loading entity: [org.example.models.Address#1]
DEBUG 2022-09-08 19:53:03,313 [main][SqlStatementLogger.java:92] : select address0_.id as id1_0_1_, address0_.author_id as author_i3_0_1_, address0_.street as street2_0_1_, author1_.id as id1_1_0_, author1_.name as name2_1_0_, author1_.salary as salary3_1_0_ from Address address0_ left outer join Author author1_ on address0_.author_id=author1_.id where address0_.author_id=?
DEBUG 2022-09-08 19:53:03,316 [main][Loader.java:2222] : Done entity load
DEBUG 2022-09-08 19:53:03,316 [main][TwoPhaseLoad.java:267] : Done materializing entity [org.example.models.Author#1]
DEBUG 2022-09-08 19:53:03,316 [main][TwoPhaseLoad.java:141] : Resolving associations for [org.example.models.Author#2]
DEBUG 2022-09-08 19:53:03,316 [main][Loader.java:2193] : Loading entity: [org.example.models.Address#2]
DEBUG 2022-09-08 19:53:03,316 [main][SqlStatementLogger.java:92] : select address0_.id as id1_0_1_, address0_.author_id as author_i3_0_1_, address0_.street as street2_0_1_, author1_.id as id1_1_0_, author1_.name as name2_1_0_, author1_.salary as salary3_1_0_ from Address address0_ left outer join Author author1_ on address0_.author_id=author1_.id where address0_.author_id=?
DEBUG 2022-09-08 19:53:03,317 [main][Loader.java:2222] : Done entity load
DEBUG 2022-09-08 19:53:03,318 [main][TwoPhaseLoad.java:267] : Done materializing entity [org.example.models.Author#2]
DEBUG 2022-09-08 19:53:03,318 [main][TwoPhaseLoad.java:141] : Resolving associations for [org.example.models.Author#3]
DEBUG 2022-09-08 19:53:03,318 [main][Loader.java:2193] : Loading entity: [org.example.models.Address#3]
DEBUG 2022-09-08 19:53:03,318 [main][SqlStatementLogger.java:92] : select address0_.id as id1_0_1_, address0_.author_id as author_i3_0_1_, address0_.street as street2_0_1_, author1_.id as id1_1_0_, author1_.name as name2_1_0_, author1_.salary as salary3_1_0_ from Address address0_ left outer join Author author1_ on address0_.author_id=author1_.id where address0_.author_id=?
DEBUG 2022-09-08 19:53:03,319 [main][Loader.java:2222] : Done entity load
DEBUG 2022-09-08 19:53:03,320 [main][TwoPhaseLoad.java:267] : Done materializing entity [org.example.models.Author#3]
DEBUG 2022-09-08 19:53:03,320 [main][TwoPhaseLoad.java:141] : Resolving associations for [org.example.models.Author#4]
DEBUG 2022-09-08 19:53:03,320 [main][Loader.java:2193] : Loading entity: [org.example.models.Address#4]
DEBUG 2022-09-08 19:53:03,320 [main][SqlStatementLogger.java:92] : select address0_.id as id1_0_1_, address0_.author_id as author_i3_0_1_, address0_.street as street2_0_1_, author1_.id as id1_1_0_, author1_.name as name2_1_0_, author1_.salary as salary3_1_0_ from Address address0_ left outer join Author author1_ on address0_.author_id=author1_.id where address0_.author_id=?
DEBUG 2022-09-08 19:53:03,321 [main][Loader.java:2222] : Done entity load
DEBUG 2022-09-08 19:53:03,321 [main][TwoPhaseLoad.java:267] : Done materializing entity [org.example.models.Author#4]
DEBUG 2022-09-08 19:53:03,321 [main][TwoPhaseLoad.java:141] : Resolving associations for [org.example.models.Author#5]
DEBUG 2022-09-08 19:53:03,321 [main][Loader.java:2193] : Loading entity: [org.example.models.Address#5]
DEBUG 2022-09-08 19:53:03,322 [main][SqlStatementLogger.java:92] : select address0_.id as id1_0_1_, address0_.author_id as author_i3_0_1_, address0_.street as street2_0_1_, author1_.id as id1_1_0_, author1_.name as name2_1_0_, author1_.salary as salary3_1_0_ from Address address0_ left outer join Author author1_ on address0_.author_id=author1_.id where address0_.author_id=?
DEBUG 2022-09-08 19:53:03,323 [main][Loader.java:2222] : Done entity load
DEBUG 2022-09-08 19:53:03,323 [main][TwoPhaseLoad.java:267] : Done materializing entity [org.example.models.Author#5]
DEBUG 2022-09-08 19:53:03,323 [main][LogicalConnectionManagedImpl.java:154] : Initiating JDBC connection release from afterTransaction
DEBUG 2022-09-08 19:53:03,325 [main][SqlStatementLogger.java:92] : select author0_.id as id1_1_0_, author0_.name as name2_1_0_, author0_.salary as salary3_1_0_, address1_.id as id1_0_1_, address1_.author_id as author_i3_0_1_, address1_.street as street2_0_1_ from Author author0_ left outer join Address address1_ on author0_.id=address1_.author_id where author0_.id=?
DEBUG 2022-09-08 19:53:03,328 [main][ResultSetProcessorImpl.java:120] : Starting ResultSet row #0
DEBUG 2022-09-08 19:53:03,328 [main][EntityReferenceInitializerImpl.java:126] : On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
DEBUG 2022-09-08 19:53:03,328 [main][TwoPhaseLoad.java:141] : Resolving associations for [org.example.models.Author#2]
DEBUG 2022-09-08 19:53:03,328 [main][TwoPhaseLoad.java:267] : Done materializing entity [org.example.models.Author#2]
DEBUG 2022-09-08 19:53:03,328 [main][ResourceRegistryStandardImpl.java:73] : HHH000387: ResultSet's statement was not registered
DEBUG 2022-09-08 19:53:03,329 [main][AbstractLoadPlanBasedEntityLoader.java:189] : Done entity load : org.example.models.Author#2
DEBUG 2022-09-08 19:53:03,329 [main][LogicalConnectionManagedImpl.java:154] : Initiating JDBC connection release from afterTransaction
DEBUG 2022-09-08 19:53:03,330 [main][QueryTranslatorImpl.java:278] : parse() - HQL: select a from org.example.models.Author a where a.salary between :minSalary and :maxSalary
DEBUG 2022-09-08 19:53:03,331 [main][QueryTranslatorImpl.java:296] : --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[IDENT] Node: 'org'
    |  |     |  |  |  \-[IDENT] Node: 'example'
    |  |     |  |  \-[IDENT] Node: 'models'
    |  |     |  \-[IDENT] Node: 'Author'
    |  |     \-[ALIAS] Node: 'a'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'a'
    \-[WHERE] Node: 'where'
       \-[BETWEEN] Node: 'between'
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'a'
          |  \-[IDENT] Node: 'salary'
          +-[COLON] Node: ':'
          |  \-[IDENT] Node: 'minSalary'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'maxSalary'

DEBUG 2022-09-08 19:53:03,331 [main][ErrorCounter.java:95] : throwQueryException() : no errors
DEBUG 2022-09-08 19:53:03,332 [main][HqlSqlBaseWalker.java:124] : select << begin [level=1, statement=select]
DEBUG 2022-09-08 19:53:03,332 [main][FromElement.java:148] : FromClause{level=1} : org.example.models.Author (a) -> author0_
DEBUG 2022-09-08 19:53:03,332 [main][FromReferenceNode.java:60] : Resolved : a -> author0_.id
DEBUG 2022-09-08 19:53:03,332 [main][FromReferenceNode.java:60] : Resolved : a -> author0_.id
DEBUG 2022-09-08 19:53:03,333 [main][DotNode.java:661] : getDataType() : salary -> org.hibernate.type.IntegerType@b0a664a6
DEBUG 2022-09-08 19:53:03,333 [main][FromReferenceNode.java:60] : Resolved : a.salary -> author0_.salary
DEBUG 2022-09-08 19:53:03,334 [main][HqlSqlBaseWalker.java:128] : select : finishing up [level=1, statement=select]
DEBUG 2022-09-08 19:53:03,334 [main][HqlSqlWalker.java:725] : processQuery() :  ( SELECT ( {select clause} author0_.id ) ( FromClause{level=1} Author author0_ ) ( where ( between ( author0_.salary author0_.id salary ) ? ? ) ) )
DEBUG 2022-09-08 19:53:03,334 [main][JoinProcessor.java:169] : Using FROM fragment [Author author0_]
DEBUG 2022-09-08 19:53:03,334 [main][HqlSqlBaseWalker.java:132] : select >> end [level=1, statement=select]
DEBUG 2022-09-08 19:53:03,335 [main][QueryTranslatorImpl.java:265] : --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (Author)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'author0_.id as id1_1_' {alias=a, className=org.example.models.Author, tableAlias=author0_}
    |  \-[SQL_TOKEN] SqlFragment: 'author0_.name as name2_1_, author0_.salary as salary3_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[a], fromElementByTableAlias=[author0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'Author author0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=a,role=null,tableName=Author,tableAlias=author0_,origin=null,columns={,className=org.example.models.Author}}
    \-[WHERE] SqlNode: 'where'
       \-[BETWEEN] BetweenOperatorNode: 'between'
          +-[DOT] DotNode: 'author0_.salary' {propertyName=salary,dereferenceType=PRIMITIVE,getPropertyPath=salary,path=a.salary,tableAlias=author0_,className=org.example.models.Author,classAlias=a}
          |  +-[ALIAS_REF] IdentNode: 'author0_.id' {alias=a, className=org.example.models.Author, tableAlias=author0_}
          |  \-[IDENT] IdentNode: 'salary' {originalText=salary}
          +-[NAMED_PARAM] ParameterNode: '?' {name=minSalary, expectedType=org.hibernate.type.IntegerType@b0a664a6}
          \-[NAMED_PARAM] ParameterNode: '?' {name=maxSalary, expectedType=org.hibernate.type.IntegerType@b0a664a6}

DEBUG 2022-09-08 19:53:03,335 [main][ErrorCounter.java:95] : throwQueryException() : no errors
DEBUG 2022-09-08 19:53:03,335 [main][QueryTranslatorImpl.java:247] : HQL: select a from org.example.models.Author a where a.salary between :minSalary and :maxSalary
DEBUG 2022-09-08 19:53:03,335 [main][QueryTranslatorImpl.java:248] : SQL: select author0_.id as id1_1_, author0_.name as name2_1_, author0_.salary as salary3_1_ from Author author0_ where author0_.salary between ? and ?
DEBUG 2022-09-08 19:53:03,335 [main][ErrorCounter.java:95] : throwQueryException() : no errors
DEBUG 2022-09-08 19:53:03,336 [main][SqlStatementLogger.java:92] : select author0_.id as id1_1_, author0_.name as name2_1_, author0_.salary as salary3_1_ from Author author0_ where author0_.salary between ? and ?
DEBUG 2022-09-08 19:53:03,337 [main][DelegatingBasicLogger.java:384] : Result set row: 0
DEBUG 2022-09-08 19:53:03,338 [main][Loader.java:1527] : Result row: EntityKey[org.example.models.Author#2]
DEBUG 2022-09-08 19:53:03,338 [main][TwoPhaseLoad.java:141] : Resolving associations for [org.example.models.Author#2]
DEBUG 2022-09-08 19:53:03,338 [main][Loader.java:2193] : Loading entity: [org.example.models.Address#2]
DEBUG 2022-09-08 19:53:03,338 [main][SqlStatementLogger.java:92] : select address0_.id as id1_0_1_, address0_.author_id as author_i3_0_1_, address0_.street as street2_0_1_, author1_.id as id1_1_0_, author1_.name as name2_1_0_, author1_.salary as salary3_1_0_ from Address address0_ left outer join Author author1_ on address0_.author_id=author1_.id where address0_.author_id=?
DEBUG 2022-09-08 19:53:03,339 [main][Loader.java:2222] : Done entity load
DEBUG 2022-09-08 19:53:03,339 [main][TwoPhaseLoad.java:267] : Done materializing entity [org.example.models.Author#2]
DEBUG 2022-09-08 19:53:03,339 [main][LogicalConnectionManagedImpl.java:154] : Initiating JDBC connection release from afterTransaction
DEBUG 2022-09-08 19:53:03,340 [main][SqlStatementLogger.java:92] : select author0_.id as id1_1_0_, author0_.name as name2_1_0_, author0_.salary as salary3_1_0_, address1_.id as id1_0_1_, address1_.author_id as author_i3_0_1_, address1_.street as street2_0_1_ from Author author0_ left outer join Address address1_ on author0_.id=address1_.author_id where author0_.id=?
DEBUG 2022-09-08 19:53:03,341 [main][ResultSetProcessorImpl.java:120] : Starting ResultSet row #0
DEBUG 2022-09-08 19:53:03,341 [main][EntityReferenceInitializerImpl.java:126] : On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
DEBUG 2022-09-08 19:53:03,341 [main][TwoPhaseLoad.java:141] : Resolving associations for [org.example.models.Author#2]
DEBUG 2022-09-08 19:53:03,341 [main][TwoPhaseLoad.java:267] : Done materializing entity [org.example.models.Author#2]
DEBUG 2022-09-08 19:53:03,342 [main][ResourceRegistryStandardImpl.java:73] : HHH000387: ResultSet's statement was not registered
DEBUG 2022-09-08 19:53:03,342 [main][AbstractLoadPlanBasedEntityLoader.java:189] : Done entity load : org.example.models.Author#2
DEBUG 2022-09-08 19:53:03,342 [main][LogicalConnectionManagedImpl.java:154] : Initiating JDBC connection release from afterTransaction
DEBUG 2022-09-08 19:53:03,342 [main][TransactionImpl.java:55] : begin
DEBUG 2022-09-08 19:53:03,343 [main][TransactionImpl.java:66] : committing
DEBUG 2022-09-08 19:53:03,343 [main][AbstractFlushingEventListener.java:132] : Processing flush-time cascades
DEBUG 2022-09-08 19:53:03,343 [main][AbstractFlushingEventListener.java:174] : Dirty checking collections
DEBUG 2022-09-08 19:53:03,344 [main][Collections.java:206] : Collection found: [org.example.models.Author.books#2], was: [org.example.models.Author.books#2] (uninitialized)
DEBUG 2022-09-08 19:53:03,344 [main][Collections.java:206] : Collection found: [org.example.models.Author.photos#2], was: [org.example.models.Author.photos#2] (uninitialized)
DEBUG 2022-09-08 19:53:03,345 [main][AbstractFlushingEventListener.java:106] : Flushed: 0 insertions, 1 updates, 0 deletions to 1 objects
DEBUG 2022-09-08 19:53:03,345 [main][AbstractFlushingEventListener.java:113] : Flushed: 0 (re)creations, 0 updates, 0 removals to 2 collections
DEBUG 2022-09-08 19:53:03,345 [main][EntityPrinter.java:102] : Listing entities:
DEBUG 2022-09-08 19:53:03,345 [main][EntityPrinter.java:109] : org.example.models.Author{books=<uninitialized>, address=null, name=Ihor Kosolapow, id=2, salary=3278, photos=<uninitialized>}
DEBUG 2022-09-08 19:53:03,348 [main][SqlStatementLogger.java:92] : update Author set name=? where id=?
DEBUG 2022-09-08 19:53:03,350 [main][LogicalConnectionManagedImpl.java:154] : Initiating JDBC connection release from afterTransaction
DEBUG 2022-09-08 19:53:03,350 [main][LogicalConnectionManagedImpl.java:154] : Initiating JDBC connection release from afterTransaction
DEBUG 2022-09-08 19:53:03,351 [main][JdbcCoordinatorImpl.java:177] : HHH000420: Closing un-released batch
DEBUG 2022-09-08 19:53:03,351 [main][SqlStatementLogger.java:92] : select author0_.id as id1_1_0_, author0_.name as name2_1_0_, author0_.salary as salary3_1_0_, address1_.id as id1_0_1_, address1_.author_id as author_i3_0_1_, address1_.street as street2_0_1_ from Author author0_ left outer join Address address1_ on author0_.id=address1_.author_id where author0_.id=?
DEBUG 2022-09-08 19:53:03,353 [main][ResultSetProcessorImpl.java:120] : Starting ResultSet row #0
DEBUG 2022-09-08 19:53:03,353 [main][EntityReferenceInitializerImpl.java:126] : On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
DEBUG 2022-09-08 19:53:03,353 [main][TwoPhaseLoad.java:141] : Resolving associations for [org.example.models.Author#2]
DEBUG 2022-09-08 19:53:03,353 [main][TwoPhaseLoad.java:267] : Done materializing entity [org.example.models.Author#2]
DEBUG 2022-09-08 19:53:03,353 [main][ResourceRegistryStandardImpl.java:73] : HHH000387: ResultSet's statement was not registered
DEBUG 2022-09-08 19:53:03,354 [main][AbstractLoadPlanBasedEntityLoader.java:189] : Done entity load : org.example.models.Author#2
DEBUG 2022-09-08 19:53:03,354 [main][LogicalConnectionManagedImpl.java:154] : Initiating JDBC connection release from afterTransaction
DEBUG 2022-09-08 19:53:03,355 [main][CriteriaQueryImpl.java:307] : Rendered criteria query -> select avg(generatedAlias0.salary) from Author as generatedAlias0
DEBUG 2022-09-08 19:53:03,356 [main][QueryTranslatorImpl.java:278] : parse() - HQL: select avg(generatedAlias0.salary) from org.example.models.Author as generatedAlias0
DEBUG 2022-09-08 19:53:03,357 [main][QueryTranslatorImpl.java:296] : --- HQL AST ---
 \-[QUERY] Node: 'query'
    \-[SELECT_FROM] Node: 'SELECT_FROM'
       +-[FROM] Node: 'from'
       |  \-[RANGE] Node: 'RANGE'
       |     +-[DOT] Node: '.'
       |     |  +-[DOT] Node: '.'
       |     |  |  +-[DOT] Node: '.'
       |     |  |  |  +-[IDENT] Node: 'org'
       |     |  |  |  \-[IDENT] Node: 'example'
       |     |  |  \-[IDENT] Node: 'models'
       |     |  \-[IDENT] Node: 'Author'
       |     \-[ALIAS] Node: 'generatedAlias0'
       \-[SELECT] Node: 'select'
          \-[AGGREGATE] Node: 'avg'
             \-[DOT] Node: '.'
                +-[IDENT] Node: 'generatedAlias0'
                \-[IDENT] Node: 'salary'

DEBUG 2022-09-08 19:53:03,357 [main][ErrorCounter.java:95] : throwQueryException() : no errors
DEBUG 2022-09-08 19:53:03,357 [main][HqlSqlBaseWalker.java:124] : select << begin [level=1, statement=select]
DEBUG 2022-09-08 19:53:03,357 [main][FromElement.java:148] : FromClause{level=1} : org.example.models.Author (generatedAlias0) -> author0_
DEBUG 2022-09-08 19:53:03,358 [main][FromReferenceNode.java:60] : Resolved : generatedAlias0 -> author0_.id
DEBUG 2022-09-08 19:53:03,358 [main][DotNode.java:661] : getDataType() : salary -> org.hibernate.type.IntegerType@b0a664a6
DEBUG 2022-09-08 19:53:03,358 [main][FromReferenceNode.java:60] : Resolved : generatedAlias0.salary -> author0_.salary
DEBUG 2022-09-08 19:53:03,358 [main][HqlSqlBaseWalker.java:128] : select : finishing up [level=1, statement=select]
DEBUG 2022-09-08 19:53:03,358 [main][HqlSqlWalker.java:725] : processQuery() :  ( SELECT ( {select clause} ( avg ( author0_.salary author0_.id salary ) ) ) ( FromClause{level=1} Author author0_ ) )
DEBUG 2022-09-08 19:53:03,359 [main][JoinProcessor.java:169] : Using FROM fragment [Author author0_]
DEBUG 2022-09-08 19:53:03,359 [main][HqlSqlBaseWalker.java:132] : select >> end [level=1, statement=select]
DEBUG 2022-09-08 19:53:03,359 [main][QueryTranslatorImpl.java:265] : --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (Author)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[AGGREGATE] AggregateNode: 'avg'
    |  |  \-[DOT] DotNode: 'author0_.salary' {propertyName=salary,dereferenceType=PRIMITIVE,getPropertyPath=salary,path=generatedAlias0.salary,tableAlias=author0_,className=org.example.models.Author,classAlias=generatedAlias0}
    |  |     +-[ALIAS_REF] IdentNode: 'author0_.id' {alias=generatedAlias0, className=org.example.models.Author, tableAlias=author0_}
    |  |     \-[IDENT] IdentNode: 'salary' {originalText=salary}
    |  \-[SELECT_COLUMNS] SqlNode: ' as col_0_0_'
    \-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[author0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'Author author0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=Author,tableAlias=author0_,origin=null,columns={,className=org.example.models.Author}}

DEBUG 2022-09-08 19:53:03,359 [main][ErrorCounter.java:95] : throwQueryException() : no errors
DEBUG 2022-09-08 19:53:03,360 [main][QueryTranslatorImpl.java:247] : HQL: select avg(generatedAlias0.salary) from org.example.models.Author as generatedAlias0
DEBUG 2022-09-08 19:53:03,360 [main][QueryTranslatorImpl.java:248] : SQL: select avg(author0_.salary) as col_0_0_ from Author author0_
DEBUG 2022-09-08 19:53:03,360 [main][ErrorCounter.java:95] : throwQueryException() : no errors
DEBUG 2022-09-08 19:53:03,360 [main][SqlStatementLogger.java:92] : select avg(author0_.salary) as col_0_0_ from Author author0_
DEBUG 2022-09-08 19:53:03,361 [main][DelegatingBasicLogger.java:384] : Result set row: 0
DEBUG 2022-09-08 19:53:03,361 [main][Loader.java:1527] : Result row: 
DEBUG 2022-09-08 19:53:03,362 [main][LogicalConnectionManagedImpl.java:154] : Initiating JDBC connection release from afterTransaction
DEBUG 2022-09-08 19:53:03,365 [main][CriteriaQueryImpl.java:307] : Rendered criteria query -> select generatedAlias0 from Author as generatedAlias0 where generatedAlias0.salary>3000
DEBUG 2022-09-08 19:53:03,366 [main][QueryTranslatorImpl.java:278] : parse() - HQL: select generatedAlias0 from org.example.models.Author as generatedAlias0 where generatedAlias0.salary>3000
DEBUG 2022-09-08 19:53:03,367 [main][QueryTranslatorImpl.java:296] : --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[IDENT] Node: 'org'
    |  |     |  |  |  \-[IDENT] Node: 'example'
    |  |     |  |  \-[IDENT] Node: 'models'
    |  |     |  \-[IDENT] Node: 'Author'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[GT] Node: '>'
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'salary'
          \-[NUM_INT] Node: '3000'

DEBUG 2022-09-08 19:53:03,367 [main][ErrorCounter.java:95] : throwQueryException() : no errors
DEBUG 2022-09-08 19:53:03,367 [main][HqlSqlBaseWalker.java:124] : select << begin [level=1, statement=select]
DEBUG 2022-09-08 19:53:03,367 [main][FromElement.java:148] : FromClause{level=1} : org.example.models.Author (generatedAlias0) -> author0_
DEBUG 2022-09-08 19:53:03,367 [main][FromReferenceNode.java:60] : Resolved : generatedAlias0 -> author0_.id
DEBUG 2022-09-08 19:53:03,368 [main][FromReferenceNode.java:60] : Resolved : generatedAlias0 -> author0_.id
DEBUG 2022-09-08 19:53:03,368 [main][DotNode.java:661] : getDataType() : salary -> org.hibernate.type.IntegerType@b0a664a6
DEBUG 2022-09-08 19:53:03,368 [main][FromReferenceNode.java:60] : Resolved : generatedAlias0.salary -> author0_.salary
DEBUG 2022-09-08 19:53:03,368 [main][HqlSqlBaseWalker.java:128] : select : finishing up [level=1, statement=select]
DEBUG 2022-09-08 19:53:03,369 [main][HqlSqlWalker.java:725] : processQuery() :  ( SELECT ( {select clause} author0_.id ) ( FromClause{level=1} Author author0_ ) ( where ( > ( author0_.salary author0_.id salary ) 3000 ) ) )
DEBUG 2022-09-08 19:53:03,369 [main][JoinProcessor.java:169] : Using FROM fragment [Author author0_]
DEBUG 2022-09-08 19:53:03,369 [main][HqlSqlBaseWalker.java:132] : select >> end [level=1, statement=select]
DEBUG 2022-09-08 19:53:03,369 [main][QueryTranslatorImpl.java:265] : --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (Author)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'author0_.id as id1_1_' {alias=generatedAlias0, className=org.example.models.Author, tableAlias=author0_}
    |  \-[SQL_TOKEN] SqlFragment: 'author0_.name as name2_1_, author0_.salary as salary3_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[author0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'Author author0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=Author,tableAlias=author0_,origin=null,columns={,className=org.example.models.Author}}
    \-[WHERE] SqlNode: 'where'
       \-[GT] BinaryLogicOperatorNode: '>'
          +-[DOT] DotNode: 'author0_.salary' {propertyName=salary,dereferenceType=PRIMITIVE,getPropertyPath=salary,path=generatedAlias0.salary,tableAlias=author0_,className=org.example.models.Author,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'author0_.id' {alias=generatedAlias0, className=org.example.models.Author, tableAlias=author0_}
          |  \-[IDENT] IdentNode: 'salary' {originalText=salary}
          \-[NUM_INT] LiteralNode: '3000'

DEBUG 2022-09-08 19:53:03,369 [main][ErrorCounter.java:95] : throwQueryException() : no errors
DEBUG 2022-09-08 19:53:03,369 [main][QueryTranslatorImpl.java:247] : HQL: select generatedAlias0 from org.example.models.Author as generatedAlias0 where generatedAlias0.salary>3000
DEBUG 2022-09-08 19:53:03,369 [main][QueryTranslatorImpl.java:248] : SQL: select author0_.id as id1_1_, author0_.name as name2_1_, author0_.salary as salary3_1_ from Author author0_ where author0_.salary>3000
DEBUG 2022-09-08 19:53:03,370 [main][ErrorCounter.java:95] : throwQueryException() : no errors
DEBUG 2022-09-08 19:53:03,370 [main][SqlStatementLogger.java:92] : select author0_.id as id1_1_, author0_.name as name2_1_, author0_.salary as salary3_1_ from Author author0_ where author0_.salary>3000
DEBUG 2022-09-08 19:53:03,371 [main][DelegatingBasicLogger.java:384] : Result set row: 0
DEBUG 2022-09-08 19:53:03,371 [main][Loader.java:1527] : Result row: EntityKey[org.example.models.Author#1]
DEBUG 2022-09-08 19:53:03,372 [main][DelegatingBasicLogger.java:384] : Result set row: 1
DEBUG 2022-09-08 19:53:03,372 [main][Loader.java:1527] : Result row: EntityKey[org.example.models.Author#2]
DEBUG 2022-09-08 19:53:03,372 [main][TwoPhaseLoad.java:141] : Resolving associations for [org.example.models.Author#1]
DEBUG 2022-09-08 19:53:03,372 [main][Loader.java:2193] : Loading entity: [org.example.models.Address#1]
DEBUG 2022-09-08 19:53:03,372 [main][SqlStatementLogger.java:92] : select address0_.id as id1_0_1_, address0_.author_id as author_i3_0_1_, address0_.street as street2_0_1_, author1_.id as id1_1_0_, author1_.name as name2_1_0_, author1_.salary as salary3_1_0_ from Address address0_ left outer join Author author1_ on address0_.author_id=author1_.id where address0_.author_id=?
DEBUG 2022-09-08 19:53:03,373 [main][Loader.java:2222] : Done entity load
DEBUG 2022-09-08 19:53:03,373 [main][TwoPhaseLoad.java:267] : Done materializing entity [org.example.models.Author#1]
DEBUG 2022-09-08 19:53:03,373 [main][TwoPhaseLoad.java:141] : Resolving associations for [org.example.models.Author#2]
DEBUG 2022-09-08 19:53:03,374 [main][Loader.java:2193] : Loading entity: [org.example.models.Address#2]
DEBUG 2022-09-08 19:53:03,374 [main][SqlStatementLogger.java:92] : select address0_.id as id1_0_1_, address0_.author_id as author_i3_0_1_, address0_.street as street2_0_1_, author1_.id as id1_1_0_, author1_.name as name2_1_0_, author1_.salary as salary3_1_0_ from Address address0_ left outer join Author author1_ on address0_.author_id=author1_.id where address0_.author_id=?
DEBUG 2022-09-08 19:53:03,375 [main][Loader.java:2222] : Done entity load
DEBUG 2022-09-08 19:53:03,375 [main][TwoPhaseLoad.java:267] : Done materializing entity [org.example.models.Author#2]
DEBUG 2022-09-08 19:53:03,375 [main][LogicalConnectionManagedImpl.java:154] : Initiating JDBC connection release from afterTransaction
DEBUG 2022-09-08 19:53:32,567 [pool-1-thread-1][PooledConnections.java:51] : Connection pool now considered primed; min-size will be maintained
WARN  2022-09-08 19:54:40,757 [main][Main.java:17] : TEST
DEBUG 2022-09-08 19:54:40,812 [main][CoreLogging.java:28] : Logging Provider: org.jboss.logging.Log4jLoggerProvider
DEBUG 2022-09-08 19:54:40,819 [main][IntegratorServiceImpl.java:46] : Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
DEBUG 2022-09-08 19:54:40,821 [main][IntegratorServiceImpl.java:46] : Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
DEBUG 2022-09-08 19:54:40,825 [main][IntegratorServiceImpl.java:46] : Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
INFO  2022-09-08 19:54:40,906 [main][Version.java:45] : HHH000412: Hibernate Core {5.2.2.Final}
INFO  2022-09-08 19:54:40,909 [main][Environment.java:213] : HHH000206: hibernate.properties not found
INFO  2022-09-08 19:54:40,910 [main][Environment.java:318] : HHH000021: Bytecode provider name : javassist
DEBUG 2022-09-08 19:54:40,935 [main][LocalXmlResourceResolver.java:57] : Interpreting public/system identifier : [null] - [http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd]
DEBUG 2022-09-08 19:54:40,936 [main][LocalXmlResourceResolver.java:85] : Recognized hibernate-configuration identifier; attempting to resolve on classpath under org/hibernate/
DEBUG 2022-09-08 19:54:40,944 [main][JaxbCfgProcessor.java:116] : cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
DEBUG 2022-09-08 19:54:41,165 [main][Configuration.java:724] : Building session factory using internal StandardServiceRegistryBuilder
DEBUG 2022-09-08 19:54:41,169 [main][ServiceBinding.java:68] : Overriding existing service binding [org.hibernate.secure.spi.JaccService]
DEBUG 2022-09-08 19:54:41,169 [main][Configuration.java:652] : Building session factory using provided StandardServiceRegistry
DEBUG 2022-09-08 19:54:41,177 [main][RegionFactoryInitiator.java:75] : Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
INFO  2022-09-08 19:54:41,183 [main][JavaReflectionManager.java:66] : HCANN000001: Hibernate Commons Annotations {5.0.1.Final}
DEBUG 2022-09-08 19:54:41,196 [main][BasicTypeRegistry.java:145] : Adding type registration boolean -> org.hibernate.type.BooleanType@96e1a9ec
DEBUG 2022-09-08 19:54:41,196 [main][BasicTypeRegistry.java:145] : Adding type registration boolean -> org.hibernate.type.BooleanType@96e1a9ec
DEBUG 2022-09-08 19:54:41,197 [main][BasicTypeRegistry.java:145] : Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@96e1a9ec
DEBUG 2022-09-08 19:54:41,198 [main][BasicTypeRegistry.java:145] : Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@394b6b1b
DEBUG 2022-09-08 19:54:41,199 [main][BasicTypeRegistry.java:145] : Adding type registration true_false -> org.hibernate.type.TrueFalseType@38e119db
DEBUG 2022-09-08 19:54:41,200 [main][BasicTypeRegistry.java:145] : Adding type registration yes_no -> org.hibernate.type.YesNoType@d7e959f
DEBUG 2022-09-08 19:54:41,201 [main][BasicTypeRegistry.java:145] : Adding type registration byte -> org.hibernate.type.ByteType@203e820e
DEBUG 2022-09-08 19:54:41,202 [main][BasicTypeRegistry.java:145] : Adding type registration byte -> org.hibernate.type.ByteType@203e820e
DEBUG 2022-09-08 19:54:41,203 [main][BasicTypeRegistry.java:145] : Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@203e820e
DEBUG 2022-09-08 19:54:41,204 [main][BasicTypeRegistry.java:145] : Adding type registration character -> org.hibernate.type.CharacterType@9ba90f93
DEBUG 2022-09-08 19:54:41,204 [main][BasicTypeRegistry.java:145] : Adding type registration char -> org.hibernate.type.CharacterType@9ba90f93
DEBUG 2022-09-08 19:54:41,205 [main][BasicTypeRegistry.java:145] : Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@9ba90f93
DEBUG 2022-09-08 19:54:41,206 [main][BasicTypeRegistry.java:145] : Adding type registration short -> org.hibernate.type.ShortType@1e6c14b8
DEBUG 2022-09-08 19:54:41,206 [main][BasicTypeRegistry.java:145] : Adding type registration short -> org.hibernate.type.ShortType@1e6c14b8
DEBUG 2022-09-08 19:54:41,207 [main][BasicTypeRegistry.java:145] : Adding type registration java.lang.Short -> org.hibernate.type.ShortType@1e6c14b8
DEBUG 2022-09-08 19:54:41,209 [main][BasicTypeRegistry.java:145] : Adding type registration integer -> org.hibernate.type.IntegerType@ed8942dd
DEBUG 2022-09-08 19:54:41,209 [main][BasicTypeRegistry.java:145] : Adding type registration int -> org.hibernate.type.IntegerType@ed8942dd
DEBUG 2022-09-08 19:54:41,210 [main][BasicTypeRegistry.java:145] : Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@ed8942dd
DEBUG 2022-09-08 19:54:41,214 [main][BasicTypeRegistry.java:145] : Adding type registration long -> org.hibernate.type.LongType@d32deeb7
DEBUG 2022-09-08 19:54:41,215 [main][BasicTypeRegistry.java:145] : Adding type registration long -> org.hibernate.type.LongType@d32deeb7
DEBUG 2022-09-08 19:54:41,215 [main][BasicTypeRegistry.java:145] : Adding type registration java.lang.Long -> org.hibernate.type.LongType@d32deeb7
DEBUG 2022-09-08 19:54:41,217 [main][BasicTypeRegistry.java:145] : Adding type registration float -> org.hibernate.type.FloatType@2f60ba4
DEBUG 2022-09-08 19:54:41,217 [main][BasicTypeRegistry.java:145] : Adding type registration float -> org.hibernate.type.FloatType@2f60ba4
DEBUG 2022-09-08 19:54:41,218 [main][BasicTypeRegistry.java:145] : Adding type registration java.lang.Float -> org.hibernate.type.FloatType@2f60ba4
DEBUG 2022-09-08 19:54:41,219 [main][BasicTypeRegistry.java:145] : Adding type registration double -> org.hibernate.type.DoubleType@63e5e009
DEBUG 2022-09-08 19:54:41,220 [main][BasicTypeRegistry.java:145] : Adding type registration double -> org.hibernate.type.DoubleType@63e5e009
DEBUG 2022-09-08 19:54:41,221 [main][BasicTypeRegistry.java:145] : Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@63e5e009
DEBUG 2022-09-08 19:54:41,222 [main][BasicTypeRegistry.java:145] : Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@cb36f5d3
DEBUG 2022-09-08 19:54:41,222 [main][BasicTypeRegistry.java:145] : Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@cb36f5d3
DEBUG 2022-09-08 19:54:41,223 [main][BasicTypeRegistry.java:145] : Adding type registration big_integer -> org.hibernate.type.BigIntegerType@98ff4abc
DEBUG 2022-09-08 19:54:41,224 [main][BasicTypeRegistry.java:145] : Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@98ff4abc
DEBUG 2022-09-08 19:54:41,225 [main][BasicTypeRegistry.java:145] : Adding type registration string -> org.hibernate.type.StringType@9b533be1
DEBUG 2022-09-08 19:54:41,225 [main][BasicTypeRegistry.java:145] : Adding type registration java.lang.String -> org.hibernate.type.StringType@9b533be1
DEBUG 2022-09-08 19:54:41,226 [main][BasicTypeRegistry.java:145] : Adding type registration nstring -> org.hibernate.type.StringNVarcharType@51663749
DEBUG 2022-09-08 19:54:41,226 [main][BasicTypeRegistry.java:145] : Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@be794503
DEBUG 2022-09-08 19:54:41,227 [main][BasicTypeRegistry.java:145] : Adding type registration url -> org.hibernate.type.UrlType@aea0733b
DEBUG 2022-09-08 19:54:41,228 [main][BasicTypeRegistry.java:145] : Adding type registration java.net.URL -> org.hibernate.type.UrlType@aea0733b
DEBUG 2022-09-08 19:54:41,229 [main][BasicTypeRegistry.java:145] : Adding type registration Duration -> org.hibernate.type.DurationType@86b82b12
DEBUG 2022-09-08 19:54:41,229 [main][BasicTypeRegistry.java:145] : Adding type registration java.time.Duration -> org.hibernate.type.DurationType@86b82b12
DEBUG 2022-09-08 19:54:41,235 [main][BasicTypeRegistry.java:145] : Adding type registration Instant -> org.hibernate.type.InstantType@9eb85bb6
DEBUG 2022-09-08 19:54:41,236 [main][BasicTypeRegistry.java:145] : Adding type registration java.time.Instant -> org.hibernate.type.InstantType@9eb85bb6
DEBUG 2022-09-08 19:54:41,237 [main][BasicTypeRegistry.java:145] : Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@2030ecfc
DEBUG 2022-09-08 19:54:41,238 [main][BasicTypeRegistry.java:145] : Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@2030ecfc
DEBUG 2022-09-08 19:54:41,239 [main][BasicTypeRegistry.java:145] : Adding type registration LocalDate -> org.hibernate.type.LocalDateType@3ff7b948
DEBUG 2022-09-08 19:54:41,239 [main][BasicTypeRegistry.java:145] : Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@3ff7b948
DEBUG 2022-09-08 19:54:41,240 [main][BasicTypeRegistry.java:145] : Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@a65d4c22
DEBUG 2022-09-08 19:54:41,241 [main][BasicTypeRegistry.java:145] : Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@a65d4c22
DEBUG 2022-09-08 19:54:41,242 [main][BasicTypeRegistry.java:145] : Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@7129c537
DEBUG 2022-09-08 19:54:41,242 [main][BasicTypeRegistry.java:145] : Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@7129c537
DEBUG 2022-09-08 19:54:41,243 [main][BasicTypeRegistry.java:145] : Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@10b984d1
DEBUG 2022-09-08 19:54:41,243 [main][BasicTypeRegistry.java:145] : Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@10b984d1
DEBUG 2022-09-08 19:54:41,244 [main][BasicTypeRegistry.java:145] : Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@96af2a69
DEBUG 2022-09-08 19:54:41,244 [main][BasicTypeRegistry.java:145] : Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@96af2a69
DEBUG 2022-09-08 19:54:41,245 [main][BasicTypeRegistry.java:145] : Adding type registration date -> org.hibernate.type.DateType@ff00d599
DEBUG 2022-09-08 19:54:41,246 [main][BasicTypeRegistry.java:145] : Adding type registration java.sql.Date -> org.hibernate.type.DateType@ff00d599
DEBUG 2022-09-08 19:54:41,246 [main][BasicTypeRegistry.java:145] : Adding type registration time -> org.hibernate.type.TimeType@522583a9
DEBUG 2022-09-08 19:54:41,247 [main][BasicTypeRegistry.java:145] : Adding type registration java.sql.Time -> org.hibernate.type.TimeType@522583a9
DEBUG 2022-09-08 19:54:41,247 [main][BasicTypeRegistry.java:145] : Adding type registration timestamp -> org.hibernate.type.TimestampType@1db7e022
DEBUG 2022-09-08 19:54:41,247 [main][BasicTypeRegistry.java:145] : Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@1db7e022
DEBUG 2022-09-08 19:54:41,248 [main][BasicTypeRegistry.java:145] : Adding type registration java.util.Date -> org.hibernate.type.TimestampType@1db7e022
DEBUG 2022-09-08 19:54:41,249 [main][BasicTypeRegistry.java:145] : Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@7ba6f361
DEBUG 2022-09-08 19:54:41,249 [main][BasicTypeRegistry.java:145] : Adding type registration calendar -> org.hibernate.type.CalendarType@5e45dfcf
DEBUG 2022-09-08 19:54:41,249 [main][BasicTypeRegistry.java:145] : Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@5e45dfcf
DEBUG 2022-09-08 19:54:41,250 [main][BasicTypeRegistry.java:145] : Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@5e45dfcf
DEBUG 2022-09-08 19:54:41,250 [main][BasicTypeRegistry.java:145] : Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@422a87d6
DEBUG 2022-09-08 19:54:41,251 [main][BasicTypeRegistry.java:145] : Adding type registration locale -> org.hibernate.type.LocaleType@8075d621
DEBUG 2022-09-08 19:54:41,251 [main][BasicTypeRegistry.java:145] : Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@8075d621
DEBUG 2022-09-08 19:54:41,252 [main][BasicTypeRegistry.java:145] : Adding type registration currency -> org.hibernate.type.CurrencyType@ff9ec398
DEBUG 2022-09-08 19:54:41,252 [main][BasicTypeRegistry.java:145] : Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@ff9ec398
DEBUG 2022-09-08 19:54:41,253 [main][BasicTypeRegistry.java:145] : Adding type registration timezone -> org.hibernate.type.TimeZoneType@b531a2fa
DEBUG 2022-09-08 19:54:41,253 [main][BasicTypeRegistry.java:145] : Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@b531a2fa
DEBUG 2022-09-08 19:54:41,254 [main][BasicTypeRegistry.java:145] : Adding type registration class -> org.hibernate.type.ClassType@ac7f2fcb
DEBUG 2022-09-08 19:54:41,254 [main][BasicTypeRegistry.java:145] : Adding type registration java.lang.Class -> org.hibernate.type.ClassType@ac7f2fcb
DEBUG 2022-09-08 19:54:41,255 [main][BasicTypeRegistry.java:145] : Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@ce1dd4f1
DEBUG 2022-09-08 19:54:41,255 [main][BasicTypeRegistry.java:145] : Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@ce1dd4f1
DEBUG 2022-09-08 19:54:41,256 [main][BasicTypeRegistry.java:145] : Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@9243469e
DEBUG 2022-09-08 19:54:41,256 [main][BasicTypeRegistry.java:145] : Adding type registration binary -> org.hibernate.type.BinaryType@30987f8e
DEBUG 2022-09-08 19:54:41,257 [main][BasicTypeRegistry.java:145] : Adding type registration byte[] -> org.hibernate.type.BinaryType@30987f8e
DEBUG 2022-09-08 19:54:41,257 [main][BasicTypeRegistry.java:145] : Adding type registration [B -> org.hibernate.type.BinaryType@30987f8e
DEBUG 2022-09-08 19:54:41,257 [main][BasicTypeRegistry.java:145] : Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@2a638e4b
DEBUG 2022-09-08 19:54:41,258 [main][BasicTypeRegistry.java:145] : Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@2a638e4b
DEBUG 2022-09-08 19:54:41,258 [main][BasicTypeRegistry.java:145] : Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@2a638e4b
DEBUG 2022-09-08 19:54:41,258 [main][BasicTypeRegistry.java:145] : Adding type registration row_version -> org.hibernate.type.RowVersionType@c007bbf4
DEBUG 2022-09-08 19:54:41,259 [main][BasicTypeRegistry.java:145] : Adding type registration image -> org.hibernate.type.ImageType@27f59590
DEBUG 2022-09-08 19:54:41,259 [main][BasicTypeRegistry.java:145] : Adding type registration characters -> org.hibernate.type.CharArrayType@121aed84
DEBUG 2022-09-08 19:54:41,260 [main][BasicTypeRegistry.java:145] : Adding type registration char[] -> org.hibernate.type.CharArrayType@121aed84
DEBUG 2022-09-08 19:54:41,260 [main][BasicTypeRegistry.java:145] : Adding type registration [C -> org.hibernate.type.CharArrayType@121aed84
DEBUG 2022-09-08 19:54:41,260 [main][BasicTypeRegistry.java:145] : Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@1d0f1307
DEBUG 2022-09-08 19:54:41,261 [main][BasicTypeRegistry.java:145] : Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@1d0f1307
DEBUG 2022-09-08 19:54:41,261 [main][BasicTypeRegistry.java:145] : Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@1d0f1307
DEBUG 2022-09-08 19:54:41,261 [main][BasicTypeRegistry.java:145] : Adding type registration text -> org.hibernate.type.TextType@cb7d82ef
DEBUG 2022-09-08 19:54:41,262 [main][BasicTypeRegistry.java:145] : Adding type registration ntext -> org.hibernate.type.NTextType@109c1941
DEBUG 2022-09-08 19:54:41,264 [main][BasicTypeRegistry.java:145] : Adding type registration blob -> org.hibernate.type.BlobType@a88ce13d
DEBUG 2022-09-08 19:54:41,264 [main][BasicTypeRegistry.java:145] : Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@a88ce13d
DEBUG 2022-09-08 19:54:41,264 [main][BasicTypeRegistry.java:145] : Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@81dc2583
DEBUG 2022-09-08 19:54:41,267 [main][BasicTypeRegistry.java:145] : Adding type registration clob -> org.hibernate.type.ClobType@5b3a04db
DEBUG 2022-09-08 19:54:41,267 [main][BasicTypeRegistry.java:145] : Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@5b3a04db
DEBUG 2022-09-08 19:54:41,269 [main][BasicTypeRegistry.java:145] : Adding type registration nclob -> org.hibernate.type.NClobType@3982793a
DEBUG 2022-09-08 19:54:41,269 [main][BasicTypeRegistry.java:145] : Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@3982793a
DEBUG 2022-09-08 19:54:41,269 [main][BasicTypeRegistry.java:145] : Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@28a93e15
DEBUG 2022-09-08 19:54:41,270 [main][BasicTypeRegistry.java:145] : Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@f9048d5f
DEBUG 2022-09-08 19:54:41,270 [main][BasicTypeRegistry.java:145] : Adding type registration serializable -> org.hibernate.type.SerializableType@c4895740
DEBUG 2022-09-08 19:54:41,272 [main][BasicTypeRegistry.java:145] : Adding type registration object -> org.hibernate.type.ObjectType@3529af0f
DEBUG 2022-09-08 19:54:41,272 [main][BasicTypeRegistry.java:145] : Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@3529af0f
DEBUG 2022-09-08 19:54:41,272 [main][BasicTypeRegistry.java:145] : Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@e7cb9836
DEBUG 2022-09-08 19:54:41,273 [main][BasicTypeRegistry.java:145] : Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@bf93e44f
DEBUG 2022-09-08 19:54:41,273 [main][BasicTypeRegistry.java:145] : Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@1c28216d
DEBUG 2022-09-08 19:54:41,273 [main][BasicTypeRegistry.java:145] : Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@382dfb4c
DEBUG 2022-09-08 19:54:41,273 [main][BasicTypeRegistry.java:145] : Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@c37a0814
DEBUG 2022-09-08 19:54:41,273 [main][BasicTypeRegistry.java:145] : Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@3168c4a7
DEBUG 2022-09-08 19:54:41,274 [main][BasicTypeRegistry.java:145] : Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@36ef9c56
DEBUG 2022-09-08 19:54:41,274 [main][BasicTypeRegistry.java:145] : Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@ec27844f
WARN  2022-09-08 19:54:41,279 [main][DriverManagerConnectionProviderImpl.java:70] : HHH10001002: Using Hibernate built-in connection pool (not for production use!)
INFO  2022-09-08 19:54:41,285 [main][DriverManagerConnectionProviderImpl.java:126] : HHH10001005: using driver [com.mysql.cj.jdbc.Driver] at URL [jdbc:mysql://localhost:3306/classicmodels?serverTimezone=UTC]
INFO  2022-09-08 19:54:41,285 [main][DriverManagerConnectionProviderImpl.java:132] : HHH10001001: Connection properties: {password=rootroot, user=root}
INFO  2022-09-08 19:54:41,286 [main][DriverManagerConnectionProviderImpl.java:140] : HHH10001003: Autocommit mode: false
DEBUG 2022-09-08 19:54:41,288 [main][DelegatingBasicLogger.java:384] : Initializing Connection pool with 1 Connections
INFO  2022-09-08 19:54:41,288 [main][PooledConnections.java:41] : HHH000115: Hibernate connection pool size: 5 (min=1)
DEBUG 2022-09-08 19:54:41,678 [main][JdbcEnvironmentInitiator.java:72] : Database ->
       name : MySQL
    version : 8.0.29
      major : 8
      minor : 0
DEBUG 2022-09-08 19:54:41,679 [main][JdbcEnvironmentInitiator.java:83] : Driver ->
       name : MySQL Connector/J
    version : mysql-connector-java-8.0.29 (Revision: dd61577595edad45c398af508cf91ad26fc4144f)
      major : 8
      minor : 0
DEBUG 2022-09-08 19:54:41,679 [main][DelegatingBasicLogger.java:389] : JDBC version : 4.2
INFO  2022-09-08 19:54:41,684 [main][Dialect.java:153] : HHH000400: Using dialect: org.hibernate.dialect.MySQLDialect
DEBUG 2022-09-08 19:54:41,720 [main][IdentifierHelperBuilder.java:117] : JDBC driver metadata reported database stores quoted identifiers in more than one case
DEBUG 2022-09-08 19:54:41,721 [main][IdentifierHelperBuilder.java:191] : IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [MIXED]; that will likely lead to problems in schema update and validation if using quoted identifiers
DEBUG 2022-09-08 19:54:41,740 [main][DefaultIdentifierGeneratorFactory.java:81] : Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
DEBUG 2022-09-08 19:54:41,740 [main][DefaultIdentifierGeneratorFactory.java:81] : Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
DEBUG 2022-09-08 19:54:41,740 [main][DefaultIdentifierGeneratorFactory.java:81] : Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
DEBUG 2022-09-08 19:54:41,740 [main][DefaultIdentifierGeneratorFactory.java:81] : Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
DEBUG 2022-09-08 19:54:41,741 [main][DefaultIdentifierGeneratorFactory.java:81] : Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
DEBUG 2022-09-08 19:54:41,741 [main][DefaultIdentifierGeneratorFactory.java:81] : Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
DEBUG 2022-09-08 19:54:41,741 [main][DefaultIdentifierGeneratorFactory.java:81] : Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
DEBUG 2022-09-08 19:54:41,742 [main][DefaultIdentifierGeneratorFactory.java:81] : Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
DEBUG 2022-09-08 19:54:41,743 [main][DefaultIdentifierGeneratorFactory.java:81] : Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
DEBUG 2022-09-08 19:54:41,744 [main][DefaultIdentifierGeneratorFactory.java:81] : Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
DEBUG 2022-09-08 19:54:41,745 [main][DefaultIdentifierGeneratorFactory.java:81] : Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
DEBUG 2022-09-08 19:54:41,745 [main][DefaultIdentifierGeneratorFactory.java:81] : Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
DEBUG 2022-09-08 19:54:41,745 [main][DefaultIdentifierGeneratorFactory.java:81] : Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
DEBUG 2022-09-08 19:54:41,746 [main][DefaultIdentifierGeneratorFactory.java:81] : Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
DEBUG 2022-09-08 19:54:41,759 [main][Namespace.java:47] : Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
DEBUG 2022-09-08 19:54:41,772 [main][AnnotationBinder.java:511] : Binding entity from annotated class: org.example.models.Author
DEBUG 2022-09-08 19:54:41,780 [main][Ejb3Column.java:213] : Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
DEBUG 2022-09-08 19:54:41,782 [main][EntityBinder.java:416] : Import with entity name Author
DEBUG 2022-09-08 19:54:41,784 [main][EntityBinder.java:692] : Bind entity org.example.models.Author on table Author
DEBUG 2022-09-08 19:54:41,803 [main][Ejb3Column.java:213] : Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Author), mappingColumn=id, insertable=true, updatable=true, unique=false}
DEBUG 2022-09-08 19:54:41,804 [main][PropertyBinder.java:174] : MetadataSourceProcessor property id with lazy=false
DEBUG 2022-09-08 19:54:41,805 [main][AbstractPropertyHolder.java:89] : Attempting to locate auto-apply AttributeConverter for property [org.example.models.Author:id]
DEBUG 2022-09-08 19:54:41,806 [main][SimpleValueBinder.java:398] : building SimpleValue for id
DEBUG 2022-09-08 19:54:41,807 [main][PropertyBinder.java:265] : Building property id
DEBUG 2022-09-08 19:54:41,810 [main][Ejb3Column.java:213] : Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='author'}
DEBUG 2022-09-08 19:54:41,810 [main][Ejb3Column.java:213] : Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Author), mappingColumn=address, insertable=true, updatable=true, unique=false}
DEBUG 2022-09-08 19:54:41,812 [main][Ejb3Column.java:213] : Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Author), mappingColumn=null, insertable=true, updatable=true, unique=false}
DEBUG 2022-09-08 19:54:41,816 [main][Ejb3Column.java:213] : Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Author), mappingColumn=element, insertable=true, updatable=true, unique=false}
DEBUG 2022-09-08 19:54:41,816 [main][Ejb3Column.java:213] : Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Author), mappingColumn=books_KEY, insertable=true, updatable=true, unique=false}
DEBUG 2022-09-08 19:54:41,816 [main][Ejb3Column.java:213] : Binding column: Ejb3JoinColumn{logicalColumnName='books_KEY', referencedColumn='null', mappedBy='null'}
DEBUG 2022-09-08 19:54:41,817 [main][Ejb3Column.java:213] : Binding column: Ejb3JoinColumn{logicalColumnName='book_id', referencedColumn='', mappedBy=''}
DEBUG 2022-09-08 19:54:41,817 [main][Ejb3Column.java:213] : Binding column: Ejb3JoinColumn{logicalColumnName='author_id', referencedColumn='', mappedBy=''}
DEBUG 2022-09-08 19:54:41,817 [main][CollectionBinder.java:388] : Collection role: org.example.models.Author.books
DEBUG 2022-09-08 19:54:41,818 [main][PropertyBinder.java:265] : Building property books
DEBUG 2022-09-08 19:54:41,818 [main][Ejb3Column.java:213] : Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Author), mappingColumn=name, insertable=true, updatable=true, unique=false}
DEBUG 2022-09-08 19:54:41,818 [main][PropertyBinder.java:174] : MetadataSourceProcessor property name with lazy=false
DEBUG 2022-09-08 19:54:41,818 [main][AbstractPropertyHolder.java:89] : Attempting to locate auto-apply AttributeConverter for property [org.example.models.Author:name]
DEBUG 2022-09-08 19:54:41,818 [main][SimpleValueBinder.java:398] : building SimpleValue for name
DEBUG 2022-09-08 19:54:41,819 [main][PropertyBinder.java:265] : Building property name
DEBUG 2022-09-08 19:54:41,819 [main][Ejb3Column.java:213] : Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='author'}
DEBUG 2022-09-08 19:54:41,819 [main][Ejb3Column.java:213] : Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Author), mappingColumn=photos, insertable=true, updatable=true, unique=false}
DEBUG 2022-09-08 19:54:41,819 [main][Ejb3Column.java:213] : Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Author), mappingColumn=null, insertable=true, updatable=true, unique=false}
DEBUG 2022-09-08 19:54:41,819 [main][Ejb3Column.java:213] : Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Author), mappingColumn=element, insertable=true, updatable=true, unique=false}
DEBUG 2022-09-08 19:54:41,819 [main][Ejb3Column.java:213] : Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Author), mappingColumn=photos_KEY, insertable=true, updatable=true, unique=false}
DEBUG 2022-09-08 19:54:41,819 [main][Ejb3Column.java:213] : Binding column: Ejb3JoinColumn{logicalColumnName='photos_KEY', referencedColumn='null', mappedBy='null'}
DEBUG 2022-09-08 19:54:41,820 [main][Ejb3Column.java:213] : Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='author'}
DEBUG 2022-09-08 19:54:41,821 [main][Ejb3Column.java:213] : Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='author'}
DEBUG 2022-09-08 19:54:41,821 [main][CollectionBinder.java:388] : Collection role: org.example.models.Author.photos
DEBUG 2022-09-08 19:54:41,821 [main][PropertyBinder.java:265] : Building property photos
DEBUG 2022-09-08 19:54:41,821 [main][Ejb3Column.java:213] : Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Author), mappingColumn=salary, insertable=true, updatable=true, unique=false}
DEBUG 2022-09-08 19:54:41,821 [main][PropertyBinder.java:174] : MetadataSourceProcessor property salary with lazy=false
DEBUG 2022-09-08 19:54:41,821 [main][AbstractPropertyHolder.java:89] : Attempting to locate auto-apply AttributeConverter for property [org.example.models.Author:salary]
DEBUG 2022-09-08 19:54:41,822 [main][SimpleValueBinder.java:398] : building SimpleValue for salary
DEBUG 2022-09-08 19:54:41,822 [main][PropertyBinder.java:265] : Building property salary
DEBUG 2022-09-08 19:54:41,822 [main][AnnotationBinder.java:511] : Binding entity from annotated class: org.example.models.Book
DEBUG 2022-09-08 19:54:41,822 [main][Ejb3Column.java:213] : Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
DEBUG 2022-09-08 19:54:41,822 [main][EntityBinder.java:416] : Import with entity name Book
DEBUG 2022-09-08 19:54:41,822 [main][EntityBinder.java:692] : Bind entity org.example.models.Book on table Book
DEBUG 2022-09-08 19:54:41,823 [main][Ejb3Column.java:213] : Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Book), mappingColumn=id, insertable=true, updatable=true, unique=false}
DEBUG 2022-09-08 19:54:41,823 [main][PropertyBinder.java:174] : MetadataSourceProcessor property id with lazy=false
DEBUG 2022-09-08 19:54:41,823 [main][AbstractPropertyHolder.java:89] : Attempting to locate auto-apply AttributeConverter for property [org.example.models.Book:id]
DEBUG 2022-09-08 19:54:41,823 [main][SimpleValueBinder.java:398] : building SimpleValue for id
DEBUG 2022-09-08 19:54:41,824 [main][PropertyBinder.java:265] : Building property id
DEBUG 2022-09-08 19:54:41,824 [main][Ejb3Column.java:213] : Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Book), mappingColumn=null, insertable=true, updatable=true, unique=false}
DEBUG 2022-09-08 19:54:41,824 [main][Ejb3Column.java:213] : Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Book), mappingColumn=element, insertable=true, updatable=true, unique=false}
DEBUG 2022-09-08 19:54:41,824 [main][Ejb3Column.java:213] : Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Book), mappingColumn=authors_KEY, insertable=true, updatable=true, unique=false}
DEBUG 2022-09-08 19:54:41,824 [main][Ejb3Column.java:213] : Binding column: Ejb3JoinColumn{logicalColumnName='authors_KEY', referencedColumn='null', mappedBy='null'}
DEBUG 2022-09-08 19:54:41,824 [main][Ejb3Column.java:213] : Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='books'}
DEBUG 2022-09-08 19:54:41,825 [main][Ejb3Column.java:213] : Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='books'}
DEBUG 2022-09-08 19:54:41,825 [main][CollectionBinder.java:388] : Collection role: org.example.models.Book.authors
DEBUG 2022-09-08 19:54:41,825 [main][PropertyBinder.java:265] : Building property authors
DEBUG 2022-09-08 19:54:41,825 [main][Ejb3Column.java:213] : Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Book), mappingColumn=name, insertable=true, updatable=true, unique=false}
DEBUG 2022-09-08 19:54:41,825 [main][PropertyBinder.java:174] : MetadataSourceProcessor property name with lazy=false
DEBUG 2022-09-08 19:54:41,825 [main][AbstractPropertyHolder.java:89] : Attempting to locate auto-apply AttributeConverter for property [org.example.models.Book:name]
DEBUG 2022-09-08 19:54:41,825 [main][SimpleValueBinder.java:398] : building SimpleValue for name
DEBUG 2022-09-08 19:54:41,825 [main][PropertyBinder.java:265] : Building property name
DEBUG 2022-09-08 19:54:41,826 [main][AnnotationBinder.java:511] : Binding entity from annotated class: org.example.models.Photo
DEBUG 2022-09-08 19:54:41,826 [main][Ejb3Column.java:213] : Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
DEBUG 2022-09-08 19:54:41,826 [main][EntityBinder.java:416] : Import with entity name Photo
DEBUG 2022-09-08 19:54:41,826 [main][EntityBinder.java:692] : Bind entity org.example.models.Photo on table Photo
DEBUG 2022-09-08 19:54:41,828 [main][Ejb3Column.java:213] : Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Photo), mappingColumn=id, insertable=true, updatable=true, unique=false}
DEBUG 2022-09-08 19:54:41,828 [main][PropertyBinder.java:174] : MetadataSourceProcessor property id with lazy=false
DEBUG 2022-09-08 19:54:41,828 [main][AbstractPropertyHolder.java:89] : Attempting to locate auto-apply AttributeConverter for property [org.example.models.Photo:id]
DEBUG 2022-09-08 19:54:41,829 [main][SimpleValueBinder.java:398] : building SimpleValue for id
DEBUG 2022-09-08 19:54:41,829 [main][PropertyBinder.java:265] : Building property id
DEBUG 2022-09-08 19:54:41,829 [main][Ejb3Column.java:213] : Binding column: Ejb3JoinColumn{logicalColumnName='author_id', referencedColumn='', mappedBy=''}
DEBUG 2022-09-08 19:54:41,829 [main][Ejb3Column.java:213] : Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Photo), mappingColumn=author, insertable=true, updatable=true, unique=false}
DEBUG 2022-09-08 19:54:41,829 [main][PropertyBinder.java:265] : Building property author
DEBUG 2022-09-08 19:54:41,830 [main][Ejb3Column.java:213] : Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Photo), mappingColumn=file_name, insertable=true, updatable=true, unique=false}
DEBUG 2022-09-08 19:54:41,830 [main][PropertyBinder.java:174] : MetadataSourceProcessor property fileName with lazy=false
DEBUG 2022-09-08 19:54:41,830 [main][AbstractPropertyHolder.java:89] : Attempting to locate auto-apply AttributeConverter for property [org.example.models.Photo:fileName]
DEBUG 2022-09-08 19:54:41,831 [main][SimpleValueBinder.java:398] : building SimpleValue for fileName
DEBUG 2022-09-08 19:54:41,831 [main][PropertyBinder.java:265] : Building property fileName
DEBUG 2022-09-08 19:54:41,831 [main][AnnotationBinder.java:511] : Binding entity from annotated class: org.example.models.Address
DEBUG 2022-09-08 19:54:41,831 [main][Ejb3Column.java:213] : Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
DEBUG 2022-09-08 19:54:41,831 [main][EntityBinder.java:416] : Import with entity name Address
DEBUG 2022-09-08 19:54:41,832 [main][EntityBinder.java:692] : Bind entity org.example.models.Address on table Address
DEBUG 2022-09-08 19:54:41,833 [main][Ejb3Column.java:213] : Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Address), mappingColumn=id, insertable=true, updatable=true, unique=false}
DEBUG 2022-09-08 19:54:41,833 [main][Ejb3Column.java:213] : Binding column: Ejb3JoinColumn{logicalColumnName='author_id', referencedColumn='', mappedBy=''}
DEBUG 2022-09-08 19:54:41,833 [main][PropertyBinder.java:174] : MetadataSourceProcessor property id with lazy=false
DEBUG 2022-09-08 19:54:41,833 [main][AbstractPropertyHolder.java:89] : Attempting to locate auto-apply AttributeConverter for property [org.example.models.Address:id]
DEBUG 2022-09-08 19:54:41,833 [main][SimpleValueBinder.java:398] : building SimpleValue for id
DEBUG 2022-09-08 19:54:41,833 [main][PropertyBinder.java:265] : Building property id
DEBUG 2022-09-08 19:54:41,834 [main][Ejb3Column.java:213] : Binding column: Ejb3JoinColumn{logicalColumnName='author_id', referencedColumn='', mappedBy=''}
DEBUG 2022-09-08 19:54:41,834 [main][Ejb3Column.java:213] : Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Address), mappingColumn=author, insertable=true, updatable=true, unique=false}
DEBUG 2022-09-08 19:54:41,835 [main][Ejb3Column.java:213] : Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Address), mappingColumn=street, insertable=true, updatable=true, unique=false}
DEBUG 2022-09-08 19:54:41,835 [main][PropertyBinder.java:174] : MetadataSourceProcessor property street with lazy=false
DEBUG 2022-09-08 19:54:41,835 [main][AbstractPropertyHolder.java:89] : Attempting to locate auto-apply AttributeConverter for property [org.example.models.Address:street]
DEBUG 2022-09-08 19:54:41,835 [main][SimpleValueBinder.java:398] : building SimpleValue for street
DEBUG 2022-09-08 19:54:41,835 [main][PropertyBinder.java:265] : Building property street
DEBUG 2022-09-08 19:54:41,835 [main][SimpleValueBinder.java:443] : Starting fillSimpleValue for id
DEBUG 2022-09-08 19:54:41,836 [main][SimpleValueBinder.java:443] : Starting fillSimpleValue for name
DEBUG 2022-09-08 19:54:41,836 [main][SimpleValueBinder.java:443] : Starting fillSimpleValue for salary
DEBUG 2022-09-08 19:54:41,836 [main][SimpleValueBinder.java:443] : Starting fillSimpleValue for id
DEBUG 2022-09-08 19:54:41,836 [main][SimpleValueBinder.java:443] : Starting fillSimpleValue for name
DEBUG 2022-09-08 19:54:41,836 [main][SimpleValueBinder.java:443] : Starting fillSimpleValue for id
DEBUG 2022-09-08 19:54:41,836 [main][SimpleValueBinder.java:443] : Starting fillSimpleValue for fileName
DEBUG 2022-09-08 19:54:41,836 [main][SimpleValueBinder.java:443] : Starting fillSimpleValue for id
DEBUG 2022-09-08 19:54:41,836 [main][SimpleValueBinder.java:443] : Starting fillSimpleValue for street
DEBUG 2022-09-08 19:54:41,837 [main][PrimaryKey.java:35] : Forcing column [id] to be non-null as it is part of the primary key for table [author]
DEBUG 2022-09-08 19:54:41,838 [main][PrimaryKey.java:35] : Forcing column [id] to be non-null as it is part of the primary key for table [book]
DEBUG 2022-09-08 19:54:41,838 [main][PrimaryKey.java:35] : Forcing column [id] to be non-null as it is part of the primary key for table [photo]
DEBUG 2022-09-08 19:54:41,838 [main][PrimaryKey.java:35] : Forcing column [author_id] to be non-null as it is part of the primary key for table [address]
DEBUG 2022-09-08 19:54:41,838 [main][PropertyBinder.java:265] : Building property author
DEBUG 2022-09-08 19:54:41,839 [main][CollectionSecondPass.java:51] : Second pass for collection: org.example.models.Author.books
DEBUG 2022-09-08 19:54:41,839 [main][CollectionBinder.java:1210] : Binding as ManyToMany: org.example.models.Author.books
DEBUG 2022-09-08 19:54:41,840 [main][PrimaryKey.java:35] : Forcing column [book_id] to be non-null as it is part of the primary key for table [authors_books]
DEBUG 2022-09-08 19:54:41,840 [main][PrimaryKey.java:35] : Forcing column [author_id] to be non-null as it is part of the primary key for table [authors_books]
DEBUG 2022-09-08 19:54:41,840 [main][CollectionSecondPass.java:68] : Mapped collection key: book_id, element: author_id
DEBUG 2022-09-08 19:54:41,840 [main][PropertyBinder.java:265] : Building property address
DEBUG 2022-09-08 19:54:41,840 [main][CollectionSecondPass.java:51] : Second pass for collection: org.example.models.Author.photos
DEBUG 2022-09-08 19:54:41,841 [main][CollectionBinder.java:830] : Binding a OneToMany: org.example.models.Author.photos through a foreign key
DEBUG 2022-09-08 19:54:41,841 [main][CollectionBinder.java:868] : Mapping collection: org.example.models.Author.photos -> Photo
DEBUG 2022-09-08 19:54:41,841 [main][TableBinder.java:565] : Retrieving property org.example.models.Photo.author
DEBUG 2022-09-08 19:54:41,842 [main][CollectionSecondPass.java:68] : Mapped collection key: author_id, one-to-many: org.example.models.Photo
DEBUG 2022-09-08 19:54:41,842 [main][CollectionSecondPass.java:51] : Second pass for collection: org.example.models.Book.authors
DEBUG 2022-09-08 19:54:41,842 [main][CollectionBinder.java:1210] : Binding as ManyToMany: org.example.models.Book.authors
DEBUG 2022-09-08 19:54:41,842 [main][TableBinder.java:565] : Retrieving property org.example.models.Author.books
DEBUG 2022-09-08 19:54:41,843 [main][CollectionSecondPass.java:68] : Mapped collection key: author_id, element: book_id
DEBUG 2022-09-08 19:54:41,843 [main][InFlightMetadataCollectorImpl.java:1798] : Resolving reference to class: org.example.models.Author
DEBUG 2022-09-08 19:54:41,844 [main][InFlightMetadataCollectorImpl.java:1798] : Resolving reference to class: org.example.models.Book
DEBUG 2022-09-08 19:54:41,844 [main][InFlightMetadataCollectorImpl.java:1798] : Resolving reference to class: org.example.models.Author
DEBUG 2022-09-08 19:54:41,844 [main][InFlightMetadataCollectorImpl.java:1798] : Resolving reference to class: org.example.models.Author
DEBUG 2022-09-08 19:54:41,845 [main][InFlightMetadataCollectorImpl.java:1798] : Resolving reference to class: org.example.models.Author
DEBUG 2022-09-08 19:54:41,845 [main][InFlightMetadataCollectorImpl.java:1798] : Resolving reference to class: org.example.models.Book
DEBUG 2022-09-08 19:54:41,845 [main][InFlightMetadataCollectorImpl.java:1798] : Resolving reference to class: org.example.models.Author
DEBUG 2022-09-08 19:54:41,845 [main][InFlightMetadataCollectorImpl.java:1798] : Resolving reference to class: org.example.models.Author
DEBUG 2022-09-08 19:54:41,861 [main][SessionFactoryImpl.java:197] : Building session factory
DEBUG 2022-09-08 19:54:41,862 [main][Settings.java:69] : SessionFactory name : null
DEBUG 2022-09-08 19:54:41,862 [main][Settings.java:70] : Automatic flush during beforeCompletion(): enabled
DEBUG 2022-09-08 19:54:41,862 [main][Settings.java:71] : Automatic session close at end of transaction: disabled
DEBUG 2022-09-08 19:54:41,862 [main][Settings.java:73] : Statistics: disabled
DEBUG 2022-09-08 19:54:41,862 [main][Settings.java:75] : Deleted entity synthetic identifier rollback: disabled
DEBUG 2022-09-08 19:54:41,862 [main][Settings.java:76] : Default entity-mode: pojo
DEBUG 2022-09-08 19:54:41,862 [main][Settings.java:77] : Check Nullability in Core (should be disabled when Bean Validation is on): enabled
DEBUG 2022-09-08 19:54:41,862 [main][Settings.java:78] : Allow initialization of lazy state outside session : disabled
DEBUG 2022-09-08 19:54:41,863 [main][Settings.java:80] : Using BatchFetchStyle : LEGACY
DEBUG 2022-09-08 19:54:41,863 [main][Settings.java:81] : Default batch fetch size: -1
DEBUG 2022-09-08 19:54:41,863 [main][Settings.java:82] : Maximum outer join fetch depth: 2
DEBUG 2022-09-08 19:54:41,863 [main][Settings.java:83] : Default null ordering: NONE
DEBUG 2022-09-08 19:54:41,863 [main][Settings.java:84] : Order SQL updates by primary key: disabled
DEBUG 2022-09-08 19:54:41,863 [main][Settings.java:85] : Order SQL inserts for batching: disabled
DEBUG 2022-09-08 19:54:41,863 [main][Settings.java:87] : multi-tenancy strategy : NONE
DEBUG 2022-09-08 19:54:41,863 [main][Settings.java:89] : JTA Track by Thread: enabled
DEBUG 2022-09-08 19:54:41,863 [main][Settings.java:91] : Query language substitutions: {}
DEBUG 2022-09-08 19:54:41,863 [main][Settings.java:92] : JPA query language strict compliance: disabled
DEBUG 2022-09-08 19:54:41,863 [main][Settings.java:93] : Named query checking : enabled
DEBUG 2022-09-08 19:54:41,863 [main][Settings.java:95] : Second-level cache: enabled
DEBUG 2022-09-08 19:54:41,864 [main][Settings.java:96] : Second-level query cache: disabled
DEBUG 2022-09-08 19:54:41,864 [main][Settings.java:97] : Second-level query cache factory: org.hibernate.cache.internal.StandardQueryCacheFactory@1c603f39
DEBUG 2022-09-08 19:54:41,864 [main][Settings.java:98] : Second-level cache region prefix: null
DEBUG 2022-09-08 19:54:41,864 [main][Settings.java:99] : Optimize second-level cache for minimal puts: disabled
DEBUG 2022-09-08 19:54:41,864 [main][Settings.java:100] : Structured second-level cache entries: disabled
DEBUG 2022-09-08 19:54:41,864 [main][Settings.java:101] : Second-level cache direct-reference entries: disabled
DEBUG 2022-09-08 19:54:41,864 [main][Settings.java:102] : Automatic eviction of collection cache: disabled
DEBUG 2022-09-08 19:54:41,864 [main][Settings.java:104] : JDBC batch size: 15
DEBUG 2022-09-08 19:54:41,864 [main][Settings.java:105] : JDBC batch updates for versioned data: enabled
DEBUG 2022-09-08 19:54:41,864 [main][Settings.java:106] : Scrollable result sets: enabled
DEBUG 2022-09-08 19:54:41,864 [main][Settings.java:107] : Wrap result sets: disabled
DEBUG 2022-09-08 19:54:41,864 [main][Settings.java:108] : JDBC3 getGeneratedKeys(): enabled
DEBUG 2022-09-08 19:54:41,865 [main][Settings.java:109] : JDBC result set fetch size: null
DEBUG 2022-09-08 19:54:41,865 [main][Settings.java:110] : Connection release mode: AFTER_TRANSACTION
DEBUG 2022-09-08 19:54:41,865 [main][Settings.java:111] : Generate SQL with comments: disabled
DEBUG 2022-09-08 19:54:41,885 [main][SessionFactoryImpl.java:252] : Session factory constructed with filter configurations : {}
DEBUG 2022-09-08 19:54:41,886 [main][SessionFactoryImpl.java:253] : Instantiating session factory with properties: {awt.toolkit=sun.lwawt.macosx.LWCToolkit, java.specification.version=11, file.encoding.pkg=sun.io, jdk.extensions.version=11.0.15.0, sun.jnu.encoding=UTF-8, hibernate.dialect=org.hibernate.dialect.MySQLDialect, java.class.path=/Users/vdonets/IdeaProjects/testmaven/target/classes:/Users/vdonets/.m2/repository/org/hibernate/hibernate-core/5.2.2.Final/hibernate-core-5.2.2.Final.jar:/Users/vdonets/.m2/repository/org/jboss/logging/jboss-logging/3.3.0.Final/jboss-logging-3.3.0.Final.jar:/Users/vdonets/.m2/repository/org/hibernate/javax/persistence/hibernate-jpa-2.1-api/1.0.0.Final/hibernate-jpa-2.1-api-1.0.0.Final.jar:/Users/vdonets/.m2/repository/org/javassist/javassist/3.20.0-GA/javassist-3.20.0-GA.jar:/Users/vdonets/.m2/repository/antlr/antlr/2.7.7/antlr-2.7.7.jar:/Users/vdonets/.m2/repository/org/apache/geronimo/specs/geronimo-jta_1.1_spec/1.1.1/geronimo-jta_1.1_spec-1.1.1.jar:/Users/vdonets/.m2/repository/org/jboss/jandex/2.0.0.Final/jandex-2.0.0.Final.jar:/Users/vdonets/.m2/repository/com/fasterxml/classmate/1.3.0/classmate-1.3.0.jar:/Users/vdonets/.m2/repository/dom4j/dom4j/1.6.1/dom4j-1.6.1.jar:/Users/vdonets/.m2/repository/org/hibernate/common/hibernate-commons-annotations/5.0.1.Final/hibernate-commons-annotations-5.0.1.Final.jar:/Users/vdonets/.m2/repository/javax/enterprise/cdi-api/1.1/cdi-api-1.1.jar:/Users/vdonets/.m2/repository/javax/el/el-api/2.2/el-api-2.2.jar:/Users/vdonets/.m2/repository/org/jboss/spec/javax/interceptor/jboss-interceptors-api_1.1_spec/1.0.0.Beta1/jboss-interceptors-api_1.1_spec-1.0.0.Beta1.jar:/Users/vdonets/.m2/repository/javax/annotation/jsr250-api/1.0/jsr250-api-1.0.jar:/Users/vdonets/.m2/repository/javax/inject/javax.inject/1/javax.inject-1.jar:/Users/vdonets/.m2/repository/mysql/mysql-connector-java/8.0.29/mysql-connector-java-8.0.29.jar:/Users/vdonets/.m2/repository/com/google/protobuf/protobuf-java/3.19.4/protobuf-java-3.19.4.jar:/Users/vdonets/.m2/repository/jakarta/xml/bind/jakarta.xml.bind-api/2.3.2/jakarta.xml.bind-api-2.3.2.jar:/Users/vdonets/.m2/repository/jakarta/activation/jakarta.activation-api/1.2.1/jakarta.activation-api-1.2.1.jar:/Users/vdonets/.m2/repository/org/glassfish/jaxb/jaxb-runtime/2.3.2/jaxb-runtime-2.3.2.jar:/Users/vdonets/.m2/repository/org/glassfish/jaxb/txw2/2.3.2/txw2-2.3.2.jar:/Users/vdonets/.m2/repository/com/sun/istack/istack-commons-runtime/3.0.8/istack-commons-runtime-3.0.8.jar:/Users/vdonets/.m2/repository/org/jvnet/staxex/stax-ex/1.8.1/stax-ex-1.8.1.jar:/Users/vdonets/.m2/repository/com/sun/xml/fastinfoset/FastInfoset/1.2.16/FastInfoset-1.2.16.jar:/Users/vdonets/.m2/repository/log4j/log4j/1.2.14/log4j-1.2.14.jar:/Applications/IntelliJ IDEA.app/Contents/lib/idea_rt.jar:/Users/vdonets/Library/Caches/JetBrains/IntelliJIdea2022.1/captureAgent/debugger-agent.jar, java.vm.vendor=Eclipse OpenJ9, sun.arch.data.model=64, com.ibm.vm.bitmode=64, hbm2ddl.auto=create, user.variant=, com.ibm.oti.vm.library.version=29, java.vendor.url=https://www.ibm.com/semeru-runtimes, user.timezone=Europe/Warsaw, java.vm.specification.version=11, os.name=Mac OS X, sun.java.launcher=SUN_STANDARD, user.country=US, sun.boot.library.path=/Users/vdonets/Library/Java/JavaVirtualMachines/semeru-11.0.15/Contents/Home/lib/default:/Users/vdonets/Library/Java/JavaVirtualMachines/semeru-11.0.15/Contents/Home/lib, sun.java.command=org.example.Main, sun.cpu.endian=little, user.home=/Users/vdonets, user.language=en, java.specification.vendor=Oracle Corporation, java.version.date=2022-04-19, java.home=/Users/vdonets/Library/Java/JavaVirtualMachines/semeru-11.0.15/Contents/Home, ibm.signalhandling.rs=false, jdk.extensions.name=Extensions for OpenJDK for Eclipse OpenJ9, file.separator=/, line.separator=
, java.specification.name=Java Platform API Specification, java.vm.specification.vendor=Oracle Corporation, intellij.debug.agent=true, java.compiler=j9jit29, com.ibm.util.extralibs.properties=, java.awt.graphicsenv=sun.awt.CGraphicsEnvironment, com.ibm.oti.configuration=scar, com.ibm.oti.shared.enabled=false, hibernate.hbm2ddl.auto=create, com.ibm.oti.vm.bootstrap.library.path=/Users/vdonets/Library/Java/JavaVirtualMachines/semeru-11.0.15/Contents/Home/lib/default:/Users/vdonets/Library/Java/JavaVirtualMachines/semeru-11.0.15/Contents/Home/lib, com.ibm.cpu.endian=little, java.fullversion=11.0.15-ea+10
JRE 11 Mac OS X aarch64-64-Bit 20220422_36 (JIT enabled, AOT enabled)
OpenJ9   - 9a84ec34e
OMR      - ab24b6666
JCL      - b7b5b42ea6 based on jdk-11.0.15+10, java.runtime.version=11.0.15-ea+10, user.name=vdonets, path.separator=:, hibernate.connection.username=root, os.version=12.5, java.runtime.name=IBM Semeru Runtime Open Edition, hibernate.connection.url=jdbc:mysql://localhost:3306/classicmodels?serverTimezone=UTC, connection.pool_size=5, ibm.signalhandling.sigint=true, file.encoding=UTF-8, java.vm.name=Eclipse OpenJ9 VM, hibernate.show_sql=true, java.vendor.version=11.0.15.0, ibm.signalhandling.sigchain=true, show_sql=true, hibernate.connection.driver_class=com.mysql.cj.jdbc.Driver, java.vendor.url.bug=https://github.com/ibmruntimes/Semeru-Runtimes/issues, java.io.tmpdir=/var/folders/wv/6c3_66yd6kq3r7z477kwz4lr0000gn/T/, java.version=11.0.15-ea, jboss.modules.system.pkgs=com.intellij.rt, com.ibm.system.agent.path=/Users/vdonets/Library/Java/JavaVirtualMachines/semeru-11.0.15/Contents/Home/lib, user.dir=/Users/vdonets/IdeaProjects/testmaven, os.arch=aarch64, java.vm.specification.name=Java Virtual Machine Specification, java.awt.printerjob=sun.lwawt.macosx.CPrinterJob, hibernate.connection.password=****, os.encoding=UTF-8, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@98c4a30, java.library.path=/Users/vdonets/Library/Java/JavaVirtualMachines/semeru-11.0.15/Contents/Home/lib/default:/Users/vdonets/Library/Java/JavaVirtualMachines/semeru-11.0.15/Contents/Home/lib:/usr/lib, java.vendor=IBM Corporation, java.vm.info=JRE 11 Mac OS X aarch64-64-Bit 20220422_36 (JIT enabled, AOT enabled)
OpenJ9   - 9a84ec34e
OMR      - ab24b6666
JCL      - b7b5b42ea6 based on jdk-11.0.15+10, java.vm.version=openj9-0.32.0, ibm.system.encoding=UTF-8, hibernate.bytecode.use_reflection_optimizer=false, com.ibm.jcl.checkClassPath=, sun.io.unicode.encoding=UnicodeLittle, hibernate.connection.pool_size=5, java.class.version=55.0}
DEBUG 2022-09-08 19:54:41,889 [main][JaccIntegrator.java:80] : Skipping JACC integration as it was not enabled
DEBUG 2022-09-08 19:54:41,891 [main][SessionFactoryImpl.java:292] : Instantiated session factory
DEBUG 2022-09-08 19:54:41,908 [main][ClassLoaderAccessImpl.java:55] : Not known whether passed class name [org.example.models.Photo] is safe
DEBUG 2022-09-08 19:54:41,908 [main][ClassLoaderAccessImpl.java:57] : No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.models.Photo
DEBUG 2022-09-08 19:54:41,922 [main][ClassLoaderAccessImpl.java:55] : Not known whether passed class name [org.example.models.Photo] is safe
DEBUG 2022-09-08 19:54:41,922 [main][ClassLoaderAccessImpl.java:57] : No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.models.Photo
DEBUG 2022-09-08 19:54:41,942 [main][ClassLoaderAccessImpl.java:55] : Not known whether passed class name [org.example.models.Address] is safe
DEBUG 2022-09-08 19:54:41,943 [main][ClassLoaderAccessImpl.java:57] : No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.models.Address
DEBUG 2022-09-08 19:54:41,943 [main][ClassLoaderAccessImpl.java:55] : Not known whether passed class name [org.example.models.Address] is safe
DEBUG 2022-09-08 19:54:41,943 [main][ClassLoaderAccessImpl.java:57] : No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.models.Address
DEBUG 2022-09-08 19:54:41,945 [main][ClassLoaderAccessImpl.java:55] : Not known whether passed class name [org.example.models.Book] is safe
DEBUG 2022-09-08 19:54:41,945 [main][ClassLoaderAccessImpl.java:57] : No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.models.Book
DEBUG 2022-09-08 19:54:41,947 [main][ClassLoaderAccessImpl.java:55] : Not known whether passed class name [org.example.models.Book] is safe
DEBUG 2022-09-08 19:54:41,947 [main][ClassLoaderAccessImpl.java:57] : No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.models.Book
DEBUG 2022-09-08 19:54:41,949 [main][ClassLoaderAccessImpl.java:55] : Not known whether passed class name [org.example.models.Author] is safe
DEBUG 2022-09-08 19:54:41,949 [main][ClassLoaderAccessImpl.java:57] : No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.models.Author
DEBUG 2022-09-08 19:54:41,950 [main][ClassLoaderAccessImpl.java:55] : Not known whether passed class name [org.example.models.Author] is safe
DEBUG 2022-09-08 19:54:41,950 [main][ClassLoaderAccessImpl.java:57] : No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.models.Author
DEBUG 2022-09-08 19:54:41,957 [main][AbstractCollectionPersister.java:670] : Static SQL for collection: org.example.models.Book.authors
DEBUG 2022-09-08 19:54:41,957 [main][AbstractCollectionPersister.java:672] :  Row insert: insert into Authors_Books (author_id, book_id) values (?, ?)
DEBUG 2022-09-08 19:54:41,957 [main][AbstractCollectionPersister.java:675] :  Row update: update Authors_Books set book_id=? where author_id=? and book_id=?
DEBUG 2022-09-08 19:54:41,957 [main][AbstractCollectionPersister.java:678] :  Row delete: delete from Authors_Books where author_id=? and book_id=?
DEBUG 2022-09-08 19:54:41,957 [main][AbstractCollectionPersister.java:681] :  One-shot delete: delete from Authors_Books where author_id=?
DEBUG 2022-09-08 19:54:41,958 [main][AbstractCollectionPersister.java:670] : Static SQL for collection: org.example.models.Author.photos
DEBUG 2022-09-08 19:54:41,958 [main][AbstractCollectionPersister.java:672] :  Row insert: update Photo set author_id=? where id=?
DEBUG 2022-09-08 19:54:41,958 [main][AbstractCollectionPersister.java:675] :  Row update: update Photo set  where id=?
DEBUG 2022-09-08 19:54:41,959 [main][AbstractCollectionPersister.java:678] :  Row delete: update Photo set author_id=null where author_id=? and id=?
DEBUG 2022-09-08 19:54:41,959 [main][AbstractCollectionPersister.java:681] :  One-shot delete: update Photo set author_id=null where author_id=?
DEBUG 2022-09-08 19:54:41,959 [main][AbstractCollectionPersister.java:670] : Static SQL for collection: org.example.models.Author.books
DEBUG 2022-09-08 19:54:41,959 [main][AbstractCollectionPersister.java:672] :  Row insert: insert into Authors_Books (book_id, author_id) values (?, ?)
DEBUG 2022-09-08 19:54:41,959 [main][AbstractCollectionPersister.java:675] :  Row update: update Authors_Books set author_id=? where book_id=? and author_id=?
DEBUG 2022-09-08 19:54:41,959 [main][AbstractCollectionPersister.java:678] :  Row delete: delete from Authors_Books where book_id=? and author_id=?
DEBUG 2022-09-08 19:54:41,960 [main][AbstractCollectionPersister.java:681] :  One-shot delete: delete from Authors_Books where book_id=?
DEBUG 2022-09-08 19:54:41,962 [main][AbstractEntityPersister.java:3529] : Static SQL for entity: org.example.models.Photo
DEBUG 2022-09-08 19:54:41,962 [main][AbstractEntityPersister.java:3534] :  Version select: select id from Photo where id =?
DEBUG 2022-09-08 19:54:41,962 [main][AbstractEntityPersister.java:3537] :  Snapshot select: select photo_.id, photo_.author_id as author_i3_4_, photo_.file_name as file_nam2_4_ from Photo photo_ where photo_.id=?
DEBUG 2022-09-08 19:54:41,962 [main][DelegatingBasicLogger.java:394] :  Insert 0: insert into Photo (author_id, file_name, id) values (?, ?, ?)
DEBUG 2022-09-08 19:54:41,963 [main][DelegatingBasicLogger.java:394] :  Update 0: update Photo set author_id=?, file_name=? where id=?
DEBUG 2022-09-08 19:54:41,963 [main][DelegatingBasicLogger.java:394] :  Delete 0: delete from Photo where id=?
DEBUG 2022-09-08 19:54:41,963 [main][AbstractEntityPersister.java:3545] :  Identity insert: insert into Photo (author_id, file_name) values (?, ?)
DEBUG 2022-09-08 19:54:41,970 [main][QuerySpacesImpl.java:174] : Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@a610de9]
DEBUG 2022-09-08 19:54:41,970 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : author
DEBUG 2022-09-08 19:54:41,972 [main][QuerySpacesImpl.java:174] : Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6990d9b1]
DEBUG 2022-09-08 19:54:41,973 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : author.books
DEBUG 2022-09-08 19:54:41,973 [main][QuerySpacesImpl.java:174] : Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@c79a27f8]
DEBUG 2022-09-08 19:54:41,974 [main][QuerySpacesImpl.java:174] : Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@bbe9e978]
DEBUG 2022-09-08 19:54:41,974 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : author.name
DEBUG 2022-09-08 19:54:41,974 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : author.photos
DEBUG 2022-09-08 19:54:41,974 [main][MetamodelGraphWalker.java:145] : Property path deemed to be circular : author.photos
DEBUG 2022-09-08 19:54:41,975 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : author.salary
DEBUG 2022-09-08 19:54:41,975 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : author.address
DEBUG 2022-09-08 19:54:41,975 [main][QuerySpacesImpl.java:174] : Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5ba343a6]
DEBUG 2022-09-08 19:54:41,975 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : author.address.street
DEBUG 2022-09-08 19:54:41,975 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : author.address.author
DEBUG 2022-09-08 19:54:41,975 [main][MetamodelGraphWalker.java:145] : Property path deemed to be circular : author.address.author
DEBUG 2022-09-08 19:54:41,975 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : fileName
DEBUG 2022-09-08 19:54:41,975 [main][FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150] : Building LoadPlan...
DEBUG 2022-09-08 19:54:41,980 [main][LoadQueryJoinAndFetchProcessor.java:100] : processing queryspace <gen:0>
DEBUG 2022-09-08 19:54:41,983 [main][LoadPlanTreePrinter.java:55] : LoadPlan(entity=org.example.models.Photo)
    - Returns
       - EntityReturnImpl(entity=org.example.models.Photo, querySpaceUid=<gen:0>, path=org.example.models.Photo)
          - EntityAttributeFetchImpl(entity=org.example.models.Author, querySpaceUid=<gen:1>, path=org.example.models.Photo.author)
             - CollectionAttributeFetchImpl(collection=org.example.models.Author.books, querySpaceUid=<gen:2>, path=org.example.models.Photo.author.books)
                - (collection element) CollectionFetchableElementEntityGraph(entity=org.example.models.Book, querySpaceUid=<gen:3>, path=org.example.models.Photo.author.books.<elements>)
             - EntityAttributeFetchImpl(entity=org.example.models.Address, querySpaceUid=<gen:4>, path=org.example.models.Photo.author.address)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=org.example.models.Photo)
          - SQL table alias mapping - photo0_
          - alias suffix - 0_
          - suffixed key columns - {id1_4_0_}
          - JOIN (JoinDefinedByMetadata(author)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=org.example.models.Author)
                - SQL table alias mapping - author1_
                - alias suffix - 1_
                - suffixed key columns - {id1_1_1_}
                - JOIN (JoinDefinedByMetadata(address)) : <gen:1> -> <gen:4>
                   - EntityQuerySpaceImpl(uid=<gen:4>, entity=org.example.models.Address)
                      - SQL table alias mapping - address2_
                      - alias suffix - 2_
                      - suffixed key columns - {author_i1_0_2_}

DEBUG 2022-09-08 19:54:41,984 [main][EntityLoader.java:115] : Static select for entity org.example.models.Photo [NONE]: select photo0_.id as id1_4_0_, photo0_.author_id as author_i3_4_0_, photo0_.file_name as file_nam2_4_0_, author1_.id as id1_1_1_, author1_.name as name2_1_1_, author1_.salary as salary3_1_1_, address2_.author_id as author_i1_0_2_, address2_.street as street2_0_2_ from Photo photo0_ inner join Author author1_ on photo0_.author_id=author1_.id left outer join Address address2_ on author1_.id=address2_.author_id where photo0_.id=?
DEBUG 2022-09-08 19:54:41,985 [main][QuerySpacesImpl.java:174] : Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@b7c11da]
DEBUG 2022-09-08 19:54:41,985 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : author
DEBUG 2022-09-08 19:54:41,985 [main][QuerySpacesImpl.java:174] : Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@a2dd97cb]
DEBUG 2022-09-08 19:54:41,985 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : author.books
DEBUG 2022-09-08 19:54:41,985 [main][QuerySpacesImpl.java:174] : Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@609c63eb]
DEBUG 2022-09-08 19:54:41,985 [main][QuerySpacesImpl.java:174] : Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@206a5671]
DEBUG 2022-09-08 19:54:41,985 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : author.name
DEBUG 2022-09-08 19:54:41,986 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : author.photos
DEBUG 2022-09-08 19:54:41,986 [main][MetamodelGraphWalker.java:145] : Property path deemed to be circular : author.photos
DEBUG 2022-09-08 19:54:41,986 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : author.salary
DEBUG 2022-09-08 19:54:41,986 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : author.address
DEBUG 2022-09-08 19:54:41,986 [main][QuerySpacesImpl.java:174] : Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@cb8ee0d5]
DEBUG 2022-09-08 19:54:41,986 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : author.address.street
DEBUG 2022-09-08 19:54:41,986 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : author.address.author
DEBUG 2022-09-08 19:54:41,986 [main][MetamodelGraphWalker.java:145] : Property path deemed to be circular : author.address.author
DEBUG 2022-09-08 19:54:41,987 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : fileName
DEBUG 2022-09-08 19:54:41,987 [main][FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150] : Building LoadPlan...
DEBUG 2022-09-08 19:54:41,987 [main][LoadQueryJoinAndFetchProcessor.java:100] : processing queryspace <gen:0>
DEBUG 2022-09-08 19:54:41,987 [main][LoadPlanTreePrinter.java:55] : LoadPlan(entity=org.example.models.Photo)
    - Returns
       - EntityReturnImpl(entity=org.example.models.Photo, querySpaceUid=<gen:0>, path=org.example.models.Photo)
          - EntityAttributeFetchImpl(entity=org.example.models.Author, querySpaceUid=<gen:1>, path=org.example.models.Photo.author)
             - CollectionAttributeFetchImpl(collection=org.example.models.Author.books, querySpaceUid=<gen:2>, path=org.example.models.Photo.author.books)
                - (collection element) CollectionFetchableElementEntityGraph(entity=org.example.models.Book, querySpaceUid=<gen:3>, path=org.example.models.Photo.author.books.<elements>)
             - EntityAttributeFetchImpl(entity=org.example.models.Address, querySpaceUid=<gen:4>, path=org.example.models.Photo.author.address)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=org.example.models.Photo)
          - SQL table alias mapping - photo0_
          - alias suffix - 0_
          - suffixed key columns - {id1_4_0_}
          - JOIN (JoinDefinedByMetadata(author)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=org.example.models.Author)
                - SQL table alias mapping - author1_
                - alias suffix - 1_
                - suffixed key columns - {id1_1_1_}
                - JOIN (JoinDefinedByMetadata(address)) : <gen:1> -> <gen:4>
                   - EntityQuerySpaceImpl(uid=<gen:4>, entity=org.example.models.Address)
                      - SQL table alias mapping - address2_
                      - alias suffix - 2_
                      - suffixed key columns - {author_i1_0_2_}

DEBUG 2022-09-08 19:54:41,988 [main][EntityLoader.java:115] : Static select for entity org.example.models.Photo [READ]: select photo0_.id as id1_4_0_, photo0_.author_id as author_i3_4_0_, photo0_.file_name as file_nam2_4_0_, author1_.id as id1_1_1_, author1_.name as name2_1_1_, author1_.salary as salary3_1_1_, address2_.author_id as author_i1_0_2_, address2_.street as street2_0_2_ from Photo photo0_ inner join Author author1_ on photo0_.author_id=author1_.id left outer join Address address2_ on author1_.id=address2_.author_id where photo0_.id=?
DEBUG 2022-09-08 19:54:41,988 [main][QuerySpacesImpl.java:174] : Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@a49fc01a]
DEBUG 2022-09-08 19:54:41,988 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : author
DEBUG 2022-09-08 19:54:41,988 [main][QuerySpacesImpl.java:174] : Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@a4a1eeab]
DEBUG 2022-09-08 19:54:41,988 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : fileName
DEBUG 2022-09-08 19:54:41,988 [main][FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150] : Building LoadPlan...
DEBUG 2022-09-08 19:54:41,989 [main][LoadQueryJoinAndFetchProcessor.java:100] : processing queryspace <gen:0>
DEBUG 2022-09-08 19:54:41,990 [main][LoadPlanTreePrinter.java:55] : LoadPlan(entity=org.example.models.Photo)
    - Returns
       - EntityReturnImpl(entity=org.example.models.Photo, querySpaceUid=<gen:0>, path=org.example.models.Photo)
          - EntityAttributeFetchImpl(entity=org.example.models.Author, querySpaceUid=<gen:1>, path=org.example.models.Photo.author)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=org.example.models.Photo)
          - SQL table alias mapping - photo0_
          - alias suffix - 0_
          - suffixed key columns - {id1_4_0_}

DEBUG 2022-09-08 19:54:41,990 [main][EntityLoader.java:115] : Static select for entity org.example.models.Photo [UPGRADE]: select photo0_.id as id1_4_0_, photo0_.author_id as author_i3_4_0_, photo0_.file_name as file_nam2_4_0_ from Photo photo0_ where photo0_.id=? for update
DEBUG 2022-09-08 19:54:41,990 [main][QuerySpacesImpl.java:174] : Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1bf4760]
DEBUG 2022-09-08 19:54:41,991 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : author
DEBUG 2022-09-08 19:54:41,991 [main][QuerySpacesImpl.java:174] : Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@e95f0bab]
DEBUG 2022-09-08 19:54:41,991 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : fileName
DEBUG 2022-09-08 19:54:41,991 [main][FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150] : Building LoadPlan...
DEBUG 2022-09-08 19:54:41,991 [main][LoadQueryJoinAndFetchProcessor.java:100] : processing queryspace <gen:0>
DEBUG 2022-09-08 19:54:41,992 [main][LoadPlanTreePrinter.java:55] : LoadPlan(entity=org.example.models.Photo)
    - Returns
       - EntityReturnImpl(entity=org.example.models.Photo, querySpaceUid=<gen:0>, path=org.example.models.Photo)
          - EntityAttributeFetchImpl(entity=org.example.models.Author, querySpaceUid=<gen:1>, path=org.example.models.Photo.author)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=org.example.models.Photo)
          - SQL table alias mapping - photo0_
          - alias suffix - 0_
          - suffixed key columns - {id1_4_0_}

DEBUG 2022-09-08 19:54:41,992 [main][EntityLoader.java:115] : Static select for entity org.example.models.Photo [UPGRADE_NOWAIT]: select photo0_.id as id1_4_0_, photo0_.author_id as author_i3_4_0_, photo0_.file_name as file_nam2_4_0_ from Photo photo0_ where photo0_.id=? for update
DEBUG 2022-09-08 19:54:41,992 [main][QuerySpacesImpl.java:174] : Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@d19fa438]
DEBUG 2022-09-08 19:54:41,992 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : author
DEBUG 2022-09-08 19:54:41,992 [main][QuerySpacesImpl.java:174] : Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@9df239f9]
DEBUG 2022-09-08 19:54:41,992 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : fileName
DEBUG 2022-09-08 19:54:41,992 [main][FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150] : Building LoadPlan...
DEBUG 2022-09-08 19:54:41,992 [main][LoadQueryJoinAndFetchProcessor.java:100] : processing queryspace <gen:0>
DEBUG 2022-09-08 19:54:41,993 [main][LoadPlanTreePrinter.java:55] : LoadPlan(entity=org.example.models.Photo)
    - Returns
       - EntityReturnImpl(entity=org.example.models.Photo, querySpaceUid=<gen:0>, path=org.example.models.Photo)
          - EntityAttributeFetchImpl(entity=org.example.models.Author, querySpaceUid=<gen:1>, path=org.example.models.Photo.author)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=org.example.models.Photo)
          - SQL table alias mapping - photo0_
          - alias suffix - 0_
          - suffixed key columns - {id1_4_0_}

DEBUG 2022-09-08 19:54:41,993 [main][EntityLoader.java:115] : Static select for entity org.example.models.Photo [UPGRADE_SKIPLOCKED]: select photo0_.id as id1_4_0_, photo0_.author_id as author_i3_4_0_, photo0_.file_name as file_nam2_4_0_ from Photo photo0_ where photo0_.id=? for update
DEBUG 2022-09-08 19:54:41,993 [main][QuerySpacesImpl.java:174] : Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7b7a394d]
DEBUG 2022-09-08 19:54:41,993 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : author
DEBUG 2022-09-08 19:54:41,993 [main][QuerySpacesImpl.java:174] : Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@682f7b52]
DEBUG 2022-09-08 19:54:41,993 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : fileName
DEBUG 2022-09-08 19:54:41,993 [main][FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150] : Building LoadPlan...
DEBUG 2022-09-08 19:54:41,994 [main][LoadQueryJoinAndFetchProcessor.java:100] : processing queryspace <gen:0>
DEBUG 2022-09-08 19:54:41,994 [main][LoadPlanTreePrinter.java:55] : LoadPlan(entity=org.example.models.Photo)
    - Returns
       - EntityReturnImpl(entity=org.example.models.Photo, querySpaceUid=<gen:0>, path=org.example.models.Photo)
          - EntityAttributeFetchImpl(entity=org.example.models.Author, querySpaceUid=<gen:1>, path=org.example.models.Photo.author)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=org.example.models.Photo)
          - SQL table alias mapping - photo0_
          - alias suffix - 0_
          - suffixed key columns - {id1_4_0_}

DEBUG 2022-09-08 19:54:41,994 [main][EntityLoader.java:115] : Static select for entity org.example.models.Photo [FORCE]: select photo0_.id as id1_4_0_, photo0_.author_id as author_i3_4_0_, photo0_.file_name as file_nam2_4_0_ from Photo photo0_ where photo0_.id=? for update
DEBUG 2022-09-08 19:54:41,994 [main][QuerySpacesImpl.java:174] : Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6a357477]
DEBUG 2022-09-08 19:54:41,994 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : author
DEBUG 2022-09-08 19:54:41,994 [main][QuerySpacesImpl.java:174] : Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@e1e77b31]
DEBUG 2022-09-08 19:54:41,995 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : fileName
DEBUG 2022-09-08 19:54:41,995 [main][FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150] : Building LoadPlan...
DEBUG 2022-09-08 19:54:41,995 [main][LoadQueryJoinAndFetchProcessor.java:100] : processing queryspace <gen:0>
DEBUG 2022-09-08 19:54:41,995 [main][LoadPlanTreePrinter.java:55] : LoadPlan(entity=org.example.models.Photo)
    - Returns
       - EntityReturnImpl(entity=org.example.models.Photo, querySpaceUid=<gen:0>, path=org.example.models.Photo)
          - EntityAttributeFetchImpl(entity=org.example.models.Author, querySpaceUid=<gen:1>, path=org.example.models.Photo.author)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=org.example.models.Photo)
          - SQL table alias mapping - photo0_
          - alias suffix - 0_
          - suffixed key columns - {id1_4_0_}

DEBUG 2022-09-08 19:54:41,995 [main][EntityLoader.java:115] : Static select for entity org.example.models.Photo [PESSIMISTIC_READ]: select photo0_.id as id1_4_0_, photo0_.author_id as author_i3_4_0_, photo0_.file_name as file_nam2_4_0_ from Photo photo0_ where photo0_.id=? lock in share mode
DEBUG 2022-09-08 19:54:41,995 [main][QuerySpacesImpl.java:174] : Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@fd206b4b]
DEBUG 2022-09-08 19:54:41,996 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : author
DEBUG 2022-09-08 19:54:41,996 [main][QuerySpacesImpl.java:174] : Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5d12078c]
DEBUG 2022-09-08 19:54:41,996 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : fileName
DEBUG 2022-09-08 19:54:41,996 [main][FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150] : Building LoadPlan...
DEBUG 2022-09-08 19:54:41,997 [main][LoadQueryJoinAndFetchProcessor.java:100] : processing queryspace <gen:0>
DEBUG 2022-09-08 19:54:41,997 [main][LoadPlanTreePrinter.java:55] : LoadPlan(entity=org.example.models.Photo)
    - Returns
       - EntityReturnImpl(entity=org.example.models.Photo, querySpaceUid=<gen:0>, path=org.example.models.Photo)
          - EntityAttributeFetchImpl(entity=org.example.models.Author, querySpaceUid=<gen:1>, path=org.example.models.Photo.author)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=org.example.models.Photo)
          - SQL table alias mapping - photo0_
          - alias suffix - 0_
          - suffixed key columns - {id1_4_0_}

DEBUG 2022-09-08 19:54:41,997 [main][EntityLoader.java:115] : Static select for entity org.example.models.Photo [PESSIMISTIC_WRITE]: select photo0_.id as id1_4_0_, photo0_.author_id as author_i3_4_0_, photo0_.file_name as file_nam2_4_0_ from Photo photo0_ where photo0_.id=? for update
DEBUG 2022-09-08 19:54:41,997 [main][QuerySpacesImpl.java:174] : Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@bec3d2cb]
DEBUG 2022-09-08 19:54:41,998 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : author
DEBUG 2022-09-08 19:54:41,998 [main][QuerySpacesImpl.java:174] : Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@83fa7a7e]
DEBUG 2022-09-08 19:54:41,998 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : fileName
DEBUG 2022-09-08 19:54:41,998 [main][FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150] : Building LoadPlan...
DEBUG 2022-09-08 19:54:41,998 [main][LoadQueryJoinAndFetchProcessor.java:100] : processing queryspace <gen:0>
DEBUG 2022-09-08 19:54:41,998 [main][LoadPlanTreePrinter.java:55] : LoadPlan(entity=org.example.models.Photo)
    - Returns
       - EntityReturnImpl(entity=org.example.models.Photo, querySpaceUid=<gen:0>, path=org.example.models.Photo)
          - EntityAttributeFetchImpl(entity=org.example.models.Author, querySpaceUid=<gen:1>, path=org.example.models.Photo.author)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=org.example.models.Photo)
          - SQL table alias mapping - photo0_
          - alias suffix - 0_
          - suffixed key columns - {id1_4_0_}

DEBUG 2022-09-08 19:54:41,999 [main][EntityLoader.java:115] : Static select for entity org.example.models.Photo [PESSIMISTIC_FORCE_INCREMENT]: select photo0_.id as id1_4_0_, photo0_.author_id as author_i3_4_0_, photo0_.file_name as file_nam2_4_0_ from Photo photo0_ where photo0_.id=? for update
DEBUG 2022-09-08 19:54:41,999 [main][QuerySpacesImpl.java:174] : Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3c6e0ca9]
DEBUG 2022-09-08 19:54:41,999 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : author
DEBUG 2022-09-08 19:54:41,999 [main][QuerySpacesImpl.java:174] : Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2aa9f69a]
DEBUG 2022-09-08 19:54:41,999 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : fileName
DEBUG 2022-09-08 19:54:41,999 [main][FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150] : Building LoadPlan...
DEBUG 2022-09-08 19:54:42,000 [main][LoadQueryJoinAndFetchProcessor.java:100] : processing queryspace <gen:0>
DEBUG 2022-09-08 19:54:42,000 [main][LoadPlanTreePrinter.java:55] : LoadPlan(entity=org.example.models.Photo)
    - Returns
       - EntityReturnImpl(entity=org.example.models.Photo, querySpaceUid=<gen:0>, path=org.example.models.Photo)
          - EntityAttributeFetchImpl(entity=org.example.models.Author, querySpaceUid=<gen:1>, path=org.example.models.Photo.author)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=org.example.models.Photo)
          - SQL table alias mapping - photo0_
          - alias suffix - 0_
          - suffixed key columns - {id1_4_0_}

DEBUG 2022-09-08 19:54:42,000 [main][EntityLoader.java:115] : Static select for entity org.example.models.Photo [OPTIMISTIC]: select photo0_.id as id1_4_0_, photo0_.author_id as author_i3_4_0_, photo0_.file_name as file_nam2_4_0_ from Photo photo0_ where photo0_.id=?
DEBUG 2022-09-08 19:54:42,000 [main][QuerySpacesImpl.java:174] : Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@c2784687]
DEBUG 2022-09-08 19:54:42,000 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : author
DEBUG 2022-09-08 19:54:42,000 [main][QuerySpacesImpl.java:174] : Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@9bee2542]
DEBUG 2022-09-08 19:54:42,000 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : fileName
DEBUG 2022-09-08 19:54:42,001 [main][FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150] : Building LoadPlan...
DEBUG 2022-09-08 19:54:42,001 [main][LoadQueryJoinAndFetchProcessor.java:100] : processing queryspace <gen:0>
DEBUG 2022-09-08 19:54:42,001 [main][LoadPlanTreePrinter.java:55] : LoadPlan(entity=org.example.models.Photo)
    - Returns
       - EntityReturnImpl(entity=org.example.models.Photo, querySpaceUid=<gen:0>, path=org.example.models.Photo)
          - EntityAttributeFetchImpl(entity=org.example.models.Author, querySpaceUid=<gen:1>, path=org.example.models.Photo.author)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=org.example.models.Photo)
          - SQL table alias mapping - photo0_
          - alias suffix - 0_
          - suffixed key columns - {id1_4_0_}

DEBUG 2022-09-08 19:54:42,001 [main][EntityLoader.java:115] : Static select for entity org.example.models.Photo [OPTIMISTIC_FORCE_INCREMENT]: select photo0_.id as id1_4_0_, photo0_.author_id as author_i3_4_0_, photo0_.file_name as file_nam2_4_0_ from Photo photo0_ where photo0_.id=?
DEBUG 2022-09-08 19:54:42,008 [main][CascadeEntityLoader.java:38] : Static select for action ACTION_MERGE on entity org.example.models.Photo: select photo0_.id as id1_4_0_, photo0_.author_id as author_i3_4_0_, photo0_.file_name as file_nam2_4_0_ from Photo photo0_ where photo0_.id=?
DEBUG 2022-09-08 19:54:42,009 [main][CascadeEntityLoader.java:38] : Static select for action ACTION_REFRESH on entity org.example.models.Photo: select photo0_.id as id1_4_0_, photo0_.author_id as author_i3_4_0_, photo0_.file_name as file_nam2_4_0_ from Photo photo0_ where photo0_.id=?
DEBUG 2022-09-08 19:54:42,009 [main][AbstractEntityPersister.java:3529] : Static SQL for entity: org.example.models.Address
DEBUG 2022-09-08 19:54:42,009 [main][AbstractEntityPersister.java:3534] :  Version select: select author_id from Address where author_id =?
DEBUG 2022-09-08 19:54:42,009 [main][AbstractEntityPersister.java:3537] :  Snapshot select: select address_.author_id, address_.street as street2_0_ from Address address_ where address_.author_id=?
DEBUG 2022-09-08 19:54:42,009 [main][DelegatingBasicLogger.java:394] :  Insert 0: insert into Address (street, author_id) values (?, ?)
DEBUG 2022-09-08 19:54:42,009 [main][DelegatingBasicLogger.java:394] :  Update 0: update Address set street=? where author_id=?
DEBUG 2022-09-08 19:54:42,009 [main][DelegatingBasicLogger.java:394] :  Delete 0: delete from Address where author_id=?
DEBUG 2022-09-08 19:54:42,009 [main][QuerySpacesImpl.java:174] : Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@927af1e5]
DEBUG 2022-09-08 19:54:42,009 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : street
DEBUG 2022-09-08 19:54:42,010 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : author
DEBUG 2022-09-08 19:54:42,010 [main][MetamodelGraphWalker.java:145] : Property path deemed to be circular : author
DEBUG 2022-09-08 19:54:42,010 [main][FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150] : Building LoadPlan...
DEBUG 2022-09-08 19:54:42,010 [main][LoadQueryJoinAndFetchProcessor.java:100] : processing queryspace <gen:0>
DEBUG 2022-09-08 19:54:42,010 [main][LoadPlanTreePrinter.java:55] : LoadPlan(entity=org.example.models.Address)
    - Returns
       - EntityReturnImpl(entity=org.example.models.Address, querySpaceUid=<gen:0>, path=org.example.models.Address)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=org.example.models.Address)
          - SQL table alias mapping - address0_
          - alias suffix - 0_
          - suffixed key columns - {author_i1_0_0_}

DEBUG 2022-09-08 19:54:42,010 [main][EntityLoader.java:115] : Static select for entity org.example.models.Address [NONE]: select address0_.author_id as author_i1_0_0_, address0_.street as street2_0_0_ from Address address0_ where address0_.author_id=?
DEBUG 2022-09-08 19:54:42,010 [main][QuerySpacesImpl.java:174] : Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1ab01c33]
DEBUG 2022-09-08 19:54:42,011 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : street
DEBUG 2022-09-08 19:54:42,011 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : author
DEBUG 2022-09-08 19:54:42,011 [main][MetamodelGraphWalker.java:145] : Property path deemed to be circular : author
DEBUG 2022-09-08 19:54:42,011 [main][FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150] : Building LoadPlan...
DEBUG 2022-09-08 19:54:42,011 [main][LoadQueryJoinAndFetchProcessor.java:100] : processing queryspace <gen:0>
DEBUG 2022-09-08 19:54:42,011 [main][LoadPlanTreePrinter.java:55] : LoadPlan(entity=org.example.models.Address)
    - Returns
       - EntityReturnImpl(entity=org.example.models.Address, querySpaceUid=<gen:0>, path=org.example.models.Address)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=org.example.models.Address)
          - SQL table alias mapping - address0_
          - alias suffix - 0_
          - suffixed key columns - {author_i1_0_0_}

DEBUG 2022-09-08 19:54:42,011 [main][EntityLoader.java:115] : Static select for entity org.example.models.Address [READ]: select address0_.author_id as author_i1_0_0_, address0_.street as street2_0_0_ from Address address0_ where address0_.author_id=?
DEBUG 2022-09-08 19:54:42,011 [main][QuerySpacesImpl.java:174] : Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@a9d2c275]
DEBUG 2022-09-08 19:54:42,012 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : street
DEBUG 2022-09-08 19:54:42,012 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : author
DEBUG 2022-09-08 19:54:42,012 [main][MetamodelGraphWalker.java:145] : Property path deemed to be circular : author
DEBUG 2022-09-08 19:54:42,012 [main][FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150] : Building LoadPlan...
DEBUG 2022-09-08 19:54:42,012 [main][LoadQueryJoinAndFetchProcessor.java:100] : processing queryspace <gen:0>
DEBUG 2022-09-08 19:54:42,012 [main][LoadPlanTreePrinter.java:55] : LoadPlan(entity=org.example.models.Address)
    - Returns
       - EntityReturnImpl(entity=org.example.models.Address, querySpaceUid=<gen:0>, path=org.example.models.Address)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=org.example.models.Address)
          - SQL table alias mapping - address0_
          - alias suffix - 0_
          - suffixed key columns - {author_i1_0_0_}

DEBUG 2022-09-08 19:54:42,012 [main][EntityLoader.java:115] : Static select for entity org.example.models.Address [UPGRADE]: select address0_.author_id as author_i1_0_0_, address0_.street as street2_0_0_ from Address address0_ where address0_.author_id=? for update
DEBUG 2022-09-08 19:54:42,012 [main][QuerySpacesImpl.java:174] : Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@faa4ad75]
DEBUG 2022-09-08 19:54:42,013 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : street
DEBUG 2022-09-08 19:54:42,013 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : author
DEBUG 2022-09-08 19:54:42,013 [main][MetamodelGraphWalker.java:145] : Property path deemed to be circular : author
DEBUG 2022-09-08 19:54:42,013 [main][FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150] : Building LoadPlan...
DEBUG 2022-09-08 19:54:42,013 [main][LoadQueryJoinAndFetchProcessor.java:100] : processing queryspace <gen:0>
DEBUG 2022-09-08 19:54:42,013 [main][LoadPlanTreePrinter.java:55] : LoadPlan(entity=org.example.models.Address)
    - Returns
       - EntityReturnImpl(entity=org.example.models.Address, querySpaceUid=<gen:0>, path=org.example.models.Address)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=org.example.models.Address)
          - SQL table alias mapping - address0_
          - alias suffix - 0_
          - suffixed key columns - {author_i1_0_0_}

DEBUG 2022-09-08 19:54:42,014 [main][EntityLoader.java:115] : Static select for entity org.example.models.Address [UPGRADE_NOWAIT]: select address0_.author_id as author_i1_0_0_, address0_.street as street2_0_0_ from Address address0_ where address0_.author_id=? for update
DEBUG 2022-09-08 19:54:42,014 [main][QuerySpacesImpl.java:174] : Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3d0e061a]
DEBUG 2022-09-08 19:54:42,014 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : street
DEBUG 2022-09-08 19:54:42,014 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : author
DEBUG 2022-09-08 19:54:42,014 [main][MetamodelGraphWalker.java:145] : Property path deemed to be circular : author
DEBUG 2022-09-08 19:54:42,014 [main][FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150] : Building LoadPlan...
DEBUG 2022-09-08 19:54:42,014 [main][LoadQueryJoinAndFetchProcessor.java:100] : processing queryspace <gen:0>
DEBUG 2022-09-08 19:54:42,014 [main][LoadPlanTreePrinter.java:55] : LoadPlan(entity=org.example.models.Address)
    - Returns
       - EntityReturnImpl(entity=org.example.models.Address, querySpaceUid=<gen:0>, path=org.example.models.Address)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=org.example.models.Address)
          - SQL table alias mapping - address0_
          - alias suffix - 0_
          - suffixed key columns - {author_i1_0_0_}

DEBUG 2022-09-08 19:54:42,014 [main][EntityLoader.java:115] : Static select for entity org.example.models.Address [UPGRADE_SKIPLOCKED]: select address0_.author_id as author_i1_0_0_, address0_.street as street2_0_0_ from Address address0_ where address0_.author_id=? for update
DEBUG 2022-09-08 19:54:42,015 [main][QuerySpacesImpl.java:174] : Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@df4f2ecd]
DEBUG 2022-09-08 19:54:42,016 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : street
DEBUG 2022-09-08 19:54:42,016 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : author
DEBUG 2022-09-08 19:54:42,016 [main][MetamodelGraphWalker.java:145] : Property path deemed to be circular : author
DEBUG 2022-09-08 19:54:42,016 [main][FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150] : Building LoadPlan...
DEBUG 2022-09-08 19:54:42,016 [main][LoadQueryJoinAndFetchProcessor.java:100] : processing queryspace <gen:0>
DEBUG 2022-09-08 19:54:42,016 [main][LoadPlanTreePrinter.java:55] : LoadPlan(entity=org.example.models.Address)
    - Returns
       - EntityReturnImpl(entity=org.example.models.Address, querySpaceUid=<gen:0>, path=org.example.models.Address)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=org.example.models.Address)
          - SQL table alias mapping - address0_
          - alias suffix - 0_
          - suffixed key columns - {author_i1_0_0_}

DEBUG 2022-09-08 19:54:42,016 [main][EntityLoader.java:115] : Static select for entity org.example.models.Address [FORCE]: select address0_.author_id as author_i1_0_0_, address0_.street as street2_0_0_ from Address address0_ where address0_.author_id=? for update
DEBUG 2022-09-08 19:54:42,017 [main][QuerySpacesImpl.java:174] : Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@f0fdd318]
DEBUG 2022-09-08 19:54:42,017 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : street
DEBUG 2022-09-08 19:54:42,017 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : author
DEBUG 2022-09-08 19:54:42,017 [main][MetamodelGraphWalker.java:145] : Property path deemed to be circular : author
DEBUG 2022-09-08 19:54:42,017 [main][FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150] : Building LoadPlan...
DEBUG 2022-09-08 19:54:42,017 [main][LoadQueryJoinAndFetchProcessor.java:100] : processing queryspace <gen:0>
DEBUG 2022-09-08 19:54:42,017 [main][LoadPlanTreePrinter.java:55] : LoadPlan(entity=org.example.models.Address)
    - Returns
       - EntityReturnImpl(entity=org.example.models.Address, querySpaceUid=<gen:0>, path=org.example.models.Address)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=org.example.models.Address)
          - SQL table alias mapping - address0_
          - alias suffix - 0_
          - suffixed key columns - {author_i1_0_0_}

DEBUG 2022-09-08 19:54:42,017 [main][EntityLoader.java:115] : Static select for entity org.example.models.Address [PESSIMISTIC_READ]: select address0_.author_id as author_i1_0_0_, address0_.street as street2_0_0_ from Address address0_ where address0_.author_id=? lock in share mode
DEBUG 2022-09-08 19:54:42,018 [main][QuerySpacesImpl.java:174] : Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@677e06b2]
DEBUG 2022-09-08 19:54:42,018 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : street
DEBUG 2022-09-08 19:54:42,018 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : author
DEBUG 2022-09-08 19:54:42,018 [main][MetamodelGraphWalker.java:145] : Property path deemed to be circular : author
DEBUG 2022-09-08 19:54:42,018 [main][FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150] : Building LoadPlan...
DEBUG 2022-09-08 19:54:42,018 [main][LoadQueryJoinAndFetchProcessor.java:100] : processing queryspace <gen:0>
DEBUG 2022-09-08 19:54:42,018 [main][LoadPlanTreePrinter.java:55] : LoadPlan(entity=org.example.models.Address)
    - Returns
       - EntityReturnImpl(entity=org.example.models.Address, querySpaceUid=<gen:0>, path=org.example.models.Address)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=org.example.models.Address)
          - SQL table alias mapping - address0_
          - alias suffix - 0_
          - suffixed key columns - {author_i1_0_0_}

DEBUG 2022-09-08 19:54:42,018 [main][EntityLoader.java:115] : Static select for entity org.example.models.Address [PESSIMISTIC_WRITE]: select address0_.author_id as author_i1_0_0_, address0_.street as street2_0_0_ from Address address0_ where address0_.author_id=? for update
DEBUG 2022-09-08 19:54:42,018 [main][QuerySpacesImpl.java:174] : Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@60d79392]
DEBUG 2022-09-08 19:54:42,019 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : street
DEBUG 2022-09-08 19:54:42,019 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : author
DEBUG 2022-09-08 19:54:42,019 [main][MetamodelGraphWalker.java:145] : Property path deemed to be circular : author
DEBUG 2022-09-08 19:54:42,019 [main][FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150] : Building LoadPlan...
DEBUG 2022-09-08 19:54:42,019 [main][LoadQueryJoinAndFetchProcessor.java:100] : processing queryspace <gen:0>
DEBUG 2022-09-08 19:54:42,019 [main][LoadPlanTreePrinter.java:55] : LoadPlan(entity=org.example.models.Address)
    - Returns
       - EntityReturnImpl(entity=org.example.models.Address, querySpaceUid=<gen:0>, path=org.example.models.Address)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=org.example.models.Address)
          - SQL table alias mapping - address0_
          - alias suffix - 0_
          - suffixed key columns - {author_i1_0_0_}

DEBUG 2022-09-08 19:54:42,019 [main][EntityLoader.java:115] : Static select for entity org.example.models.Address [PESSIMISTIC_FORCE_INCREMENT]: select address0_.author_id as author_i1_0_0_, address0_.street as street2_0_0_ from Address address0_ where address0_.author_id=? for update
DEBUG 2022-09-08 19:54:42,020 [main][QuerySpacesImpl.java:174] : Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3dc32652]
DEBUG 2022-09-08 19:54:42,020 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : street
DEBUG 2022-09-08 19:54:42,020 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : author
DEBUG 2022-09-08 19:54:42,020 [main][MetamodelGraphWalker.java:145] : Property path deemed to be circular : author
DEBUG 2022-09-08 19:54:42,020 [main][FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150] : Building LoadPlan...
DEBUG 2022-09-08 19:54:42,020 [main][LoadQueryJoinAndFetchProcessor.java:100] : processing queryspace <gen:0>
DEBUG 2022-09-08 19:54:42,020 [main][LoadPlanTreePrinter.java:55] : LoadPlan(entity=org.example.models.Address)
    - Returns
       - EntityReturnImpl(entity=org.example.models.Address, querySpaceUid=<gen:0>, path=org.example.models.Address)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=org.example.models.Address)
          - SQL table alias mapping - address0_
          - alias suffix - 0_
          - suffixed key columns - {author_i1_0_0_}

DEBUG 2022-09-08 19:54:42,020 [main][EntityLoader.java:115] : Static select for entity org.example.models.Address [OPTIMISTIC]: select address0_.author_id as author_i1_0_0_, address0_.street as street2_0_0_ from Address address0_ where address0_.author_id=?
DEBUG 2022-09-08 19:54:42,021 [main][QuerySpacesImpl.java:174] : Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5bf24f11]
DEBUG 2022-09-08 19:54:42,021 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : street
DEBUG 2022-09-08 19:54:42,021 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : author
DEBUG 2022-09-08 19:54:42,021 [main][MetamodelGraphWalker.java:145] : Property path deemed to be circular : author
DEBUG 2022-09-08 19:54:42,021 [main][FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150] : Building LoadPlan...
DEBUG 2022-09-08 19:54:42,021 [main][LoadQueryJoinAndFetchProcessor.java:100] : processing queryspace <gen:0>
DEBUG 2022-09-08 19:54:42,022 [main][LoadPlanTreePrinter.java:55] : LoadPlan(entity=org.example.models.Address)
    - Returns
       - EntityReturnImpl(entity=org.example.models.Address, querySpaceUid=<gen:0>, path=org.example.models.Address)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=org.example.models.Address)
          - SQL table alias mapping - address0_
          - alias suffix - 0_
          - suffixed key columns - {author_i1_0_0_}

DEBUG 2022-09-08 19:54:42,022 [main][EntityLoader.java:115] : Static select for entity org.example.models.Address [OPTIMISTIC_FORCE_INCREMENT]: select address0_.author_id as author_i1_0_0_, address0_.street as street2_0_0_ from Address address0_ where address0_.author_id=?
DEBUG 2022-09-08 19:54:42,022 [main][CascadeEntityLoader.java:38] : Static select for action ACTION_MERGE on entity org.example.models.Address: select address0_.author_id as author_i1_0_0_, address0_.street as street2_0_0_ from Address address0_ where address0_.author_id=?
DEBUG 2022-09-08 19:54:42,022 [main][CascadeEntityLoader.java:38] : Static select for action ACTION_REFRESH on entity org.example.models.Address: select address0_.author_id as author_i1_0_0_, address0_.street as street2_0_0_ from Address address0_ where address0_.author_id=?
DEBUG 2022-09-08 19:54:42,023 [main][AbstractEntityPersister.java:3529] : Static SQL for entity: org.example.models.Book
DEBUG 2022-09-08 19:54:42,023 [main][AbstractEntityPersister.java:3534] :  Version select: select id from Book where id =?
DEBUG 2022-09-08 19:54:42,023 [main][AbstractEntityPersister.java:3537] :  Snapshot select: select book_.id, book_.name as name2_3_ from Book book_ where book_.id=?
DEBUG 2022-09-08 19:54:42,023 [main][DelegatingBasicLogger.java:394] :  Insert 0: insert into Book (name, id) values (?, ?)
DEBUG 2022-09-08 19:54:42,023 [main][DelegatingBasicLogger.java:394] :  Update 0: update Book set name=? where id=?
DEBUG 2022-09-08 19:54:42,023 [main][DelegatingBasicLogger.java:394] :  Delete 0: delete from Book where id=?
DEBUG 2022-09-08 19:54:42,023 [main][QuerySpacesImpl.java:174] : Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@325a2440]
DEBUG 2022-09-08 19:54:42,023 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : authors
DEBUG 2022-09-08 19:54:42,023 [main][QuerySpacesImpl.java:174] : Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@2598846a]
DEBUG 2022-09-08 19:54:42,024 [main][QuerySpacesImpl.java:174] : Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@57da254c]
DEBUG 2022-09-08 19:54:42,024 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : name
DEBUG 2022-09-08 19:54:42,024 [main][FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150] : Building LoadPlan...
DEBUG 2022-09-08 19:54:42,024 [main][LoadQueryJoinAndFetchProcessor.java:100] : processing queryspace <gen:0>
DEBUG 2022-09-08 19:54:42,024 [main][LoadPlanTreePrinter.java:55] : LoadPlan(entity=org.example.models.Book)
    - Returns
       - EntityReturnImpl(entity=org.example.models.Book, querySpaceUid=<gen:0>, path=org.example.models.Book)
          - CollectionAttributeFetchImpl(collection=org.example.models.Book.authors, querySpaceUid=<gen:1>, path=org.example.models.Book.authors)
             - (collection element) CollectionFetchableElementEntityGraph(entity=org.example.models.Author, querySpaceUid=<gen:2>, path=org.example.models.Book.authors.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=org.example.models.Book)
          - SQL table alias mapping - book0_
          - alias suffix - 0_
          - suffixed key columns - {id1_3_0_}

DEBUG 2022-09-08 19:54:42,024 [main][EntityLoader.java:115] : Static select for entity org.example.models.Book [NONE]: select book0_.id as id1_3_0_, book0_.name as name2_3_0_ from Book book0_ where book0_.id=?
DEBUG 2022-09-08 19:54:42,025 [main][QuerySpacesImpl.java:174] : Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@db50526a]
DEBUG 2022-09-08 19:54:42,025 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : authors
DEBUG 2022-09-08 19:54:42,025 [main][QuerySpacesImpl.java:174] : Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@2d04afa]
DEBUG 2022-09-08 19:54:42,025 [main][QuerySpacesImpl.java:174] : Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@67a465ac]
DEBUG 2022-09-08 19:54:42,025 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : name
DEBUG 2022-09-08 19:54:42,025 [main][FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150] : Building LoadPlan...
DEBUG 2022-09-08 19:54:42,025 [main][LoadQueryJoinAndFetchProcessor.java:100] : processing queryspace <gen:0>
DEBUG 2022-09-08 19:54:42,025 [main][LoadPlanTreePrinter.java:55] : LoadPlan(entity=org.example.models.Book)
    - Returns
       - EntityReturnImpl(entity=org.example.models.Book, querySpaceUid=<gen:0>, path=org.example.models.Book)
          - CollectionAttributeFetchImpl(collection=org.example.models.Book.authors, querySpaceUid=<gen:1>, path=org.example.models.Book.authors)
             - (collection element) CollectionFetchableElementEntityGraph(entity=org.example.models.Author, querySpaceUid=<gen:2>, path=org.example.models.Book.authors.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=org.example.models.Book)
          - SQL table alias mapping - book0_
          - alias suffix - 0_
          - suffixed key columns - {id1_3_0_}

DEBUG 2022-09-08 19:54:42,026 [main][EntityLoader.java:115] : Static select for entity org.example.models.Book [READ]: select book0_.id as id1_3_0_, book0_.name as name2_3_0_ from Book book0_ where book0_.id=?
DEBUG 2022-09-08 19:54:42,026 [main][QuerySpacesImpl.java:174] : Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@bd641267]
DEBUG 2022-09-08 19:54:42,026 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : authors
DEBUG 2022-09-08 19:54:42,026 [main][QuerySpacesImpl.java:174] : Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@97d9416]
DEBUG 2022-09-08 19:54:42,026 [main][QuerySpacesImpl.java:174] : Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7f4bcef9]
DEBUG 2022-09-08 19:54:42,026 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : name
DEBUG 2022-09-08 19:54:42,026 [main][FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150] : Building LoadPlan...
DEBUG 2022-09-08 19:54:42,026 [main][LoadQueryJoinAndFetchProcessor.java:100] : processing queryspace <gen:0>
DEBUG 2022-09-08 19:54:42,027 [main][LoadPlanTreePrinter.java:55] : LoadPlan(entity=org.example.models.Book)
    - Returns
       - EntityReturnImpl(entity=org.example.models.Book, querySpaceUid=<gen:0>, path=org.example.models.Book)
          - CollectionAttributeFetchImpl(collection=org.example.models.Book.authors, querySpaceUid=<gen:1>, path=org.example.models.Book.authors)
             - (collection element) CollectionFetchableElementEntityGraph(entity=org.example.models.Author, querySpaceUid=<gen:2>, path=org.example.models.Book.authors.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=org.example.models.Book)
          - SQL table alias mapping - book0_
          - alias suffix - 0_
          - suffixed key columns - {id1_3_0_}

DEBUG 2022-09-08 19:54:42,027 [main][EntityLoader.java:115] : Static select for entity org.example.models.Book [UPGRADE]: select book0_.id as id1_3_0_, book0_.name as name2_3_0_ from Book book0_ where book0_.id=? for update
DEBUG 2022-09-08 19:54:42,027 [main][QuerySpacesImpl.java:174] : Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@39c605c4]
DEBUG 2022-09-08 19:54:42,027 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : authors
DEBUG 2022-09-08 19:54:42,027 [main][QuerySpacesImpl.java:174] : Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@1d1de6cb]
DEBUG 2022-09-08 19:54:42,027 [main][QuerySpacesImpl.java:174] : Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@fbe32442]
DEBUG 2022-09-08 19:54:42,027 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : name
DEBUG 2022-09-08 19:54:42,027 [main][FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150] : Building LoadPlan...
DEBUG 2022-09-08 19:54:42,028 [main][LoadQueryJoinAndFetchProcessor.java:100] : processing queryspace <gen:0>
DEBUG 2022-09-08 19:54:42,028 [main][LoadPlanTreePrinter.java:55] : LoadPlan(entity=org.example.models.Book)
    - Returns
       - EntityReturnImpl(entity=org.example.models.Book, querySpaceUid=<gen:0>, path=org.example.models.Book)
          - CollectionAttributeFetchImpl(collection=org.example.models.Book.authors, querySpaceUid=<gen:1>, path=org.example.models.Book.authors)
             - (collection element) CollectionFetchableElementEntityGraph(entity=org.example.models.Author, querySpaceUid=<gen:2>, path=org.example.models.Book.authors.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=org.example.models.Book)
          - SQL table alias mapping - book0_
          - alias suffix - 0_
          - suffixed key columns - {id1_3_0_}

DEBUG 2022-09-08 19:54:42,028 [main][EntityLoader.java:115] : Static select for entity org.example.models.Book [UPGRADE_NOWAIT]: select book0_.id as id1_3_0_, book0_.name as name2_3_0_ from Book book0_ where book0_.id=? for update
DEBUG 2022-09-08 19:54:42,029 [main][QuerySpacesImpl.java:174] : Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@e44a0a2d]
DEBUG 2022-09-08 19:54:42,029 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : authors
DEBUG 2022-09-08 19:54:42,029 [main][QuerySpacesImpl.java:174] : Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@e6db293c]
DEBUG 2022-09-08 19:54:42,029 [main][QuerySpacesImpl.java:174] : Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5475a9a]
DEBUG 2022-09-08 19:54:42,029 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : name
DEBUG 2022-09-08 19:54:42,029 [main][FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150] : Building LoadPlan...
DEBUG 2022-09-08 19:54:42,029 [main][LoadQueryJoinAndFetchProcessor.java:100] : processing queryspace <gen:0>
DEBUG 2022-09-08 19:54:42,030 [main][LoadPlanTreePrinter.java:55] : LoadPlan(entity=org.example.models.Book)
    - Returns
       - EntityReturnImpl(entity=org.example.models.Book, querySpaceUid=<gen:0>, path=org.example.models.Book)
          - CollectionAttributeFetchImpl(collection=org.example.models.Book.authors, querySpaceUid=<gen:1>, path=org.example.models.Book.authors)
             - (collection element) CollectionFetchableElementEntityGraph(entity=org.example.models.Author, querySpaceUid=<gen:2>, path=org.example.models.Book.authors.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=org.example.models.Book)
          - SQL table alias mapping - book0_
          - alias suffix - 0_
          - suffixed key columns - {id1_3_0_}

DEBUG 2022-09-08 19:54:42,030 [main][EntityLoader.java:115] : Static select for entity org.example.models.Book [UPGRADE_SKIPLOCKED]: select book0_.id as id1_3_0_, book0_.name as name2_3_0_ from Book book0_ where book0_.id=? for update
DEBUG 2022-09-08 19:54:42,030 [main][QuerySpacesImpl.java:174] : Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@bd72b26f]
DEBUG 2022-09-08 19:54:42,030 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : authors
DEBUG 2022-09-08 19:54:42,030 [main][QuerySpacesImpl.java:174] : Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@aa52a73f]
DEBUG 2022-09-08 19:54:42,030 [main][QuerySpacesImpl.java:174] : Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@8d0ac836]
DEBUG 2022-09-08 19:54:42,030 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : name
DEBUG 2022-09-08 19:54:42,031 [main][FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150] : Building LoadPlan...
DEBUG 2022-09-08 19:54:42,031 [main][LoadQueryJoinAndFetchProcessor.java:100] : processing queryspace <gen:0>
DEBUG 2022-09-08 19:54:42,031 [main][LoadPlanTreePrinter.java:55] : LoadPlan(entity=org.example.models.Book)
    - Returns
       - EntityReturnImpl(entity=org.example.models.Book, querySpaceUid=<gen:0>, path=org.example.models.Book)
          - CollectionAttributeFetchImpl(collection=org.example.models.Book.authors, querySpaceUid=<gen:1>, path=org.example.models.Book.authors)
             - (collection element) CollectionFetchableElementEntityGraph(entity=org.example.models.Author, querySpaceUid=<gen:2>, path=org.example.models.Book.authors.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=org.example.models.Book)
          - SQL table alias mapping - book0_
          - alias suffix - 0_
          - suffixed key columns - {id1_3_0_}

DEBUG 2022-09-08 19:54:42,031 [main][EntityLoader.java:115] : Static select for entity org.example.models.Book [FORCE]: select book0_.id as id1_3_0_, book0_.name as name2_3_0_ from Book book0_ where book0_.id=? for update
DEBUG 2022-09-08 19:54:42,031 [main][QuerySpacesImpl.java:174] : Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2bc908fc]
DEBUG 2022-09-08 19:54:42,032 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : authors
DEBUG 2022-09-08 19:54:42,032 [main][QuerySpacesImpl.java:174] : Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@c44a68fe]
DEBUG 2022-09-08 19:54:42,032 [main][QuerySpacesImpl.java:174] : Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5d504f55]
DEBUG 2022-09-08 19:54:42,032 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : name
DEBUG 2022-09-08 19:54:42,032 [main][FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150] : Building LoadPlan...
DEBUG 2022-09-08 19:54:42,032 [main][LoadQueryJoinAndFetchProcessor.java:100] : processing queryspace <gen:0>
DEBUG 2022-09-08 19:54:42,033 [main][LoadPlanTreePrinter.java:55] : LoadPlan(entity=org.example.models.Book)
    - Returns
       - EntityReturnImpl(entity=org.example.models.Book, querySpaceUid=<gen:0>, path=org.example.models.Book)
          - CollectionAttributeFetchImpl(collection=org.example.models.Book.authors, querySpaceUid=<gen:1>, path=org.example.models.Book.authors)
             - (collection element) CollectionFetchableElementEntityGraph(entity=org.example.models.Author, querySpaceUid=<gen:2>, path=org.example.models.Book.authors.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=org.example.models.Book)
          - SQL table alias mapping - book0_
          - alias suffix - 0_
          - suffixed key columns - {id1_3_0_}

DEBUG 2022-09-08 19:54:42,033 [main][EntityLoader.java:115] : Static select for entity org.example.models.Book [PESSIMISTIC_READ]: select book0_.id as id1_3_0_, book0_.name as name2_3_0_ from Book book0_ where book0_.id=? lock in share mode
DEBUG 2022-09-08 19:54:42,033 [main][QuerySpacesImpl.java:174] : Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4253195e]
DEBUG 2022-09-08 19:54:42,033 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : authors
DEBUG 2022-09-08 19:54:42,033 [main][QuerySpacesImpl.java:174] : Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@1b0a0684]
DEBUG 2022-09-08 19:54:42,033 [main][QuerySpacesImpl.java:174] : Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@c776eda8]
DEBUG 2022-09-08 19:54:42,033 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : name
DEBUG 2022-09-08 19:54:42,033 [main][FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150] : Building LoadPlan...
DEBUG 2022-09-08 19:54:42,034 [main][LoadQueryJoinAndFetchProcessor.java:100] : processing queryspace <gen:0>
DEBUG 2022-09-08 19:54:42,034 [main][LoadPlanTreePrinter.java:55] : LoadPlan(entity=org.example.models.Book)
    - Returns
       - EntityReturnImpl(entity=org.example.models.Book, querySpaceUid=<gen:0>, path=org.example.models.Book)
          - CollectionAttributeFetchImpl(collection=org.example.models.Book.authors, querySpaceUid=<gen:1>, path=org.example.models.Book.authors)
             - (collection element) CollectionFetchableElementEntityGraph(entity=org.example.models.Author, querySpaceUid=<gen:2>, path=org.example.models.Book.authors.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=org.example.models.Book)
          - SQL table alias mapping - book0_
          - alias suffix - 0_
          - suffixed key columns - {id1_3_0_}

DEBUG 2022-09-08 19:54:42,034 [main][EntityLoader.java:115] : Static select for entity org.example.models.Book [PESSIMISTIC_WRITE]: select book0_.id as id1_3_0_, book0_.name as name2_3_0_ from Book book0_ where book0_.id=? for update
DEBUG 2022-09-08 19:54:42,034 [main][QuerySpacesImpl.java:174] : Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@c1e957a7]
DEBUG 2022-09-08 19:54:42,034 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : authors
DEBUG 2022-09-08 19:54:42,034 [main][QuerySpacesImpl.java:174] : Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@3ccb2a53]
DEBUG 2022-09-08 19:54:42,034 [main][QuerySpacesImpl.java:174] : Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@a649a1ad]
DEBUG 2022-09-08 19:54:42,035 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : name
DEBUG 2022-09-08 19:54:42,035 [main][FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150] : Building LoadPlan...
DEBUG 2022-09-08 19:54:42,035 [main][LoadQueryJoinAndFetchProcessor.java:100] : processing queryspace <gen:0>
DEBUG 2022-09-08 19:54:42,036 [main][LoadPlanTreePrinter.java:55] : LoadPlan(entity=org.example.models.Book)
    - Returns
       - EntityReturnImpl(entity=org.example.models.Book, querySpaceUid=<gen:0>, path=org.example.models.Book)
          - CollectionAttributeFetchImpl(collection=org.example.models.Book.authors, querySpaceUid=<gen:1>, path=org.example.models.Book.authors)
             - (collection element) CollectionFetchableElementEntityGraph(entity=org.example.models.Author, querySpaceUid=<gen:2>, path=org.example.models.Book.authors.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=org.example.models.Book)
          - SQL table alias mapping - book0_
          - alias suffix - 0_
          - suffixed key columns - {id1_3_0_}

DEBUG 2022-09-08 19:54:42,036 [main][EntityLoader.java:115] : Static select for entity org.example.models.Book [PESSIMISTIC_FORCE_INCREMENT]: select book0_.id as id1_3_0_, book0_.name as name2_3_0_ from Book book0_ where book0_.id=? for update
DEBUG 2022-09-08 19:54:42,036 [main][QuerySpacesImpl.java:174] : Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@69737b0]
DEBUG 2022-09-08 19:54:42,036 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : authors
DEBUG 2022-09-08 19:54:42,036 [main][QuerySpacesImpl.java:174] : Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@39363fe2]
DEBUG 2022-09-08 19:54:42,037 [main][QuerySpacesImpl.java:174] : Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@8fd25483]
DEBUG 2022-09-08 19:54:42,037 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : name
DEBUG 2022-09-08 19:54:42,037 [main][FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150] : Building LoadPlan...
DEBUG 2022-09-08 19:54:42,037 [main][LoadQueryJoinAndFetchProcessor.java:100] : processing queryspace <gen:0>
DEBUG 2022-09-08 19:54:42,037 [main][LoadPlanTreePrinter.java:55] : LoadPlan(entity=org.example.models.Book)
    - Returns
       - EntityReturnImpl(entity=org.example.models.Book, querySpaceUid=<gen:0>, path=org.example.models.Book)
          - CollectionAttributeFetchImpl(collection=org.example.models.Book.authors, querySpaceUid=<gen:1>, path=org.example.models.Book.authors)
             - (collection element) CollectionFetchableElementEntityGraph(entity=org.example.models.Author, querySpaceUid=<gen:2>, path=org.example.models.Book.authors.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=org.example.models.Book)
          - SQL table alias mapping - book0_
          - alias suffix - 0_
          - suffixed key columns - {id1_3_0_}

DEBUG 2022-09-08 19:54:42,037 [main][EntityLoader.java:115] : Static select for entity org.example.models.Book [OPTIMISTIC]: select book0_.id as id1_3_0_, book0_.name as name2_3_0_ from Book book0_ where book0_.id=?
DEBUG 2022-09-08 19:54:42,037 [main][QuerySpacesImpl.java:174] : Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@9a771ee2]
DEBUG 2022-09-08 19:54:42,038 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : authors
DEBUG 2022-09-08 19:54:42,038 [main][QuerySpacesImpl.java:174] : Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@13b27669]
DEBUG 2022-09-08 19:54:42,038 [main][QuerySpacesImpl.java:174] : Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@b5c1ded1]
DEBUG 2022-09-08 19:54:42,038 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : name
DEBUG 2022-09-08 19:54:42,038 [main][FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150] : Building LoadPlan...
DEBUG 2022-09-08 19:54:42,038 [main][LoadQueryJoinAndFetchProcessor.java:100] : processing queryspace <gen:0>
DEBUG 2022-09-08 19:54:42,039 [main][LoadPlanTreePrinter.java:55] : LoadPlan(entity=org.example.models.Book)
    - Returns
       - EntityReturnImpl(entity=org.example.models.Book, querySpaceUid=<gen:0>, path=org.example.models.Book)
          - CollectionAttributeFetchImpl(collection=org.example.models.Book.authors, querySpaceUid=<gen:1>, path=org.example.models.Book.authors)
             - (collection element) CollectionFetchableElementEntityGraph(entity=org.example.models.Author, querySpaceUid=<gen:2>, path=org.example.models.Book.authors.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=org.example.models.Book)
          - SQL table alias mapping - book0_
          - alias suffix - 0_
          - suffixed key columns - {id1_3_0_}

DEBUG 2022-09-08 19:54:42,039 [main][EntityLoader.java:115] : Static select for entity org.example.models.Book [OPTIMISTIC_FORCE_INCREMENT]: select book0_.id as id1_3_0_, book0_.name as name2_3_0_ from Book book0_ where book0_.id=?
DEBUG 2022-09-08 19:54:42,039 [main][CascadeEntityLoader.java:38] : Static select for action ACTION_MERGE on entity org.example.models.Book: select book0_.id as id1_3_0_, book0_.name as name2_3_0_ from Book book0_ where book0_.id=?
DEBUG 2022-09-08 19:54:42,039 [main][CascadeEntityLoader.java:38] : Static select for action ACTION_REFRESH on entity org.example.models.Book: select book0_.id as id1_3_0_, book0_.name as name2_3_0_ from Book book0_ where book0_.id=?
DEBUG 2022-09-08 19:54:42,039 [main][AbstractEntityPersister.java:3529] : Static SQL for entity: org.example.models.Author
DEBUG 2022-09-08 19:54:42,039 [main][AbstractEntityPersister.java:3534] :  Version select: select id from Author where id =?
DEBUG 2022-09-08 19:54:42,039 [main][AbstractEntityPersister.java:3537] :  Snapshot select: select author_.id, author_.name as name2_1_, author_.salary as salary3_1_ from Author author_ where author_.id=?
DEBUG 2022-09-08 19:54:42,039 [main][DelegatingBasicLogger.java:394] :  Insert 0: insert into Author (name, salary, id) values (?, ?, ?)
DEBUG 2022-09-08 19:54:42,040 [main][DelegatingBasicLogger.java:394] :  Update 0: update Author set name=?, salary=? where id=?
DEBUG 2022-09-08 19:54:42,040 [main][DelegatingBasicLogger.java:394] :  Delete 0: delete from Author where id=?
DEBUG 2022-09-08 19:54:42,040 [main][AbstractEntityPersister.java:3545] :  Identity insert: insert into Author (name, salary) values (?, ?)
DEBUG 2022-09-08 19:54:42,040 [main][QuerySpacesImpl.java:174] : Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@89d4765]
DEBUG 2022-09-08 19:54:42,040 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : books
DEBUG 2022-09-08 19:54:42,040 [main][QuerySpacesImpl.java:174] : Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@14bc7cbd]
DEBUG 2022-09-08 19:54:42,040 [main][QuerySpacesImpl.java:174] : Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@ec3f4c80]
DEBUG 2022-09-08 19:54:42,040 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : name
DEBUG 2022-09-08 19:54:42,040 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : photos
DEBUG 2022-09-08 19:54:42,040 [main][QuerySpacesImpl.java:174] : Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@db372862]
DEBUG 2022-09-08 19:54:42,041 [main][QuerySpacesImpl.java:174] : Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@34ac3fc6]
DEBUG 2022-09-08 19:54:42,041 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : salary
DEBUG 2022-09-08 19:54:42,041 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : address
DEBUG 2022-09-08 19:54:42,041 [main][QuerySpacesImpl.java:174] : Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@9454a6c8]
DEBUG 2022-09-08 19:54:42,041 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : address.street
DEBUG 2022-09-08 19:54:42,041 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : address.author
DEBUG 2022-09-08 19:54:42,041 [main][MetamodelGraphWalker.java:145] : Property path deemed to be circular : address.author
DEBUG 2022-09-08 19:54:42,041 [main][FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150] : Building LoadPlan...
DEBUG 2022-09-08 19:54:42,041 [main][LoadQueryJoinAndFetchProcessor.java:100] : processing queryspace <gen:0>
DEBUG 2022-09-08 19:54:42,042 [main][LoadPlanTreePrinter.java:55] : LoadPlan(entity=org.example.models.Author)
    - Returns
       - EntityReturnImpl(entity=org.example.models.Author, querySpaceUid=<gen:0>, path=org.example.models.Author)
          - CollectionAttributeFetchImpl(collection=org.example.models.Author.books, querySpaceUid=<gen:1>, path=org.example.models.Author.books)
             - (collection element) CollectionFetchableElementEntityGraph(entity=org.example.models.Book, querySpaceUid=<gen:2>, path=org.example.models.Author.books.<elements>)
          - CollectionAttributeFetchImpl(collection=org.example.models.Author.photos, querySpaceUid=<gen:3>, path=org.example.models.Author.photos)
             - (collection element) CollectionFetchableElementEntityGraph(entity=org.example.models.Photo, querySpaceUid=<gen:4>, path=org.example.models.Author.photos.<elements>)
          - EntityAttributeFetchImpl(entity=org.example.models.Address, querySpaceUid=<gen:5>, path=org.example.models.Author.address)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=org.example.models.Author)
          - SQL table alias mapping - author0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}
          - JOIN (JoinDefinedByMetadata(address)) : <gen:0> -> <gen:5>
             - EntityQuerySpaceImpl(uid=<gen:5>, entity=org.example.models.Address)
                - SQL table alias mapping - address1_
                - alias suffix - 1_
                - suffixed key columns - {author_i1_0_1_}

DEBUG 2022-09-08 19:54:42,042 [main][EntityLoader.java:115] : Static select for entity org.example.models.Author [NONE]: select author0_.id as id1_1_0_, author0_.name as name2_1_0_, author0_.salary as salary3_1_0_, address1_.author_id as author_i1_0_1_, address1_.street as street2_0_1_ from Author author0_ left outer join Address address1_ on author0_.id=address1_.author_id where author0_.id=?
DEBUG 2022-09-08 19:54:42,042 [main][QuerySpacesImpl.java:174] : Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7100fd61]
DEBUG 2022-09-08 19:54:42,043 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : books
DEBUG 2022-09-08 19:54:42,043 [main][QuerySpacesImpl.java:174] : Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@db651b6f]
DEBUG 2022-09-08 19:54:42,043 [main][QuerySpacesImpl.java:174] : Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@ef21eeb1]
DEBUG 2022-09-08 19:54:42,043 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : name
DEBUG 2022-09-08 19:54:42,043 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : photos
DEBUG 2022-09-08 19:54:42,044 [main][QuerySpacesImpl.java:174] : Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@7c93519d]
DEBUG 2022-09-08 19:54:42,044 [main][QuerySpacesImpl.java:174] : Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@de610ce1]
DEBUG 2022-09-08 19:54:42,044 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : salary
DEBUG 2022-09-08 19:54:42,044 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : address
DEBUG 2022-09-08 19:54:42,044 [main][QuerySpacesImpl.java:174] : Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@46ec909]
DEBUG 2022-09-08 19:54:42,044 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : address.street
DEBUG 2022-09-08 19:54:42,044 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : address.author
DEBUG 2022-09-08 19:54:42,044 [main][MetamodelGraphWalker.java:145] : Property path deemed to be circular : address.author
DEBUG 2022-09-08 19:54:42,044 [main][FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150] : Building LoadPlan...
DEBUG 2022-09-08 19:54:42,045 [main][LoadQueryJoinAndFetchProcessor.java:100] : processing queryspace <gen:0>
DEBUG 2022-09-08 19:54:42,045 [main][LoadPlanTreePrinter.java:55] : LoadPlan(entity=org.example.models.Author)
    - Returns
       - EntityReturnImpl(entity=org.example.models.Author, querySpaceUid=<gen:0>, path=org.example.models.Author)
          - CollectionAttributeFetchImpl(collection=org.example.models.Author.books, querySpaceUid=<gen:1>, path=org.example.models.Author.books)
             - (collection element) CollectionFetchableElementEntityGraph(entity=org.example.models.Book, querySpaceUid=<gen:2>, path=org.example.models.Author.books.<elements>)
          - CollectionAttributeFetchImpl(collection=org.example.models.Author.photos, querySpaceUid=<gen:3>, path=org.example.models.Author.photos)
             - (collection element) CollectionFetchableElementEntityGraph(entity=org.example.models.Photo, querySpaceUid=<gen:4>, path=org.example.models.Author.photos.<elements>)
          - EntityAttributeFetchImpl(entity=org.example.models.Address, querySpaceUid=<gen:5>, path=org.example.models.Author.address)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=org.example.models.Author)
          - SQL table alias mapping - author0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}
          - JOIN (JoinDefinedByMetadata(address)) : <gen:0> -> <gen:5>
             - EntityQuerySpaceImpl(uid=<gen:5>, entity=org.example.models.Address)
                - SQL table alias mapping - address1_
                - alias suffix - 1_
                - suffixed key columns - {author_i1_0_1_}

DEBUG 2022-09-08 19:54:42,045 [main][EntityLoader.java:115] : Static select for entity org.example.models.Author [READ]: select author0_.id as id1_1_0_, author0_.name as name2_1_0_, author0_.salary as salary3_1_0_, address1_.author_id as author_i1_0_1_, address1_.street as street2_0_1_ from Author author0_ left outer join Address address1_ on author0_.id=address1_.author_id where author0_.id=?
DEBUG 2022-09-08 19:54:42,045 [main][QuerySpacesImpl.java:174] : Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@cffd2b17]
DEBUG 2022-09-08 19:54:42,045 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : books
DEBUG 2022-09-08 19:54:42,045 [main][QuerySpacesImpl.java:174] : Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@3e70d2b0]
DEBUG 2022-09-08 19:54:42,046 [main][QuerySpacesImpl.java:174] : Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@8d51fd60]
DEBUG 2022-09-08 19:54:42,046 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : name
DEBUG 2022-09-08 19:54:42,046 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : photos
DEBUG 2022-09-08 19:54:42,046 [main][QuerySpacesImpl.java:174] : Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@20879515]
DEBUG 2022-09-08 19:54:42,046 [main][QuerySpacesImpl.java:174] : Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@19e825f0]
DEBUG 2022-09-08 19:54:42,046 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : salary
DEBUG 2022-09-08 19:54:42,046 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : address
DEBUG 2022-09-08 19:54:42,046 [main][QuerySpacesImpl.java:174] : Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7740c4b0]
DEBUG 2022-09-08 19:54:42,046 [main][FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150] : Building LoadPlan...
DEBUG 2022-09-08 19:54:42,046 [main][LoadQueryJoinAndFetchProcessor.java:100] : processing queryspace <gen:0>
DEBUG 2022-09-08 19:54:42,047 [main][LoadPlanTreePrinter.java:55] : LoadPlan(entity=org.example.models.Author)
    - Returns
       - EntityReturnImpl(entity=org.example.models.Author, querySpaceUid=<gen:0>, path=org.example.models.Author)
          - CollectionAttributeFetchImpl(collection=org.example.models.Author.books, querySpaceUid=<gen:1>, path=org.example.models.Author.books)
             - (collection element) CollectionFetchableElementEntityGraph(entity=org.example.models.Book, querySpaceUid=<gen:2>, path=org.example.models.Author.books.<elements>)
          - CollectionAttributeFetchImpl(collection=org.example.models.Author.photos, querySpaceUid=<gen:3>, path=org.example.models.Author.photos)
             - (collection element) CollectionFetchableElementEntityGraph(entity=org.example.models.Photo, querySpaceUid=<gen:4>, path=org.example.models.Author.photos.<elements>)
          - EntityAttributeFetchImpl(entity=org.example.models.Address, querySpaceUid=<gen:5>, path=org.example.models.Author.address)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=org.example.models.Author)
          - SQL table alias mapping - author0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

DEBUG 2022-09-08 19:54:42,047 [main][EntityLoader.java:115] : Static select for entity org.example.models.Author [UPGRADE]: select author0_.id as id1_1_0_, author0_.name as name2_1_0_, author0_.salary as salary3_1_0_ from Author author0_ where author0_.id=? for update
DEBUG 2022-09-08 19:54:42,047 [main][QuerySpacesImpl.java:174] : Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@478bb4cd]
DEBUG 2022-09-08 19:54:42,047 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : books
DEBUG 2022-09-08 19:54:42,047 [main][QuerySpacesImpl.java:174] : Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@5442b55a]
DEBUG 2022-09-08 19:54:42,047 [main][QuerySpacesImpl.java:174] : Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@c1ceecea]
DEBUG 2022-09-08 19:54:42,047 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : name
DEBUG 2022-09-08 19:54:42,048 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : photos
DEBUG 2022-09-08 19:54:42,048 [main][QuerySpacesImpl.java:174] : Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@9086dede]
DEBUG 2022-09-08 19:54:42,048 [main][QuerySpacesImpl.java:174] : Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@745d2af3]
DEBUG 2022-09-08 19:54:42,048 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : salary
DEBUG 2022-09-08 19:54:42,048 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : address
DEBUG 2022-09-08 19:54:42,048 [main][QuerySpacesImpl.java:174] : Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@cd3a5990]
DEBUG 2022-09-08 19:54:42,048 [main][FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150] : Building LoadPlan...
DEBUG 2022-09-08 19:54:42,049 [main][LoadQueryJoinAndFetchProcessor.java:100] : processing queryspace <gen:0>
DEBUG 2022-09-08 19:54:42,049 [main][LoadPlanTreePrinter.java:55] : LoadPlan(entity=org.example.models.Author)
    - Returns
       - EntityReturnImpl(entity=org.example.models.Author, querySpaceUid=<gen:0>, path=org.example.models.Author)
          - CollectionAttributeFetchImpl(collection=org.example.models.Author.books, querySpaceUid=<gen:1>, path=org.example.models.Author.books)
             - (collection element) CollectionFetchableElementEntityGraph(entity=org.example.models.Book, querySpaceUid=<gen:2>, path=org.example.models.Author.books.<elements>)
          - CollectionAttributeFetchImpl(collection=org.example.models.Author.photos, querySpaceUid=<gen:3>, path=org.example.models.Author.photos)
             - (collection element) CollectionFetchableElementEntityGraph(entity=org.example.models.Photo, querySpaceUid=<gen:4>, path=org.example.models.Author.photos.<elements>)
          - EntityAttributeFetchImpl(entity=org.example.models.Address, querySpaceUid=<gen:5>, path=org.example.models.Author.address)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=org.example.models.Author)
          - SQL table alias mapping - author0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

DEBUG 2022-09-08 19:54:42,050 [main][EntityLoader.java:115] : Static select for entity org.example.models.Author [UPGRADE_NOWAIT]: select author0_.id as id1_1_0_, author0_.name as name2_1_0_, author0_.salary as salary3_1_0_ from Author author0_ where author0_.id=? for update
DEBUG 2022-09-08 19:54:42,050 [main][QuerySpacesImpl.java:174] : Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@406066c1]
DEBUG 2022-09-08 19:54:42,050 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : books
DEBUG 2022-09-08 19:54:42,050 [main][QuerySpacesImpl.java:174] : Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@32196285]
DEBUG 2022-09-08 19:54:42,050 [main][QuerySpacesImpl.java:174] : Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4b0e9062]
DEBUG 2022-09-08 19:54:42,050 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : name
DEBUG 2022-09-08 19:54:42,050 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : photos
DEBUG 2022-09-08 19:54:42,050 [main][QuerySpacesImpl.java:174] : Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@b530aeb]
DEBUG 2022-09-08 19:54:42,051 [main][QuerySpacesImpl.java:174] : Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@c2b7dab2]
DEBUG 2022-09-08 19:54:42,051 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : salary
DEBUG 2022-09-08 19:54:42,051 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : address
DEBUG 2022-09-08 19:54:42,051 [main][QuerySpacesImpl.java:174] : Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@fbc8b6a]
DEBUG 2022-09-08 19:54:42,051 [main][FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150] : Building LoadPlan...
DEBUG 2022-09-08 19:54:42,051 [main][LoadQueryJoinAndFetchProcessor.java:100] : processing queryspace <gen:0>
DEBUG 2022-09-08 19:54:42,052 [main][LoadPlanTreePrinter.java:55] : LoadPlan(entity=org.example.models.Author)
    - Returns
       - EntityReturnImpl(entity=org.example.models.Author, querySpaceUid=<gen:0>, path=org.example.models.Author)
          - CollectionAttributeFetchImpl(collection=org.example.models.Author.books, querySpaceUid=<gen:1>, path=org.example.models.Author.books)
             - (collection element) CollectionFetchableElementEntityGraph(entity=org.example.models.Book, querySpaceUid=<gen:2>, path=org.example.models.Author.books.<elements>)
          - CollectionAttributeFetchImpl(collection=org.example.models.Author.photos, querySpaceUid=<gen:3>, path=org.example.models.Author.photos)
             - (collection element) CollectionFetchableElementEntityGraph(entity=org.example.models.Photo, querySpaceUid=<gen:4>, path=org.example.models.Author.photos.<elements>)
          - EntityAttributeFetchImpl(entity=org.example.models.Address, querySpaceUid=<gen:5>, path=org.example.models.Author.address)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=org.example.models.Author)
          - SQL table alias mapping - author0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

DEBUG 2022-09-08 19:54:42,052 [main][EntityLoader.java:115] : Static select for entity org.example.models.Author [UPGRADE_SKIPLOCKED]: select author0_.id as id1_1_0_, author0_.name as name2_1_0_, author0_.salary as salary3_1_0_ from Author author0_ where author0_.id=? for update
DEBUG 2022-09-08 19:54:42,052 [main][QuerySpacesImpl.java:174] : Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2613e709]
DEBUG 2022-09-08 19:54:42,052 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : books
DEBUG 2022-09-08 19:54:42,052 [main][QuerySpacesImpl.java:174] : Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@baaa6d26]
DEBUG 2022-09-08 19:54:42,052 [main][QuerySpacesImpl.java:174] : Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@d1c227d9]
DEBUG 2022-09-08 19:54:42,052 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : name
DEBUG 2022-09-08 19:54:42,052 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : photos
DEBUG 2022-09-08 19:54:42,052 [main][QuerySpacesImpl.java:174] : Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@ecae80a0]
DEBUG 2022-09-08 19:54:42,053 [main][QuerySpacesImpl.java:174] : Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@c0f8fe0]
DEBUG 2022-09-08 19:54:42,053 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : salary
DEBUG 2022-09-08 19:54:42,053 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : address
DEBUG 2022-09-08 19:54:42,053 [main][QuerySpacesImpl.java:174] : Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@df9f0ca8]
DEBUG 2022-09-08 19:54:42,053 [main][FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150] : Building LoadPlan...
DEBUG 2022-09-08 19:54:42,053 [main][LoadQueryJoinAndFetchProcessor.java:100] : processing queryspace <gen:0>
DEBUG 2022-09-08 19:54:42,053 [main][LoadPlanTreePrinter.java:55] : LoadPlan(entity=org.example.models.Author)
    - Returns
       - EntityReturnImpl(entity=org.example.models.Author, querySpaceUid=<gen:0>, path=org.example.models.Author)
          - CollectionAttributeFetchImpl(collection=org.example.models.Author.books, querySpaceUid=<gen:1>, path=org.example.models.Author.books)
             - (collection element) CollectionFetchableElementEntityGraph(entity=org.example.models.Book, querySpaceUid=<gen:2>, path=org.example.models.Author.books.<elements>)
          - CollectionAttributeFetchImpl(collection=org.example.models.Author.photos, querySpaceUid=<gen:3>, path=org.example.models.Author.photos)
             - (collection element) CollectionFetchableElementEntityGraph(entity=org.example.models.Photo, querySpaceUid=<gen:4>, path=org.example.models.Author.photos.<elements>)
          - EntityAttributeFetchImpl(entity=org.example.models.Address, querySpaceUid=<gen:5>, path=org.example.models.Author.address)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=org.example.models.Author)
          - SQL table alias mapping - author0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

DEBUG 2022-09-08 19:54:42,054 [main][EntityLoader.java:115] : Static select for entity org.example.models.Author [FORCE]: select author0_.id as id1_1_0_, author0_.name as name2_1_0_, author0_.salary as salary3_1_0_ from Author author0_ where author0_.id=? for update
DEBUG 2022-09-08 19:54:42,054 [main][QuerySpacesImpl.java:174] : Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7f10d00]
DEBUG 2022-09-08 19:54:42,054 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : books
DEBUG 2022-09-08 19:54:42,054 [main][QuerySpacesImpl.java:174] : Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@65f6175c]
DEBUG 2022-09-08 19:54:42,054 [main][QuerySpacesImpl.java:174] : Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@618d3205]
DEBUG 2022-09-08 19:54:42,054 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : name
DEBUG 2022-09-08 19:54:42,054 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : photos
DEBUG 2022-09-08 19:54:42,055 [main][QuerySpacesImpl.java:174] : Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@5ca3afc1]
DEBUG 2022-09-08 19:54:42,055 [main][QuerySpacesImpl.java:174] : Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@38cc6a6b]
DEBUG 2022-09-08 19:54:42,055 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : salary
DEBUG 2022-09-08 19:54:42,055 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : address
DEBUG 2022-09-08 19:54:42,055 [main][QuerySpacesImpl.java:174] : Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@9eb38cfc]
DEBUG 2022-09-08 19:54:42,055 [main][FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150] : Building LoadPlan...
DEBUG 2022-09-08 19:54:42,055 [main][LoadQueryJoinAndFetchProcessor.java:100] : processing queryspace <gen:0>
DEBUG 2022-09-08 19:54:42,056 [main][LoadPlanTreePrinter.java:55] : LoadPlan(entity=org.example.models.Author)
    - Returns
       - EntityReturnImpl(entity=org.example.models.Author, querySpaceUid=<gen:0>, path=org.example.models.Author)
          - CollectionAttributeFetchImpl(collection=org.example.models.Author.books, querySpaceUid=<gen:1>, path=org.example.models.Author.books)
             - (collection element) CollectionFetchableElementEntityGraph(entity=org.example.models.Book, querySpaceUid=<gen:2>, path=org.example.models.Author.books.<elements>)
          - CollectionAttributeFetchImpl(collection=org.example.models.Author.photos, querySpaceUid=<gen:3>, path=org.example.models.Author.photos)
             - (collection element) CollectionFetchableElementEntityGraph(entity=org.example.models.Photo, querySpaceUid=<gen:4>, path=org.example.models.Author.photos.<elements>)
          - EntityAttributeFetchImpl(entity=org.example.models.Address, querySpaceUid=<gen:5>, path=org.example.models.Author.address)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=org.example.models.Author)
          - SQL table alias mapping - author0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

DEBUG 2022-09-08 19:54:42,056 [main][EntityLoader.java:115] : Static select for entity org.example.models.Author [PESSIMISTIC_READ]: select author0_.id as id1_1_0_, author0_.name as name2_1_0_, author0_.salary as salary3_1_0_ from Author author0_ where author0_.id=? lock in share mode
DEBUG 2022-09-08 19:54:42,056 [main][QuerySpacesImpl.java:174] : Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@ce60177d]
DEBUG 2022-09-08 19:54:42,057 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : books
DEBUG 2022-09-08 19:54:42,057 [main][QuerySpacesImpl.java:174] : Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@10468af1]
DEBUG 2022-09-08 19:54:42,057 [main][QuerySpacesImpl.java:174] : Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2e948cfb]
DEBUG 2022-09-08 19:54:42,057 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : name
DEBUG 2022-09-08 19:54:42,057 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : photos
DEBUG 2022-09-08 19:54:42,057 [main][QuerySpacesImpl.java:174] : Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@6253c120]
DEBUG 2022-09-08 19:54:42,057 [main][QuerySpacesImpl.java:174] : Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@393e9c9f]
DEBUG 2022-09-08 19:54:42,057 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : salary
DEBUG 2022-09-08 19:54:42,058 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : address
DEBUG 2022-09-08 19:54:42,058 [main][QuerySpacesImpl.java:174] : Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@81049e23]
DEBUG 2022-09-08 19:54:42,058 [main][FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150] : Building LoadPlan...
DEBUG 2022-09-08 19:54:42,058 [main][LoadQueryJoinAndFetchProcessor.java:100] : processing queryspace <gen:0>
DEBUG 2022-09-08 19:54:42,058 [main][LoadPlanTreePrinter.java:55] : LoadPlan(entity=org.example.models.Author)
    - Returns
       - EntityReturnImpl(entity=org.example.models.Author, querySpaceUid=<gen:0>, path=org.example.models.Author)
          - CollectionAttributeFetchImpl(collection=org.example.models.Author.books, querySpaceUid=<gen:1>, path=org.example.models.Author.books)
             - (collection element) CollectionFetchableElementEntityGraph(entity=org.example.models.Book, querySpaceUid=<gen:2>, path=org.example.models.Author.books.<elements>)
          - CollectionAttributeFetchImpl(collection=org.example.models.Author.photos, querySpaceUid=<gen:3>, path=org.example.models.Author.photos)
             - (collection element) CollectionFetchableElementEntityGraph(entity=org.example.models.Photo, querySpaceUid=<gen:4>, path=org.example.models.Author.photos.<elements>)
          - EntityAttributeFetchImpl(entity=org.example.models.Address, querySpaceUid=<gen:5>, path=org.example.models.Author.address)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=org.example.models.Author)
          - SQL table alias mapping - author0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

DEBUG 2022-09-08 19:54:42,058 [main][EntityLoader.java:115] : Static select for entity org.example.models.Author [PESSIMISTIC_WRITE]: select author0_.id as id1_1_0_, author0_.name as name2_1_0_, author0_.salary as salary3_1_0_ from Author author0_ where author0_.id=? for update
DEBUG 2022-09-08 19:54:42,059 [main][QuerySpacesImpl.java:174] : Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@d85f386b]
DEBUG 2022-09-08 19:54:42,059 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : books
DEBUG 2022-09-08 19:54:42,059 [main][QuerySpacesImpl.java:174] : Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@cc64ceca]
DEBUG 2022-09-08 19:54:42,059 [main][QuerySpacesImpl.java:174] : Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@697d8f7d]
DEBUG 2022-09-08 19:54:42,059 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : name
DEBUG 2022-09-08 19:54:42,059 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : photos
DEBUG 2022-09-08 19:54:42,059 [main][QuerySpacesImpl.java:174] : Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@670542d]
DEBUG 2022-09-08 19:54:42,059 [main][QuerySpacesImpl.java:174] : Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@b91b0a81]
DEBUG 2022-09-08 19:54:42,059 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : salary
DEBUG 2022-09-08 19:54:42,059 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : address
DEBUG 2022-09-08 19:54:42,060 [main][QuerySpacesImpl.java:174] : Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@ad3ed799]
DEBUG 2022-09-08 19:54:42,060 [main][FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150] : Building LoadPlan...
DEBUG 2022-09-08 19:54:42,060 [main][LoadQueryJoinAndFetchProcessor.java:100] : processing queryspace <gen:0>
DEBUG 2022-09-08 19:54:42,060 [main][LoadPlanTreePrinter.java:55] : LoadPlan(entity=org.example.models.Author)
    - Returns
       - EntityReturnImpl(entity=org.example.models.Author, querySpaceUid=<gen:0>, path=org.example.models.Author)
          - CollectionAttributeFetchImpl(collection=org.example.models.Author.books, querySpaceUid=<gen:1>, path=org.example.models.Author.books)
             - (collection element) CollectionFetchableElementEntityGraph(entity=org.example.models.Book, querySpaceUid=<gen:2>, path=org.example.models.Author.books.<elements>)
          - CollectionAttributeFetchImpl(collection=org.example.models.Author.photos, querySpaceUid=<gen:3>, path=org.example.models.Author.photos)
             - (collection element) CollectionFetchableElementEntityGraph(entity=org.example.models.Photo, querySpaceUid=<gen:4>, path=org.example.models.Author.photos.<elements>)
          - EntityAttributeFetchImpl(entity=org.example.models.Address, querySpaceUid=<gen:5>, path=org.example.models.Author.address)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=org.example.models.Author)
          - SQL table alias mapping - author0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

DEBUG 2022-09-08 19:54:42,060 [main][EntityLoader.java:115] : Static select for entity org.example.models.Author [PESSIMISTIC_FORCE_INCREMENT]: select author0_.id as id1_1_0_, author0_.name as name2_1_0_, author0_.salary as salary3_1_0_ from Author author0_ where author0_.id=? for update
DEBUG 2022-09-08 19:54:42,060 [main][QuerySpacesImpl.java:174] : Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@e8fdd7b7]
DEBUG 2022-09-08 19:54:42,060 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : books
DEBUG 2022-09-08 19:54:42,061 [main][QuerySpacesImpl.java:174] : Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@a2a68621]
DEBUG 2022-09-08 19:54:42,061 [main][QuerySpacesImpl.java:174] : Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@fffa1a03]
DEBUG 2022-09-08 19:54:42,061 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : name
DEBUG 2022-09-08 19:54:42,061 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : photos
DEBUG 2022-09-08 19:54:42,061 [main][QuerySpacesImpl.java:174] : Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@ffe92da]
DEBUG 2022-09-08 19:54:42,061 [main][QuerySpacesImpl.java:174] : Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@ea1404cd]
DEBUG 2022-09-08 19:54:42,061 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : salary
DEBUG 2022-09-08 19:54:42,061 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : address
DEBUG 2022-09-08 19:54:42,061 [main][QuerySpacesImpl.java:174] : Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@80cc2411]
DEBUG 2022-09-08 19:54:42,061 [main][FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150] : Building LoadPlan...
DEBUG 2022-09-08 19:54:42,062 [main][LoadQueryJoinAndFetchProcessor.java:100] : processing queryspace <gen:0>
DEBUG 2022-09-08 19:54:42,062 [main][LoadPlanTreePrinter.java:55] : LoadPlan(entity=org.example.models.Author)
    - Returns
       - EntityReturnImpl(entity=org.example.models.Author, querySpaceUid=<gen:0>, path=org.example.models.Author)
          - CollectionAttributeFetchImpl(collection=org.example.models.Author.books, querySpaceUid=<gen:1>, path=org.example.models.Author.books)
             - (collection element) CollectionFetchableElementEntityGraph(entity=org.example.models.Book, querySpaceUid=<gen:2>, path=org.example.models.Author.books.<elements>)
          - CollectionAttributeFetchImpl(collection=org.example.models.Author.photos, querySpaceUid=<gen:3>, path=org.example.models.Author.photos)
             - (collection element) CollectionFetchableElementEntityGraph(entity=org.example.models.Photo, querySpaceUid=<gen:4>, path=org.example.models.Author.photos.<elements>)
          - EntityAttributeFetchImpl(entity=org.example.models.Address, querySpaceUid=<gen:5>, path=org.example.models.Author.address)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=org.example.models.Author)
          - SQL table alias mapping - author0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

DEBUG 2022-09-08 19:54:42,062 [main][EntityLoader.java:115] : Static select for entity org.example.models.Author [OPTIMISTIC]: select author0_.id as id1_1_0_, author0_.name as name2_1_0_, author0_.salary as salary3_1_0_ from Author author0_ where author0_.id=?
DEBUG 2022-09-08 19:54:42,063 [main][QuerySpacesImpl.java:174] : Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@767ee40d]
DEBUG 2022-09-08 19:54:42,063 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : books
DEBUG 2022-09-08 19:54:42,063 [main][QuerySpacesImpl.java:174] : Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@2c77c2e4]
DEBUG 2022-09-08 19:54:42,063 [main][QuerySpacesImpl.java:174] : Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@9017ccd3]
DEBUG 2022-09-08 19:54:42,063 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : name
DEBUG 2022-09-08 19:54:42,063 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : photos
DEBUG 2022-09-08 19:54:42,063 [main][QuerySpacesImpl.java:174] : Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@940dc90]
DEBUG 2022-09-08 19:54:42,064 [main][QuerySpacesImpl.java:174] : Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@683f932f]
DEBUG 2022-09-08 19:54:42,064 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : salary
DEBUG 2022-09-08 19:54:42,064 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : address
DEBUG 2022-09-08 19:54:42,064 [main][QuerySpacesImpl.java:174] : Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@adcd6441]
DEBUG 2022-09-08 19:54:42,064 [main][FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150] : Building LoadPlan...
DEBUG 2022-09-08 19:54:42,064 [main][LoadQueryJoinAndFetchProcessor.java:100] : processing queryspace <gen:0>
DEBUG 2022-09-08 19:54:42,064 [main][LoadPlanTreePrinter.java:55] : LoadPlan(entity=org.example.models.Author)
    - Returns
       - EntityReturnImpl(entity=org.example.models.Author, querySpaceUid=<gen:0>, path=org.example.models.Author)
          - CollectionAttributeFetchImpl(collection=org.example.models.Author.books, querySpaceUid=<gen:1>, path=org.example.models.Author.books)
             - (collection element) CollectionFetchableElementEntityGraph(entity=org.example.models.Book, querySpaceUid=<gen:2>, path=org.example.models.Author.books.<elements>)
          - CollectionAttributeFetchImpl(collection=org.example.models.Author.photos, querySpaceUid=<gen:3>, path=org.example.models.Author.photos)
             - (collection element) CollectionFetchableElementEntityGraph(entity=org.example.models.Photo, querySpaceUid=<gen:4>, path=org.example.models.Author.photos.<elements>)
          - EntityAttributeFetchImpl(entity=org.example.models.Address, querySpaceUid=<gen:5>, path=org.example.models.Author.address)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=org.example.models.Author)
          - SQL table alias mapping - author0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

DEBUG 2022-09-08 19:54:42,065 [main][EntityLoader.java:115] : Static select for entity org.example.models.Author [OPTIMISTIC_FORCE_INCREMENT]: select author0_.id as id1_1_0_, author0_.name as name2_1_0_, author0_.salary as salary3_1_0_ from Author author0_ where author0_.id=?
DEBUG 2022-09-08 19:54:42,065 [main][CascadeEntityLoader.java:38] : Static select for action ACTION_MERGE on entity org.example.models.Author: select author0_.id as id1_1_0_, author0_.name as name2_1_0_, author0_.salary as salary3_1_0_ from Author author0_ where author0_.id=?
DEBUG 2022-09-08 19:54:42,065 [main][CascadeEntityLoader.java:38] : Static select for action ACTION_REFRESH on entity org.example.models.Author: select author0_.id as id1_1_0_, author0_.name as name2_1_0_, author0_.salary as salary3_1_0_ from Author author0_ where author0_.id=?
DEBUG 2022-09-08 19:54:42,067 [main][QuerySpacesImpl.java:174] : Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@14825491]
DEBUG 2022-09-08 19:54:42,067 [main][QuerySpacesImpl.java:174] : Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@ffa5fbe1]
DEBUG 2022-09-08 19:54:42,067 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : books
DEBUG 2022-09-08 19:54:42,067 [main][MetamodelGraphWalker.java:145] : Property path deemed to be circular : books
DEBUG 2022-09-08 19:54:42,067 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : name
DEBUG 2022-09-08 19:54:42,067 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : photos
DEBUG 2022-09-08 19:54:42,068 [main][QuerySpacesImpl.java:174] : Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@5d6f9fe2]
DEBUG 2022-09-08 19:54:42,068 [main][QuerySpacesImpl.java:174] : Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@ab0e1900]
DEBUG 2022-09-08 19:54:42,068 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : salary
DEBUG 2022-09-08 19:54:42,068 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : address
DEBUG 2022-09-08 19:54:42,068 [main][QuerySpacesImpl.java:174] : Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5c04c592]
DEBUG 2022-09-08 19:54:42,068 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : address.street
DEBUG 2022-09-08 19:54:42,068 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : address.author
DEBUG 2022-09-08 19:54:42,068 [main][MetamodelGraphWalker.java:145] : Property path deemed to be circular : address.author
DEBUG 2022-09-08 19:54:42,068 [main][FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150] : Building LoadPlan...
DEBUG 2022-09-08 19:54:42,070 [main][LoadQueryJoinAndFetchProcessor.java:100] : processing queryspace <gen:0>
DEBUG 2022-09-08 19:54:42,070 [main][LoadPlanTreePrinter.java:55] : LoadPlan(collection=org.example.models.Book.authors)
    - Returns
       - CollectionReturnImpl(collection=org.example.models.Book.authors, querySpaceUid=<gen:0>, path=[org.example.models.Book.authors])
          - (collection element) CollectionFetchableElementEntityGraph(entity=org.example.models.Author, querySpaceUid=<gen:1>, path=[org.example.models.Book.authors].<elements>)
             - CollectionAttributeFetchImpl(collection=org.example.models.Author.photos, querySpaceUid=<gen:2>, path=[org.example.models.Book.authors].<elements>.photos)
                - (collection element) CollectionFetchableElementEntityGraph(entity=org.example.models.Photo, querySpaceUid=<gen:3>, path=[org.example.models.Book.authors].<elements>.photos.<elements>)
             - EntityAttributeFetchImpl(entity=org.example.models.Address, querySpaceUid=<gen:4>, path=[org.example.models.Book.authors].<elements>.address)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=org.example.models.Book.authors)
          - SQL table alias mapping - authors0_
          - alias suffix - 0_
          - suffixed key columns - {author_i2_2_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - id1_1_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=org.example.models.Author)
                - SQL table alias mapping - author1_
                - alias suffix - 1_
                - suffixed key columns - {id1_1_1_}
                - JOIN (JoinDefinedByMetadata(address)) : <gen:1> -> <gen:4>
                   - EntityQuerySpaceImpl(uid=<gen:4>, entity=org.example.models.Address)
                      - SQL table alias mapping - address2_
                      - alias suffix - 2_
                      - suffixed key columns - {author_i1_0_2_}

DEBUG 2022-09-08 19:54:42,070 [main][CollectionLoader.java:83] : Static select for collection org.example.models.Book.authors: select authors0_.author_id as author_i2_2_0_, authors0_.book_id as book_id1_2_0_, author1_.id as id1_1_1_, author1_.name as name2_1_1_, author1_.salary as salary3_1_1_, address2_.author_id as author_i1_0_2_, address2_.street as street2_0_2_ from Authors_Books authors0_ inner join Author author1_ on authors0_.book_id=author1_.id left outer join Address address2_ on author1_.id=address2_.author_id where authors0_.author_id=?
DEBUG 2022-09-08 19:54:42,070 [main][QuerySpacesImpl.java:174] : Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@9053c575]
DEBUG 2022-09-08 19:54:42,070 [main][QuerySpacesImpl.java:174] : Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4f97af25]
DEBUG 2022-09-08 19:54:42,071 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : author
DEBUG 2022-09-08 19:54:42,071 [main][MetamodelGraphWalker.java:145] : Property path deemed to be circular : author
DEBUG 2022-09-08 19:54:42,071 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : fileName
DEBUG 2022-09-08 19:54:42,071 [main][FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150] : Building LoadPlan...
DEBUG 2022-09-08 19:54:42,072 [main][LoadQueryJoinAndFetchProcessor.java:100] : processing queryspace <gen:0>
DEBUG 2022-09-08 19:54:42,073 [main][LoadPlanTreePrinter.java:55] : LoadPlan(collection=org.example.models.Author.photos)
    - Returns
       - CollectionReturnImpl(collection=org.example.models.Author.photos, querySpaceUid=<gen:0>, path=[org.example.models.Author.photos])
          - (collection element) CollectionFetchableElementEntityGraph(entity=org.example.models.Photo, querySpaceUid=<gen:1>, path=[org.example.models.Author.photos].<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=org.example.models.Author.photos)
          - SQL table alias mapping - photos0_
          - alias suffix - 0_
          - suffixed key columns - {author_i3_4_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - id1_4_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=org.example.models.Photo)
                - SQL table alias mapping - photos0_
                - alias suffix - 1_
                - suffixed key columns - {id1_4_1_}

DEBUG 2022-09-08 19:54:42,073 [main][CollectionLoader.java:83] : Static select for collection org.example.models.Author.photos: select photos0_.author_id as author_i3_4_0_, photos0_.id as id1_4_0_, photos0_.id as id1_4_1_, photos0_.author_id as author_i3_4_1_, photos0_.file_name as file_nam2_4_1_ from Photo photos0_ where photos0_.author_id=?
DEBUG 2022-09-08 19:54:42,073 [main][QuerySpacesImpl.java:174] : Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@2fd15c2e]
DEBUG 2022-09-08 19:54:42,073 [main][QuerySpacesImpl.java:174] : Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3acc1fe4]
DEBUG 2022-09-08 19:54:42,073 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : authors
DEBUG 2022-09-08 19:54:42,073 [main][MetamodelGraphWalker.java:145] : Property path deemed to be circular : authors
DEBUG 2022-09-08 19:54:42,073 [main][MetamodelGraphWalker.java:137] : Visiting attribute path : name
DEBUG 2022-09-08 19:54:42,073 [main][FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150] : Building LoadPlan...
DEBUG 2022-09-08 19:54:42,074 [main][LoadQueryJoinAndFetchProcessor.java:100] : processing queryspace <gen:0>
DEBUG 2022-09-08 19:54:42,074 [main][LoadPlanTreePrinter.java:55] : LoadPlan(collection=org.example.models.Author.books)
    - Returns
       - CollectionReturnImpl(collection=org.example.models.Author.books, querySpaceUid=<gen:0>, path=[org.example.models.Author.books])
          - (collection element) CollectionFetchableElementEntityGraph(entity=org.example.models.Book, querySpaceUid=<gen:1>, path=[org.example.models.Author.books].<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=org.example.models.Author.books)
          - SQL table alias mapping - books0_
          - alias suffix - 0_
          - suffixed key columns - {book_id1_2_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - id1_3_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=org.example.models.Book)
                - SQL table alias mapping - book1_
                - alias suffix - 1_
                - suffixed key columns - {id1_3_1_}

DEBUG 2022-09-08 19:54:42,074 [main][CollectionLoader.java:83] : Static select for collection org.example.models.Author.books: select books0_.book_id as book_id1_2_0_, books0_.author_id as author_i2_2_0_, book1_.id as id1_3_1_, book1_.name as name2_3_1_ from Authors_Books books0_ inner join Book book1_ on books0_.author_id=book1_.id where books0_.book_id=?
DEBUG 2022-09-08 19:54:42,087 [main][SqlStatementLogger.java:92] : alter table Address drop foreign key FK3yaqo8irsoqsutq5hg9fivhx6
INFO  2022-09-08 19:54:42,088 [main][DdlTransactionIsolatorNonJtaImpl.java:48] : HHH10001501: Connection obtained from JdbcConnectionAccess [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess@d7d0ab69] for (non-JTA) DDL execution was not in auto-commit mode; the Connection 'local transaction' will be committed and the Connection will be set into auto-commit mode.
DEBUG 2022-09-08 19:54:42,095 [main][SqlStatementLogger.java:92] : alter table Authors_Books drop foreign key FKs1vdbwf5okcxthhicku1hc93d
DEBUG 2022-09-08 19:54:42,099 [main][SqlStatementLogger.java:92] : alter table Authors_Books drop foreign key FK1h5wgpewyadjq3lpqpjo0ylx4
DEBUG 2022-09-08 19:54:42,103 [main][SqlStatementLogger.java:92] : alter table Photo drop foreign key FKgn24n3tehgrddleetayyosgwh
DEBUG 2022-09-08 19:54:42,112 [main][SqlStatementLogger.java:92] : drop table if exists Address
DEBUG 2022-09-08 19:54:42,116 [main][SqlStatementLogger.java:92] : drop table if exists Author
DEBUG 2022-09-08 19:54:42,118 [main][SqlStatementLogger.java:92] : drop table if exists Authors_Books
DEBUG 2022-09-08 19:54:42,121 [main][SqlStatementLogger.java:92] : drop table if exists Book
DEBUG 2022-09-08 19:54:42,122 [main][SqlStatementLogger.java:92] : drop table if exists hibernate_sequence
DEBUG 2022-09-08 19:54:42,124 [main][SqlStatementLogger.java:92] : drop table if exists Photo
DEBUG 2022-09-08 19:54:42,127 [main][SqlStatementLogger.java:92] : create table Address (author_id bigint not null, street varchar(255), primary key (author_id))
INFO  2022-09-08 19:54:42,128 [main][DdlTransactionIsolatorNonJtaImpl.java:48] : HHH10001501: Connection obtained from JdbcConnectionAccess [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess@30d481ca] for (non-JTA) DDL execution was not in auto-commit mode; the Connection 'local transaction' will be committed and the Connection will be set into auto-commit mode.
DEBUG 2022-09-08 19:54:42,132 [main][SqlStatementLogger.java:92] : create table Author (id bigint not null auto_increment, name varchar(255), salary integer, primary key (id))
DEBUG 2022-09-08 19:54:42,135 [main][SqlStatementLogger.java:92] : create table Authors_Books (book_id bigint not null, author_id bigint not null, primary key (book_id, author_id))
DEBUG 2022-09-08 19:54:42,137 [main][SqlStatementLogger.java:92] : create table Book (id bigint not null, name varchar(255), primary key (id))
DEBUG 2022-09-08 19:54:42,141 [main][SqlStatementLogger.java:92] : create table hibernate_sequence (next_val bigint)
DEBUG 2022-09-08 19:54:42,144 [main][SqlStatementLogger.java:92] : insert into hibernate_sequence values ( 1 )
DEBUG 2022-09-08 19:54:42,145 [main][SqlStatementLogger.java:92] : create table Photo (id bigint not null auto_increment, file_name varchar(255), author_id bigint not null, primary key (id))
DEBUG 2022-09-08 19:54:42,148 [main][SqlStatementLogger.java:92] : alter table Address add constraint FK3yaqo8irsoqsutq5hg9fivhx6 foreign key (author_id) references Author (id)
DEBUG 2022-09-08 19:54:42,155 [main][SqlStatementLogger.java:92] : alter table Authors_Books add constraint FKs1vdbwf5okcxthhicku1hc93d foreign key (author_id) references Book (id)
DEBUG 2022-09-08 19:54:42,162 [main][SqlStatementLogger.java:92] : alter table Authors_Books add constraint FK1h5wgpewyadjq3lpqpjo0ylx4 foreign key (book_id) references Author (id)
DEBUG 2022-09-08 19:54:42,171 [main][SqlStatementLogger.java:92] : alter table Photo add constraint FKgn24n3tehgrddleetayyosgwh foreign key (author_id) references Author (id)
INFO  2022-09-08 19:54:42,179 [main][SchemaCreatorImpl.java:485] : HHH000476: Executing import script 'org.hibernate.tool.schema.internal.exec.ScriptSourceInputNonExistentImpl@dddd1f18'
DEBUG 2022-09-08 19:54:42,180 [main][JtaPlatformInitiator.java:42] : No JtaPlatform was specified, checking resolver
DEBUG 2022-09-08 19:54:42,180 [main][JtaPlatformResolverInitiator.java:33] : No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
DEBUG 2022-09-08 19:54:42,181 [main][StandardJtaPlatformResolver.java:101] : Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
DEBUG 2022-09-08 19:54:42,182 [main][NamedQueryRepository.java:151] : Checking 0 named HQL queries
DEBUG 2022-09-08 19:54:42,182 [main][NamedQueryRepository.java:167] : Checking 0 named SQL queries
DEBUG 2022-09-08 19:54:42,183 [main][SessionFactoryRegistry.java:52] : Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@8219d365
DEBUG 2022-09-08 19:54:42,183 [main][SessionFactoryRegistry.java:74] : Registering SessionFactory: 76eacaae-a5fe-490d-8ea3-730b9fde37e8 (<unnamed>)
DEBUG 2022-09-08 19:54:42,183 [main][SessionFactoryRegistry.java:81] : Not binding SessionFactory to JNDI, no JNDI name configured
DEBUG 2022-09-08 19:54:42,210 [main][StatisticsInitiator.java:82] : Statistics initialized [enabled=false]
DEBUG 2022-09-08 19:54:42,213 [main][TransactionImpl.java:55] : begin
DEBUG 2022-09-08 19:54:42,219 [main][ActionQueue.java:272] : Executing identity-insert immediately
DEBUG 2022-09-08 19:54:42,220 [main][SqlStatementLogger.java:92] : insert into Author (name, salary) values (?, ?)
DEBUG 2022-09-08 19:54:42,225 [main][IdentifierGeneratorHelper.java:78] : Natively generated identity: 1
DEBUG 2022-09-08 19:54:42,225 [main][ResourceRegistryStandardImpl.java:104] : HHH000387: ResultSet's statement was not registered
DEBUG 2022-09-08 19:54:42,227 [main][TransactionImpl.java:66] : committing
DEBUG 2022-09-08 19:54:42,227 [main][AbstractFlushingEventListener.java:132] : Processing flush-time cascades
DEBUG 2022-09-08 19:54:42,228 [main][AbstractFlushingEventListener.java:174] : Dirty checking collections
DEBUG 2022-09-08 19:54:42,228 [main][AbstractFlushingEventListener.java:106] : Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
DEBUG 2022-09-08 19:54:42,229 [main][AbstractFlushingEventListener.java:113] : Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
DEBUG 2022-09-08 19:54:42,230 [main][EntityPrinter.java:102] : Listing entities:
DEBUG 2022-09-08 19:54:42,230 [main][EntityPrinter.java:109] : org.example.models.Author{books=null, address=null, name=David Baldacci, id=1, salary=1985, photos=null}
DEBUG 2022-09-08 19:54:42,231 [main][LogicalConnectionManagedImpl.java:154] : Initiating JDBC connection release from afterTransaction
DEBUG 2022-09-08 19:54:42,231 [main][LogicalConnectionManagedImpl.java:154] : Initiating JDBC connection release from afterTransaction
DEBUG 2022-09-08 19:54:42,246 [main][TransactionImpl.java:55] : begin
DEBUG 2022-09-08 19:54:42,247 [main][ActionQueue.java:272] : Executing identity-insert immediately
DEBUG 2022-09-08 19:54:42,247 [main][SqlStatementLogger.java:92] : insert into Author (name, salary) values (?, ?)
DEBUG 2022-09-08 19:54:42,248 [main][IdentifierGeneratorHelper.java:78] : Natively generated identity: 2
DEBUG 2022-09-08 19:54:42,248 [main][ResourceRegistryStandardImpl.java:104] : HHH000387: ResultSet's statement was not registered
DEBUG 2022-09-08 19:54:42,248 [main][TransactionImpl.java:66] : committing
DEBUG 2022-09-08 19:54:42,248 [main][AbstractFlushingEventListener.java:132] : Processing flush-time cascades
DEBUG 2022-09-08 19:54:42,248 [main][AbstractFlushingEventListener.java:174] : Dirty checking collections
DEBUG 2022-09-08 19:54:42,248 [main][AbstractFlushingEventListener.java:106] : Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
DEBUG 2022-09-08 19:54:42,248 [main][AbstractFlushingEventListener.java:113] : Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
DEBUG 2022-09-08 19:54:42,248 [main][EntityPrinter.java:102] : Listing entities:
DEBUG 2022-09-08 19:54:42,248 [main][EntityPrinter.java:109] : org.example.models.Author{books=null, address=null, name=Colleen Hoover, id=2, salary=661, photos=null}
DEBUG 2022-09-08 19:54:42,249 [main][LogicalConnectionManagedImpl.java:154] : Initiating JDBC connection release from afterTransaction
DEBUG 2022-09-08 19:54:42,249 [main][LogicalConnectionManagedImpl.java:154] : Initiating JDBC connection release from afterTransaction
DEBUG 2022-09-08 19:54:42,250 [main][TransactionImpl.java:55] : begin
DEBUG 2022-09-08 19:54:42,250 [main][ActionQueue.java:272] : Executing identity-insert immediately
DEBUG 2022-09-08 19:54:42,250 [main][SqlStatementLogger.java:92] : insert into Author (name, salary) values (?, ?)
DEBUG 2022-09-08 19:54:42,251 [main][IdentifierGeneratorHelper.java:78] : Natively generated identity: 3
DEBUG 2022-09-08 19:54:42,251 [main][ResourceRegistryStandardImpl.java:104] : HHH000387: ResultSet's statement was not registered
DEBUG 2022-09-08 19:54:42,251 [main][TransactionImpl.java:66] : committing
DEBUG 2022-09-08 19:54:42,251 [main][AbstractFlushingEventListener.java:132] : Processing flush-time cascades
DEBUG 2022-09-08 19:54:42,251 [main][AbstractFlushingEventListener.java:174] : Dirty checking collections
DEBUG 2022-09-08 19:54:42,251 [main][AbstractFlushingEventListener.java:106] : Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
DEBUG 2022-09-08 19:54:42,251 [main][AbstractFlushingEventListener.java:113] : Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
DEBUG 2022-09-08 19:54:42,251 [main][EntityPrinter.java:102] : Listing entities:
DEBUG 2022-09-08 19:54:42,251 [main][EntityPrinter.java:109] : org.example.models.Author{books=null, address=null, name=Stuart Woods, id=3, salary=1151, photos=null}
DEBUG 2022-09-08 19:54:42,252 [main][LogicalConnectionManagedImpl.java:154] : Initiating JDBC connection release from afterTransaction
DEBUG 2022-09-08 19:54:42,252 [main][LogicalConnectionManagedImpl.java:154] : Initiating JDBC connection release from afterTransaction
DEBUG 2022-09-08 19:54:42,252 [main][TransactionImpl.java:55] : begin
DEBUG 2022-09-08 19:54:42,253 [main][ActionQueue.java:272] : Executing identity-insert immediately
DEBUG 2022-09-08 19:54:42,253 [main][SqlStatementLogger.java:92] : insert into Author (name, salary) values (?, ?)
DEBUG 2022-09-08 19:54:42,254 [main][IdentifierGeneratorHelper.java:78] : Natively generated identity: 4
DEBUG 2022-09-08 19:54:42,255 [main][ResourceRegistryStandardImpl.java:104] : HHH000387: ResultSet's statement was not registered
DEBUG 2022-09-08 19:54:42,255 [main][TransactionImpl.java:66] : committing
DEBUG 2022-09-08 19:54:42,255 [main][AbstractFlushingEventListener.java:132] : Processing flush-time cascades
DEBUG 2022-09-08 19:54:42,255 [main][AbstractFlushingEventListener.java:174] : Dirty checking collections
DEBUG 2022-09-08 19:54:42,255 [main][AbstractFlushingEventListener.java:106] : Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
DEBUG 2022-09-08 19:54:42,255 [main][AbstractFlushingEventListener.java:113] : Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
DEBUG 2022-09-08 19:54:42,255 [main][EntityPrinter.java:102] : Listing entities:
DEBUG 2022-09-08 19:54:42,255 [main][EntityPrinter.java:109] : org.example.models.Author{books=null, address=null, name=Nora Roberts, id=4, salary=4638, photos=null}
DEBUG 2022-09-08 19:54:42,256 [main][LogicalConnectionManagedImpl.java:154] : Initiating JDBC connection release from afterTransaction
DEBUG 2022-09-08 19:54:42,256 [main][LogicalConnectionManagedImpl.java:154] : Initiating JDBC connection release from afterTransaction
DEBUG 2022-09-08 19:54:42,256 [main][TransactionImpl.java:55] : begin
DEBUG 2022-09-08 19:54:42,257 [main][ActionQueue.java:272] : Executing identity-insert immediately
DEBUG 2022-09-08 19:54:42,257 [main][SqlStatementLogger.java:92] : insert into Author (name, salary) values (?, ?)
DEBUG 2022-09-08 19:54:42,257 [main][IdentifierGeneratorHelper.java:78] : Natively generated identity: 5
DEBUG 2022-09-08 19:54:42,258 [main][ResourceRegistryStandardImpl.java:104] : HHH000387: ResultSet's statement was not registered
DEBUG 2022-09-08 19:54:42,258 [main][TransactionImpl.java:66] : committing
DEBUG 2022-09-08 19:54:42,258 [main][AbstractFlushingEventListener.java:132] : Processing flush-time cascades
DEBUG 2022-09-08 19:54:42,258 [main][AbstractFlushingEventListener.java:174] : Dirty checking collections
DEBUG 2022-09-08 19:54:42,258 [main][AbstractFlushingEventListener.java:106] : Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
DEBUG 2022-09-08 19:54:42,258 [main][AbstractFlushingEventListener.java:113] : Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
DEBUG 2022-09-08 19:54:42,258 [main][EntityPrinter.java:102] : Listing entities:
DEBUG 2022-09-08 19:54:42,258 [main][EntityPrinter.java:109] : org.example.models.Author{books=null, address=null, name=Michael Connelly, id=5, salary=4763, photos=null}
DEBUG 2022-09-08 19:54:42,259 [main][LogicalConnectionManagedImpl.java:154] : Initiating JDBC connection release from afterTransaction
DEBUG 2022-09-08 19:54:42,259 [main][LogicalConnectionManagedImpl.java:154] : Initiating JDBC connection release from afterTransaction
DEBUG 2022-09-08 19:54:42,264 [main][CriteriaQueryImpl.java:307] : Rendered criteria query -> select generatedAlias0 from Author as generatedAlias0
DEBUG 2022-09-08 19:54:42,270 [main][QueryTranslatorFactoryInitiator.java:45] : QueryTranslatorFactory : org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory@4c6521b
INFO  2022-09-08 19:54:42,270 [main][QueryTranslatorFactoryInitiator.java:47] : HHH000397: Using ASTQueryTranslatorFactory
DEBUG 2022-09-08 19:54:42,282 [main][QueryTranslatorImpl.java:278] : parse() - HQL: select generatedAlias0 from org.example.models.Author as generatedAlias0
DEBUG 2022-09-08 19:54:42,285 [main][QueryTranslatorImpl.java:296] : --- HQL AST ---
 \-[QUERY] Node: 'query'
    \-[SELECT_FROM] Node: 'SELECT_FROM'
       +-[FROM] Node: 'from'
       |  \-[RANGE] Node: 'RANGE'
       |     +-[DOT] Node: '.'
       |     |  +-[DOT] Node: '.'
       |     |  |  +-[DOT] Node: '.'
       |     |  |  |  +-[IDENT] Node: 'org'
       |     |  |  |  \-[IDENT] Node: 'example'
       |     |  |  \-[IDENT] Node: 'models'
       |     |  \-[IDENT] Node: 'Author'
       |     \-[ALIAS] Node: 'generatedAlias0'
       \-[SELECT] Node: 'select'
          \-[IDENT] Node: 'generatedAlias0'

DEBUG 2022-09-08 19:54:42,285 [main][ErrorCounter.java:95] : throwQueryException() : no errors
DEBUG 2022-09-08 19:54:42,292 [main][HqlSqlBaseWalker.java:124] : select << begin [level=1, statement=select]
DEBUG 2022-09-08 19:54:42,296 [main][FromElement.java:148] : FromClause{level=1} : org.example.models.Author (generatedAlias0) -> author0_
DEBUG 2022-09-08 19:54:42,296 [main][FromReferenceNode.java:60] : Resolved : generatedAlias0 -> author0_.id
DEBUG 2022-09-08 19:54:42,297 [main][HqlSqlBaseWalker.java:128] : select : finishing up [level=1, statement=select]
DEBUG 2022-09-08 19:54:42,297 [main][HqlSqlWalker.java:725] : processQuery() :  ( SELECT ( {select clause} author0_.id ) ( FromClause{level=1} Author author0_ ) )
DEBUG 2022-09-08 19:54:42,299 [main][JoinProcessor.java:169] : Using FROM fragment [Author author0_]
DEBUG 2022-09-08 19:54:42,300 [main][HqlSqlBaseWalker.java:132] : select >> end [level=1, statement=select]
DEBUG 2022-09-08 19:54:42,300 [main][QueryTranslatorImpl.java:265] : --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (Author)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'author0_.id as id1_1_' {alias=generatedAlias0, className=org.example.models.Author, tableAlias=author0_}
    |  \-[SQL_TOKEN] SqlFragment: 'author0_.name as name2_1_, author0_.salary as salary3_1_'
    \-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[author0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'Author author0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=Author,tableAlias=author0_,origin=null,columns={,className=org.example.models.Author}}

DEBUG 2022-09-08 19:54:42,300 [main][ErrorCounter.java:95] : throwQueryException() : no errors
DEBUG 2022-09-08 19:54:42,302 [main][QueryTranslatorImpl.java:247] : HQL: select generatedAlias0 from org.example.models.Author as generatedAlias0
DEBUG 2022-09-08 19:54:42,303 [main][QueryTranslatorImpl.java:248] : SQL: select author0_.id as id1_1_, author0_.name as name2_1_, author0_.salary as salary3_1_ from Author author0_
DEBUG 2022-09-08 19:54:42,304 [main][ErrorCounter.java:95] : throwQueryException() : no errors
DEBUG 2022-09-08 19:54:42,308 [main][SqlStatementLogger.java:92] : select author0_.id as id1_1_, author0_.name as name2_1_, author0_.salary as salary3_1_ from Author author0_
DEBUG 2022-09-08 19:54:42,310 [main][DelegatingBasicLogger.java:384] : Result set row: 0
DEBUG 2022-09-08 19:54:42,311 [main][Loader.java:1527] : Result row: EntityKey[org.example.models.Author#1]
DEBUG 2022-09-08 19:54:42,313 [main][DelegatingBasicLogger.java:384] : Result set row: 1
DEBUG 2022-09-08 19:54:42,313 [main][Loader.java:1527] : Result row: EntityKey[org.example.models.Author#2]
DEBUG 2022-09-08 19:54:42,313 [main][DelegatingBasicLogger.java:384] : Result set row: 2
DEBUG 2022-09-08 19:54:42,313 [main][Loader.java:1527] : Result row: EntityKey[org.example.models.Author#3]
DEBUG 2022-09-08 19:54:42,313 [main][DelegatingBasicLogger.java:384] : Result set row: 3
DEBUG 2022-09-08 19:54:42,313 [main][Loader.java:1527] : Result row: EntityKey[org.example.models.Author#4]
DEBUG 2022-09-08 19:54:42,313 [main][DelegatingBasicLogger.java:384] : Result set row: 4
DEBUG 2022-09-08 19:54:42,313 [main][Loader.java:1527] : Result row: EntityKey[org.example.models.Author#5]
DEBUG 2022-09-08 19:54:42,314 [main][TwoPhaseLoad.java:141] : Resolving associations for [org.example.models.Author#1]
DEBUG 2022-09-08 19:54:42,317 [main][SqlStatementLogger.java:92] : select address0_.author_id as author_i1_0_0_, address0_.street as street2_0_0_ from Address address0_ where address0_.author_id=?
DEBUG 2022-09-08 19:54:42,320 [main][ResourceRegistryStandardImpl.java:73] : HHH000387: ResultSet's statement was not registered
DEBUG 2022-09-08 19:54:42,320 [main][AbstractLoadPlanBasedEntityLoader.java:189] : Done entity load : org.example.models.Address#1
DEBUG 2022-09-08 19:54:42,320 [main][TwoPhaseLoad.java:267] : Done materializing entity [org.example.models.Author#1]
DEBUG 2022-09-08 19:54:42,320 [main][TwoPhaseLoad.java:141] : Resolving associations for [org.example.models.Author#2]
DEBUG 2022-09-08 19:54:42,321 [main][SqlStatementLogger.java:92] : select address0_.author_id as author_i1_0_0_, address0_.street as street2_0_0_ from Address address0_ where address0_.author_id=?
DEBUG 2022-09-08 19:54:42,322 [main][ResourceRegistryStandardImpl.java:73] : HHH000387: ResultSet's statement was not registered
DEBUG 2022-09-08 19:54:42,322 [main][AbstractLoadPlanBasedEntityLoader.java:189] : Done entity load : org.example.models.Address#2
DEBUG 2022-09-08 19:54:42,322 [main][TwoPhaseLoad.java:267] : Done materializing entity [org.example.models.Author#2]
DEBUG 2022-09-08 19:54:42,322 [main][TwoPhaseLoad.java:141] : Resolving associations for [org.example.models.Author#3]
DEBUG 2022-09-08 19:54:42,322 [main][SqlStatementLogger.java:92] : select address0_.author_id as author_i1_0_0_, address0_.street as street2_0_0_ from Address address0_ where address0_.author_id=?
DEBUG 2022-09-08 19:54:42,323 [main][ResourceRegistryStandardImpl.java:73] : HHH000387: ResultSet's statement was not registered
DEBUG 2022-09-08 19:54:42,324 [main][AbstractLoadPlanBasedEntityLoader.java:189] : Done entity load : org.example.models.Address#3
DEBUG 2022-09-08 19:54:42,324 [main][TwoPhaseLoad.java:267] : Done materializing entity [org.example.models.Author#3]
DEBUG 2022-09-08 19:54:42,324 [main][TwoPhaseLoad.java:141] : Resolving associations for [org.example.models.Author#4]
DEBUG 2022-09-08 19:54:42,324 [main][SqlStatementLogger.java:92] : select address0_.author_id as author_i1_0_0_, address0_.street as street2_0_0_ from Address address0_ where address0_.author_id=?
DEBUG 2022-09-08 19:54:42,325 [main][ResourceRegistryStandardImpl.java:73] : HHH000387: ResultSet's statement was not registered
DEBUG 2022-09-08 19:54:42,325 [main][AbstractLoadPlanBasedEntityLoader.java:189] : Done entity load : org.example.models.Address#4
DEBUG 2022-09-08 19:54:42,325 [main][TwoPhaseLoad.java:267] : Done materializing entity [org.example.models.Author#4]
DEBUG 2022-09-08 19:54:42,325 [main][TwoPhaseLoad.java:141] : Resolving associations for [org.example.models.Author#5]
DEBUG 2022-09-08 19:54:42,326 [main][SqlStatementLogger.java:92] : select address0_.author_id as author_i1_0_0_, address0_.street as street2_0_0_ from Address address0_ where address0_.author_id=?
DEBUG 2022-09-08 19:54:42,327 [main][ResourceRegistryStandardImpl.java:73] : HHH000387: ResultSet's statement was not registered
DEBUG 2022-09-08 19:54:42,327 [main][AbstractLoadPlanBasedEntityLoader.java:189] : Done entity load : org.example.models.Address#5
DEBUG 2022-09-08 19:54:42,327 [main][TwoPhaseLoad.java:267] : Done materializing entity [org.example.models.Author#5]
DEBUG 2022-09-08 19:54:42,328 [main][LogicalConnectionManagedImpl.java:154] : Initiating JDBC connection release from afterTransaction
DEBUG 2022-09-08 19:54:42,335 [main][SqlStatementLogger.java:92] : SELECT * FROM Author
DEBUG 2022-09-08 19:54:42,336 [main][DelegatingBasicLogger.java:384] : Result set row: 0
DEBUG 2022-09-08 19:54:42,337 [main][Loader.java:1527] : Result row: EntityKey[org.example.models.Author#1]
DEBUG 2022-09-08 19:54:42,337 [main][DelegatingBasicLogger.java:384] : Result set row: 1
DEBUG 2022-09-08 19:54:42,337 [main][Loader.java:1527] : Result row: EntityKey[org.example.models.Author#2]
DEBUG 2022-09-08 19:54:42,337 [main][DelegatingBasicLogger.java:384] : Result set row: 2
DEBUG 2022-09-08 19:54:42,338 [main][Loader.java:1527] : Result row: EntityKey[org.example.models.Author#3]
DEBUG 2022-09-08 19:54:42,338 [main][DelegatingBasicLogger.java:384] : Result set row: 3
DEBUG 2022-09-08 19:54:42,338 [main][Loader.java:1527] : Result row: EntityKey[org.example.models.Author#4]
DEBUG 2022-09-08 19:54:42,338 [main][DelegatingBasicLogger.java:384] : Result set row: 4
DEBUG 2022-09-08 19:54:42,339 [main][Loader.java:1527] : Result row: EntityKey[org.example.models.Author#5]
DEBUG 2022-09-08 19:54:42,339 [main][TwoPhaseLoad.java:141] : Resolving associations for [org.example.models.Author#1]
DEBUG 2022-09-08 19:54:42,339 [main][SqlStatementLogger.java:92] : select address0_.author_id as author_i1_0_0_, address0_.street as street2_0_0_ from Address address0_ where address0_.author_id=?
DEBUG 2022-09-08 19:54:42,340 [main][ResourceRegistryStandardImpl.java:73] : HHH000387: ResultSet's statement was not registered
DEBUG 2022-09-08 19:54:42,340 [main][AbstractLoadPlanBasedEntityLoader.java:189] : Done entity load : org.example.models.Address#1
DEBUG 2022-09-08 19:54:42,340 [main][TwoPhaseLoad.java:267] : Done materializing entity [org.example.models.Author#1]
DEBUG 2022-09-08 19:54:42,340 [main][TwoPhaseLoad.java:141] : Resolving associations for [org.example.models.Author#2]
DEBUG 2022-09-08 19:54:42,341 [main][SqlStatementLogger.java:92] : select address0_.author_id as author_i1_0_0_, address0_.street as street2_0_0_ from Address address0_ where address0_.author_id=?
DEBUG 2022-09-08 19:54:42,341 [main][ResourceRegistryStandardImpl.java:73] : HHH000387: ResultSet's statement was not registered
DEBUG 2022-09-08 19:54:42,341 [main][AbstractLoadPlanBasedEntityLoader.java:189] : Done entity load : org.example.models.Address#2
DEBUG 2022-09-08 19:54:42,342 [main][TwoPhaseLoad.java:267] : Done materializing entity [org.example.models.Author#2]
DEBUG 2022-09-08 19:54:42,342 [main][TwoPhaseLoad.java:141] : Resolving associations for [org.example.models.Author#3]
DEBUG 2022-09-08 19:54:42,342 [main][SqlStatementLogger.java:92] : select address0_.author_id as author_i1_0_0_, address0_.street as street2_0_0_ from Address address0_ where address0_.author_id=?
DEBUG 2022-09-08 19:54:42,342 [main][ResourceRegistryStandardImpl.java:73] : HHH000387: ResultSet's statement was not registered
DEBUG 2022-09-08 19:54:42,343 [main][AbstractLoadPlanBasedEntityLoader.java:189] : Done entity load : org.example.models.Address#3
DEBUG 2022-09-08 19:54:42,343 [main][TwoPhaseLoad.java:267] : Done materializing entity [org.example.models.Author#3]
DEBUG 2022-09-08 19:54:42,343 [main][TwoPhaseLoad.java:141] : Resolving associations for [org.example.models.Author#4]
DEBUG 2022-09-08 19:54:42,343 [main][SqlStatementLogger.java:92] : select address0_.author_id as author_i1_0_0_, address0_.street as street2_0_0_ from Address address0_ where address0_.author_id=?
DEBUG 2022-09-08 19:54:42,344 [main][ResourceRegistryStandardImpl.java:73] : HHH000387: ResultSet's statement was not registered
DEBUG 2022-09-08 19:54:42,344 [main][AbstractLoadPlanBasedEntityLoader.java:189] : Done entity load : org.example.models.Address#4
DEBUG 2022-09-08 19:54:42,344 [main][TwoPhaseLoad.java:267] : Done materializing entity [org.example.models.Author#4]
DEBUG 2022-09-08 19:54:42,344 [main][TwoPhaseLoad.java:141] : Resolving associations for [org.example.models.Author#5]
DEBUG 2022-09-08 19:54:42,344 [main][SqlStatementLogger.java:92] : select address0_.author_id as author_i1_0_0_, address0_.street as street2_0_0_ from Address address0_ where address0_.author_id=?
DEBUG 2022-09-08 19:54:42,345 [main][ResourceRegistryStandardImpl.java:73] : HHH000387: ResultSet's statement was not registered
DEBUG 2022-09-08 19:54:42,345 [main][AbstractLoadPlanBasedEntityLoader.java:189] : Done entity load : org.example.models.Address#5
DEBUG 2022-09-08 19:54:42,345 [main][TwoPhaseLoad.java:267] : Done materializing entity [org.example.models.Author#5]
DEBUG 2022-09-08 19:54:42,345 [main][LogicalConnectionManagedImpl.java:154] : Initiating JDBC connection release from afterTransaction
DEBUG 2022-09-08 19:54:42,347 [main][SqlStatementLogger.java:92] : select author0_.id as id1_1_0_, author0_.name as name2_1_0_, author0_.salary as salary3_1_0_, address1_.author_id as author_i1_0_1_, address1_.street as street2_0_1_ from Author author0_ left outer join Address address1_ on author0_.id=address1_.author_id where author0_.id=?
DEBUG 2022-09-08 19:54:42,353 [main][ResultSetProcessorImpl.java:120] : Starting ResultSet row #0
DEBUG 2022-09-08 19:54:42,353 [main][EntityReferenceInitializerImpl.java:126] : On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
DEBUG 2022-09-08 19:54:42,354 [main][TwoPhaseLoad.java:141] : Resolving associations for [org.example.models.Author#2]
DEBUG 2022-09-08 19:54:42,354 [main][TwoPhaseLoad.java:267] : Done materializing entity [org.example.models.Author#2]
DEBUG 2022-09-08 19:54:42,354 [main][ResourceRegistryStandardImpl.java:73] : HHH000387: ResultSet's statement was not registered
DEBUG 2022-09-08 19:54:42,354 [main][AbstractLoadPlanBasedEntityLoader.java:189] : Done entity load : org.example.models.Author#2
DEBUG 2022-09-08 19:54:42,354 [main][LogicalConnectionManagedImpl.java:154] : Initiating JDBC connection release from afterTransaction
DEBUG 2022-09-08 19:54:42,356 [main][QueryTranslatorImpl.java:278] : parse() - HQL: select a from org.example.models.Author a where a.salary between :minSalary and :maxSalary
DEBUG 2022-09-08 19:54:42,357 [main][QueryTranslatorImpl.java:296] : --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[IDENT] Node: 'org'
    |  |     |  |  |  \-[IDENT] Node: 'example'
    |  |     |  |  \-[IDENT] Node: 'models'
    |  |     |  \-[IDENT] Node: 'Author'
    |  |     \-[ALIAS] Node: 'a'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'a'
    \-[WHERE] Node: 'where'
       \-[BETWEEN] Node: 'between'
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'a'
          |  \-[IDENT] Node: 'salary'
          +-[COLON] Node: ':'
          |  \-[IDENT] Node: 'minSalary'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'maxSalary'

DEBUG 2022-09-08 19:54:42,357 [main][ErrorCounter.java:95] : throwQueryException() : no errors
DEBUG 2022-09-08 19:54:42,358 [main][HqlSqlBaseWalker.java:124] : select << begin [level=1, statement=select]
DEBUG 2022-09-08 19:54:42,358 [main][FromElement.java:148] : FromClause{level=1} : org.example.models.Author (a) -> author0_
DEBUG 2022-09-08 19:54:42,358 [main][FromReferenceNode.java:60] : Resolved : a -> author0_.id
DEBUG 2022-09-08 19:54:42,359 [main][FromReferenceNode.java:60] : Resolved : a -> author0_.id
DEBUG 2022-09-08 19:54:42,359 [main][DotNode.java:661] : getDataType() : salary -> org.hibernate.type.IntegerType@ed8942dd
DEBUG 2022-09-08 19:54:42,359 [main][FromReferenceNode.java:60] : Resolved : a.salary -> author0_.salary
DEBUG 2022-09-08 19:54:42,360 [main][HqlSqlBaseWalker.java:128] : select : finishing up [level=1, statement=select]
DEBUG 2022-09-08 19:54:42,360 [main][HqlSqlWalker.java:725] : processQuery() :  ( SELECT ( {select clause} author0_.id ) ( FromClause{level=1} Author author0_ ) ( where ( between ( author0_.salary author0_.id salary ) ? ? ) ) )
DEBUG 2022-09-08 19:54:42,360 [main][JoinProcessor.java:169] : Using FROM fragment [Author author0_]
DEBUG 2022-09-08 19:54:42,360 [main][HqlSqlBaseWalker.java:132] : select >> end [level=1, statement=select]
DEBUG 2022-09-08 19:54:42,362 [main][QueryTranslatorImpl.java:265] : --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (Author)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'author0_.id as id1_1_' {alias=a, className=org.example.models.Author, tableAlias=author0_}
    |  \-[SQL_TOKEN] SqlFragment: 'author0_.name as name2_1_, author0_.salary as salary3_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[a], fromElementByTableAlias=[author0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'Author author0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=a,role=null,tableName=Author,tableAlias=author0_,origin=null,columns={,className=org.example.models.Author}}
    \-[WHERE] SqlNode: 'where'
       \-[BETWEEN] BetweenOperatorNode: 'between'
          +-[DOT] DotNode: 'author0_.salary' {propertyName=salary,dereferenceType=PRIMITIVE,getPropertyPath=salary,path=a.salary,tableAlias=author0_,className=org.example.models.Author,classAlias=a}
          |  +-[ALIAS_REF] IdentNode: 'author0_.id' {alias=a, className=org.example.models.Author, tableAlias=author0_}
          |  \-[IDENT] IdentNode: 'salary' {originalText=salary}
          +-[NAMED_PARAM] ParameterNode: '?' {name=minSalary, expectedType=org.hibernate.type.IntegerType@ed8942dd}
          \-[NAMED_PARAM] ParameterNode: '?' {name=maxSalary, expectedType=org.hibernate.type.IntegerType@ed8942dd}

DEBUG 2022-09-08 19:54:42,362 [main][ErrorCounter.java:95] : throwQueryException() : no errors
DEBUG 2022-09-08 19:54:42,362 [main][QueryTranslatorImpl.java:247] : HQL: select a from org.example.models.Author a where a.salary between :minSalary and :maxSalary
DEBUG 2022-09-08 19:54:42,363 [main][QueryTranslatorImpl.java:248] : SQL: select author0_.id as id1_1_, author0_.name as name2_1_, author0_.salary as salary3_1_ from Author author0_ where author0_.salary between ? and ?
DEBUG 2022-09-08 19:54:42,363 [main][ErrorCounter.java:95] : throwQueryException() : no errors
DEBUG 2022-09-08 19:54:42,365 [main][SqlStatementLogger.java:92] : select author0_.id as id1_1_, author0_.name as name2_1_, author0_.salary as salary3_1_ from Author author0_ where author0_.salary between ? and ?
DEBUG 2022-09-08 19:54:42,366 [main][LogicalConnectionManagedImpl.java:154] : Initiating JDBC connection release from afterTransaction
DEBUG 2022-09-08 19:54:42,367 [main][SqlStatementLogger.java:92] : select author0_.id as id1_1_0_, author0_.name as name2_1_0_, author0_.salary as salary3_1_0_, address1_.author_id as author_i1_0_1_, address1_.street as street2_0_1_ from Author author0_ left outer join Address address1_ on author0_.id=address1_.author_id where author0_.id=?
DEBUG 2022-09-08 19:54:42,369 [main][ResultSetProcessorImpl.java:120] : Starting ResultSet row #0
DEBUG 2022-09-08 19:54:42,369 [main][EntityReferenceInitializerImpl.java:126] : On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
DEBUG 2022-09-08 19:54:42,370 [main][TwoPhaseLoad.java:141] : Resolving associations for [org.example.models.Author#2]
DEBUG 2022-09-08 19:54:42,370 [main][TwoPhaseLoad.java:267] : Done materializing entity [org.example.models.Author#2]
DEBUG 2022-09-08 19:54:42,370 [main][ResourceRegistryStandardImpl.java:73] : HHH000387: ResultSet's statement was not registered
DEBUG 2022-09-08 19:54:42,370 [main][AbstractLoadPlanBasedEntityLoader.java:189] : Done entity load : org.example.models.Author#2
DEBUG 2022-09-08 19:54:42,370 [main][LogicalConnectionManagedImpl.java:154] : Initiating JDBC connection release from afterTransaction
DEBUG 2022-09-08 19:54:42,370 [main][TransactionImpl.java:55] : begin
DEBUG 2022-09-08 19:54:42,371 [main][TransactionImpl.java:66] : committing
DEBUG 2022-09-08 19:54:42,371 [main][AbstractFlushingEventListener.java:132] : Processing flush-time cascades
DEBUG 2022-09-08 19:54:42,371 [main][AbstractFlushingEventListener.java:174] : Dirty checking collections
DEBUG 2022-09-08 19:54:42,372 [main][Collections.java:206] : Collection found: [org.example.models.Author.books#2], was: [org.example.models.Author.books#2] (uninitialized)
DEBUG 2022-09-08 19:54:42,372 [main][Collections.java:206] : Collection found: [org.example.models.Author.photos#2], was: [org.example.models.Author.photos#2] (uninitialized)
DEBUG 2022-09-08 19:54:42,373 [main][AbstractFlushingEventListener.java:106] : Flushed: 0 insertions, 1 updates, 0 deletions to 1 objects
DEBUG 2022-09-08 19:54:42,373 [main][AbstractFlushingEventListener.java:113] : Flushed: 0 (re)creations, 0 updates, 0 removals to 2 collections
DEBUG 2022-09-08 19:54:42,373 [main][EntityPrinter.java:102] : Listing entities:
DEBUG 2022-09-08 19:54:42,373 [main][EntityPrinter.java:109] : org.example.models.Author{books=<uninitialized>, address=null, name=Ihor Kosolapow, id=2, salary=661, photos=<uninitialized>}
DEBUG 2022-09-08 19:54:42,375 [main][SqlStatementLogger.java:92] : update Author set name=? where id=?
DEBUG 2022-09-08 19:54:42,378 [main][LogicalConnectionManagedImpl.java:154] : Initiating JDBC connection release from afterTransaction
DEBUG 2022-09-08 19:54:42,380 [main][LogicalConnectionManagedImpl.java:154] : Initiating JDBC connection release from afterTransaction
DEBUG 2022-09-08 19:54:42,380 [main][JdbcCoordinatorImpl.java:177] : HHH000420: Closing un-released batch
DEBUG 2022-09-08 19:54:42,381 [main][SqlStatementLogger.java:92] : select author0_.id as id1_1_0_, author0_.name as name2_1_0_, author0_.salary as salary3_1_0_, address1_.author_id as author_i1_0_1_, address1_.street as street2_0_1_ from Author author0_ left outer join Address address1_ on author0_.id=address1_.author_id where author0_.id=?
DEBUG 2022-09-08 19:54:42,387 [main][ResultSetProcessorImpl.java:120] : Starting ResultSet row #0
DEBUG 2022-09-08 19:54:42,387 [main][EntityReferenceInitializerImpl.java:126] : On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
DEBUG 2022-09-08 19:54:42,387 [main][TwoPhaseLoad.java:141] : Resolving associations for [org.example.models.Author#2]
DEBUG 2022-09-08 19:54:42,388 [main][TwoPhaseLoad.java:267] : Done materializing entity [org.example.models.Author#2]
DEBUG 2022-09-08 19:54:42,388 [main][ResourceRegistryStandardImpl.java:73] : HHH000387: ResultSet's statement was not registered
DEBUG 2022-09-08 19:54:42,388 [main][AbstractLoadPlanBasedEntityLoader.java:189] : Done entity load : org.example.models.Author#2
DEBUG 2022-09-08 19:54:42,388 [main][LogicalConnectionManagedImpl.java:154] : Initiating JDBC connection release from afterTransaction
DEBUG 2022-09-08 19:54:42,390 [main][CriteriaQueryImpl.java:307] : Rendered criteria query -> select avg(generatedAlias0.salary) from Author as generatedAlias0
DEBUG 2022-09-08 19:54:42,391 [main][QueryTranslatorImpl.java:278] : parse() - HQL: select avg(generatedAlias0.salary) from org.example.models.Author as generatedAlias0
DEBUG 2022-09-08 19:54:42,392 [main][QueryTranslatorImpl.java:296] : --- HQL AST ---
 \-[QUERY] Node: 'query'
    \-[SELECT_FROM] Node: 'SELECT_FROM'
       +-[FROM] Node: 'from'
       |  \-[RANGE] Node: 'RANGE'
       |     +-[DOT] Node: '.'
       |     |  +-[DOT] Node: '.'
       |     |  |  +-[DOT] Node: '.'
       |     |  |  |  +-[IDENT] Node: 'org'
       |     |  |  |  \-[IDENT] Node: 'example'
       |     |  |  \-[IDENT] Node: 'models'
       |     |  \-[IDENT] Node: 'Author'
       |     \-[ALIAS] Node: 'generatedAlias0'
       \-[SELECT] Node: 'select'
          \-[AGGREGATE] Node: 'avg'
             \-[DOT] Node: '.'
                +-[IDENT] Node: 'generatedAlias0'
                \-[IDENT] Node: 'salary'

DEBUG 2022-09-08 19:54:42,392 [main][ErrorCounter.java:95] : throwQueryException() : no errors
DEBUG 2022-09-08 19:54:42,393 [main][HqlSqlBaseWalker.java:124] : select << begin [level=1, statement=select]
DEBUG 2022-09-08 19:54:42,393 [main][FromElement.java:148] : FromClause{level=1} : org.example.models.Author (generatedAlias0) -> author0_
DEBUG 2022-09-08 19:54:42,395 [main][FromReferenceNode.java:60] : Resolved : generatedAlias0 -> author0_.id
DEBUG 2022-09-08 19:54:42,395 [main][DotNode.java:661] : getDataType() : salary -> org.hibernate.type.IntegerType@ed8942dd
DEBUG 2022-09-08 19:54:42,396 [main][FromReferenceNode.java:60] : Resolved : generatedAlias0.salary -> author0_.salary
DEBUG 2022-09-08 19:54:42,396 [main][HqlSqlBaseWalker.java:128] : select : finishing up [level=1, statement=select]
DEBUG 2022-09-08 19:54:42,396 [main][HqlSqlWalker.java:725] : processQuery() :  ( SELECT ( {select clause} ( avg ( author0_.salary author0_.id salary ) ) ) ( FromClause{level=1} Author author0_ ) )
DEBUG 2022-09-08 19:54:42,396 [main][JoinProcessor.java:169] : Using FROM fragment [Author author0_]
DEBUG 2022-09-08 19:54:42,396 [main][HqlSqlBaseWalker.java:132] : select >> end [level=1, statement=select]
DEBUG 2022-09-08 19:54:42,396 [main][QueryTranslatorImpl.java:265] : --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (Author)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[AGGREGATE] AggregateNode: 'avg'
    |  |  \-[DOT] DotNode: 'author0_.salary' {propertyName=salary,dereferenceType=PRIMITIVE,getPropertyPath=salary,path=generatedAlias0.salary,tableAlias=author0_,className=org.example.models.Author,classAlias=generatedAlias0}
    |  |     +-[ALIAS_REF] IdentNode: 'author0_.id' {alias=generatedAlias0, className=org.example.models.Author, tableAlias=author0_}
    |  |     \-[IDENT] IdentNode: 'salary' {originalText=salary}
    |  \-[SELECT_COLUMNS] SqlNode: ' as col_0_0_'
    \-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[author0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'Author author0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=Author,tableAlias=author0_,origin=null,columns={,className=org.example.models.Author}}

DEBUG 2022-09-08 19:54:42,397 [main][ErrorCounter.java:95] : throwQueryException() : no errors
DEBUG 2022-09-08 19:54:42,397 [main][QueryTranslatorImpl.java:247] : HQL: select avg(generatedAlias0.salary) from org.example.models.Author as generatedAlias0
DEBUG 2022-09-08 19:54:42,397 [main][QueryTranslatorImpl.java:248] : SQL: select avg(author0_.salary) as col_0_0_ from Author author0_
DEBUG 2022-09-08 19:54:42,397 [main][ErrorCounter.java:95] : throwQueryException() : no errors
DEBUG 2022-09-08 19:54:42,398 [main][SqlStatementLogger.java:92] : select avg(author0_.salary) as col_0_0_ from Author author0_
DEBUG 2022-09-08 19:54:42,399 [main][DelegatingBasicLogger.java:384] : Result set row: 0
DEBUG 2022-09-08 19:54:42,399 [main][Loader.java:1527] : Result row: 
DEBUG 2022-09-08 19:54:42,400 [main][LogicalConnectionManagedImpl.java:154] : Initiating JDBC connection release from afterTransaction
DEBUG 2022-09-08 19:54:42,402 [main][CriteriaQueryImpl.java:307] : Rendered criteria query -> select generatedAlias0 from Author as generatedAlias0 where generatedAlias0.salary>3000
DEBUG 2022-09-08 19:54:42,403 [main][QueryTranslatorImpl.java:278] : parse() - HQL: select generatedAlias0 from org.example.models.Author as generatedAlias0 where generatedAlias0.salary>3000
DEBUG 2022-09-08 19:54:42,404 [main][QueryTranslatorImpl.java:296] : --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[IDENT] Node: 'org'
    |  |     |  |  |  \-[IDENT] Node: 'example'
    |  |     |  |  \-[IDENT] Node: 'models'
    |  |     |  \-[IDENT] Node: 'Author'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[GT] Node: '>'
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'salary'
          \-[NUM_INT] Node: '3000'

DEBUG 2022-09-08 19:54:42,404 [main][ErrorCounter.java:95] : throwQueryException() : no errors
DEBUG 2022-09-08 19:54:42,404 [main][HqlSqlBaseWalker.java:124] : select << begin [level=1, statement=select]
DEBUG 2022-09-08 19:54:42,404 [main][FromElement.java:148] : FromClause{level=1} : org.example.models.Author (generatedAlias0) -> author0_
DEBUG 2022-09-08 19:54:42,405 [main][FromReferenceNode.java:60] : Resolved : generatedAlias0 -> author0_.id
DEBUG 2022-09-08 19:54:42,405 [main][FromReferenceNode.java:60] : Resolved : generatedAlias0 -> author0_.id
DEBUG 2022-09-08 19:54:42,405 [main][DotNode.java:661] : getDataType() : salary -> org.hibernate.type.IntegerType@ed8942dd
DEBUG 2022-09-08 19:54:42,405 [main][FromReferenceNode.java:60] : Resolved : generatedAlias0.salary -> author0_.salary
DEBUG 2022-09-08 19:54:42,406 [main][HqlSqlBaseWalker.java:128] : select : finishing up [level=1, statement=select]
DEBUG 2022-09-08 19:54:42,406 [main][HqlSqlWalker.java:725] : processQuery() :  ( SELECT ( {select clause} author0_.id ) ( FromClause{level=1} Author author0_ ) ( where ( > ( author0_.salary author0_.id salary ) 3000 ) ) )
DEBUG 2022-09-08 19:54:42,406 [main][JoinProcessor.java:169] : Using FROM fragment [Author author0_]
DEBUG 2022-09-08 19:54:42,406 [main][HqlSqlBaseWalker.java:132] : select >> end [level=1, statement=select]
DEBUG 2022-09-08 19:54:42,406 [main][QueryTranslatorImpl.java:265] : --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (Author)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'author0_.id as id1_1_' {alias=generatedAlias0, className=org.example.models.Author, tableAlias=author0_}
    |  \-[SQL_TOKEN] SqlFragment: 'author0_.name as name2_1_, author0_.salary as salary3_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[author0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'Author author0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=Author,tableAlias=author0_,origin=null,columns={,className=org.example.models.Author}}
    \-[WHERE] SqlNode: 'where'
       \-[GT] BinaryLogicOperatorNode: '>'
          +-[DOT] DotNode: 'author0_.salary' {propertyName=salary,dereferenceType=PRIMITIVE,getPropertyPath=salary,path=generatedAlias0.salary,tableAlias=author0_,className=org.example.models.Author,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'author0_.id' {alias=generatedAlias0, className=org.example.models.Author, tableAlias=author0_}
          |  \-[IDENT] IdentNode: 'salary' {originalText=salary}
          \-[NUM_INT] LiteralNode: '3000'

DEBUG 2022-09-08 19:54:42,406 [main][ErrorCounter.java:95] : throwQueryException() : no errors
DEBUG 2022-09-08 19:54:42,407 [main][QueryTranslatorImpl.java:247] : HQL: select generatedAlias0 from org.example.models.Author as generatedAlias0 where generatedAlias0.salary>3000
DEBUG 2022-09-08 19:54:42,407 [main][QueryTranslatorImpl.java:248] : SQL: select author0_.id as id1_1_, author0_.name as name2_1_, author0_.salary as salary3_1_ from Author author0_ where author0_.salary>3000
DEBUG 2022-09-08 19:54:42,407 [main][ErrorCounter.java:95] : throwQueryException() : no errors
DEBUG 2022-09-08 19:54:42,407 [main][SqlStatementLogger.java:92] : select author0_.id as id1_1_, author0_.name as name2_1_, author0_.salary as salary3_1_ from Author author0_ where author0_.salary>3000
DEBUG 2022-09-08 19:54:42,408 [main][DelegatingBasicLogger.java:384] : Result set row: 0
DEBUG 2022-09-08 19:54:42,409 [main][Loader.java:1527] : Result row: EntityKey[org.example.models.Author#4]
DEBUG 2022-09-08 19:54:42,409 [main][DelegatingBasicLogger.java:384] : Result set row: 1
DEBUG 2022-09-08 19:54:42,409 [main][Loader.java:1527] : Result row: EntityKey[org.example.models.Author#5]
DEBUG 2022-09-08 19:54:42,409 [main][TwoPhaseLoad.java:141] : Resolving associations for [org.example.models.Author#4]
DEBUG 2022-09-08 19:54:42,410 [main][SqlStatementLogger.java:92] : select address0_.author_id as author_i1_0_0_, address0_.street as street2_0_0_ from Address address0_ where address0_.author_id=?
DEBUG 2022-09-08 19:54:42,411 [main][ResourceRegistryStandardImpl.java:73] : HHH000387: ResultSet's statement was not registered
DEBUG 2022-09-08 19:54:42,411 [main][AbstractLoadPlanBasedEntityLoader.java:189] : Done entity load : org.example.models.Address#4
DEBUG 2022-09-08 19:54:42,411 [main][TwoPhaseLoad.java:267] : Done materializing entity [org.example.models.Author#4]
DEBUG 2022-09-08 19:54:42,412 [main][TwoPhaseLoad.java:141] : Resolving associations for [org.example.models.Author#5]
DEBUG 2022-09-08 19:54:42,412 [main][SqlStatementLogger.java:92] : select address0_.author_id as author_i1_0_0_, address0_.street as street2_0_0_ from Address address0_ where address0_.author_id=?
DEBUG 2022-09-08 19:54:42,413 [main][ResourceRegistryStandardImpl.java:73] : HHH000387: ResultSet's statement was not registered
DEBUG 2022-09-08 19:54:42,413 [main][AbstractLoadPlanBasedEntityLoader.java:189] : Done entity load : org.example.models.Address#5
DEBUG 2022-09-08 19:54:42,413 [main][TwoPhaseLoad.java:267] : Done materializing entity [org.example.models.Author#5]
DEBUG 2022-09-08 19:54:42,413 [main][LogicalConnectionManagedImpl.java:154] : Initiating JDBC connection release from afterTransaction
DEBUG 2022-09-08 19:55:11,679 [pool-1-thread-1][PooledConnections.java:51] : Connection pool now considered primed; min-size will be maintained
